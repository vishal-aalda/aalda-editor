(function(){var e;"use strict";try{if(typeof document<"u"){var o=document.createElement("style");o.nonce=(e=document.head.querySelector("meta[property=csp-nonce]"))==null?void 0:e.content,o.appendChild(document.createTextNode('h5{position:relative;bottom:-1rem}.tc-table:before{position:absolute;content:"";height:var(--toolbox-aiming-field-size);top:calc(var(--toolbox-aiming-field-size)*-1);left:0}.tc-add-column{padding:4px 0;justify-content:center;border-top:1px solid var(--color-border)}.tc-row:first-child{background:hsla(0,0%,50.2%,.47843137254901963);text-wrap:nowrap}.tc-header{margin:0;padding:0;position:relative;bottom:-1rem;text-align:left}.tc-wrap{--color-background:#f9f9fb;--color-text-secondary:#7b7e89;--color-border:#e8e8eb;--cell-size:34px;--toolbox-icon-size:18px;--toolbox-padding:6px;--toolbox-aiming-field-size:calc(var(--toolbox-icon-size) + var(--toolbox-padding)*2);border-left:0;margin-top:var(--toolbox-icon-size);box-sizing:border-box;grid-template-columns:calc(100% - var(--cell-size)) var(--cell-size)}.tc-wrap--readonly{grid-template-columns:100% var(--cell-size)}.tc-wrap svg{vertical-align:top}@media print{.tc-wrap{border-left-color:var(--color-border);border-left-style:solid;border-left-width:1px;grid-template-columns:100% var(--cell-size)}}@media print{.tc-wrap .tc-row:after{display:none}}.tc-table,.tc-wrap{position:relative;height:100%;width:100%;display:grid}.tc-table{font-size:14px;border-top:1px solid var(--color-border);line-height:1.4}.tc-table:after{width:calc(var(--cell-size));left:calc(var(--cell-size)*-1);top:0}.tc-table:after,.tc-table:before{position:absolute;content:""}.tc-table:before{height:var(--toolbox-aiming-field-size);top:calc(var(--toolbox-aiming-field-size)*-1);left:0}.tc-table--heading .tc-row:first-child{font-weight:600;border-bottom:2px solid var(--color-border)}.tc-table--heading .tc-row:first-child [contenteditable]:empty:before{content:attr(heading);color:var(--color-text-secondary)}.tc-table--heading .tc-row:first-child:after{bottom:-2px;border-bottom:2px solid var(--color-border)}.tc-add-column,.tc-add-row{display:flex;color:var(--color-text-secondary)}@media print{.tc-add{display:none}}.tc-add-column{padding:4px 0;justify-content:center;border-top:1px solid var(--color-border);visibility:hidden}@media print{.tc-add-column{display:none}}.tc-add-row{height:var(--cell-size);align-items:center;padding-left:4px;position:relative}.tc-add-row:before{content:"";position:absolute;right:calc(var(--cell-size)*-1);width:var(--cell-size);height:100%}@media print{.tc-add-row{display:none}}.tc-add-column,.tc-add-row{transition:0s;cursor:pointer;will-change:background-color}.tc-add-column:hover,.tc-add-row:hover{transition:background-color .1s ease;background-color:var(--color-background)}.tc-add-row{margin-top:1px}.tc-add-row:hover:before{transition:.1s;background-color:var(--color-background)}.tc-row{display:grid;grid-template-columns:repeat(auto-fit,minmax(10px,1fr));position:relative;border-bottom:1px solid var(--color-border)}.tc-row:after{content:"";pointer-events:none;position:absolute;width:var(--cell-size);height:100%;bottom:-1px;right:calc(var(--cell-size)*-1);border-bottom:1px solid var(--color-border)}.tc-row--selected{background:var(--color-background)}.tc-row--selected:after{background:var(--color-background)}.tc-cell{border-right:1px solid var(--color-border);padding:6px 12px;overflow:hidden;outline:none;line-break:normal}.tc-cell input{outline:none;border:none;width:100%;height:100%;padding:0;margin:0}.tc-cell--selected{background:var(--color-background)}.tc-wrap--readonly .tc-row:after{display:none}.tc-toolbox{--toolbox-padding:6px;--popover-margin:30px;--toggler-click-zone-size:30px;--toggler-dots-color:#7b7e89;--toggler-dots-color-hovered:#1d202b;position:absolute;cursor:pointer;z-index:1;opacity:0;transition:opacity .1s;will-change:left,opacity}.tc-toolbox--column{top:calc(var(--toggler-click-zone-size)*-1);transform:translate(calc(var(--toggler-click-zone-size)*-1/2));will-change:left,opacity}.tc-toolbox--row{left:calc(var(--popover-margin)*-1);transform:translateY(calc(var(--toggler-click-zone-size)*-1/2));margin-top:-1px;will-change:top,opacity}.tc-toolbox--showed{opacity:1}.tc-toolbox .tc-popover{position:absolute;top:0;left:var(--popover-margin)}.tc-toolbox__toggler{display:flex;align-items:center;justify-content:center;width:var(--toggler-click-zone-size);height:var(--toggler-click-zone-size);color:var(--toggler-dots-color);opacity:0;transition:opacity .15s ease;will-change:opacity}.tc-toolbox__toggler:hover{color:var(--toggler-dots-color-hovered)}.tc-toolbox__toggler svg{fill:currentColor}.tc-wrap:hover .tc-toolbox__toggler{opacity:1}.tc-settings .cdx-settings-button{width:50%;margin:0}.tc-popover{--color-border:#eaeaea;--color-background:#fff;--color-background-hover:rgba(232,232,235,.49);--color-background-confirm:#e24a4a;--color-background-confirm-hover:#d54040;--color-text-confirm:#fff;background:var(--color-background);border:1px solid var(--color-border);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;padding:6px;display:none;will-change:opacity,transform}.tc-popover--opened{display:block;animation:menuShowing .1s cubic-bezier(.215,.61,.355,1) forwards}.tc-popover__item{display:flex;align-items:center;padding:2px 14px 2px 2px;border-radius:5px;cursor:pointer;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;user-select:none}.tc-popover__item:hover{background:var(--color-background-hover)}.tc-popover__item:not(:last-of-type){margin-bottom:2px}.tc-popover__item-icon{display:inline-flex;width:26px;height:26px;align-items:center;justify-content:center;background:var(--color-background);border-radius:5px;border:1px solid var(--color-border);margin-right:8px}.tc-popover__item-label{line-height:22px;font-size:14px;font-weight:500}.tc-popover__item--confirm{background:var(--color-background-confirm);color:var(--color-text-confirm)}.tc-popover__item--confirm:hover{background-color:var(--color-background-confirm-hover)}.tc-popover__item--confirm .tc-popover__item-icon{background:var(--color-background-confirm);border-color:#0000001a}.tc-popover__item--confirm .tc-popover__item-icon svg{transition:transform .2s ease-in;transform:rotate(90deg) scale(1.2)}.tc-popover__item--hidden{display:none}@keyframes menuShowing{0%{opacity:0;transform:translateY(-8px) scale(.9)}70%{opacity:1;transform:translateY(2px)}to{transform:translateY(0)}}.modal{display:none;position:fixed;z-index:1;padding-top:100px;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:#000;background-color:#0006}.modal .modal-content{position:relative;background-color:#fefefe;margin:auto;padding:0;border:1px solid #888;width:80%;box-shadow:0 4px 8px #0003,0 6px 20px #00000030;-webkit-animation-name:animatetop;-webkit-animation-duration:.4s;animation-name:animatetop;animation-duration:.4s}.modal .close{color:#fff;float:right;font-size:28px;font-weight:700}.modal .close:focus,.modal .close:hover{color:#000;text-decoration:none;cursor:pointer}.modal .modal-header{background-color:#5cb85c;color:#fff}.modal .modal-body,.modal .modal-footer,.modal .modal-header{padding:2px 16px}.modal .modal-footer{background-color:#5cb85c;color:#fff}@keyframes animatetop{0%{top:-300px;opacity:0}to{top:0;opacity:1}}')),document.head.appendChild(o)}}catch(r){console.error("vite-plugin-css-injected-by-js",r)}})();
var hf = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Xa(o) {
  return o && o.__esModule && Object.prototype.hasOwnProperty.call(o, "default") ? o.default : o;
}
function Ml() {
}
Object.assign(Ml, {
  default: Ml,
  register: Ml,
  revert: function() {
  },
  __esModule: !0
});
Element.prototype.matches || (Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function(o) {
  const e = (this.document || this.ownerDocument).querySelectorAll(o);
  let t = e.length;
  for (; --t >= 0 && e.item(t) !== this; )
    ;
  return t > -1;
});
Element.prototype.closest || (Element.prototype.closest = function(o) {
  let e = this;
  if (!document.documentElement.contains(e))
    return null;
  do {
    if (e.matches(o))
      return e;
    e = e.parentElement || e.parentNode;
  } while (e !== null);
  return null;
});
Element.prototype.prepend || (Element.prototype.prepend = function(o) {
  const e = document.createDocumentFragment();
  Array.isArray(o) || (o = [o]), o.forEach((t) => {
    const n = t instanceof Node;
    e.appendChild(n ? t : document.createTextNode(t));
  }), this.insertBefore(e, this.firstChild);
});
Element.prototype.scrollIntoViewIfNeeded || (Element.prototype.scrollIntoViewIfNeeded = function(o) {
  o = arguments.length === 0 ? !0 : !!o;
  const e = this.parentNode, t = window.getComputedStyle(e, null), n = parseInt(t.getPropertyValue("border-top-width")), r = parseInt(t.getPropertyValue("border-left-width")), a = this.offsetTop - e.offsetTop < e.scrollTop, c = this.offsetTop - e.offsetTop + this.clientHeight - n > e.scrollTop + e.clientHeight, u = this.offsetLeft - e.offsetLeft < e.scrollLeft, p = this.offsetLeft - e.offsetLeft + this.clientWidth - r > e.scrollLeft + e.clientWidth, g = a && !c;
  (a || c) && o && (e.scrollTop = this.offsetTop - e.offsetTop - e.clientHeight / 2 - n + this.clientHeight / 2), (u || p) && o && (e.scrollLeft = this.offsetLeft - e.offsetLeft - e.clientWidth / 2 - r + this.clientWidth / 2), (a || c || u || p) && !o && this.scrollIntoView(g);
});
window.requestIdleCallback = window.requestIdleCallback || function(o) {
  const e = Date.now();
  return setTimeout(function() {
    o({
      didTimeout: !1,
      timeRemaining: function() {
        return Math.max(0, 50 - (Date.now() - e));
      }
    });
  }, 1);
};
window.cancelIdleCallback = window.cancelIdleCallback || function(o) {
  clearTimeout(o);
};
let uf = (o = 21) => crypto.getRandomValues(new Uint8Array(o)).reduce((e, t) => (t &= 63, t < 36 ? e += t.toString(36) : t < 62 ? e += (t - 26).toString(36).toUpperCase() : t > 62 ? e += "-" : e += "_", e), "");
var Ah = /* @__PURE__ */ ((o) => (o.VERBOSE = "VERBOSE", o.INFO = "INFO", o.WARN = "WARN", o.ERROR = "ERROR", o))(Ah || {});
const Fe = {
  BACKSPACE: 8,
  TAB: 9,
  ENTER: 13,
  SHIFT: 16,
  CTRL: 17,
  ALT: 18,
  ESC: 27,
  SPACE: 32,
  LEFT: 37,
  UP: 38,
  DOWN: 40,
  RIGHT: 39,
  DELETE: 46,
  META: 91,
  SLASH: 191
}, pf = {
  LEFT: 0,
  WHEEL: 1,
  RIGHT: 2,
  BACKWARD: 3,
  FORWARD: 4
};
function ba(o, e, t = "log", n, r = "color: inherit") {
  if (!("console" in window) || !window.console[t])
    return;
  const a = ["info", "log", "warn", "error"].includes(t), c = [];
  switch (ba.logLevel) {
    case "ERROR":
      if (t !== "error")
        return;
      break;
    case "WARN":
      if (!["error", "warn"].includes(t))
        return;
      break;
    case "INFO":
      if (!a || o)
        return;
      break;
  }
  n && c.push(n);
  const u = "Editor.js 2.29.0", p = `line-height: 1em;
            color: #006FEA;
            display: inline-block;
            font-size: 11px;
            line-height: 1em;
            background-color: #fff;
            padding: 4px 9px;
            border-radius: 30px;
            border: 1px solid rgba(56, 138, 229, 0.16);
            margin: 4px 5px 4px 0;`;
  o && (a ? (c.unshift(p, r), e = `%c${u}%c ${e}`) : e = `( ${u} )${e}`);
  try {
    a ? n ? console[t](`${e} %o`, ...c) : console[t](e, ...c) : console[t](e);
  } catch {
  }
}
ba.logLevel = "VERBOSE";
function ff(o) {
  ba.logLevel = o;
}
const gt = ba.bind(window, !1), Xo = ba.bind(window, !0);
function Hr(o) {
  return Object.prototype.toString.call(o).match(/\s([a-zA-Z]+)/)[1].toLowerCase();
}
function Lt(o) {
  return Hr(o) === "function" || Hr(o) === "asyncfunction";
}
function uo(o) {
  return Hr(o) === "object";
}
function nr(o) {
  return Hr(o) === "string";
}
function mf(o) {
  return Hr(o) === "boolean";
}
function fd(o) {
  return Hr(o) === "number";
}
function md(o) {
  return Hr(o) === "undefined";
}
function cn(o) {
  return o ? Object.keys(o).length === 0 && o.constructor === Object : !0;
}
function Bh(o) {
  return o > 47 && o < 58 || // number keys
  o === 32 || o === 13 || // Space bar & return key(s)
  o === 229 || // processing key input for certain languages — Chinese, Japanese, etc.
  o > 64 && o < 91 || // letter keys
  o > 95 && o < 112 || // Numpad keys
  o > 185 && o < 193 || // ;=,-./` (in order)
  o > 218 && o < 223;
}
async function gf(o, e = () => {
}, t = () => {
}) {
  async function n(r, a, c) {
    try {
      await r.function(r.data), await a(md(r.data) ? {} : r.data);
    } catch {
      c(md(r.data) ? {} : r.data);
    }
  }
  return o.reduce(async (r, a) => (await r, n(a, e, t)), Promise.resolve());
}
function Rh(o) {
  return Array.prototype.slice.call(o);
}
function $a(o, e) {
  return function() {
    const t = this, n = arguments;
    window.setTimeout(() => o.apply(t, n), e);
  };
}
function bf(o) {
  return o.name.split(".").pop();
}
function vf(o) {
  return /^[-\w]+\/([-+\w]+|\*)$/.test(o);
}
function gd(o, e, t) {
  let n;
  return (...r) => {
    const a = this, c = () => {
      n = null, t || o.apply(a, r);
    }, u = t && !n;
    window.clearTimeout(n), n = window.setTimeout(c, e), u && o.apply(a, r);
  };
}
function zl(o, e, t = void 0) {
  let n, r, a, c = null, u = 0;
  t || (t = {});
  const p = function() {
    u = t.leading === !1 ? 0 : Date.now(), c = null, a = o.apply(n, r), c || (n = r = null);
  };
  return function() {
    const g = Date.now();
    !u && t.leading === !1 && (u = g);
    const v = e - (g - u);
    return n = this, r = arguments, v <= 0 || v > e ? (c && (clearTimeout(c), c = null), u = g, a = o.apply(n, r), c || (n = r = null)) : !c && t.trailing !== !1 && (c = setTimeout(p, v)), a;
  };
}
function yf() {
  const o = {
    win: !1,
    mac: !1,
    x11: !1,
    linux: !1
  }, e = Object.keys(o).find((t) => window.navigator.appVersion.toLowerCase().indexOf(t) !== -1);
  return e && (o[e] = !0), o;
}
function ws(o) {
  return o[0].toUpperCase() + o.slice(1);
}
function Wl(o, ...e) {
  if (!e.length)
    return o;
  const t = e.shift();
  if (uo(o) && uo(t))
    for (const n in t)
      uo(t[n]) ? (o[n] || Object.assign(o, { [n]: {} }), Wl(o[n], t[n])) : Object.assign(o, { [n]: t[n] });
  return Wl(o, ...e);
}
function Ja(o) {
  const e = yf();
  return o = o.replace(/shift/gi, "⇧").replace(/backspace/gi, "⌫").replace(/enter/gi, "⏎").replace(/up/gi, "↑").replace(/left/gi, "→").replace(/down/gi, "↓").replace(/right/gi, "←").replace(/escape/gi, "⎋").replace(/insert/gi, "Ins").replace(/delete/gi, "␡").replace(/\+/gi, " + "), e.mac ? o = o.replace(/ctrl|cmd/gi, "⌘").replace(/alt/gi, "⌥") : o = o.replace(/cmd/gi, "Ctrl").replace(/windows/gi, "WIN"), o;
}
function wf(o) {
  try {
    return new URL(o).href;
  } catch {
  }
  return o.substring(0, 2) === "//" ? window.location.protocol + o : window.location.origin + o;
}
function kf() {
  return uf(10);
}
function xf(o) {
  window.open(o, "_blank");
}
function Cf(o = "") {
  return `${o}${Math.floor(Math.random() * 1e8).toString(16)}`;
}
function Ul(o, e, t) {
  const n = `«${e}» is deprecated and will be removed in the next major release. Please use the «${t}» instead.`;
  o && Xo(n, "warn");
}
function Cs(o, e, t) {
  const n = t.value ? "value" : "get", r = t[n], a = `#${e}Cache`;
  if (t[n] = function(...c) {
    return this[a] === void 0 && (this[a] = r.apply(this, ...c)), this[a];
  }, n === "get" && t.set) {
    const c = t.set;
    t.set = function(u) {
      delete o[a], c.apply(this, u);
    };
  }
  return t;
}
const Ih = 650;
function Ir() {
  return window.matchMedia(`(max-width: ${Ih}px)`).matches;
}
const bd = typeof window < "u" && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === "MacIntel" && window.navigator.maxTouchPoints > 1);
function Sf(o, e) {
  const t = Array.isArray(o) || uo(o), n = Array.isArray(e) || uo(e);
  return t || n ? JSON.stringify(o) === JSON.stringify(e) : o === e;
}
let ae = class Do {
  /**
   * Check if passed tag has no closed tag
   *
   * @param {HTMLElement} tag - element to check
   * @returns {boolean}
   */
  static isSingleTag(e) {
    return e.tagName && [
      "AREA",
      "BASE",
      "BR",
      "COL",
      "COMMAND",
      "EMBED",
      "HR",
      "IMG",
      "INPUT",
      "KEYGEN",
      "LINK",
      "META",
      "PARAM",
      "SOURCE",
      "TRACK",
      "WBR"
    ].includes(e.tagName);
  }
  /**
   * Check if element is BR or WBR
   *
   * @param {HTMLElement} element - element to check
   * @returns {boolean}
   */
  static isLineBreakTag(e) {
    return e && e.tagName && [
      "BR",
      "WBR"
    ].includes(e.tagName);
  }
  /**
   * Helper for making Elements with class name and attributes
   *
   * @param  {string} tagName - new Element tag name
   * @param  {string[]|string} [classNames] - list or name of CSS class name(s)
   * @param  {object} [attributes] - any attributes
   * @returns {HTMLElement}
   */
  static make(e, t = null, n = {}) {
    const r = document.createElement(e);
    Array.isArray(t) ? r.classList.add(...t) : t && r.classList.add(t);
    for (const a in n)
      Object.prototype.hasOwnProperty.call(n, a) && (r[a] = n[a]);
    return r;
  }
  /**
   * Creates Text Node with the passed content
   *
   * @param {string} content - text content
   * @returns {Text}
   */
  static text(e) {
    return document.createTextNode(e);
  }
  /**
   * Append one or several elements to the parent
   *
   * @param  {Element|DocumentFragment} parent - where to append
   * @param  {Element|Element[]|DocumentFragment|Text|Text[]} elements - element or elements list
   */
  static append(e, t) {
    Array.isArray(t) ? t.forEach((n) => e.appendChild(n)) : e.appendChild(t);
  }
  /**
   * Append element or a couple to the beginning of the parent elements
   *
   * @param {Element} parent - where to append
   * @param {Element|Element[]} elements - element or elements list
   */
  static prepend(e, t) {
    Array.isArray(t) ? (t = t.reverse(), t.forEach((n) => e.prepend(n))) : e.prepend(t);
  }
  /**
   * Swap two elements in parent
   *
   * @param {HTMLElement} el1 - from
   * @param {HTMLElement} el2 - to
   * @deprecated
   */
  static swap(e, t) {
    const n = document.createElement("div"), r = e.parentNode;
    r.insertBefore(n, e), r.insertBefore(e, t), r.insertBefore(t, n), r.removeChild(n);
  }
  /**
   * Selector Decorator
   *
   * Returns first match
   *
   * @param {Element} el - element we searching inside. Default - DOM Document
   * @param {string} selector - searching string
   * @returns {Element}
   */
  static find(e = document, t) {
    return e.querySelector(t);
  }
  /**
   * Get Element by Id
   *
   * @param {string} id - id to find
   * @returns {HTMLElement | null}
   */
  static get(e) {
    return document.getElementById(e);
  }
  /**
   * Selector Decorator.
   *
   * Returns all matches
   *
   * @param {Element|Document} el - element we searching inside. Default - DOM Document
   * @param {string} selector - searching string
   * @returns {NodeList}
   */
  static findAll(e = document, t) {
    return e.querySelectorAll(t);
  }
  /**
   * Returns CSS selector for all text inputs
   */
  static get allInputsSelector() {
    return "[contenteditable=true], textarea, input:not([type]), " + ["text", "password", "email", "number", "search", "tel", "url"].map((e) => `input[type="${e}"]`).join(", ");
  }
  /**
   * Find all contenteditable, textarea and editable input elements passed holder contains
   *
   * @param holder - element where to find inputs
   */
  static findAllInputs(e) {
    return Rh(e.querySelectorAll(Do.allInputsSelector)).reduce((t, n) => Do.isNativeInput(n) || Do.containsOnlyInlineElements(n) ? [...t, n] : [...t, ...Do.getDeepestBlockElements(n)], []);
  }
  /**
   * Search for deepest node which is Leaf.
   * Leaf is the vertex that doesn't have any child nodes
   *
   * @description Method recursively goes throw the all Node until it finds the Leaf
   * @param {Node} node - root Node. From this vertex we start Deep-first search
   *                      {@link https://en.wikipedia.org/wiki/Depth-first_search}
   * @param {boolean} [atLast] - find last text node
   * @returns {Node} - it can be text Node or Element Node, so that caret will able to work with it
   */
  static getDeepestNode(e, t = !1) {
    const n = t ? "lastChild" : "firstChild", r = t ? "previousSibling" : "nextSibling";
    if (e && e.nodeType === Node.ELEMENT_NODE && e[n]) {
      let a = e[n];
      if (Do.isSingleTag(a) && !Do.isNativeInput(a) && !Do.isLineBreakTag(a))
        if (a[r])
          a = a[r];
        else if (a.parentNode[r])
          a = a.parentNode[r];
        else
          return a.parentNode;
      return this.getDeepestNode(a, t);
    }
    return e;
  }
  /**
   * Check if object is DOM node
   *
   * @param {*} node - object to check
   * @returns {boolean}
   */
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  static isElement(e) {
    return fd(e) ? !1 : e && e.nodeType && e.nodeType === Node.ELEMENT_NODE;
  }
  /**
   * Check if object is DocumentFragment node
   *
   * @param {object} node - object to check
   * @returns {boolean}
   */
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  static isFragment(e) {
    return fd(e) ? !1 : e && e.nodeType && e.nodeType === Node.DOCUMENT_FRAGMENT_NODE;
  }
  /**
   * Check if passed element is contenteditable
   *
   * @param {HTMLElement} element - html element to check
   * @returns {boolean}
   */
  static isContentEditable(e) {
    return e.contentEditable === "true";
  }
  /**
   * Checks target if it is native input
   *
   * @param {*} target - HTML element or string
   * @returns {boolean}
   */
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  static isNativeInput(e) {
    const t = [
      "INPUT",
      "TEXTAREA"
    ];
    return e && e.tagName ? t.includes(e.tagName) : !1;
  }
  /**
   * Checks if we can set caret
   *
   * @param {HTMLElement} target - target to check
   * @returns {boolean}
   */
  static canSetCaret(e) {
    let t = !0;
    if (Do.isNativeInput(e))
      switch (e.type) {
        case "file":
        case "checkbox":
        case "radio":
        case "hidden":
        case "submit":
        case "button":
        case "image":
        case "reset":
          t = !1;
          break;
      }
    else
      t = Do.isContentEditable(e);
    return t;
  }
  /**
   * Checks node if it is empty
   *
   * @description Method checks simple Node without any childs for emptiness
   * If you have Node with 2 or more children id depth, you better use {@link Dom#isEmpty} method
   * @param {Node} node - node to check
   * @param {string} [ignoreChars] - char or substring to treat as empty
   * @returns {boolean} true if it is empty
   */
  static isNodeEmpty(e, t) {
    let n;
    return this.isSingleTag(e) && !this.isLineBreakTag(e) ? !1 : (this.isElement(e) && this.isNativeInput(e) ? n = e.value : n = e.textContent.replace("​", ""), t && (n = n.replace(new RegExp(t, "g"), "")), n.trim().length === 0);
  }
  /**
   * checks node if it is doesn't have any child nodes
   *
   * @param {Node} node - node to check
   * @returns {boolean}
   */
  static isLeaf(e) {
    return e ? e.childNodes.length === 0 : !1;
  }
  /**
   * breadth-first search (BFS)
   * {@link https://en.wikipedia.org/wiki/Breadth-first_search}
   *
   * @description Pushes to stack all DOM leafs and checks for emptiness
   * @param {Node} node - node to check
   * @param {string} [ignoreChars] - char or substring to treat as empty
   * @returns {boolean}
   */
  static isEmpty(e, t) {
    e.normalize();
    const n = [e];
    for (; n.length > 0; )
      if (e = n.shift(), !!e) {
        if (this.isLeaf(e) && !this.isNodeEmpty(e, t))
          return !1;
        e.childNodes && n.push(...Array.from(e.childNodes));
      }
    return !0;
  }
  /**
   * Check if string contains html elements
   *
   * @param {string} str - string to check
   * @returns {boolean}
   */
  static isHTMLString(e) {
    const t = Do.make("div");
    return t.innerHTML = e, t.childElementCount > 0;
  }
  /**
   * Return length of node`s text content
   *
   * @param {Node} node - node with content
   * @returns {number}
   */
  static getContentLength(e) {
    return Do.isNativeInput(e) ? e.value.length : e.nodeType === Node.TEXT_NODE ? e.length : e.textContent.length;
  }
  /**
   * Return array of names of block html elements
   *
   * @returns {string[]}
   */
  static get blockElements() {
    return [
      "address",
      "article",
      "aside",
      "blockquote",
      "canvas",
      "div",
      "dl",
      "dt",
      "fieldset",
      "figcaption",
      "figure",
      "footer",
      "form",
      "h1",
      "h2",
      "h3",
      "h4",
      "h5",
      "h6",
      "header",
      "hgroup",
      "hr",
      "li",
      "main",
      "nav",
      "noscript",
      "ol",
      "output",
      "p",
      "pre",
      "ruby",
      "section",
      "table",
      "tbody",
      "thead",
      "tr",
      "tfoot",
      "ul",
      "video"
    ];
  }
  /**
   * Check if passed content includes only inline elements
   *
   * @param {string|HTMLElement} data - element or html string
   * @returns {boolean}
   */
  static containsOnlyInlineElements(e) {
    let t;
    nr(e) ? (t = document.createElement("div"), t.innerHTML = e) : t = e;
    const n = (r) => !Do.blockElements.includes(r.tagName.toLowerCase()) && Array.from(r.children).every(n);
    return Array.from(t.children).every(n);
  }
  /**
   * Find and return all block elements in the passed parent (including subtree)
   *
   * @param {HTMLElement} parent - root element
   * @returns {HTMLElement[]}
   */
  static getDeepestBlockElements(e) {
    return Do.containsOnlyInlineElements(e) ? [e] : Array.from(e.children).reduce((t, n) => [...t, ...Do.getDeepestBlockElements(n)], []);
  }
  /**
   * Helper for get holder from {string} or return HTMLElement
   *
   * @param {string | HTMLElement} element - holder's id or holder's HTML Element
   * @returns {HTMLElement}
   */
  static getHolder(e) {
    return nr(e) ? document.getElementById(e) : e;
  }
  /**
   * Returns true if element is anchor (is A tag)
   *
   * @param {Element} element - element to check
   * @returns {boolean}
   */
  static isAnchor(e) {
    return e.tagName.toLowerCase() === "a";
  }
  /**
   * Return element's offset related to the document
   *
   * @todo handle case when editor initialized in scrollable popup
   * @param el - element to compute offset
   */
  static offset(e) {
    const t = e.getBoundingClientRect(), n = window.pageXOffset || document.documentElement.scrollLeft, r = window.pageYOffset || document.documentElement.scrollTop, a = t.top + r, c = t.left + n;
    return {
      top: a,
      left: c,
      bottom: a + t.height,
      right: c + t.width
    };
  }
};
const Tf = {
  blockTunes: {
    toggler: {
      "Click to tune": "",
      "or drag to move": ""
    }
  },
  inlineToolbar: {
    converter: {
      "Convert to": ""
    }
  },
  toolbar: {
    toolbox: {
      Add: ""
    }
  },
  popover: {
    Filter: "",
    "Nothing found": ""
  }
}, _f = {
  Text: "",
  Link: "",
  Bold: "",
  Italic: ""
}, Ef = {
  link: {
    "Add a link": ""
  },
  stub: {
    "The block can not be displayed correctly.": ""
  }
}, Mf = {
  delete: {
    Delete: "",
    "Click to delete": ""
  },
  moveUp: {
    "Move up": ""
  },
  moveDown: {
    "Move down": ""
  }
}, Nh = {
  ui: Tf,
  toolNames: _f,
  tools: Ef,
  blockTunes: Mf
}, Ph = class is {
  /**
   * Type-safe translation for internal UI texts:
   * Perform translation of the string by namespace and a key
   *
   * @example I18n.ui(I18nInternalNS.ui.blockTunes.toggler, 'Click to tune')
   * @param internalNamespace - path to translated string in dictionary
   * @param dictKey - dictionary key. Better to use default locale original text
   */
  static ui(e, t) {
    return is._t(e, t);
  }
  /**
   * Translate for external strings that is not presented in default dictionary.
   * For example, for user-specified tool names
   *
   * @param namespace - path to translated string in dictionary
   * @param dictKey - dictionary key. Better to use default locale original text
   */
  static t(e, t) {
    return is._t(e, t);
  }
  /**
   * Adjust module for using external dictionary
   *
   * @param dictionary - new messages list to override default
   */
  static setDictionary(e) {
    is.currentDictionary = e;
  }
  /**
   * Perform translation both for internal and external namespaces
   * If there is no translation found, returns passed key as a translated message
   *
   * @param namespace - path to translated string in dictionary
   * @param dictKey - dictionary key. Better to use default locale original text
   */
  static _t(e, t) {
    const n = is.getNamespace(e);
    return !n || !n[t] ? t : n[t];
  }
  /**
   * Find messages section by namespace path
   *
   * @param namespace - path to section
   */
  static getNamespace(e) {
    return e.split(".").reduce((t, n) => !t || !Object.keys(t).length ? {} : t[n], is.currentDictionary);
  }
};
Ph.currentDictionary = Nh;
let Jo = Ph, Hh = class extends Error {
};
class Qa {
  constructor() {
    this.subscribers = {};
  }
  /**
   * Subscribe any event on callback
   *
   * @param eventName - event name
   * @param callback - subscriber
   */
  on(e, t) {
    e in this.subscribers || (this.subscribers[e] = []), this.subscribers[e].push(t);
  }
  /**
   * Subscribe any event on callback. Callback will be called once and be removed from subscribers array after call.
   *
   * @param eventName - event name
   * @param callback - subscriber
   */
  once(e, t) {
    e in this.subscribers || (this.subscribers[e] = []);
    const n = (r) => {
      const a = t(r), c = this.subscribers[e].indexOf(n);
      return c !== -1 && this.subscribers[e].splice(c, 1), a;
    };
    this.subscribers[e].push(n);
  }
  /**
   * Emit callbacks with passed data
   *
   * @param eventName - event name
   * @param data - subscribers get this data when they were fired
   */
  emit(e, t) {
    cn(this.subscribers) || !this.subscribers[e] || this.subscribers[e].reduce((n, r) => {
      const a = r(n);
      return a !== void 0 ? a : n;
    }, t);
  }
  /**
   * Unsubscribe callback from event
   *
   * @param eventName - event name
   * @param callback - event handler
   */
  off(e, t) {
    if (this.subscribers[e] === void 0) {
      console.warn(`EventDispatcher .off(): there is no subscribers for event "${e.toString()}". Probably, .off() called before .on()`);
      return;
    }
    for (let n = 0; n < this.subscribers[e].length; n++)
      if (this.subscribers[e][n] === t) {
        delete this.subscribers[e][n];
        break;
      }
  }
  /**
   * Destroyer
   * clears subscribers list
   */
  destroy() {
    this.subscribers = {};
  }
}
function Ar(o) {
  Object.setPrototypeOf(this, {
    /**
     * Block id
     *
     * @returns {string}
     */
    get id() {
      return o.id;
    },
    /**
     * Tool name
     *
     * @returns {string}
     */
    get name() {
      return o.name;
    },
    /**
     * Tool config passed on Editor's initialization
     *
     * @returns {ToolConfig}
     */
    get config() {
      return o.config;
    },
    /**
     * .ce-block element, that wraps plugin contents
     *
     * @returns {HTMLElement}
     */
    get holder() {
      return o.holder;
    },
    /**
     * True if Block content is empty
     *
     * @returns {boolean}
     */
    get isEmpty() {
      return o.isEmpty;
    },
    /**
     * True if Block is selected with Cross-Block selection
     *
     * @returns {boolean}
     */
    get selected() {
      return o.selected;
    },
    /**
     * Set Block's stretch state
     *
     * @param {boolean} state — state to set
     */
    set stretched(e) {
      o.stretched = e;
    },
    /**
     * True if Block is stretched
     *
     * @returns {boolean}
     */
    get stretched() {
      return o.stretched;
    },
    /**
     * True if Block has inputs to be focused
     */
    get focusable() {
      return o.focusable;
    },
    /**
     * Call Tool method with errors handler under-the-hood
     *
     * @param {string} methodName - method to call
     * @param {object} param - object with parameters
     * @returns {unknown}
     */
    call(e, t) {
      return o.call(e, t);
    },
    /**
     * Save Block content
     *
     * @returns {Promise<void|SavedData>}
     */
    save() {
      return o.save();
    },
    /**
     * Validate Block data
     *
     * @param {BlockToolData} data - data to validate
     * @returns {Promise<boolean>}
     */
    validate(e) {
      return o.validate(e);
    },
    /**
     * Allows to say Editor that Block was changed. Used to manually trigger Editor's 'onChange' callback
     * Can be useful for block changes invisible for editor core.
     */
    dispatchChange() {
      o.dispatchChange();
    }
  });
}
class uc {
  constructor() {
    this.allListeners = [];
  }
  /**
   * Assigns event listener on element and returns unique identifier
   *
   * @param {EventTarget} element - DOM element that needs to be listened
   * @param {string} eventType - event type
   * @param {Function} handler - method that will be fired on event
   * @param {boolean|AddEventListenerOptions} options - useCapture or {capture, passive, once}
   */
  on(e, t, n, r = !1) {
    const a = Cf("l"), c = {
      id: a,
      element: e,
      eventType: t,
      handler: n,
      options: r
    };
    if (!this.findOne(e, t, n))
      return this.allListeners.push(c), e.addEventListener(t, n, r), a;
  }
  /**
   * Removes event listener from element
   *
   * @param {EventTarget} element - DOM element that we removing listener
   * @param {string} eventType - event type
   * @param {Function} handler - remove handler, if element listens several handlers on the same event type
   * @param {boolean|AddEventListenerOptions} options - useCapture or {capture, passive, once}
   */
  off(e, t, n, r) {
    const a = this.findAll(e, t, n);
    a.forEach((c, u) => {
      const p = this.allListeners.indexOf(a[u]);
      p > -1 && (this.allListeners.splice(p, 1), c.element.removeEventListener(c.eventType, c.handler, c.options));
    });
  }
  /**
   * Removes listener by id
   *
   * @param {string} id - listener identifier
   */
  offById(e) {
    const t = this.findById(e);
    t && t.element.removeEventListener(t.eventType, t.handler, t.options);
  }
  /**
   * Finds and returns first listener by passed params
   *
   * @param {EventTarget} element - event target
   * @param {string} [eventType] - event type
   * @param {Function} [handler] - event handler
   * @returns {ListenerData|null}
   */
  findOne(e, t, n) {
    const r = this.findAll(e, t, n);
    return r.length > 0 ? r[0] : null;
  }
  /**
   * Return all stored listeners by passed params
   *
   * @param {EventTarget} element - event target
   * @param {string} eventType - event type
   * @param {Function} handler - event handler
   * @returns {ListenerData[]}
   */
  findAll(e, t, n) {
    let r;
    const a = e ? this.findByEventTarget(e) : [];
    return e && t && n ? r = a.filter((c) => c.eventType === t && c.handler === n) : e && t ? r = a.filter((c) => c.eventType === t) : r = a, r;
  }
  /**
   * Removes all listeners
   */
  removeAll() {
    this.allListeners.map((e) => {
      e.element.removeEventListener(e.eventType, e.handler, e.options);
    }), this.allListeners = [];
  }
  /**
   * Module cleanup on destruction
   */
  destroy() {
    this.removeAll();
  }
  /**
   * Search method: looks for listener by passed element
   *
   * @param {EventTarget} element - searching element
   * @returns {Array} listeners that found on element
   */
  findByEventTarget(e) {
    return this.allListeners.filter((t) => {
      if (t.element === e)
        return t;
    });
  }
  /**
   * Search method: looks for listener by passed event type
   *
   * @param {string} eventType - event type
   * @returns {ListenerData[]} listeners that found on element
   */
  findByType(e) {
    return this.allListeners.filter((t) => {
      if (t.eventType === e)
        return t;
    });
  }
  /**
   * Search method: looks for listener by passed handler
   *
   * @param {Function} handler - event handler
   * @returns {ListenerData[]} listeners that found on element
   */
  findByHandler(e) {
    return this.allListeners.filter((t) => {
      if (t.handler === e)
        return t;
    });
  }
  /**
   * Returns listener data found by id
   *
   * @param {string} id - listener identifier
   * @returns {ListenerData}
   */
  findById(e) {
    return this.allListeners.find((t) => t.id === e);
  }
}
let it = class jh {
  /**
   * @class
   * @param options - Module options
   * @param options.config - Module config
   * @param options.eventsDispatcher - Common event bus
   */
  constructor({ config: e, eventsDispatcher: t }) {
    if (this.nodes = {}, this.listeners = new uc(), this.readOnlyMutableListeners = {
      /**
       * Assigns event listener on DOM element and pushes into special array that might be removed
       *
       * @param {EventTarget} element - DOM Element
       * @param {string} eventType - Event name
       * @param {Function} handler - Event handler
       * @param {boolean|AddEventListenerOptions} options - Listening options
       */
      on: (n, r, a, c = !1) => {
        this.mutableListenerIds.push(
          this.listeners.on(n, r, a, c)
        );
      },
      /**
       * Clears all mutable listeners
       */
      clearAll: () => {
        for (const n of this.mutableListenerIds)
          this.listeners.offById(n);
        this.mutableListenerIds = [];
      }
    }, this.mutableListenerIds = [], new.target === jh)
      throw new TypeError("Constructors for abstract class Module are not allowed.");
    this.config = e, this.eventsDispatcher = t;
  }
  /**
   * Editor modules setter
   *
   * @param {EditorModules} Editor - Editor's Modules
   */
  set state(e) {
    this.Editor = e;
  }
  /**
   * Remove memorized nodes
   */
  removeAllNodes() {
    for (const e in this.nodes) {
      const t = this.nodes[e];
      t instanceof HTMLElement && t.remove();
    }
  }
  /**
   * Returns true if current direction is RTL (Right-To-Left)
   */
  get isRtl() {
    return this.config.i18n.direction === "rtl";
  }
}, Ye = class qi {
  constructor() {
    this.instance = null, this.selection = null, this.savedSelectionRange = null, this.isFakeBackgroundEnabled = !1, this.commandBackground = "backColor", this.commandRemoveFormat = "removeFormat";
  }
  /**
   * Editor styles
   *
   * @returns {{editorWrapper: string, editorZone: string}}
   */
  static get CSS() {
    return {
      editorWrapper: "codex-editor",
      editorZone: "codex-editor__redactor"
    };
  }
  /**
   * Returns selected anchor
   * {@link https://developer.mozilla.org/ru/docs/Web/API/Selection/anchorNode}
   *
   * @returns {Node|null}
   */
  static get anchorNode() {
    const e = window.getSelection();
    return e ? e.anchorNode : null;
  }
  /**
   * Returns selected anchor element
   *
   * @returns {Element|null}
   */
  static get anchorElement() {
    const e = window.getSelection();
    if (!e)
      return null;
    const t = e.anchorNode;
    return t ? ae.isElement(t) ? t : t.parentElement : null;
  }
  /**
   * Returns selection offset according to the anchor node
   * {@link https://developer.mozilla.org/ru/docs/Web/API/Selection/anchorOffset}
   *
   * @returns {number|null}
   */
  static get anchorOffset() {
    const e = window.getSelection();
    return e ? e.anchorOffset : null;
  }
  /**
   * Is current selection range collapsed
   *
   * @returns {boolean|null}
   */
  static get isCollapsed() {
    const e = window.getSelection();
    return e ? e.isCollapsed : null;
  }
  /**
   * Check current selection if it is at Editor's zone
   *
   * @returns {boolean}
   */
  static get isAtEditor() {
    return this.isSelectionAtEditor(qi.get());
  }
  /**
   * Check if passed selection is at Editor's zone
   *
   * @param selection - Selection object to check
   */
  static isSelectionAtEditor(e) {
    if (!e)
      return !1;
    let t = e.anchorNode || e.focusNode;
    t && t.nodeType === Node.TEXT_NODE && (t = t.parentNode);
    let n = null;
    return t && t instanceof Element && (n = t.closest(`.${qi.CSS.editorZone}`)), n ? n.nodeType === Node.ELEMENT_NODE : !1;
  }
  /**
   * Check if passed range at Editor zone
   *
   * @param range - range to check
   */
  static isRangeAtEditor(e) {
    if (!e)
      return;
    let t = e.startContainer;
    t && t.nodeType === Node.TEXT_NODE && (t = t.parentNode);
    let n = null;
    return t && t instanceof Element && (n = t.closest(`.${qi.CSS.editorZone}`)), n ? n.nodeType === Node.ELEMENT_NODE : !1;
  }
  /**
   * Methods return boolean that true if selection exists on the page
   */
  static get isSelectionExists() {
    return !!qi.get().anchorNode;
  }
  /**
   * Return first range
   *
   * @returns {Range|null}
   */
  static get range() {
    return this.getRangeFromSelection(this.get());
  }
  /**
   * Returns range from passed Selection object
   *
   * @param selection - Selection object to get Range from
   */
  static getRangeFromSelection(e) {
    return e && e.rangeCount ? e.getRangeAt(0) : null;
  }
  /**
   * Calculates position and size of selected text
   *
   * @returns {DOMRect | ClientRect}
   */
  static get rect() {
    let e = document.selection, t, n = {
      x: 0,
      y: 0,
      width: 0,
      height: 0
    };
    if (e && e.type !== "Control")
      return e = e, t = e.createRange(), n.x = t.boundingLeft, n.y = t.boundingTop, n.width = t.boundingWidth, n.height = t.boundingHeight, n;
    if (!window.getSelection)
      return gt("Method window.getSelection is not supported", "warn"), n;
    if (e = window.getSelection(), e.rangeCount === null || isNaN(e.rangeCount))
      return gt("Method SelectionUtils.rangeCount is not supported", "warn"), n;
    if (e.rangeCount === 0)
      return n;
    if (t = e.getRangeAt(0).cloneRange(), t.getBoundingClientRect && (n = t.getBoundingClientRect()), n.x === 0 && n.y === 0) {
      const r = document.createElement("span");
      if (r.getBoundingClientRect) {
        r.appendChild(document.createTextNode("​")), t.insertNode(r), n = r.getBoundingClientRect();
        const a = r.parentNode;
        a.removeChild(r), a.normalize();
      }
    }
    return n;
  }
  /**
   * Returns selected text as String
   *
   * @returns {string}
   */
  static get text() {
    return window.getSelection ? window.getSelection().toString() : "";
  }
  /**
   * Returns window SelectionUtils
   * {@link https://developer.mozilla.org/ru/docs/Web/API/Window/getSelection}
   *
   * @returns {Selection}
   */
  static get() {
    return window.getSelection();
  }
  /**
   * Set focus to contenteditable or native input element
   *
   * @param element - element where to set focus
   * @param offset - offset of cursor
   */
  static setCursor(e, t = 0) {
    const n = document.createRange(), r = window.getSelection();
    return ae.isNativeInput(e) ? ae.canSetCaret(e) ? (e.focus(), e.selectionStart = e.selectionEnd = t, e.getBoundingClientRect()) : void 0 : (n.setStart(e, t), n.setEnd(e, t), r.removeAllRanges(), r.addRange(n), n.getBoundingClientRect());
  }
  /**
   * Check if current range exists and belongs to container
   *
   * @param container - where range should be
   */
  static isRangeInsideContainer(e) {
    const t = qi.range;
    return t === null ? !1 : e.contains(t.startContainer);
  }
  /**
   * Adds fake cursor to the current range
   */
  static addFakeCursor() {
    const e = qi.range;
    if (e === null)
      return;
    const t = ae.make("span", "codex-editor__fake-cursor");
    t.dataset.mutationFree = "true", e.collapse(), e.insertNode(t);
  }
  /**
   * Check if passed element contains a fake cursor
   *
   * @param el - where to check
   */
  static isFakeCursorInsideContainer(e) {
    return ae.find(e, ".codex-editor__fake-cursor") !== null;
  }
  /**
   * Removes fake cursor from a container
   *
   * @param container - container to look for
   */
  static removeFakeCursor(e = document.body) {
    const t = ae.find(e, ".codex-editor__fake-cursor");
    t && t.remove();
  }
  /**
   * Removes fake background
   */
  removeFakeBackground() {
    this.isFakeBackgroundEnabled && (this.isFakeBackgroundEnabled = !1, document.execCommand(this.commandRemoveFormat));
  }
  /**
   * Sets fake background
   */
  setFakeBackground() {
    document.execCommand(this.commandBackground, !1, "#a8d6ff"), this.isFakeBackgroundEnabled = !0;
  }
  /**
   * Save SelectionUtils's range
   */
  save() {
    this.savedSelectionRange = qi.range;
  }
  /**
   * Restore saved SelectionUtils's range
   */
  restore() {
    if (!this.savedSelectionRange)
      return;
    const e = window.getSelection();
    e.removeAllRanges(), e.addRange(this.savedSelectionRange);
  }
  /**
   * Clears saved selection
   */
  clearSaved() {
    this.savedSelectionRange = null;
  }
  /**
   * Collapse current selection
   */
  collapseToEnd() {
    const e = window.getSelection(), t = document.createRange();
    t.selectNodeContents(e.focusNode), t.collapse(!1), e.removeAllRanges(), e.addRange(t);
  }
  /**
   * Looks ahead to find passed tag from current selection
   *
   * @param  {string} tagName       - tag to found
   * @param  {string} [className]   - tag's class name
   * @param  {number} [searchDepth] - count of tags that can be included. For better performance.
   * @returns {HTMLElement|null}
   */
  findParentTag(e, t, n = 10) {
    const r = window.getSelection();
    let a = null;
    return !r || !r.anchorNode || !r.focusNode ? null : ([
      /** the Node in which the selection begins */
      r.anchorNode,
      /** the Node in which the selection ends */
      r.focusNode
    ].forEach((c) => {
      let u = n;
      for (; u > 0 && c.parentNode && !(c.tagName === e && (a = c, t && c.classList && !c.classList.contains(t) && (a = null), a)); )
        c = c.parentNode, u--;
    }), a);
  }
  /**
   * Expands selection range to the passed parent node
   *
   * @param {HTMLElement} element - element which contents should be selected
   */
  expandToTag(e) {
    const t = window.getSelection();
    t.removeAllRanges();
    const n = document.createRange();
    n.selectNodeContents(e), t.addRange(n);
  }
};
function Df(o, e) {
  const { type: t, target: n, addedNodes: r, removedNodes: a } = o;
  if (n === e)
    return !0;
  if (["characterData", "attributes"].includes(t)) {
    const p = n.nodeType === Node.TEXT_NODE ? n.parentNode : n;
    return e.contains(p);
  }
  const c = Array.from(r).some((p) => e.contains(p)), u = Array.from(a).some((p) => e.contains(p));
  return c || u;
}
const ql = "redactor dom changed", $h = "block changed", Yh = "fake cursor is about to be toggled", Fh = "fake cursor have been set";
function vd(o, e) {
  return o.mergeable && o.name === e.name;
}
function Of(o, e) {
  const t = e == null ? void 0 : e.export;
  return Lt(t) ? t(o) : nr(t) ? o[t] : (t !== void 0 && gt("Conversion «export» property must be a string or function. String means key of saved data object to export. Function should export processed string to export."), "");
}
function Lf(o, e) {
  const t = e == null ? void 0 : e.import;
  return Lt(t) ? t(o) : nr(t) ? {
    [t]: o
  } : (t !== void 0 && gt("Conversion «import» property must be a string or function. String means key of tool data to import. Function accepts a imported string and return composed tool data."), {});
}
var mi = /* @__PURE__ */ ((o) => (o.APPEND_CALLBACK = "appendCallback", o.RENDERED = "rendered", o.MOVED = "moved", o.UPDATED = "updated", o.REMOVED = "removed", o.ON_PASTE = "onPaste", o))(mi || {});
let bi = class Vi extends Qa {
  /**
   * @param options - block constructor options
   * @param [options.id] - block's id. Will be generated if omitted.
   * @param options.data - Tool's initial data
   * @param options.tool — block's tool
   * @param options.api - Editor API module for pass it to the Block Tunes
   * @param options.readOnly - Read-Only flag
   * @param [eventBus] - Editor common event bus. Allows to subscribe on some Editor events. Could be omitted when "virtual" Block is created. See BlocksAPI@composeBlockData.
   */
  constructor({
    id: e = kf(),
    data: t,
    tool: n,
    api: r,
    readOnly: a,
    tunesData: c
  }, u) {
    super(), this.cachedInputs = [], this.toolRenderedElement = null, this.tunesInstances = /* @__PURE__ */ new Map(), this.defaultTunesInstances = /* @__PURE__ */ new Map(), this.unavailableTunesData = {}, this.inputIndex = 0, this.editorEventBus = null, this.handleFocus = () => {
      this.dropInputsCache(), this.updateCurrentInput();
    }, this.didMutated = (p = void 0) => {
      const g = p === void 0, v = p instanceof InputEvent;
      !g && !v && this.detectToolRootChange(p);
      let x;
      g || v ? x = !0 : x = !(p.length > 0 && p.every((y) => {
        const { addedNodes: T, removedNodes: k, target: M } = y;
        return [
          ...Array.from(T),
          ...Array.from(k),
          M
        ].some((O) => (ae.isElement(O) || (O = O.parentElement), O && O.closest('[data-mutation-free="true"]') !== null));
      })), x && (this.dropInputsCache(), this.updateCurrentInput(), this.call(
        "updated"
        /* UPDATED */
      ), this.emit("didMutated", this));
    }, this.name = n.name, this.id = e, this.settings = n.settings, this.config = n.settings.config || {}, this.api = r, this.editorEventBus = u || null, this.blockAPI = new Ar(this), this.tool = n, this.toolInstance = n.create(t, this.blockAPI, a), this.tunes = n.tunes, this.composeTunes(c), this.holder = this.compose(), window.requestIdleCallback(() => {
      this.watchBlockMutations(), this.addInputEvents();
    });
  }
  /**
   * CSS classes for the Block
   *
   * @returns {{wrapper: string, content: string}}
   */
  static get CSS() {
    return {
      wrapper: "ce-block",
      wrapperStretched: "ce-block--stretched",
      content: "ce-block__content",
      selected: "ce-block--selected",
      dropTarget: "ce-block--drop-target"
    };
  }
  /**
   * Find and return all editable elements (contenteditable and native inputs) in the Tool HTML
   *
   * @returns {HTMLElement[]}
   */
  get inputs() {
    if (this.cachedInputs.length !== 0)
      return this.cachedInputs;
    const e = ae.findAllInputs(this.holder);
    return this.inputIndex > e.length - 1 && (this.inputIndex = e.length - 1), this.cachedInputs = e, e;
  }
  /**
   * Return current Tool`s input
   *
   * @returns {HTMLElement}
   */
  get currentInput() {
    return this.inputs[this.inputIndex];
  }
  /**
   * Set input index to the passed element
   *
   * @param {HTMLElement | Node} element - HTML Element to set as current input
   */
  set currentInput(e) {
    const t = this.inputs.findIndex((n) => n === e || n.contains(e));
    t !== -1 && (this.inputIndex = t);
  }
  /**
   * Return first Tool`s input
   *
   * @returns {HTMLElement}
   */
  get firstInput() {
    return this.inputs[0];
  }
  /**
   * Return first Tool`s input
   *
   * @returns {HTMLElement}
   */
  get lastInput() {
    const e = this.inputs;
    return e[e.length - 1];
  }
  /**
   * Return next Tool`s input or undefined if it doesn't exist
   *
   * @returns {HTMLElement}
   */
  get nextInput() {
    return this.inputs[this.inputIndex + 1];
  }
  /**
   * Return previous Tool`s input or undefined if it doesn't exist
   *
   * @returns {HTMLElement}
   */
  get previousInput() {
    return this.inputs[this.inputIndex - 1];
  }
  /**
   * Get Block's JSON data
   *
   * @returns {object}
   */
  get data() {
    return this.save().then((e) => e && !cn(e.data) ? e.data : {});
  }
  /**
   * Returns tool's sanitizer config
   *
   * @returns {object}
   */
  get sanitize() {
    return this.tool.sanitizeConfig;
  }
  /**
   * is block mergeable
   * We plugin have merge function then we call it mergeable
   *
   * @returns {boolean}
   */
  get mergeable() {
    return Lt(this.toolInstance.merge);
  }
  /**
   * If Block contains inputs, it is focusable
   */
  get focusable() {
    return this.inputs.length !== 0;
  }
  /**
   * Check block for emptiness
   *
   * @returns {boolean}
   */
  get isEmpty() {
    const e = ae.isEmpty(this.pluginsContent, "/"), t = !this.hasMedia;
    return e && t;
  }
  /**
   * Check if block has a media content such as images, iframe and other
   *
   * @returns {boolean}
   */
  get hasMedia() {
    const e = [
      "img",
      "iframe",
      "video",
      "audio",
      "source",
      "input",
      "textarea",
      "twitterwidget"
    ];
    return !!this.holder.querySelector(e.join(","));
  }
  /**
   * Set selected state
   * We don't need to mark Block as Selected when it is empty
   *
   * @param {boolean} state - 'true' to select, 'false' to remove selection
   */
  set selected(e) {
    var t, n;
    this.holder.classList.toggle(Vi.CSS.selected, e);
    const r = e === !0 && Ye.isRangeInsideContainer(this.holder), a = e === !1 && Ye.isFakeCursorInsideContainer(this.holder);
    (r || a) && ((t = this.editorEventBus) == null || t.emit(Yh, { state: e }), r ? Ye.addFakeCursor() : Ye.removeFakeCursor(this.holder), (n = this.editorEventBus) == null || n.emit(Fh, { state: e }));
  }
  /**
   * Returns True if it is Selected
   *
   * @returns {boolean}
   */
  get selected() {
    return this.holder.classList.contains(Vi.CSS.selected);
  }
  /**
   * Set stretched state
   *
   * @param {boolean} state - 'true' to enable, 'false' to disable stretched state
   */
  set stretched(e) {
    this.holder.classList.toggle(Vi.CSS.wrapperStretched, e);
  }
  /**
   * Return Block's stretched state
   *
   * @returns {boolean}
   */
  get stretched() {
    return this.holder.classList.contains(Vi.CSS.wrapperStretched);
  }
  /**
   * Toggle drop target state
   *
   * @param {boolean} state - 'true' if block is drop target, false otherwise
   */
  set dropTarget(e) {
    this.holder.classList.toggle(Vi.CSS.dropTarget, e);
  }
  /**
   * Returns Plugins content
   *
   * @returns {HTMLElement}
   */
  get pluginsContent() {
    return this.toolRenderedElement;
  }
  /**
   * Calls Tool's method
   *
   * Method checks tool property {MethodName}. Fires method with passes params If it is instance of Function
   *
   * @param {string} methodName - method to call
   * @param {object} params - method argument
   */
  call(e, t) {
    if (Lt(this.toolInstance[e])) {
      e === "appendCallback" && gt(
        "`appendCallback` hook is deprecated and will be removed in the next major release. Use `rendered` hook instead",
        "warn"
      );
      try {
        this.toolInstance[e].call(this.toolInstance, t);
      } catch (n) {
        gt(`Error during '${e}' call: ${n.message}`, "error");
      }
    }
  }
  /**
   * Call plugins merge method
   *
   * @param {BlockToolData} data - data to merge
   */
  async mergeWith(e) {
    await this.toolInstance.merge(e);
  }
  /**
   * Extracts data from Block
   * Groups Tool's save processing time
   *
   * @returns {object}
   */
  async save() {
    const e = await this.toolInstance.save(this.pluginsContent), t = this.unavailableTunesData;
    [
      ...this.tunesInstances.entries(),
      ...this.defaultTunesInstances.entries()
    ].forEach(([a, c]) => {
      if (Lt(c.save))
        try {
          t[a] = c.save();
        } catch (u) {
          gt(`Tune ${c.constructor.name} save method throws an Error %o`, "warn", u);
        }
    });
    const n = window.performance.now();
    let r;
    return Promise.resolve(e).then((a) => (r = window.performance.now(), {
      id: this.id,
      tool: this.name,
      data: a,
      tunes: t,
      time: r - n
    })).catch((a) => {
      gt(`Saving process for ${this.name} tool failed due to the ${a}`, "log", "red");
    });
  }
  /**
   * Uses Tool's validation method to check the correctness of output data
   * Tool's validation method is optional
   *
   * @description Method returns true|false whether data passed the validation or not
   * @param {BlockToolData} data - data to validate
   * @returns {Promise<boolean>} valid
   */
  async validate(e) {
    let t = !0;
    return this.toolInstance.validate instanceof Function && (t = await this.toolInstance.validate(e)), t;
  }
  /**
   * Returns data to render in tunes menu.
   * Splits block tunes settings into 2 groups: popover items and custom html.
   */
  getTunes() {
    const e = document.createElement("div"), t = [], n = typeof this.toolInstance.renderSettings == "function" ? this.toolInstance.renderSettings() : [], r = [
      ...this.tunesInstances.values(),
      ...this.defaultTunesInstances.values()
    ].map((a) => a.render());
    return [n, r].flat().forEach((a) => {
      ae.isElement(a) ? e.appendChild(a) : Array.isArray(a) ? t.push(...a) : t.push(a);
    }), [t, e];
  }
  /**
   * Update current input index with selection anchor node
   */
  updateCurrentInput() {
    this.currentInput = ae.isNativeInput(document.activeElement) || !Ye.anchorNode ? document.activeElement : Ye.anchorNode;
  }
  /**
   * Allows to say Editor that Block was changed. Used to manually trigger Editor's 'onChange' callback
   * Can be useful for block changes invisible for editor core.
   */
  dispatchChange() {
    this.didMutated();
  }
  /**
   * Call Tool instance destroy method
   */
  destroy() {
    this.unwatchBlockMutations(), this.removeInputEvents(), super.destroy(), Lt(this.toolInstance.destroy) && this.toolInstance.destroy();
  }
  /**
   * Tool could specify several entries to be displayed at the Toolbox (for example, "Heading 1", "Heading 2", "Heading 3")
   * This method returns the entry that is related to the Block (depended on the Block data)
   */
  async getActiveToolboxEntry() {
    const e = this.tool.toolbox;
    if (e.length === 1)
      return Promise.resolve(this.tool.toolbox[0]);
    const t = await this.data;
    return e.find((n) => Object.entries(n.data).some(([r, a]) => t[r] && Sf(t[r], a)));
  }
  /**
   * Exports Block data as string using conversion config
   */
  async exportDataAsString() {
    const e = await this.data;
    return Of(e, this.tool.conversionConfig);
  }
  /**
   * Make default Block wrappers and put Tool`s content there
   *
   * @returns {HTMLDivElement}
   */
  compose() {
    const e = ae.make("div", Vi.CSS.wrapper), t = ae.make("div", Vi.CSS.content), n = this.toolInstance.render();
    e.dataset.id = this.id, this.toolRenderedElement = n, t.appendChild(this.toolRenderedElement);
    let r = t;
    return [...this.tunesInstances.values(), ...this.defaultTunesInstances.values()].forEach((a) => {
      if (Lt(a.wrap))
        try {
          r = a.wrap(r);
        } catch (c) {
          gt(`Tune ${a.constructor.name} wrap method throws an Error %o`, "warn", c);
        }
    }), e.appendChild(r), e;
  }
  /**
   * Instantiate Block Tunes
   *
   * @param tunesData - current Block tunes data
   * @private
   */
  composeTunes(e) {
    Array.from(this.tunes.values()).forEach((t) => {
      (t.isInternal ? this.defaultTunesInstances : this.tunesInstances).set(t.name, t.create(e[t.name], this.blockAPI));
    }), Object.entries(e).forEach(([t, n]) => {
      this.tunesInstances.has(t) || (this.unavailableTunesData[t] = n);
    });
  }
  /**
   * Adds focus event listeners to all inputs and contenteditable
   */
  addInputEvents() {
    this.inputs.forEach((e) => {
      e.addEventListener("focus", this.handleFocus), ae.isNativeInput(e) && e.addEventListener("input", this.didMutated);
    });
  }
  /**
   * removes focus event listeners from all inputs and contenteditable
   */
  removeInputEvents() {
    this.inputs.forEach((e) => {
      e.removeEventListener("focus", this.handleFocus), ae.isNativeInput(e) && e.removeEventListener("input", this.didMutated);
    });
  }
  /**
   * Listen common editor Dom Changed event and detect mutations related to the  Block
   */
  watchBlockMutations() {
    var e;
    this.redactorDomChangedCallback = (t) => {
      const { mutations: n } = t;
      n.some((r) => Df(r, this.toolRenderedElement)) && this.didMutated(n);
    }, (e = this.editorEventBus) == null || e.on(ql, this.redactorDomChangedCallback);
  }
  /**
   * Remove redactor dom change event listener
   */
  unwatchBlockMutations() {
    var e;
    (e = this.editorEventBus) == null || e.off(ql, this.redactorDomChangedCallback);
  }
  /**
   * Sometimes Tool can replace own main element, for example H2 -> H4 or UL -> OL
   * We need to detect such changes and update a link to tools main element with the new one
   *
   * @param mutations - records of block content mutations
   */
  detectToolRootChange(e) {
    e.forEach((t) => {
      if (Array.from(t.removedNodes).includes(this.toolRenderedElement)) {
        const n = t.addedNodes[t.addedNodes.length - 1];
        this.toolRenderedElement = n;
      }
    });
  }
  /**
   * Clears inputs cached value
   */
  dropInputsCache() {
    this.cachedInputs = [];
  }
};
class Af extends it {
  constructor() {
    super(...arguments), this.insert = (e = this.config.defaultBlock, t = {}, n = {}, r, a, c, u) => {
      const p = this.Editor.BlockManager.insert({
        id: u,
        tool: e,
        data: t,
        index: r,
        needToFocus: a,
        replace: c
      });
      return new Ar(p);
    }, this.composeBlockData = async (e) => {
      const t = this.Editor.Tools.blockTools.get(e);
      return new bi({
        tool: t,
        api: this.Editor.API,
        readOnly: !0,
        data: {},
        tunesData: {}
      }).data;
    }, this.update = async (e, t) => {
      const { BlockManager: n } = this.Editor, r = n.getBlockById(e);
      if (r === void 0)
        throw new Error(`Block with id "${e}" not found`);
      const a = await n.update(r, t);
      return new Ar(a);
    }, this.convert = (e, t, n) => {
      var r, a;
      const { BlockManager: c, Tools: u } = this.Editor, p = c.getBlockById(e);
      if (!p)
        throw new Error(`Block with id "${e}" not found`);
      const g = u.blockTools.get(p.name), v = u.blockTools.get(t);
      if (!v)
        throw new Error(`Block Tool with type "${t}" not found`);
      const x = ((r = g == null ? void 0 : g.conversionConfig) == null ? void 0 : r.export) !== void 0, y = ((a = v.conversionConfig) == null ? void 0 : a.import) !== void 0;
      if (x && y)
        c.convert(p, t, n);
      else {
        const T = [
          x ? !1 : ws(p.name),
          y ? !1 : ws(t)
        ].filter(Boolean).join(" and ");
        throw new Error(`Conversion from "${p.name}" to "${t}" is not possible. ${T} tool(s) should provide a "conversionConfig"`);
      }
    }, this.insertMany = (e, t = this.Editor.BlockManager.blocks.length - 1) => {
      this.validateIndex(t);
      const n = e.map(({ id: r, type: a, data: c }) => this.Editor.BlockManager.composeBlock({
        id: r,
        tool: a || this.config.defaultBlock,
        data: c
      }));
      return this.Editor.BlockManager.insertMany(n, t), n.map((r) => new Ar(r));
    };
  }
  /**
   * Available methods
   *
   * @returns {Blocks}
   */
  get methods() {
    return {
      clear: () => this.clear(),
      render: (e) => this.render(e),
      renderFromHTML: (e) => this.renderFromHTML(e),
      delete: (e) => this.delete(e),
      swap: (e, t) => this.swap(e, t),
      move: (e, t) => this.move(e, t),
      getBlockByIndex: (e) => this.getBlockByIndex(e),
      getById: (e) => this.getById(e),
      getCurrentBlockIndex: () => this.getCurrentBlockIndex(),
      getBlockIndex: (e) => this.getBlockIndex(e),
      getBlocksCount: () => this.getBlocksCount(),
      stretchBlock: (e, t = !0) => this.stretchBlock(e, t),
      insertNewBlock: () => this.insertNewBlock(),
      insert: this.insert,
      insertMany: this.insertMany,
      update: this.update,
      composeBlockData: this.composeBlockData,
      convert: this.convert
    };
  }
  /**
   * Returns Blocks count
   *
   * @returns {number}
   */
  getBlocksCount() {
    return this.Editor.BlockManager.blocks.length;
  }
  /**
   * Returns current block index
   *
   * @returns {number}
   */
  getCurrentBlockIndex() {
    return this.Editor.BlockManager.currentBlockIndex;
  }
  /**
   * Returns the index of Block by id;
   *
   * @param id - block id
   */
  getBlockIndex(e) {
    const t = this.Editor.BlockManager.getBlockById(e);
    if (!t) {
      Xo("There is no block with id `" + e + "`", "warn");
      return;
    }
    return this.Editor.BlockManager.getBlockIndex(t);
  }
  /**
   * Returns BlockAPI object by Block index
   *
   * @param {number} index - index to get
   */
  getBlockByIndex(e) {
    const t = this.Editor.BlockManager.getBlockByIndex(e);
    if (t === void 0) {
      Xo("There is no block at index `" + e + "`", "warn");
      return;
    }
    return new Ar(t);
  }
  /**
   * Returns BlockAPI object by Block id
   *
   * @param id - id of block to get
   */
  getById(e) {
    const t = this.Editor.BlockManager.getBlockById(e);
    return t === void 0 ? (Xo("There is no block with id `" + e + "`", "warn"), null) : new Ar(t);
  }
  /**
   * Call Block Manager method that swap Blocks
   *
   * @param {number} fromIndex - position of first Block
   * @param {number} toIndex - position of second Block
   * @deprecated — use 'move' instead
   */
  swap(e, t) {
    gt(
      "`blocks.swap()` method is deprecated and will be removed in the next major release. Use `block.move()` method instead",
      "info"
    ), this.Editor.BlockManager.swap(e, t);
  }
  /**
   * Move block from one index to another
   *
   * @param {number} toIndex - index to move to
   * @param {number} fromIndex - index to move from
   */
  move(e, t) {
    this.Editor.BlockManager.move(e, t);
  }
  /**
   * Deletes Block
   *
   * @param {number} blockIndex - index of Block to delete
   */
  delete(e = this.Editor.BlockManager.currentBlockIndex) {
    try {
      const t = this.Editor.BlockManager.getBlockByIndex(e);
      this.Editor.BlockManager.removeBlock(t);
    } catch (t) {
      Xo(t, "warn");
      return;
    }
    this.Editor.BlockManager.blocks.length === 0 && this.Editor.BlockManager.insert(), this.Editor.BlockManager.currentBlock && this.Editor.Caret.setToBlock(this.Editor.BlockManager.currentBlock, this.Editor.Caret.positions.END), this.Editor.Toolbar.close();
  }
  /**
   * Clear Editor's area
   */
  async clear() {
    await this.Editor.BlockManager.clear(!0), this.Editor.InlineToolbar.close();
  }
  /**
   * Fills Editor with Blocks data
   *
   * @param {OutputData} data — Saved Editor data
   */
  async render(e) {
    if (e === void 0 || e.blocks === void 0)
      throw new Error("Incorrect data passed to the render() method");
    this.Editor.ModificationsObserver.disable(), await this.Editor.BlockManager.clear(), await this.Editor.Renderer.render(e.blocks), this.Editor.ModificationsObserver.enable();
  }
  /**
   * Render passed HTML string
   *
   * @param {string} data - HTML string to render
   * @returns {Promise<void>}
   */
  renderFromHTML(e) {
    return this.Editor.BlockManager.clear(), this.Editor.Paste.processText(e, !0);
  }
  /**
   * Stretch Block's content
   *
   * @param {number} index - index of Block to stretch
   * @param {boolean} status - true to enable, false to disable
   * @deprecated Use BlockAPI interface to stretch Blocks
   */
  stretchBlock(e, t = !0) {
    Ul(
      !0,
      "blocks.stretchBlock()",
      "BlockAPI"
    );
    const n = this.Editor.BlockManager.getBlockByIndex(e);
    n && (n.stretched = t);
  }
  /**
   * Insert new Block
   * After set caret to this Block
   *
   * @todo remove in 3.0.0
   * @deprecated with insert() method
   */
  insertNewBlock() {
    gt("Method blocks.insertNewBlock() is deprecated and it will be removed in the next major release. Use blocks.insert() instead.", "warn"), this.insert();
  }
  /**
   * Validated block index and throws an error if it's invalid
   *
   * @param index - index to validate
   */
  validateIndex(e) {
    if (typeof e != "number")
      throw new Error("Index should be a number");
    if (e < 0)
      throw new Error("Index should be greater than or equal to 0");
    if (e === null)
      throw new Error("Index should be greater than or equal to 0");
  }
}
class Bf extends it {
  constructor() {
    super(...arguments), this.setToFirstBlock = (e = this.Editor.Caret.positions.DEFAULT, t = 0) => this.Editor.BlockManager.firstBlock ? (this.Editor.Caret.setToBlock(this.Editor.BlockManager.firstBlock, e, t), !0) : !1, this.setToLastBlock = (e = this.Editor.Caret.positions.DEFAULT, t = 0) => this.Editor.BlockManager.lastBlock ? (this.Editor.Caret.setToBlock(this.Editor.BlockManager.lastBlock, e, t), !0) : !1, this.setToPreviousBlock = (e = this.Editor.Caret.positions.DEFAULT, t = 0) => this.Editor.BlockManager.previousBlock ? (this.Editor.Caret.setToBlock(this.Editor.BlockManager.previousBlock, e, t), !0) : !1, this.setToNextBlock = (e = this.Editor.Caret.positions.DEFAULT, t = 0) => this.Editor.BlockManager.nextBlock ? (this.Editor.Caret.setToBlock(this.Editor.BlockManager.nextBlock, e, t), !0) : !1, this.setToBlock = (e, t = this.Editor.Caret.positions.DEFAULT, n = 0) => this.Editor.BlockManager.blocks[e] ? (this.Editor.Caret.setToBlock(this.Editor.BlockManager.blocks[e], t, n), !0) : !1, this.focus = (e = !1) => e ? this.setToLastBlock(this.Editor.Caret.positions.END) : this.setToFirstBlock(this.Editor.Caret.positions.START);
  }
  /**
   * Available methods
   *
   * @returns {Caret}
   */
  get methods() {
    return {
      setToFirstBlock: this.setToFirstBlock,
      setToLastBlock: this.setToLastBlock,
      setToPreviousBlock: this.setToPreviousBlock,
      setToNextBlock: this.setToNextBlock,
      setToBlock: this.setToBlock,
      focus: this.focus
    };
  }
}
let Rf = class extends it {
  /**
   * Available methods
   *
   * @returns {Events}
   */
  get methods() {
    return {
      emit: (e, t) => this.emit(e, t),
      off: (e, t) => this.off(e, t),
      on: (e, t) => this.on(e, t)
    };
  }
  /**
   * Subscribe on Events
   *
   * @param {string} eventName - event name to subscribe
   * @param {Function} callback - event handler
   */
  on(e, t) {
    this.eventsDispatcher.on(e, t);
  }
  /**
   * Emit event with data
   *
   * @param {string} eventName - event to emit
   * @param {object} data - event's data
   */
  emit(e, t) {
    this.eventsDispatcher.emit(e, t);
  }
  /**
   * Unsubscribe from Event
   *
   * @param {string} eventName - event to unsubscribe
   * @param {Function} callback - event handler
   */
  off(e, t) {
    this.eventsDispatcher.off(e, t);
  }
};
class pc extends it {
  /**
   * Return namespace section for tool or block tune
   *
   * @param tool - tool object
   */
  static getNamespace(e) {
    return e.isTune() ? `blockTunes.${e.name}` : `tools.${e.name}`;
  }
  /**
   * Return I18n API methods with global dictionary access
   */
  get methods() {
    return {
      t: () => {
        Xo("I18n.t() method can be accessed only from Tools", "warn");
      }
    };
  }
  /**
   * Return I18n API methods with tool namespaced dictionary
   *
   * @param tool - Tool object
   */
  getMethodsForTool(e) {
    return Object.assign(
      this.methods,
      {
        t: (t) => Jo.t(pc.getNamespace(e), t)
      }
    );
  }
}
let If = class extends it {
  /**
   * Editor.js Core API modules
   */
  get methods() {
    return {
      blocks: this.Editor.BlocksAPI.methods,
      caret: this.Editor.CaretAPI.methods,
      events: this.Editor.EventsAPI.methods,
      listeners: this.Editor.ListenersAPI.methods,
      notifier: this.Editor.NotifierAPI.methods,
      sanitizer: this.Editor.SanitizerAPI.methods,
      saver: this.Editor.SaverAPI.methods,
      selection: this.Editor.SelectionAPI.methods,
      styles: this.Editor.StylesAPI.classes,
      toolbar: this.Editor.ToolbarAPI.methods,
      inlineToolbar: this.Editor.InlineToolbarAPI.methods,
      tooltip: this.Editor.TooltipAPI.methods,
      i18n: this.Editor.I18nAPI.methods,
      readOnly: this.Editor.ReadOnlyAPI.methods,
      ui: this.Editor.UiAPI.methods
    };
  }
  /**
   * Returns Editor.js Core API methods for passed tool
   *
   * @param tool - tool object
   */
  getMethodsForTool(e) {
    return Object.assign(
      this.methods,
      {
        i18n: this.Editor.I18nAPI.getMethodsForTool(e)
      }
    );
  }
}, Nf = class extends it {
  /**
   * Available methods
   *
   * @returns {InlineToolbar}
   */
  get methods() {
    return {
      close: () => this.close(),
      open: () => this.open()
    };
  }
  /**
   * Open Inline Toolbar
   */
  open() {
    this.Editor.InlineToolbar.tryToShow();
  }
  /**
   * Close Inline Toolbar
   */
  close() {
    this.Editor.InlineToolbar.close();
  }
}, Pf = class extends it {
  /**
   * Available methods
   *
   * @returns {Listeners}
   */
  get methods() {
    return {
      on: (e, t, n, r) => this.on(e, t, n, r),
      off: (e, t, n, r) => this.off(e, t, n, r),
      offById: (e) => this.offById(e)
    };
  }
  /**
   * Ads a DOM event listener. Return it's id.
   *
   * @param {HTMLElement} element - Element to set handler to
   * @param {string} eventType - event type
   * @param {() => void} handler - event handler
   * @param {boolean} useCapture - capture event or not
   */
  on(e, t, n, r) {
    return this.listeners.on(e, t, n, r);
  }
  /**
   * Removes DOM listener from element
   *
   * @param {Element} element - Element to remove handler from
   * @param eventType - event type
   * @param handler - event handler
   * @param {boolean} useCapture - capture event or not
   */
  off(e, t, n, r) {
    this.listeners.off(e, t, n, r);
  }
  /**
   * Removes DOM listener by the listener id
   *
   * @param id - id of the listener to remove
   */
  offById(e) {
    this.listeners.offById(e);
  }
};
var zh = { exports: {} };
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(window, function() {
    return function(t) {
      var n = {};
      function r(a) {
        if (n[a])
          return n[a].exports;
        var c = n[a] = { i: a, l: !1, exports: {} };
        return t[a].call(c.exports, c, c.exports, r), c.l = !0, c.exports;
      }
      return r.m = t, r.c = n, r.d = function(a, c, u) {
        r.o(a, c) || Object.defineProperty(a, c, { enumerable: !0, get: u });
      }, r.r = function(a) {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(a, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(a, "__esModule", { value: !0 });
      }, r.t = function(a, c) {
        if (1 & c && (a = r(a)), 8 & c || 4 & c && typeof a == "object" && a && a.__esModule)
          return a;
        var u = /* @__PURE__ */ Object.create(null);
        if (r.r(u), Object.defineProperty(u, "default", { enumerable: !0, value: a }), 2 & c && typeof a != "string")
          for (var p in a)
            r.d(u, p, (function(g) {
              return a[g];
            }).bind(null, p));
        return u;
      }, r.n = function(a) {
        var c = a && a.__esModule ? function() {
          return a.default;
        } : function() {
          return a;
        };
        return r.d(c, "a", c), c;
      }, r.o = function(a, c) {
        return Object.prototype.hasOwnProperty.call(a, c);
      }, r.p = "/", r(r.s = 0);
    }([function(t, n, r) {
      r(1), /*!
      * Codex JavaScript Notification module
      * https://github.com/codex-team/js-notifier
      */
      t.exports = function() {
        var a = r(6), c = "cdx-notify--bounce-in", u = null;
        return { show: function(p) {
          if (p.message) {
            (function() {
              if (u)
                return !0;
              u = a.getWrapper(), document.body.appendChild(u);
            })();
            var g = null, v = p.time || 8e3;
            switch (p.type) {
              case "confirm":
                g = a.confirm(p);
                break;
              case "prompt":
                g = a.prompt(p);
                break;
              default:
                g = a.alert(p), window.setTimeout(function() {
                  g.remove();
                }, v);
            }
            u.appendChild(g), g.classList.add(c);
          }
        } };
      }();
    }, function(t, n, r) {
      var a = r(2);
      typeof a == "string" && (a = [[t.i, a, ""]]);
      var c = { hmr: !0, transform: void 0, insertInto: void 0 };
      r(4)(a, c), a.locals && (t.exports = a.locals);
    }, function(t, n, r) {
      (t.exports = r(3)(!1)).push([t.i, `.cdx-notify--error{background:#fffbfb!important}.cdx-notify--error::before{background:#fb5d5d!important}.cdx-notify__input{max-width:130px;padding:5px 10px;background:#f7f7f7;border:0;border-radius:3px;font-size:13px;color:#656b7c;outline:0}.cdx-notify__input:-ms-input-placeholder{color:#656b7c}.cdx-notify__input::placeholder{color:#656b7c}.cdx-notify__input:focus:-ms-input-placeholder{color:rgba(101,107,124,.3)}.cdx-notify__input:focus::placeholder{color:rgba(101,107,124,.3)}.cdx-notify__button{border:none;border-radius:3px;font-size:13px;padding:5px 10px;cursor:pointer}.cdx-notify__button:last-child{margin-left:10px}.cdx-notify__button--cancel{background:#f2f5f7;box-shadow:0 2px 1px 0 rgba(16,19,29,0);color:#656b7c}.cdx-notify__button--cancel:hover{background:#eee}.cdx-notify__button--confirm{background:#34c992;box-shadow:0 1px 1px 0 rgba(18,49,35,.05);color:#fff}.cdx-notify__button--confirm:hover{background:#33b082}.cdx-notify__btns-wrapper{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;margin-top:5px}.cdx-notify__cross{position:absolute;top:5px;right:5px;width:10px;height:10px;padding:5px;opacity:.54;cursor:pointer}.cdx-notify__cross::after,.cdx-notify__cross::before{content:'';position:absolute;left:9px;top:5px;height:12px;width:2px;background:#575d67}.cdx-notify__cross::before{transform:rotate(-45deg)}.cdx-notify__cross::after{transform:rotate(45deg)}.cdx-notify__cross:hover{opacity:1}.cdx-notifies{position:fixed;z-index:2;bottom:20px;left:20px;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif}.cdx-notify{position:relative;width:220px;margin-top:15px;padding:13px 16px;background:#fff;box-shadow:0 11px 17px 0 rgba(23,32,61,.13);border-radius:5px;font-size:14px;line-height:1.4em;word-wrap:break-word}.cdx-notify::before{content:'';position:absolute;display:block;top:0;left:0;width:3px;height:calc(100% - 6px);margin:3px;border-radius:5px;background:0 0}@keyframes bounceIn{0%{opacity:0;transform:scale(.3)}50%{opacity:1;transform:scale(1.05)}70%{transform:scale(.9)}100%{transform:scale(1)}}.cdx-notify--bounce-in{animation-name:bounceIn;animation-duration:.6s;animation-iteration-count:1}.cdx-notify--success{background:#fafffe!important}.cdx-notify--success::before{background:#41ffb1!important}`, ""]);
    }, function(t, n) {
      t.exports = function(r) {
        var a = [];
        return a.toString = function() {
          return this.map(function(c) {
            var u = function(p, g) {
              var v = p[1] || "", x = p[3];
              if (!x)
                return v;
              if (g && typeof btoa == "function") {
                var y = (k = x, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(k)))) + " */"), T = x.sources.map(function(M) {
                  return "/*# sourceURL=" + x.sourceRoot + M + " */";
                });
                return [v].concat(T).concat([y]).join(`
`);
              }
              var k;
              return [v].join(`
`);
            }(c, r);
            return c[2] ? "@media " + c[2] + "{" + u + "}" : u;
          }).join("");
        }, a.i = function(c, u) {
          typeof c == "string" && (c = [[null, c, ""]]);
          for (var p = {}, g = 0; g < this.length; g++) {
            var v = this[g][0];
            typeof v == "number" && (p[v] = !0);
          }
          for (g = 0; g < c.length; g++) {
            var x = c[g];
            typeof x[0] == "number" && p[x[0]] || (u && !x[2] ? x[2] = u : u && (x[2] = "(" + x[2] + ") and (" + u + ")"), a.push(x));
          }
        }, a;
      };
    }, function(t, n, r) {
      var a, c, u = {}, p = (a = function() {
        return window && document && document.all && !window.atob;
      }, function() {
        return c === void 0 && (c = a.apply(this, arguments)), c;
      }), g = function(j) {
        var R = {};
        return function(V) {
          if (typeof V == "function")
            return V();
          if (R[V] === void 0) {
            var K = (function(J) {
              return document.querySelector(J);
            }).call(this, V);
            if (window.HTMLIFrameElement && K instanceof window.HTMLIFrameElement)
              try {
                K = K.contentDocument.head;
              } catch {
                K = null;
              }
            R[V] = K;
          }
          return R[V];
        };
      }(), v = null, x = 0, y = [], T = r(5);
      function k(j, R) {
        for (var V = 0; V < j.length; V++) {
          var K = j[V], J = u[K.id];
          if (J) {
            J.refs++;
            for (var B = 0; B < J.parts.length; B++)
              J.parts[B](K.parts[B]);
            for (; B < K.parts.length; B++)
              J.parts.push(Q(K.parts[B], R));
          } else {
            var se = [];
            for (B = 0; B < K.parts.length; B++)
              se.push(Q(K.parts[B], R));
            u[K.id] = { id: K.id, refs: 1, parts: se };
          }
        }
      }
      function M(j, R) {
        for (var V = [], K = {}, J = 0; J < j.length; J++) {
          var B = j[J], se = R.base ? B[0] + R.base : B[0], Z = { css: B[1], media: B[2], sourceMap: B[3] };
          K[se] ? K[se].parts.push(Z) : V.push(K[se] = { id: se, parts: [Z] });
        }
        return V;
      }
      function O(j, R) {
        var V = g(j.insertInto);
        if (!V)
          throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
        var K = y[y.length - 1];
        if (j.insertAt === "top")
          K ? K.nextSibling ? V.insertBefore(R, K.nextSibling) : V.appendChild(R) : V.insertBefore(R, V.firstChild), y.push(R);
        else if (j.insertAt === "bottom")
          V.appendChild(R);
        else {
          if (typeof j.insertAt != "object" || !j.insertAt.before)
            throw new Error(`[Style Loader]

 Invalid value for parameter 'insertAt' ('options.insertAt') found.
 Must be 'top', 'bottom', or Object.
 (https://github.com/webpack-contrib/style-loader#insertat)
`);
          var J = g(j.insertInto + " " + j.insertAt.before);
          V.insertBefore(R, J);
        }
      }
      function Y(j) {
        if (j.parentNode === null)
          return !1;
        j.parentNode.removeChild(j);
        var R = y.indexOf(j);
        R >= 0 && y.splice(R, 1);
      }
      function I(j) {
        var R = document.createElement("style");
        return j.attrs.type === void 0 && (j.attrs.type = "text/css"), F(R, j.attrs), O(j, R), R;
      }
      function F(j, R) {
        Object.keys(R).forEach(function(V) {
          j.setAttribute(V, R[V]);
        });
      }
      function Q(j, R) {
        var V, K, J, B;
        if (R.transform && j.css) {
          if (!(B = R.transform(j.css)))
            return function() {
            };
          j.css = B;
        }
        if (R.singleton) {
          var se = x++;
          V = v || (v = I(R)), K = d.bind(null, V, se, !1), J = d.bind(null, V, se, !0);
        } else
          j.sourceMap && typeof URL == "function" && typeof URL.createObjectURL == "function" && typeof URL.revokeObjectURL == "function" && typeof Blob == "function" && typeof btoa == "function" ? (V = function(Z) {
            var ne = document.createElement("link");
            return Z.attrs.type === void 0 && (Z.attrs.type = "text/css"), Z.attrs.rel = "stylesheet", F(ne, Z.attrs), O(Z, ne), ne;
          }(R), K = (function(Z, ne, le) {
            var oe = le.css, fe = le.sourceMap, Me = ne.convertToAbsoluteUrls === void 0 && fe;
            (ne.convertToAbsoluteUrls || Me) && (oe = T(oe)), fe && (oe += `
/*# sourceMappingURL=data:application/json;base64,` + btoa(unescape(encodeURIComponent(JSON.stringify(fe)))) + " */");
            var je = new Blob([oe], { type: "text/css" }), Be = Z.href;
            Z.href = URL.createObjectURL(je), Be && URL.revokeObjectURL(Be);
          }).bind(null, V, R), J = function() {
            Y(V), V.href && URL.revokeObjectURL(V.href);
          }) : (V = I(R), K = (function(Z, ne) {
            var le = ne.css, oe = ne.media;
            if (oe && Z.setAttribute("media", oe), Z.styleSheet)
              Z.styleSheet.cssText = le;
            else {
              for (; Z.firstChild; )
                Z.removeChild(Z.firstChild);
              Z.appendChild(document.createTextNode(le));
            }
          }).bind(null, V), J = function() {
            Y(V);
          });
        return K(j), function(Z) {
          if (Z) {
            if (Z.css === j.css && Z.media === j.media && Z.sourceMap === j.sourceMap)
              return;
            K(j = Z);
          } else
            J();
        };
      }
      t.exports = function(j, R) {
        if (typeof DEBUG < "u" && DEBUG && typeof document != "object")
          throw new Error("The style-loader cannot be used in a non-browser environment");
        (R = R || {}).attrs = typeof R.attrs == "object" ? R.attrs : {}, R.singleton || typeof R.singleton == "boolean" || (R.singleton = p()), R.insertInto || (R.insertInto = "head"), R.insertAt || (R.insertAt = "bottom");
        var V = M(j, R);
        return k(V, R), function(K) {
          for (var J = [], B = 0; B < V.length; B++) {
            var se = V[B];
            (Z = u[se.id]).refs--, J.push(Z);
          }
          for (K && k(M(K, R), R), B = 0; B < J.length; B++) {
            var Z;
            if ((Z = J[B]).refs === 0) {
              for (var ne = 0; ne < Z.parts.length; ne++)
                Z.parts[ne]();
              delete u[Z.id];
            }
          }
        };
      };
      var U, z = (U = [], function(j, R) {
        return U[j] = R, U.filter(Boolean).join(`
`);
      });
      function d(j, R, V, K) {
        var J = V ? "" : K.css;
        if (j.styleSheet)
          j.styleSheet.cssText = z(R, J);
        else {
          var B = document.createTextNode(J), se = j.childNodes;
          se[R] && j.removeChild(se[R]), se.length ? j.insertBefore(B, se[R]) : j.appendChild(B);
        }
      }
    }, function(t, n) {
      t.exports = function(r) {
        var a = typeof window < "u" && window.location;
        if (!a)
          throw new Error("fixUrls requires window.location");
        if (!r || typeof r != "string")
          return r;
        var c = a.protocol + "//" + a.host, u = c + a.pathname.replace(/\/[^\/]*$/, "/");
        return r.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(p, g) {
          var v, x = g.trim().replace(/^"(.*)"$/, function(y, T) {
            return T;
          }).replace(/^'(.*)'$/, function(y, T) {
            return T;
          });
          return /^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(x) ? p : (v = x.indexOf("//") === 0 ? x : x.indexOf("/") === 0 ? c + x : u + x.replace(/^\.\//, ""), "url(" + JSON.stringify(v) + ")");
        });
      };
    }, function(t, n, r) {
      var a, c, u, p, g, v, x, y, T;
      t.exports = (a = "cdx-notifies", c = "cdx-notify", u = "cdx-notify__cross", p = "cdx-notify__button--confirm", g = "cdx-notify__button--cancel", v = "cdx-notify__input", x = "cdx-notify__button", y = "cdx-notify__btns-wrapper", { alert: T = function(k) {
        var M = document.createElement("DIV"), O = document.createElement("DIV"), Y = k.message, I = k.style;
        return M.classList.add(c), I && M.classList.add(c + "--" + I), M.innerHTML = Y, O.classList.add(u), O.addEventListener("click", M.remove.bind(M)), M.appendChild(O), M;
      }, confirm: function(k) {
        var M = T(k), O = document.createElement("div"), Y = document.createElement("button"), I = document.createElement("button"), F = M.querySelector("." + u), Q = k.cancelHandler, U = k.okHandler;
        return O.classList.add(y), Y.innerHTML = k.okText || "Confirm", I.innerHTML = k.cancelText || "Cancel", Y.classList.add(x), I.classList.add(x), Y.classList.add(p), I.classList.add(g), Q && typeof Q == "function" && (I.addEventListener("click", Q), F.addEventListener("click", Q)), U && typeof U == "function" && Y.addEventListener("click", U), Y.addEventListener("click", M.remove.bind(M)), I.addEventListener("click", M.remove.bind(M)), O.appendChild(Y), O.appendChild(I), M.appendChild(O), M;
      }, prompt: function(k) {
        var M = T(k), O = document.createElement("div"), Y = document.createElement("button"), I = document.createElement("input"), F = M.querySelector("." + u), Q = k.cancelHandler, U = k.okHandler;
        return O.classList.add(y), Y.innerHTML = k.okText || "Ok", Y.classList.add(x), Y.classList.add(p), I.classList.add(v), k.placeholder && I.setAttribute("placeholder", k.placeholder), k.default && (I.value = k.default), k.inputType && (I.type = k.inputType), Q && typeof Q == "function" && F.addEventListener("click", Q), U && typeof U == "function" && Y.addEventListener("click", function() {
          U(I.value);
        }), Y.addEventListener("click", M.remove.bind(M)), O.appendChild(I), O.appendChild(Y), M.appendChild(O), M;
      }, getWrapper: function() {
        var k = document.createElement("DIV");
        return k.classList.add(a), k;
      } });
    }]);
  });
})(zh);
var Hf = zh.exports;
const jf = /* @__PURE__ */ Xa(Hf);
let $f = class {
  /**
   * Show web notification
   *
   * @param {NotifierOptions | ConfirmNotifierOptions | PromptNotifierOptions} options - notification options
   */
  show(e) {
    jf.show(e);
  }
}, Yf = class extends it {
  /**
   * @param moduleConfiguration - Module Configuration
   * @param moduleConfiguration.config - Editor's config
   * @param moduleConfiguration.eventsDispatcher - Editor's event dispatcher
   */
  constructor({ config: e, eventsDispatcher: t }) {
    super({
      config: e,
      eventsDispatcher: t
    }), this.notifier = new $f();
  }
  /**
   * Available methods
   */
  get methods() {
    return {
      show: (e) => this.show(e)
    };
  }
  /**
   * Show notification
   *
   * @param {NotifierOptions} options - message option
   */
  show(e) {
    return this.notifier.show(e);
  }
}, Ff = class extends it {
  /**
   * Available methods
   */
  get methods() {
    const e = () => this.isEnabled;
    return {
      toggle: (t) => this.toggle(t),
      get isEnabled() {
        return e();
      }
    };
  }
  /**
   * Set or toggle read-only state
   *
   * @param {boolean|undefined} state - set or toggle state
   * @returns {boolean} current value
   */
  toggle(e) {
    return this.Editor.ReadOnly.toggle(e);
  }
  /**
   * Returns current read-only state
   */
  get isEnabled() {
    return this.Editor.ReadOnly.isEnabled;
  }
};
var Wh = { exports: {} };
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(hf, function() {
    function t(x) {
      var y = x.tags, T = Object.keys(y), k = T.map(function(M) {
        return typeof y[M];
      }).every(function(M) {
        return M === "object" || M === "boolean" || M === "function";
      });
      if (!k)
        throw new Error("The configuration was invalid");
      this.config = x;
    }
    var n = ["P", "LI", "TD", "TH", "DIV", "H1", "H2", "H3", "H4", "H5", "H6", "PRE"];
    function r(x) {
      return n.indexOf(x.nodeName) !== -1;
    }
    var a = ["A", "B", "STRONG", "I", "EM", "SUB", "SUP", "U", "STRIKE"];
    function c(x) {
      return a.indexOf(x.nodeName) !== -1;
    }
    t.prototype.clean = function(x) {
      const y = document.implementation.createHTMLDocument(), T = y.createElement("div");
      return T.innerHTML = x, this._sanitize(y, T), T.innerHTML;
    }, t.prototype._sanitize = function(x, y) {
      var T = u(x, y), k = T.firstChild();
      if (k)
        do {
          if (k.nodeType === Node.TEXT_NODE)
            if (k.data.trim() === "" && (k.previousElementSibling && r(k.previousElementSibling) || k.nextElementSibling && r(k.nextElementSibling))) {
              y.removeChild(k), this._sanitize(x, y);
              break;
            } else
              continue;
          if (k.nodeType === Node.COMMENT_NODE) {
            y.removeChild(k), this._sanitize(x, y);
            break;
          }
          var M = c(k), O;
          M && (O = Array.prototype.some.call(k.childNodes, r));
          var Y = !!y.parentNode, I = r(y) && r(k) && Y, F = k.nodeName.toLowerCase(), Q = p(this.config, F, k), U = M && O;
          if (U || g(k, Q) || !this.config.keepNestedBlockElements && I) {
            if (!(k.nodeName === "SCRIPT" || k.nodeName === "STYLE"))
              for (; k.childNodes.length > 0; )
                y.insertBefore(k.childNodes[0], k);
            y.removeChild(k), this._sanitize(x, y);
            break;
          }
          for (var z = 0; z < k.attributes.length; z += 1) {
            var d = k.attributes[z];
            v(d, Q, k) && (k.removeAttribute(d.name), z = z - 1);
          }
          this._sanitize(x, k);
        } while (k = T.nextSibling());
    };
    function u(x, y) {
      return x.createTreeWalker(
        y,
        NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT,
        null,
        !1
      );
    }
    function p(x, y, T) {
      return typeof x.tags[y] == "function" ? x.tags[y](T) : x.tags[y];
    }
    function g(x, y) {
      return typeof y > "u" ? !0 : typeof y == "boolean" ? !y : !1;
    }
    function v(x, y, T) {
      var k = x.name.toLowerCase();
      return y === !0 ? !1 : typeof y[k] == "function" ? !y[k](x.value, T) : typeof y[k] > "u" || y[k] === !1 ? !0 : typeof y[k] == "string" ? y[k] !== x.value : !1;
    }
    return t;
  });
})(Wh);
var zf = Wh.exports;
const Wf = /* @__PURE__ */ Xa(zf);
function Uh(o, e) {
  return o.map((t) => {
    const n = Lt(e) ? e(t.tool) : e;
    return cn(n) || (t.data = fc(t.data, n)), t;
  });
}
function vi(o, e = {}) {
  const t = {
    tags: e
  };
  return new Wf(t).clean(o);
}
function fc(o, e) {
  return Array.isArray(o) ? Uf(o, e) : uo(o) ? qf(o, e) : nr(o) ? Vf(o, e) : o;
}
function Uf(o, e) {
  return o.map((t) => fc(t, e));
}
function qf(o, e) {
  const t = {};
  for (const n in o) {
    if (!Object.prototype.hasOwnProperty.call(o, n))
      continue;
    const r = o[n], a = Gf(e[n]) ? e[n] : e;
    t[n] = fc(r, a);
  }
  return t;
}
function Vf(o, e) {
  return uo(e) ? vi(o, e) : e === !1 ? vi(o, {}) : o;
}
function Gf(o) {
  return uo(o) || mf(o) || Lt(o);
}
let Zf = class extends it {
  /**
   * Available methods
   *
   * @returns {SanitizerConfig}
   */
  get methods() {
    return {
      clean: (e, t) => this.clean(e, t)
    };
  }
  /**
   * Perform sanitizing of a string
   *
   * @param {string} taintString - what to sanitize
   * @param {SanitizerConfig} config - sanitizer config
   * @returns {string}
   */
  clean(e, t) {
    return vi(e, t);
  }
}, Kf = class extends it {
  /**
   * Available methods
   *
   * @returns {Saver}
   */
  get methods() {
    return {
      save: () => this.save()
    };
  }
  /**
   * Return Editor's data
   *
   * @returns {OutputData}
   */
  save() {
    const e = "Editor's content can not be saved in read-only mode";
    return this.Editor.ReadOnly.isEnabled ? (Xo(e, "warn"), Promise.reject(new Error(e))) : this.Editor.Saver.save();
  }
}, Xf = class extends it {
  /**
   * Available methods
   *
   * @returns {SelectionAPIInterface}
   */
  get methods() {
    return {
      findParentTag: (e, t) => this.findParentTag(e, t),
      expandToTag: (e) => this.expandToTag(e)
    };
  }
  /**
   * Looks ahead from selection and find passed tag with class name
   *
   * @param {string} tagName - tag to find
   * @param {string} className - tag's class name
   * @returns {HTMLElement|null}
   */
  findParentTag(e, t) {
    return new Ye().findParentTag(e, t);
  }
  /**
   * Expand selection to passed tag
   *
   * @param {HTMLElement} node - tag that should contain selection
   */
  expandToTag(e) {
    new Ye().expandToTag(e);
  }
}, Jf = class extends it {
  /**
   * Exported classes
   */
  get classes() {
    return {
      /**
       * Base Block styles
       */
      block: "cdx-block",
      /**
       * Inline Tools styles
       */
      inlineToolButton: "ce-inline-tool",
      inlineToolButtonActive: "ce-inline-tool--active",
      /**
       * UI elements
       */
      input: "cdx-input",
      loader: "cdx-loader",
      button: "cdx-button",
      /**
       * Settings styles
       */
      settingsButton: "cdx-settings-button",
      settingsButtonActive: "cdx-settings-button--active"
    };
  }
}, Qf = class extends it {
  /**
   * Available methods
   *
   * @returns {Toolbar}
   */
  get methods() {
    return {
      close: () => this.close(),
      open: () => this.open(),
      toggleBlockSettings: (e) => this.toggleBlockSettings(e),
      toggleBlockSettingsById: (e) => this.toggleBlockSettingsById(e),
      toggleToolbox: (e) => this.toggleToolbox(e)
    };
  }
  /**
   * Open toolbar
   */
  open() {
    this.Editor.Toolbar.moveAndOpen();
  }
  /**
   * Close toolbar and all included elements
   */
  close() {
    this.Editor.Toolbar.close();
  }
  /**
   * Toggles Block Setting of the current block
   *
   * @param {boolean} openingState —  opening state of Block Setting
   */
  toggleBlockSettings(e) {
    if (this.Editor.BlockManager.currentBlockIndex === -1) {
      Xo("Could't toggle the Toolbar because there is no block selected ", "warn");
      return;
    }
    e ?? !this.Editor.BlockSettings.opened ? (this.Editor.Toolbar.moveAndOpen(), this.Editor.BlockSettings.open()) : this.Editor.BlockSettings.close();
  }
  /**
   * Toggles Block Setting of the current block
   *
   * @param {boolean} openingState —  opening state of Block Setting
   */
  toggleBlockSettingsById(e) {
    const t = this.Editor.BlockManager.getBlockById(e);
    if (!t) {
      Xo("Block not found", "warn");
      return;
    }
    if (this.Editor.BlockSelection.selectBlock(t), this.Editor.BlockManager.currentBlock = t, this.Editor.BlockManager.currentBlockIndex === -1) {
      Xo("Could't toggle the Toolbar because there is no block selected ", "warn");
      return;
    }
    this.Editor.Toolbar.moveAndOpen(), this.Editor.BlockSettings.open();
  }
  /**
   * Open toolbox
   *
   * @param {boolean} openingState - Opening state of toolbox
   */
  toggleToolbox(e) {
    if (this.Editor.BlockManager.currentBlockIndex === -1) {
      Xo("Could't toggle the Toolbox because there is no block selected ", "warn");
      return;
    }
    e ?? !this.Editor.Toolbar.toolbox.opened ? (this.Editor.Toolbar.moveAndOpen(), this.Editor.Toolbar.toolbox.open()) : this.Editor.Toolbar.toolbox.close();
  }
};
var qh = { exports: {} };
/*!
 * CodeX.Tooltips
 * 
 * @version 1.0.5
 * 
 * @licence MIT
 * @author CodeX <https://codex.so>
 * 
 * 
 */
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(window, function() {
    return function(t) {
      var n = {};
      function r(a) {
        if (n[a])
          return n[a].exports;
        var c = n[a] = { i: a, l: !1, exports: {} };
        return t[a].call(c.exports, c, c.exports, r), c.l = !0, c.exports;
      }
      return r.m = t, r.c = n, r.d = function(a, c, u) {
        r.o(a, c) || Object.defineProperty(a, c, { enumerable: !0, get: u });
      }, r.r = function(a) {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(a, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(a, "__esModule", { value: !0 });
      }, r.t = function(a, c) {
        if (1 & c && (a = r(a)), 8 & c || 4 & c && typeof a == "object" && a && a.__esModule)
          return a;
        var u = /* @__PURE__ */ Object.create(null);
        if (r.r(u), Object.defineProperty(u, "default", { enumerable: !0, value: a }), 2 & c && typeof a != "string")
          for (var p in a)
            r.d(u, p, (function(g) {
              return a[g];
            }).bind(null, p));
        return u;
      }, r.n = function(a) {
        var c = a && a.__esModule ? function() {
          return a.default;
        } : function() {
          return a;
        };
        return r.d(c, "a", c), c;
      }, r.o = function(a, c) {
        return Object.prototype.hasOwnProperty.call(a, c);
      }, r.p = "", r(r.s = 0);
    }([function(t, n, r) {
      t.exports = r(1);
    }, function(t, n, r) {
      r.r(n), r.d(n, "default", function() {
        return a;
      });
      class a {
        constructor() {
          this.nodes = { wrapper: null, content: null }, this.showed = !1, this.offsetTop = 10, this.offsetLeft = 10, this.offsetRight = 10, this.hidingDelay = 0, this.handleWindowScroll = () => {
            this.showed && this.hide(!0);
          }, this.loadStyles(), this.prepare(), window.addEventListener("scroll", this.handleWindowScroll, { passive: !0 });
        }
        get CSS() {
          return { tooltip: "ct", tooltipContent: "ct__content", tooltipShown: "ct--shown", placement: { left: "ct--left", bottom: "ct--bottom", right: "ct--right", top: "ct--top" } };
        }
        show(u, p, g) {
          this.nodes.wrapper || this.prepare(), this.hidingTimeout && clearTimeout(this.hidingTimeout);
          const v = Object.assign({ placement: "bottom", marginTop: 0, marginLeft: 0, marginRight: 0, marginBottom: 0, delay: 70, hidingDelay: 0 }, g);
          if (v.hidingDelay && (this.hidingDelay = v.hidingDelay), this.nodes.content.innerHTML = "", typeof p == "string")
            this.nodes.content.appendChild(document.createTextNode(p));
          else {
            if (!(p instanceof Node))
              throw Error("[CodeX Tooltip] Wrong type of «content» passed. It should be an instance of Node or String. But " + typeof p + " given.");
            this.nodes.content.appendChild(p);
          }
          switch (this.nodes.wrapper.classList.remove(...Object.values(this.CSS.placement)), v.placement) {
            case "top":
              this.placeTop(u, v);
              break;
            case "left":
              this.placeLeft(u, v);
              break;
            case "right":
              this.placeRight(u, v);
              break;
            case "bottom":
            default:
              this.placeBottom(u, v);
          }
          v && v.delay ? this.showingTimeout = setTimeout(() => {
            this.nodes.wrapper.classList.add(this.CSS.tooltipShown), this.showed = !0;
          }, v.delay) : (this.nodes.wrapper.classList.add(this.CSS.tooltipShown), this.showed = !0);
        }
        hide(u = !1) {
          if (this.hidingDelay && !u)
            return this.hidingTimeout && clearTimeout(this.hidingTimeout), void (this.hidingTimeout = setTimeout(() => {
              this.hide(!0);
            }, this.hidingDelay));
          this.nodes.wrapper.classList.remove(this.CSS.tooltipShown), this.showed = !1, this.showingTimeout && clearTimeout(this.showingTimeout);
        }
        onHover(u, p, g) {
          u.addEventListener("mouseenter", () => {
            this.show(u, p, g);
          }), u.addEventListener("mouseleave", () => {
            this.hide();
          });
        }
        destroy() {
          this.nodes.wrapper.remove(), window.removeEventListener("scroll", this.handleWindowScroll);
        }
        prepare() {
          this.nodes.wrapper = this.make("div", this.CSS.tooltip), this.nodes.content = this.make("div", this.CSS.tooltipContent), this.append(this.nodes.wrapper, this.nodes.content), this.append(document.body, this.nodes.wrapper);
        }
        loadStyles() {
          const u = "codex-tooltips-style";
          if (document.getElementById(u))
            return;
          const p = r(2), g = this.make("style", null, { textContent: p.toString(), id: u });
          this.prepend(document.head, g);
        }
        placeBottom(u, p) {
          const g = u.getBoundingClientRect(), v = g.left + u.clientWidth / 2 - this.nodes.wrapper.offsetWidth / 2, x = g.bottom + window.pageYOffset + this.offsetTop + p.marginTop;
          this.applyPlacement("bottom", v, x);
        }
        placeTop(u, p) {
          const g = u.getBoundingClientRect(), v = g.left + u.clientWidth / 2 - this.nodes.wrapper.offsetWidth / 2, x = g.top + window.pageYOffset - this.nodes.wrapper.clientHeight - this.offsetTop;
          this.applyPlacement("top", v, x);
        }
        placeLeft(u, p) {
          const g = u.getBoundingClientRect(), v = g.left - this.nodes.wrapper.offsetWidth - this.offsetLeft - p.marginLeft, x = g.top + window.pageYOffset + u.clientHeight / 2 - this.nodes.wrapper.offsetHeight / 2;
          this.applyPlacement("left", v, x);
        }
        placeRight(u, p) {
          const g = u.getBoundingClientRect(), v = g.right + this.offsetRight + p.marginRight, x = g.top + window.pageYOffset + u.clientHeight / 2 - this.nodes.wrapper.offsetHeight / 2;
          this.applyPlacement("right", v, x);
        }
        applyPlacement(u, p, g) {
          this.nodes.wrapper.classList.add(this.CSS.placement[u]), this.nodes.wrapper.style.left = p + "px", this.nodes.wrapper.style.top = g + "px";
        }
        make(u, p = null, g = {}) {
          const v = document.createElement(u);
          Array.isArray(p) ? v.classList.add(...p) : p && v.classList.add(p);
          for (const x in g)
            g.hasOwnProperty(x) && (v[x] = g[x]);
          return v;
        }
        append(u, p) {
          Array.isArray(p) ? p.forEach((g) => u.appendChild(g)) : u.appendChild(p);
        }
        prepend(u, p) {
          Array.isArray(p) ? (p = p.reverse()).forEach((g) => u.prepend(g)) : u.prepend(p);
        }
      }
    }, function(t, n) {
      t.exports = `.ct{z-index:999;opacity:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;-webkit-transition:opacity 50ms ease-in,-webkit-transform 70ms cubic-bezier(.215,.61,.355,1);transition:opacity 50ms ease-in,-webkit-transform 70ms cubic-bezier(.215,.61,.355,1);transition:opacity 50ms ease-in,transform 70ms cubic-bezier(.215,.61,.355,1);transition:opacity 50ms ease-in,transform 70ms cubic-bezier(.215,.61,.355,1),-webkit-transform 70ms cubic-bezier(.215,.61,.355,1);will-change:opacity,top,left;-webkit-box-shadow:0 8px 12px 0 rgba(29,32,43,.17),0 4px 5px -3px rgba(5,6,12,.49);box-shadow:0 8px 12px 0 rgba(29,32,43,.17),0 4px 5px -3px rgba(5,6,12,.49);border-radius:9px}.ct,.ct:before{position:absolute;top:0;left:0}.ct:before{content:"";bottom:0;right:0;background-color:#1d202b;z-index:-1;border-radius:4px}@supports(-webkit-mask-box-image:url("")){.ct:before{border-radius:0;-webkit-mask-box-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"><path d="M10.71 0h2.58c3.02 0 4.64.42 6.1 1.2a8.18 8.18 0 013.4 3.4C23.6 6.07 24 7.7 24 10.71v2.58c0 3.02-.42 4.64-1.2 6.1a8.18 8.18 0 01-3.4 3.4c-1.47.8-3.1 1.21-6.11 1.21H10.7c-3.02 0-4.64-.42-6.1-1.2a8.18 8.18 0 01-3.4-3.4C.4 17.93 0 16.3 0 13.29V10.7c0-3.02.42-4.64 1.2-6.1a8.18 8.18 0 013.4-3.4C6.07.4 7.7 0 10.71 0z"/></svg>') 48% 41% 37.9% 53.3%}}@media (--mobile){.ct{display:none}}.ct__content{padding:6px 10px;color:#cdd1e0;font-size:12px;text-align:center;letter-spacing:.02em;line-height:1em}.ct:after{content:"";width:8px;height:8px;position:absolute;background-color:#1d202b;z-index:-1}.ct--bottom{-webkit-transform:translateY(5px);transform:translateY(5px)}.ct--bottom:after{top:-3px;left:50%;-webkit-transform:translateX(-50%) rotate(-45deg);transform:translateX(-50%) rotate(-45deg)}.ct--top{-webkit-transform:translateY(-5px);transform:translateY(-5px)}.ct--top:after{top:auto;bottom:-3px;left:50%;-webkit-transform:translateX(-50%) rotate(-45deg);transform:translateX(-50%) rotate(-45deg)}.ct--left{-webkit-transform:translateX(-5px);transform:translateX(-5px)}.ct--left:after{top:50%;left:auto;right:0;-webkit-transform:translate(41.6%,-50%) rotate(-45deg);transform:translate(41.6%,-50%) rotate(-45deg)}.ct--right{-webkit-transform:translateX(5px);transform:translateX(5px)}.ct--right:after{top:50%;left:0;-webkit-transform:translate(-41.6%,-50%) rotate(-45deg);transform:translate(-41.6%,-50%) rotate(-45deg)}.ct--shown{opacity:1;-webkit-transform:none;transform:none}`;
    }]).default;
  });
})(qh);
var em = qh.exports;
const tm = /* @__PURE__ */ Xa(em);
let En = null;
function mc() {
  En || (En = new tm());
}
function om(o, e, t) {
  mc(), En == null || En.show(o, e, t);
}
function Vl(o = !1) {
  mc(), En == null || En.hide(o);
}
function aa(o, e, t) {
  mc(), En == null || En.onHover(o, e, t);
}
function nm() {
  En == null || En.destroy(), En = null;
}
let im = class extends it {
  /**
   * @class
   * @param moduleConfiguration - Module Configuration
   * @param moduleConfiguration.config - Editor's config
   * @param moduleConfiguration.eventsDispatcher - Editor's event dispatcher
   */
  constructor({ config: e, eventsDispatcher: t }) {
    super({
      config: e,
      eventsDispatcher: t
    });
  }
  /**
   * Available methods
   */
  get methods() {
    return {
      show: (e, t, n) => this.show(e, t, n),
      hide: () => this.hide(),
      onHover: (e, t, n) => this.onHover(e, t, n)
    };
  }
  /**
   * Method show tooltip on element with passed HTML content
   *
   * @param {HTMLElement} element - element on which tooltip should be shown
   * @param {TooltipContent} content - tooltip content
   * @param {TooltipOptions} options - tooltip options
   */
  show(e, t, n) {
    om(e, t, n);
  }
  /**
   * Method hides tooltip on HTML page
   */
  hide() {
    Vl();
  }
  /**
   * Decorator for showing Tooltip by mouseenter/mouseleave
   *
   * @param {HTMLElement} element - element on which tooltip should be shown
   * @param {TooltipContent} content - tooltip content
   * @param {TooltipOptions} options - tooltip options
   */
  onHover(e, t, n) {
    aa(e, t, n);
  }
}, rm = class extends it {
  /**
   * Available methods / getters
   */
  get methods() {
    return {
      nodes: this.editorNodes
      /**
       * There can be added some UI methods, like toggleThinMode() etc
       */
    };
  }
  /**
   * Exported classes
   */
  get editorNodes() {
    return {
      /**
       * Top-level editor instance wrapper
       */
      wrapper: this.Editor.UI.nodes.wrapper,
      /**
       * Element that holds all the Blocks
       */
      redactor: this.Editor.UI.nodes.redactor
    };
  }
};
function Vh(o, e) {
  const t = {};
  return Object.entries(o).forEach(([n, r]) => {
    if (uo(r)) {
      const a = e ? `${e}.${n}` : n;
      Object.values(r).every((c) => nr(c)) ? t[n] = a : t[n] = Vh(r, a);
      return;
    }
    t[n] = r;
  }), t;
}
const Sn = Vh(Nh);
function sm(o, e) {
  const t = {};
  return Object.keys(o).forEach((n) => {
    const r = e[n];
    r !== void 0 ? t[r] = o[n] : t[n] = o[n];
  }), t;
}
const am = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M9 12L9 7.1C9 7.04477 9.04477 7 9.1 7H10.4C11.5 7 14 7.1 14 9.5C14 9.5 14 12 11 12M9 12V16.8C9 16.9105 9.08954 17 9.2 17H12.5C14 17 15 16 15 14.5C15 11.7046 11 12 11 12M9 12H11"/></svg>', Gh = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7 10L11.8586 14.8586C11.9367 14.9367 12.0633 14.9367 12.1414 14.8586L17 10"/></svg>', lm = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7 15L11.8586 10.1414C11.9367 10.0633 12.0633 10.0633 12.1414 10.1414L17 15"/></svg>', cm = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 8L12 12M12 12L16 16M12 12L16 8M12 12L8 16"/></svg>', dm = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><circle cx="12" cy="12" r="4" stroke="currentColor" stroke-width="2"/></svg>', hm = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M13.34 10C12.4223 12.7337 11 17 11 17"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M14.21 7H14.2"/></svg>', yd = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7.69998 12.6L7.67896 12.62C6.53993 13.7048 6.52012 15.5155 7.63516 16.625V16.625C8.72293 17.7073 10.4799 17.7102 11.5712 16.6314L13.0263 15.193C14.0703 14.1609 14.2141 12.525 13.3662 11.3266L13.22 11.12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16.22 11.12L16.3564 10.9805C17.2895 10.0265 17.3478 8.5207 16.4914 7.49733V7.49733C15.5691 6.39509 13.9269 6.25143 12.8271 7.17675L11.3901 8.38588C10.0935 9.47674 9.95706 11.4241 11.0888 12.6852L11.12 12.72"/></svg>', um = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.40999 7.29999H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 7.29999H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.30999 12H9.3"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 12H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.40999 16.7H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 16.7H14.59"/></svg>', pm = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 7V12M12 17V12M17 12H12M12 12H7"/></svg>', fm = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><circle cx="10.5" cy="10.5" r="5.5" stroke="currentColor" stroke-width="2"/><line x1="15.4142" x2="19" y1="15" y2="18.5858" stroke="currentColor" stroke-linecap="round" stroke-width="2"/></svg>', mm = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M15.7795 11.5C15.7795 11.5 16.053 11.1962 16.5497 10.6722C17.4442 9.72856 17.4701 8.2475 16.5781 7.30145V7.30145C15.6482 6.31522 14.0873 6.29227 13.1288 7.25073L11.8796 8.49999"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8.24517 12.3883C8.24517 12.3883 7.97171 12.6922 7.47504 13.2161C6.58051 14.1598 6.55467 15.6408 7.44666 16.5869V16.5869C8.37653 17.5731 9.93744 17.5961 10.8959 16.6376L12.1452 15.3883"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M17.7802 15.1032L16.597 14.9422C16.0109 14.8624 15.4841 15.3059 15.4627 15.8969L15.4199 17.0818"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6.39064 9.03238L7.58432 9.06668C8.17551 9.08366 8.6522 8.58665 8.61056 7.99669L8.5271 6.81397"/><line x1="12.1142" x2="11.7" y1="12.2" y2="11.7858" stroke="currentColor" stroke-linecap="round" stroke-width="2"/></svg>', gm = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/><line x1="12" x2="12" y1="9" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 15.02V15.01"/></svg>';
let wd = class eo {
  /**
   * Constructs popover item instance
   *
   * @param params - popover item construction params
   */
  constructor(e) {
    this.nodes = {
      root: null,
      icon: null
    }, this.confirmationState = null, this.removeSpecialFocusBehavior = () => {
      this.nodes.root.classList.remove(eo.CSS.noFocus);
    }, this.removeSpecialHoverBehavior = () => {
      this.nodes.root.classList.remove(eo.CSS.noHover);
    }, this.onErrorAnimationEnd = () => {
      this.nodes.icon.classList.remove(eo.CSS.wobbleAnimation), this.nodes.icon.removeEventListener("animationend", this.onErrorAnimationEnd);
    }, this.params = e, this.nodes.root = this.make(e);
  }
  /**
   * True if item is disabled and hence not clickable
   */
  get isDisabled() {
    return this.params.isDisabled;
  }
  /**
   * Exposes popover item toggle parameter
   */
  get toggle() {
    return this.params.toggle;
  }
  /**
   * Item title
   */
  get title() {
    return this.params.title;
  }
  /**
   * True if popover should close once item is activated
   */
  get closeOnActivate() {
    return this.params.closeOnActivate;
  }
  /**
   * True if confirmation state is enabled for popover item
   */
  get isConfirmationStateEnabled() {
    return this.confirmationState !== null;
  }
  /**
   * True if item is focused in keyboard navigation process
   */
  get isFocused() {
    return this.nodes.root.classList.contains(eo.CSS.focused);
  }
  /**
   * Popover item CSS classes
   */
  static get CSS() {
    return {
      container: "ce-popover-item",
      title: "ce-popover-item__title",
      secondaryTitle: "ce-popover-item__secondary-title",
      icon: "ce-popover-item__icon",
      active: "ce-popover-item--active",
      disabled: "ce-popover-item--disabled",
      focused: "ce-popover-item--focused",
      hidden: "ce-popover-item--hidden",
      confirmationState: "ce-popover-item--confirmation",
      noHover: "ce-popover-item--no-hover",
      noFocus: "ce-popover-item--no-focus",
      wobbleAnimation: "wobble"
    };
  }
  /**
   * Returns popover item root element
   */
  getElement() {
    return this.nodes.root;
  }
  /**
   * Called on popover item click
   */
  handleClick() {
    if (this.isConfirmationStateEnabled) {
      this.activateOrEnableConfirmationMode(this.confirmationState);
      return;
    }
    this.activateOrEnableConfirmationMode(this.params);
  }
  /**
   * Toggles item active state
   *
   * @param isActive - true if item should strictly should become active
   */
  toggleActive(e) {
    this.nodes.root.classList.toggle(eo.CSS.active, e);
  }
  /**
   * Toggles item hidden state
   *
   * @param isHidden - true if item should be hidden
   */
  toggleHidden(e) {
    this.nodes.root.classList.toggle(eo.CSS.hidden, e);
  }
  /**
   * Resets popover item to its original state
   */
  reset() {
    this.isConfirmationStateEnabled && this.disableConfirmationMode();
  }
  /**
   * Method called once item becomes focused during keyboard navigation
   */
  onFocus() {
    this.disableSpecialHoverAndFocusBehavior();
  }
  /**
   * Constructs HTML element corresponding to popover item params
   *
   * @param params - item construction params
   */
  make(e) {
    const t = ae.make("div", eo.CSS.container);
    return e.name && (t.dataset.itemName = e.name), this.nodes.icon = ae.make("div", eo.CSS.icon, {
      innerHTML: e.icon || dm
    }), t.appendChild(this.nodes.icon), t.appendChild(ae.make("div", eo.CSS.title, {
      innerHTML: e.title || ""
    })), e.secondaryLabel && t.appendChild(ae.make("div", eo.CSS.secondaryTitle, {
      textContent: e.secondaryLabel
    })), e.isActive && t.classList.add(eo.CSS.active), e.isDisabled && t.classList.add(eo.CSS.disabled), t;
  }
  /**
   * Activates confirmation mode for the item.
   *
   * @param newState - new popover item params that should be applied
   */
  enableConfirmationMode(e) {
    const t = {
      ...this.params,
      ...e,
      confirmation: e.confirmation
    }, n = this.make(t);
    this.nodes.root.innerHTML = n.innerHTML, this.nodes.root.classList.add(eo.CSS.confirmationState), this.confirmationState = e, this.enableSpecialHoverAndFocusBehavior();
  }
  /**
   * Returns item to its original state
   */
  disableConfirmationMode() {
    const e = this.make(this.params);
    this.nodes.root.innerHTML = e.innerHTML, this.nodes.root.classList.remove(eo.CSS.confirmationState), this.confirmationState = null, this.disableSpecialHoverAndFocusBehavior();
  }
  /**
   * Enables special focus and hover behavior for item in confirmation state.
   * This is needed to prevent item from being highlighted as hovered/focused just after click.
   */
  enableSpecialHoverAndFocusBehavior() {
    this.nodes.root.classList.add(eo.CSS.noHover), this.nodes.root.classList.add(eo.CSS.noFocus), this.nodes.root.addEventListener("mouseleave", this.removeSpecialHoverBehavior, { once: !0 });
  }
  /**
   * Disables special focus and hover behavior
   */
  disableSpecialHoverAndFocusBehavior() {
    this.removeSpecialFocusBehavior(), this.removeSpecialHoverBehavior(), this.nodes.root.removeEventListener("mouseleave", this.removeSpecialHoverBehavior);
  }
  /**
   * Executes item's onActivate callback if the item has no confirmation configured
   *
   * @param item - item to activate or bring to confirmation mode
   */
  activateOrEnableConfirmationMode(e) {
    if (e.confirmation === void 0)
      try {
        e.onActivate(e), this.disableConfirmationMode();
      } catch {
        this.animateError();
      }
    else
      this.enableConfirmationMode(e.confirmation);
  }
  /**
   * Animates item which symbolizes that error occured while executing 'onActivate()' callback
   */
  animateError() {
    this.nodes.icon.classList.contains(eo.CSS.wobbleAnimation) || (this.nodes.icon.classList.add(eo.CSS.wobbleAnimation), this.nodes.icon.addEventListener("animationend", this.onErrorAnimationEnd));
  }
};
const Zh = class oa {
  /**
   * @param {HTMLElement[]} nodeList — the list of iterable HTML-items
   * @param {string} focusedCssClass - user-provided CSS-class that will be set in flipping process
   */
  constructor(e, t) {
    this.cursor = -1, this.items = [], this.items = e || [], this.focusedCssClass = t;
  }
  /**
   * Returns Focused button Node
   *
   * @returns {HTMLElement}
   */
  get currentItem() {
    return this.cursor === -1 ? null : this.items[this.cursor];
  }
  /**
   * Sets cursor to specified position
   *
   * @param cursorPosition - new cursor position
   */
  setCursor(e) {
    e < this.items.length && e >= -1 && (this.dropCursor(), this.cursor = e, this.items[this.cursor].classList.add(this.focusedCssClass));
  }
  /**
   * Sets items. Can be used when iterable items changed dynamically
   *
   * @param {HTMLElement[]} nodeList - nodes to iterate
   */
  setItems(e) {
    this.items = e;
  }
  /**
   * Sets cursor next to the current
   */
  next() {
    this.cursor = this.leafNodesAndReturnIndex(oa.directions.RIGHT);
  }
  /**
   * Sets cursor before current
   */
  previous() {
    this.cursor = this.leafNodesAndReturnIndex(oa.directions.LEFT);
  }
  /**
   * Sets cursor to the default position and removes CSS-class from previously focused item
   */
  dropCursor() {
    this.cursor !== -1 && (this.items[this.cursor].classList.remove(this.focusedCssClass), this.cursor = -1);
  }
  /**
   * Leafs nodes inside the target list from active element
   *
   * @param {string} direction - leaf direction. Can be 'left' or 'right'
   * @returns {number} index of focused node
   */
  leafNodesAndReturnIndex(e) {
    if (this.items.length === 0)
      return this.cursor;
    let t = this.cursor;
    return t === -1 ? t = e === oa.directions.RIGHT ? -1 : 0 : this.items[t].classList.remove(this.focusedCssClass), e === oa.directions.RIGHT ? t = (t + 1) % this.items.length : t = (this.items.length + t - 1) % this.items.length, ae.canSetCaret(this.items[t]) && $a(() => Ye.setCursor(this.items[t]), 50)(), this.items[t].classList.add(this.focusedCssClass), t;
  }
};
Zh.directions = {
  RIGHT: "right",
  LEFT: "left"
};
let Ks = Zh, ks = class Gl {
  /**
   * @param {FlipperOptions} options - different constructing settings
   */
  constructor(e) {
    this.iterator = null, this.activated = !1, this.flipCallbacks = [], this.onKeyDown = (t) => {
      if (this.isEventReadyForHandling(t))
        switch (Gl.usedKeys.includes(t.keyCode) && t.preventDefault(), t.keyCode) {
          case Fe.TAB:
            this.handleTabPress(t);
            break;
          case Fe.LEFT:
          case Fe.UP:
            this.flipLeft();
            break;
          case Fe.RIGHT:
          case Fe.DOWN:
            this.flipRight();
            break;
          case Fe.ENTER:
            this.handleEnterPress(t);
            break;
        }
    }, this.iterator = new Ks(e.items, e.focusedItemClass), this.activateCallback = e.activateCallback, this.allowedKeys = e.allowedKeys || Gl.usedKeys;
  }
  /**
   * True if flipper is currently activated
   */
  get isActivated() {
    return this.activated;
  }
  /**
   * Array of keys (codes) that is handled by Flipper
   * Used to:
   *  - preventDefault only for this keys, not all keydowns (@see constructor)
   *  - to skip external behaviours only for these keys, when filler is activated (@see BlockEvents@arrowRightAndDown)
   */
  static get usedKeys() {
    return [
      Fe.TAB,
      Fe.LEFT,
      Fe.RIGHT,
      Fe.ENTER,
      Fe.UP,
      Fe.DOWN
    ];
  }
  /**
   * Active tab/arrows handling by flipper
   *
   * @param items - Some modules (like, InlineToolbar, BlockSettings) might refresh buttons dynamically
   * @param cursorPosition - index of the item that should be focused once flipper is activated
   */
  activate(e, t) {
    this.activated = !0, e && this.iterator.setItems(e), t !== void 0 && this.iterator.setCursor(t), document.addEventListener("keydown", this.onKeyDown, !0);
  }
  /**
   * Disable tab/arrows handling by flipper
   */
  deactivate() {
    this.activated = !1, this.dropCursor(), document.removeEventListener("keydown", this.onKeyDown);
  }
  /**
   * Focus first item
   */
  focusFirst() {
    this.dropCursor(), this.flipRight();
  }
  /**
   * Focuses previous flipper iterator item
   */
  flipLeft() {
    this.iterator.previous(), this.flipCallback();
  }
  /**
   * Focuses next flipper iterator item
   */
  flipRight() {
    this.iterator.next(), this.flipCallback();
  }
  /**
   * Return true if some button is focused
   */
  hasFocus() {
    return !!this.iterator.currentItem;
  }
  /**
   * Registeres function that should be executed on each navigation action
   *
   * @param cb - function to execute
   */
  onFlip(e) {
    this.flipCallbacks.push(e);
  }
  /**
   * Unregisteres function that is executed on each navigation action
   *
   * @param cb - function to stop executing
   */
  removeOnFlip(e) {
    this.flipCallbacks = this.flipCallbacks.filter((t) => t !== e);
  }
  /**
   * Drops flipper's iterator cursor
   *
   * @see DomIterator#dropCursor
   */
  dropCursor() {
    this.iterator.dropCursor();
  }
  /**
   * This function is fired before handling flipper keycodes
   * The result of this function defines if it is need to be handled or not
   *
   * @param {KeyboardEvent} event - keydown keyboard event
   * @returns {boolean}
   */
  isEventReadyForHandling(e) {
    return this.activated && this.allowedKeys.includes(e.keyCode);
  }
  /**
   * When flipper is activated tab press will leaf the items
   *
   * @param {KeyboardEvent} event - tab keydown event
   */
  handleTabPress(e) {
    switch (e.shiftKey ? Ks.directions.LEFT : Ks.directions.RIGHT) {
      case Ks.directions.RIGHT:
        this.flipRight();
        break;
      case Ks.directions.LEFT:
        this.flipLeft();
        break;
    }
  }
  /**
   * Enter press will click current item if flipper is activated
   *
   * @param {KeyboardEvent} event - enter keydown event
   */
  handleEnterPress(e) {
    this.activated && (this.iterator.currentItem && (e.stopPropagation(), e.preventDefault(), this.iterator.currentItem.click()), Lt(this.activateCallback) && this.activateCallback(this.iterator.currentItem));
  }
  /**
   * Fired after flipping in any direction
   */
  flipCallback() {
    this.iterator.currentItem && this.iterator.currentItem.scrollIntoViewIfNeeded(), this.flipCallbacks.forEach((e) => e());
  }
}, bm = class Oa {
  /**
   * Styles
   */
  static get CSS() {
    return {
      wrapper: "cdx-search-field",
      icon: "cdx-search-field__icon",
      input: "cdx-search-field__input"
    };
  }
  /**
   * @param options - available config
   * @param options.items - searchable items list
   * @param options.onSearch - search callback
   * @param options.placeholder - input placeholder
   */
  constructor({ items: e, onSearch: t, placeholder: n }) {
    this.listeners = new uc(), this.items = e, this.onSearch = t, this.render(n);
  }
  /**
   * Returns search field element
   */
  getElement() {
    return this.wrapper;
  }
  /**
   * Sets focus to the input
   */
  focus() {
    this.input.focus();
  }
  /**
   * Clears search query and results
   */
  clear() {
    this.input.value = "", this.searchQuery = "", this.onSearch("", this.foundItems);
  }
  /**
   * Clears memory
   */
  destroy() {
    this.listeners.removeAll();
  }
  /**
   * Creates the search field
   *
   * @param placeholder - input placeholder
   */
  render(e) {
    this.wrapper = ae.make("div", Oa.CSS.wrapper);
    const t = ae.make("div", Oa.CSS.icon, {
      innerHTML: fm
    });
    this.input = ae.make("input", Oa.CSS.input, {
      placeholder: e,
      /**
       * Used to prevent focusing on the input by Tab key
       * (Popover in the Toolbar lays below the blocks,
       * so Tab in the last block will focus this hidden input if this property is not set)
       */
      tabIndex: -1
    }), this.wrapper.appendChild(t), this.wrapper.appendChild(this.input), this.listeners.on(this.input, "input", () => {
      this.searchQuery = this.input.value, this.onSearch(this.searchQuery, this.foundItems);
    });
  }
  /**
   * Returns list of found items for the current search query
   */
  get foundItems() {
    return this.items.filter((e) => this.checkItem(e));
  }
  /**
   * Contains logic for checking whether passed item conforms the search query
   *
   * @param item - item to be checked
   */
  checkItem(e) {
    var t;
    const n = ((t = e.title) == null ? void 0 : t.toLowerCase()) || "", r = this.searchQuery.toLowerCase();
    return n.includes(r);
  }
};
const Kh = class na {
  /**
   * Locks body element scroll
   */
  lock() {
    bd ? this.lockHard() : document.body.classList.add(na.CSS.scrollLocked);
  }
  /**
   * Unlocks body element scroll
   */
  unlock() {
    bd ? this.unlockHard() : document.body.classList.remove(na.CSS.scrollLocked);
  }
  /**
   * Locks scroll in a hard way (via setting fixed position to body element)
   */
  lockHard() {
    this.scrollPosition = window.pageYOffset, document.documentElement.style.setProperty(
      "--window-scroll-offset",
      `${this.scrollPosition}px`
    ), document.body.classList.add(na.CSS.scrollLockedHard);
  }
  /**
   * Unlocks hard scroll lock
   */
  unlockHard() {
    document.body.classList.remove(na.CSS.scrollLockedHard), this.scrollPosition !== null && window.scrollTo(0, this.scrollPosition), this.scrollPosition = null;
  }
};
Kh.CSS = {
  scrollLocked: "ce-scroll-locked",
  scrollLockedHard: "ce-scroll-locked--hard"
};
let vm = Kh;
var ym = Object.defineProperty, wm = Object.getOwnPropertyDescriptor, km = (o, e, t, n) => {
  for (var r = n > 1 ? void 0 : n ? wm(e, t) : e, a = o.length - 1, c; a >= 0; a--)
    (c = o[a]) && (r = (n ? c(e, t, r) : c(r)) || r);
  return n && r && ym(e, t, r), r;
}, la = /* @__PURE__ */ ((o) => (o.Close = "close", o))(la || {});
const Xh = class ho extends Qa {
  /**
   * Constructs the instance
   *
   * @param params - popover construction params
   */
  constructor(e) {
    super(), this.scopeElement = document.body, this.listeners = new uc(), this.scrollLocker = new vm(), this.nodes = {
      wrapper: null,
      popover: null,
      nothingFoundMessage: null,
      customContent: null,
      items: null,
      overlay: null
    }, this.messages = {
      nothingFound: "Nothing found",
      search: "Search"
    }, this.onFlip = () => {
      this.items.find((t) => t.isFocused).onFocus();
    }, this.items = e.items.map((t) => new wd(t)), e.scopeElement !== void 0 && (this.scopeElement = e.scopeElement), e.messages && (this.messages = {
      ...this.messages,
      ...e.messages
    }), e.customContentFlippableItems && (this.customContentFlippableItems = e.customContentFlippableItems), this.make(), e.customContent && this.addCustomContent(e.customContent), e.searchable && this.addSearch(), this.initializeFlipper();
  }
  /**
   * Popover CSS classes
   */
  static get CSS() {
    return {
      popover: "ce-popover",
      popoverOpenTop: "ce-popover--open-top",
      popoverOpened: "ce-popover--opened",
      search: "ce-popover__search",
      nothingFoundMessage: "ce-popover__nothing-found-message",
      nothingFoundMessageDisplayed: "ce-popover__nothing-found-message--displayed",
      customContent: "ce-popover__custom-content",
      customContentHidden: "ce-popover__custom-content--hidden",
      items: "ce-popover__items",
      overlay: "ce-popover__overlay",
      overlayHidden: "ce-popover__overlay--hidden"
    };
  }
  /**
   * Returns HTML element corresponding to the popover
   */
  getElement() {
    return this.nodes.wrapper;
  }
  /**
   * Returns true if some item inside popover is focused
   */
  hasFocus() {
    return this.flipper.hasFocus();
  }
  /**
   * Open popover
   */
  show() {
    this.shouldOpenBottom || (this.nodes.popover.style.setProperty("--popover-height", this.height + "px"), this.nodes.popover.classList.add(ho.CSS.popoverOpenTop)), this.nodes.overlay.classList.remove(ho.CSS.overlayHidden), this.nodes.popover.classList.add(ho.CSS.popoverOpened), this.flipper.activate(this.flippableElements), this.search !== void 0 && requestAnimationFrame(() => {
      var e;
      (e = this.search) == null || e.focus();
    }), Ir() && this.scrollLocker.lock();
  }
  /**
   * Closes popover
   */
  hide() {
    this.nodes.popover.classList.remove(ho.CSS.popoverOpened), this.nodes.popover.classList.remove(ho.CSS.popoverOpenTop), this.nodes.overlay.classList.add(ho.CSS.overlayHidden), this.flipper.deactivate(), this.items.forEach((e) => e.reset()), this.search !== void 0 && this.search.clear(), Ir() && this.scrollLocker.unlock(), this.emit(
      "close"
      /* Close */
    );
  }
  /**
   * Clears memory
   */
  destroy() {
    this.flipper.deactivate(), this.listeners.removeAll(), Ir() && this.scrollLocker.unlock();
  }
  /**
   * Constructs HTML element corresponding to popover
   */
  make() {
    this.nodes.popover = ae.make("div", [ho.CSS.popover]), this.nodes.nothingFoundMessage = ae.make("div", [ho.CSS.nothingFoundMessage], {
      textContent: this.messages.nothingFound
    }), this.nodes.popover.appendChild(this.nodes.nothingFoundMessage), this.nodes.items = ae.make("div", [ho.CSS.items]), this.items.forEach((e) => {
      this.nodes.items.appendChild(e.getElement());
    }), this.nodes.popover.appendChild(this.nodes.items), this.listeners.on(this.nodes.popover, "click", (e) => {
      const t = this.getTargetItem(e);
      t !== void 0 && this.handleItemClick(t);
    }), this.nodes.wrapper = ae.make("div"), this.nodes.overlay = ae.make("div", [ho.CSS.overlay, ho.CSS.overlayHidden]), this.listeners.on(this.nodes.overlay, "click", () => {
      this.hide();
    }), this.nodes.wrapper.appendChild(this.nodes.overlay), this.nodes.wrapper.appendChild(this.nodes.popover);
  }
  /**
   * Adds search to the popover
   */
  addSearch() {
    this.search = new bm({
      items: this.items,
      placeholder: this.messages.search,
      onSearch: (t, n) => {
        this.items.forEach((a) => {
          const c = !n.includes(a);
          a.toggleHidden(c);
        }), this.toggleNothingFoundMessage(n.length === 0), this.toggleCustomContent(t !== "");
        const r = t === "" ? this.flippableElements : n.map((a) => a.getElement());
        this.flipper.isActivated && (this.flipper.deactivate(), this.flipper.activate(r));
      }
    });
    const e = this.search.getElement();
    e.classList.add(ho.CSS.search), this.nodes.popover.insertBefore(e, this.nodes.popover.firstChild);
  }
  /**
   * Adds custom html content to the popover
   *
   * @param content - html content to append
   */
  addCustomContent(e) {
    this.nodes.customContent = e, this.nodes.customContent.classList.add(ho.CSS.customContent), this.nodes.popover.insertBefore(e, this.nodes.popover.firstChild);
  }
  /**
   * Retrieves popover item that is the target of the specified event
   *
   * @param event - event to retrieve popover item from
   */
  getTargetItem(e) {
    return this.items.find((t) => e.composedPath().includes(t.getElement()));
  }
  /**
   * Handles item clicks
   *
   * @param item - item to handle click of
   */
  handleItemClick(e) {
    e.isDisabled || (this.items.filter((t) => t !== e).forEach((t) => t.reset()), e.handleClick(), this.toggleItemActivenessIfNeeded(e), e.closeOnActivate && this.hide());
  }
  /**
   * Creates Flipper instance which allows to navigate between popover items via keyboard
   */
  initializeFlipper() {
    this.flipper = new ks({
      items: this.flippableElements,
      focusedItemClass: wd.CSS.focused,
      allowedKeys: [
        Fe.TAB,
        Fe.UP,
        Fe.DOWN,
        Fe.ENTER
      ]
    }), this.flipper.onFlip(this.onFlip);
  }
  /**
   * Returns list of elements available for keyboard navigation.
   * Contains both usual popover items elements and custom html content.
   */
  get flippableElements() {
    const e = this.items.map((t) => t.getElement());
    return (this.customContentFlippableItems || []).concat(e);
  }
  get height() {
    let e = 0;
    if (this.nodes.popover === null)
      return e;
    const t = this.nodes.popover.cloneNode(!0);
    return t.style.visibility = "hidden", t.style.position = "absolute", t.style.top = "-1000px", t.classList.add(ho.CSS.popoverOpened), document.body.appendChild(t), e = t.offsetHeight, t.remove(), e;
  }
  /**
   * Checks if popover should be opened bottom.
   * It should happen when there is enough space below or not enough space above
   */
  get shouldOpenBottom() {
    const e = this.nodes.popover.getBoundingClientRect(), t = this.scopeElement.getBoundingClientRect(), n = this.height, r = e.top + n, a = e.top - n, c = Math.min(window.innerHeight, t.bottom);
    return a < t.top || r <= c;
  }
  /**
   * Toggles nothing found message visibility
   *
   * @param isDisplayed - true if the message should be displayed
   */
  toggleNothingFoundMessage(e) {
    this.nodes.nothingFoundMessage.classList.toggle(ho.CSS.nothingFoundMessageDisplayed, e);
  }
  /**
   * Toggles custom content visibility
   *
   * @param isDisplayed - true if custom content should be displayed
   */
  toggleCustomContent(e) {
    var t;
    (t = this.nodes.customContent) == null || t.classList.toggle(ho.CSS.customContentHidden, e);
  }
  /**
   * - Toggles item active state, if clicked popover item has property 'toggle' set to true.
   *
   * - Performs radiobutton-like behavior if the item has property 'toggle' set to string key.
   * (All the other items with the same key get inactive, and the item gets active)
   *
   * @param clickedItem - popover item that was clicked
   */
  toggleItemActivenessIfNeeded(e) {
    if (e.toggle === !0 && e.toggleActive(), typeof e.toggle == "string") {
      const t = this.items.filter((n) => n.toggle === e.toggle);
      if (t.length === 1) {
        e.toggleActive();
        return;
      }
      t.forEach((n) => {
        n.toggleActive(n === e);
      });
    }
  }
};
km([
  Cs
], Xh.prototype, "height", 1);
let Jh = Xh, xm = class extends it {
  constructor() {
    super(...arguments), this.opened = !1, this.selection = new Ye(), this.onPopoverClose = () => {
      this.close();
    };
  }
  /**
   * Module Events
   *
   * @returns {{opened: string, closed: string}}
   */
  get events() {
    return {
      opened: "block-settings-opened",
      closed: "block-settings-closed"
    };
  }
  /**
   * Block Settings CSS
   */
  get CSS() {
    return {
      settings: "ce-settings"
    };
  }
  /**
   * Getter for inner popover's flipper instance
   *
   * @todo remove once BlockSettings becomes standalone non-module class
   */
  get flipper() {
    var e;
    return (e = this.popover) == null ? void 0 : e.flipper;
  }
  /**
   * Panel with block settings with 2 sections:
   *  - Tool's Settings
   *  - Default Settings [Move, Remove, etc]
   */
  make() {
    this.nodes.wrapper = ae.make("div", [this.CSS.settings]);
  }
  /**
   * Destroys module
   */
  destroy() {
    this.removeAllNodes();
  }
  /**
   * Open Block Settings pane
   *
   * @param targetBlock - near which Block we should open BlockSettings
   */
  open(e = this.Editor.BlockManager.currentBlock) {
    this.opened = !0, this.selection.save(), this.Editor.BlockSelection.selectBlock(e), this.Editor.BlockSelection.clearCache();
    const [t, n] = e.getTunes();
    this.eventsDispatcher.emit(this.events.opened), this.popover = new Jh({
      searchable: !0,
      items: t.map((r) => this.resolveTuneAliases(r)),
      customContent: n,
      customContentFlippableItems: this.getControls(n),
      scopeElement: this.Editor.API.methods.ui.nodes.redactor,
      messages: {
        nothingFound: Jo.ui(Sn.ui.popover, "Nothing found"),
        search: Jo.ui(Sn.ui.popover, "Filter")
      }
    }), this.popover.on(la.Close, this.onPopoverClose), this.nodes.wrapper.append(this.popover.getElement()), this.popover.show();
  }
  /**
   * Returns root block settings element
   */
  getElement() {
    return this.nodes.wrapper;
  }
  /**
   * Close Block Settings pane
   */
  close() {
    this.opened && (this.opened = !1, Ye.isAtEditor || this.selection.restore(), this.selection.clearSaved(), !this.Editor.CrossBlockSelection.isCrossBlockSelectionStarted && this.Editor.BlockManager.currentBlock && this.Editor.BlockSelection.unselectBlock(this.Editor.BlockManager.currentBlock), this.eventsDispatcher.emit(this.events.closed), this.popover && (this.popover.off(la.Close, this.onPopoverClose), this.popover.destroy(), this.popover.getElement().remove(), this.popover = null));
  }
  /**
   * Returns list of buttons and inputs inside specified container
   *
   * @param container - container to query controls inside of
   */
  getControls(e) {
    const { StylesAPI: t } = this.Editor, n = e.querySelectorAll(
      `.${t.classes.settingsButton}, ${ae.allInputsSelector}`
    );
    return Array.from(n);
  }
  /**
   * Resolves aliases in tunes menu items
   *
   * @param item - item with resolved aliases
   */
  resolveTuneAliases(e) {
    const t = sm(e, { label: "title" });
    return e.confirmation && (t.confirmation = this.resolveTuneAliases(e.confirmation)), t;
  }
}, Cm = class sn extends it {
  constructor() {
    super(...arguments), this.opened = !1, this.tools = [], this.flipper = null, this.togglingCallback = null;
  }
  /**
   * CSS getter
   */
  static get CSS() {
    return {
      conversionToolbarWrapper: "ce-conversion-toolbar",
      conversionToolbarShowed: "ce-conversion-toolbar--showed",
      conversionToolbarTools: "ce-conversion-toolbar__tools",
      conversionToolbarLabel: "ce-conversion-toolbar__label",
      conversionTool: "ce-conversion-tool",
      conversionToolHidden: "ce-conversion-tool--hidden",
      conversionToolIcon: "ce-conversion-tool__icon",
      conversionToolSecondaryLabel: "ce-conversion-tool__secondary-label",
      conversionToolFocused: "ce-conversion-tool--focused",
      conversionToolActive: "ce-conversion-tool--active"
    };
  }
  /**
   * Create UI of Conversion Toolbar
   */
  make() {
    this.nodes.wrapper = ae.make("div", [
      sn.CSS.conversionToolbarWrapper,
      ...this.isRtl ? [this.Editor.UI.CSS.editorRtlFix] : []
    ]), this.nodes.tools = ae.make("div", sn.CSS.conversionToolbarTools);
    const e = ae.make("div", sn.CSS.conversionToolbarLabel, {
      textContent: Jo.ui(Sn.ui.inlineToolbar.converter, "Convert to")
    });
    return this.addTools(), this.enableFlipper(), ae.append(this.nodes.wrapper, e), ae.append(this.nodes.wrapper, this.nodes.tools), this.nodes.wrapper;
  }
  /**
   * Deactivates flipper and removes all nodes
   */
  destroy() {
    this.flipper && (this.flipper.deactivate(), this.flipper = null), this.removeAllNodes();
  }
  /**
   * Toggle conversion dropdown visibility
   *
   * @param {Function} [togglingCallback] — callback that will accept opening state
   */
  toggle(e) {
    this.opened ? this.close() : this.open(), Lt(e) && (this.togglingCallback = e);
  }
  /**
   * Shows Conversion Toolbar
   */
  open() {
    this.filterTools(), this.opened = !0, this.nodes.wrapper.classList.add(sn.CSS.conversionToolbarShowed), window.requestAnimationFrame(() => {
      this.flipper.activate(this.tools.map((e) => e.button).filter((e) => !e.classList.contains(sn.CSS.conversionToolHidden))), this.flipper.focusFirst(), Lt(this.togglingCallback) && this.togglingCallback(!0);
    });
  }
  /**
   * Closes Conversion Toolbar
   */
  close() {
    this.opened = !1, this.flipper.deactivate(), this.nodes.wrapper.classList.remove(sn.CSS.conversionToolbarShowed), Lt(this.togglingCallback) && this.togglingCallback(!1);
  }
  /**
   * Returns true if it has more than one tool available for convert in
   */
  hasTools() {
    return this.tools.length === 1 ? this.tools[0].name !== this.config.defaultBlock : !0;
  }
  /**
   * Replaces one Block with another
   * For that Tools must provide import/export methods
   *
   * @param {string} replacingToolName - name of Tool which replaces current
   * @param blockDataOverrides - If this conversion fired by the one of multiple Toolbox items, extend converted data with this item's "data" overrides
   */
  async replaceWithBlock(e, t) {
    const { BlockManager: n, BlockSelection: r, InlineToolbar: a, Caret: c } = this.Editor;
    n.convert(this.Editor.BlockManager.currentBlock, e, t), r.clearSelection(), this.close(), a.close(), window.requestAnimationFrame(() => {
      c.setToBlock(this.Editor.BlockManager.currentBlock, c.positions.END);
    });
  }
  /**
   * Iterates existing Tools and inserts to the ConversionToolbar
   * if tools have ability to import
   */
  addTools() {
    const e = this.Editor.Tools.blockTools;
    Array.from(e.entries()).forEach(([t, n]) => {
      var r;
      const a = n.conversionConfig;
      !a || !a.import || (r = n.toolbox) == null || r.forEach(
        (c) => this.addToolIfValid(t, c)
      );
    });
  }
  /**
   * Inserts a tool to the ConversionToolbar if the tool's toolbox config is valid
   *
   * @param name - tool's name
   * @param toolboxSettings - tool's single toolbox setting
   */
  addToolIfValid(e, t) {
    cn(t) || !t.icon || this.addTool(e, t);
  }
  /**
   * Add tool to the Conversion Toolbar
   *
   * @param toolName - name of Tool to add
   * @param toolboxItem - tool's toolbox item data
   */
  addTool(e, t) {
    var n;
    const r = ae.make("div", [sn.CSS.conversionTool]), a = ae.make("div", [sn.CSS.conversionToolIcon]);
    r.dataset.tool = e, a.innerHTML = t.icon, ae.append(r, a), ae.append(r, ae.text(Jo.t(Sn.toolNames, t.title || ws(e))));
    const c = (n = this.Editor.Tools.blockTools.get(e)) == null ? void 0 : n.shortcut;
    if (c) {
      const u = ae.make("span", sn.CSS.conversionToolSecondaryLabel, {
        innerText: Ja(c)
      });
      ae.append(r, u);
    }
    ae.append(this.nodes.tools, r), this.tools.push({
      name: e,
      button: r,
      toolboxItem: t
    }), this.listeners.on(r, "click", async () => {
      await this.replaceWithBlock(e, t.data);
    });
  }
  /**
   * Hide current Tool and show others
   */
  async filterTools() {
    const { currentBlock: e } = this.Editor.BlockManager, t = await e.getActiveToolboxEntry();
    function n(r, a) {
      return r.icon === a.icon && r.title === a.title;
    }
    this.tools.forEach((r) => {
      let a = !1;
      if (t) {
        const c = n(t, r.toolboxItem);
        a = r.button.dataset.tool === e.name && c;
      }
      r.button.hidden = a, r.button.classList.toggle(sn.CSS.conversionToolHidden, a);
    });
  }
  /**
   * Prepare Flipper to be able to leaf tools by arrows/tab
   */
  enableFlipper() {
    this.flipper = new ks({
      focusedItemClass: sn.CSS.conversionToolFocused
    });
  }
};
var Qh = { exports: {} };
/*!
 * Library for handling keyboard shortcuts
 * @copyright CodeX (https://codex.so)
 * @license MIT
 * @author CodeX (https://codex.so)
 * @version 1.2.0
 */
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(window, function() {
    return function(t) {
      var n = {};
      function r(a) {
        if (n[a])
          return n[a].exports;
        var c = n[a] = { i: a, l: !1, exports: {} };
        return t[a].call(c.exports, c, c.exports, r), c.l = !0, c.exports;
      }
      return r.m = t, r.c = n, r.d = function(a, c, u) {
        r.o(a, c) || Object.defineProperty(a, c, { enumerable: !0, get: u });
      }, r.r = function(a) {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(a, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(a, "__esModule", { value: !0 });
      }, r.t = function(a, c) {
        if (1 & c && (a = r(a)), 8 & c || 4 & c && typeof a == "object" && a && a.__esModule)
          return a;
        var u = /* @__PURE__ */ Object.create(null);
        if (r.r(u), Object.defineProperty(u, "default", { enumerable: !0, value: a }), 2 & c && typeof a != "string")
          for (var p in a)
            r.d(u, p, (function(g) {
              return a[g];
            }).bind(null, p));
        return u;
      }, r.n = function(a) {
        var c = a && a.__esModule ? function() {
          return a.default;
        } : function() {
          return a;
        };
        return r.d(c, "a", c), c;
      }, r.o = function(a, c) {
        return Object.prototype.hasOwnProperty.call(a, c);
      }, r.p = "", r(r.s = 0);
    }([function(t, n, r) {
      function a(p, g) {
        for (var v = 0; v < g.length; v++) {
          var x = g[v];
          x.enumerable = x.enumerable || !1, x.configurable = !0, "value" in x && (x.writable = !0), Object.defineProperty(p, x.key, x);
        }
      }
      function c(p, g, v) {
        return g && a(p.prototype, g), v && a(p, v), p;
      }
      r.r(n);
      var u = function() {
        function p(g) {
          var v = this;
          (function(x, y) {
            if (!(x instanceof y))
              throw new TypeError("Cannot call a class as a function");
          })(this, p), this.commands = {}, this.keys = {}, this.name = g.name, this.parseShortcutName(g.name), this.element = g.on, this.callback = g.callback, this.executeShortcut = function(x) {
            v.execute(x);
          }, this.element.addEventListener("keydown", this.executeShortcut, !1);
        }
        return c(p, null, [{ key: "supportedCommands", get: function() {
          return { SHIFT: ["SHIFT"], CMD: ["CMD", "CONTROL", "COMMAND", "WINDOWS", "CTRL"], ALT: ["ALT", "OPTION"] };
        } }, { key: "keyCodes", get: function() {
          return { 0: 48, 1: 49, 2: 50, 3: 51, 4: 52, 5: 53, 6: 54, 7: 55, 8: 56, 9: 57, A: 65, B: 66, C: 67, D: 68, E: 69, F: 70, G: 71, H: 72, I: 73, J: 74, K: 75, L: 76, M: 77, N: 78, O: 79, P: 80, Q: 81, R: 82, S: 83, T: 84, U: 85, V: 86, W: 87, X: 88, Y: 89, Z: 90, BACKSPACE: 8, ENTER: 13, ESCAPE: 27, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, INSERT: 45, DELETE: 46, ".": 190 };
        } }]), c(p, [{ key: "parseShortcutName", value: function(g) {
          g = g.split("+");
          for (var v = 0; v < g.length; v++) {
            g[v] = g[v].toUpperCase();
            var x = !1;
            for (var y in p.supportedCommands)
              if (p.supportedCommands[y].includes(g[v])) {
                x = this.commands[y] = !0;
                break;
              }
            x || (this.keys[g[v]] = !0);
          }
          for (var T in p.supportedCommands)
            this.commands[T] || (this.commands[T] = !1);
        } }, { key: "execute", value: function(g) {
          var v, x = { CMD: g.ctrlKey || g.metaKey, SHIFT: g.shiftKey, ALT: g.altKey }, y = !0;
          for (v in this.commands)
            this.commands[v] !== x[v] && (y = !1);
          var T, k = !0;
          for (T in this.keys)
            k = k && g.keyCode === p.keyCodes[T];
          y && k && this.callback(g);
        } }, { key: "remove", value: function() {
          this.element.removeEventListener("keydown", this.executeShortcut);
        } }]), p;
      }();
      n.default = u;
    }]).default;
  });
})(Qh);
var Sm = Qh.exports;
const Tm = /* @__PURE__ */ Xa(Sm);
let _m = class {
  constructor() {
    this.registeredShortcuts = /* @__PURE__ */ new Map();
  }
  /**
   * Register shortcut
   *
   * @param shortcut - shortcut options
   */
  add(e) {
    if (this.findShortcut(e.on, e.name))
      throw Error(
        `Shortcut ${e.name} is already registered for ${e.on}. Please remove it before add a new handler.`
      );
    const t = new Tm({
      name: e.name,
      on: e.on,
      callback: e.handler
    }), n = this.registeredShortcuts.get(e.on) || [];
    this.registeredShortcuts.set(e.on, [...n, t]);
  }
  /**
   * Remove shortcut
   *
   * @param element - Element shortcut is set for
   * @param name - shortcut name
   */
  remove(e, t) {
    const n = this.findShortcut(e, t);
    if (!n)
      return;
    n.remove();
    const r = this.registeredShortcuts.get(e);
    this.registeredShortcuts.set(e, r.filter((a) => a !== n));
  }
  /**
   * Get Shortcut instance if exist
   *
   * @param element - Element shorcut is set for
   * @param shortcut - shortcut name
   * @returns {number} index - shortcut index if exist
   */
  findShortcut(e, t) {
    return (this.registeredShortcuts.get(e) || []).find(({ name: n }) => n === t);
  }
};
const xs = new _m();
var Em = Object.defineProperty, Mm = Object.getOwnPropertyDescriptor, eu = (o, e, t, n) => {
  for (var r = n > 1 ? void 0 : n ? Mm(e, t) : e, a = o.length - 1, c; a >= 0; a--)
    (c = o[a]) && (r = (n ? c(e, t, r) : c(r)) || r);
  return n && r && Em(e, t, r), r;
}, La = /* @__PURE__ */ ((o) => (o.Opened = "toolbox-opened", o.Closed = "toolbox-closed", o.BlockAdded = "toolbox-block-added", o))(La || {});
const gc = class tu extends Qa {
  /**
   * Toolbox constructor
   *
   * @param options - available parameters
   * @param options.api - Editor API methods
   * @param options.tools - Tools available to check whether some of them should be displayed at the Toolbox or not
   */
  constructor({ api: e, tools: t, i18nLabels: n }) {
    super(), this.opened = !1, this.nodes = {
      toolbox: null
    }, this.onPopoverClose = () => {
      this.opened = !1, this.emit(
        "toolbox-closed"
        /* Closed */
      );
    }, this.api = e, this.tools = t, this.i18nLabels = n;
  }
  /**
   * Returns True if Toolbox is Empty and nothing to show
   *
   * @returns {boolean}
   */
  get isEmpty() {
    return this.toolsToBeDisplayed.length === 0;
  }
  /**
   * CSS styles
   *
   * @returns {Object<string, string>}
   */
  static get CSS() {
    return {
      toolbox: "ce-toolbox"
    };
  }
  /**
   * Makes the Toolbox
   */
  make() {
    return this.popover = new Jh({
      scopeElement: this.api.ui.nodes.redactor,
      searchable: !0,
      messages: {
        nothingFound: this.i18nLabels.nothingFound,
        search: this.i18nLabels.filter
      },
      items: this.toolboxItemsToBeDisplayed
    }), this.popover.on(la.Close, this.onPopoverClose), this.enableShortcuts(), this.nodes.toolbox = this.popover.getElement(), this.nodes.toolbox.classList.add(tu.CSS.toolbox), this.nodes.toolbox;
  }
  /**
   * Returns true if the Toolbox has the Flipper activated and the Flipper has selected button
   */
  hasFocus() {
    var e;
    return (e = this.popover) == null ? void 0 : e.hasFocus();
  }
  /**
   * Destroy Module
   */
  destroy() {
    var e;
    super.destroy(), this.nodes && this.nodes.toolbox && (this.nodes.toolbox.remove(), this.nodes.toolbox = null), this.removeAllShortcuts(), (e = this.popover) == null || e.off(la.Close, this.onPopoverClose);
  }
  /**
   * Toolbox Tool's button click handler
   *
   * @param toolName - tool type to be activated
   * @param blockDataOverrides - Block data predefined by the activated Toolbox item
   */
  toolButtonActivated(e, t) {
    this.insertNewBlock(e, t);
  }
  /**
   * Open Toolbox with Tools
   */
  open() {
    var e;
    this.isEmpty || ((e = this.popover) == null || e.show(), this.opened = !0, this.emit(
      "toolbox-opened"
      /* Opened */
    ));
  }
  /**
   * Close Toolbox
   */
  close() {
    var e;
    (e = this.popover) == null || e.hide(), this.opened = !1, this.emit(
      "toolbox-closed"
      /* Closed */
    );
  }
  /**
   * Close Toolbox
   */
  toggle() {
    this.opened ? this.close() : this.open();
  }
  get toolsToBeDisplayed() {
    const e = [];
    return this.tools.forEach((t) => {
      t.toolbox && e.push(t);
    }), e;
  }
  get toolboxItemsToBeDisplayed() {
    const e = (t, n) => ({
      icon: t.icon,
      title: Jo.t(Sn.toolNames, t.title || ws(n.name)),
      name: n.name,
      onActivate: () => {
        this.toolButtonActivated(n.name, t.data);
      },
      secondaryLabel: n.shortcut ? Ja(n.shortcut) : ""
    });
    return this.toolsToBeDisplayed.reduce((t, n) => (Array.isArray(n.toolbox) ? n.toolbox.forEach((r) => {
      t.push(e(r, n));
    }) : n.toolbox !== void 0 && t.push(e(n.toolbox, n)), t), []);
  }
  /**
   * Iterate all tools and enable theirs shortcuts if specified
   */
  enableShortcuts() {
    this.toolsToBeDisplayed.forEach((e) => {
      const t = e.shortcut;
      t && this.enableShortcutForTool(e.name, t);
    });
  }
  /**
   * Enable shortcut Block Tool implemented shortcut
   *
   * @param {string} toolName - Tool name
   * @param {string} shortcut - shortcut according to the ShortcutData Module format
   */
  enableShortcutForTool(e, t) {
    xs.add({
      name: t,
      on: this.api.ui.nodes.redactor,
      handler: (n) => {
        n.preventDefault();
        const r = this.api.blocks.getCurrentBlockIndex(), a = this.api.blocks.getBlockByIndex(r);
        if (a)
          try {
            this.api.blocks.convert(a.id, e), window.requestAnimationFrame(() => {
              this.api.caret.setToBlock(r, "end");
            });
            return;
          } catch {
          }
        this.insertNewBlock(e);
      }
    });
  }
  /**
   * Removes all added shortcuts
   * Fired when the Read-Only mode is activated
   */
  removeAllShortcuts() {
    this.toolsToBeDisplayed.forEach((e) => {
      const t = e.shortcut;
      t && xs.remove(this.api.ui.nodes.redactor, t);
    });
  }
  /**
   * Inserts new block
   * Can be called when button clicked on Toolbox or by ShortcutData
   *
   * @param {string} toolName - Tool name
   * @param blockDataOverrides - predefined Block data
   */
  async insertNewBlock(e, t) {
    const n = this.api.blocks.getCurrentBlockIndex(), r = this.api.blocks.getBlockByIndex(n);
    if (!r)
      return;
    const a = r.isEmpty ? n : n + 1;
    let c;
    if (t) {
      const p = await this.api.blocks.composeBlockData(e);
      c = Object.assign(p, t);
    }
    const u = this.api.blocks.insert(
      e,
      c,
      void 0,
      a,
      void 0,
      r.isEmpty
    );
    u.call(mi.APPEND_CALLBACK), this.api.caret.setToBlock(a), this.emit("toolbox-block-added", {
      block: u
    }), this.api.toolbar.close();
  }
};
eu([
  Cs
], gc.prototype, "toolsToBeDisplayed", 1);
eu([
  Cs
], gc.prototype, "toolboxItemsToBeDisplayed", 1);
let Dm = gc;
const ou = "block hovered";
let Om = class extends it {
  /**
   * @class
   * @param moduleConfiguration - Module Configuration
   * @param moduleConfiguration.config - Editor's config
   * @param moduleConfiguration.eventsDispatcher - Editor's event dispatcher
   */
  constructor({ config: e, eventsDispatcher: t }) {
    super({
      config: e,
      eventsDispatcher: t
    }), this.toolboxInstance = null;
  }
  /**
   * CSS styles
   *
   * @returns {object}
   */
  get CSS() {
    return {
      toolbar: "ce-toolbar",
      content: "ce-toolbar__content",
      actions: "ce-toolbar__actions",
      actionsOpened: "ce-toolbar__actions--opened",
      toolbarOpened: "ce-toolbar--opened",
      openedToolboxHolderModifier: "codex-editor--toolbox-opened",
      plusButton: "ce-toolbar__plus",
      plusButtonShortcut: "ce-toolbar__plus-shortcut",
      settingsToggler: "ce-toolbar__settings-btn",
      settingsTogglerHidden: "ce-toolbar__settings-btn--hidden"
    };
  }
  /**
   * Returns the Toolbar opening state
   *
   * @returns {boolean}
   */
  get opened() {
    return this.nodes.wrapper.classList.contains(this.CSS.toolbarOpened);
  }
  /**
   * Public interface for accessing the Toolbox
   */
  get toolbox() {
    var e;
    return {
      opened: (e = this.toolboxInstance) == null ? void 0 : e.opened,
      close: () => {
        var t;
        (t = this.toolboxInstance) == null || t.close();
      },
      open: () => {
        if (this.toolboxInstance === null) {
          gt("toolbox.open() called before initialization is finished", "warn");
          return;
        }
        this.Editor.BlockManager.currentBlock = this.hoveredBlock, this.toolboxInstance.open();
      },
      toggle: () => {
        if (this.toolboxInstance === null) {
          gt("toolbox.toggle() called before initialization is finished", "warn");
          return;
        }
        this.toolboxInstance.toggle();
      },
      hasFocus: () => {
        var t;
        return (t = this.toolboxInstance) == null ? void 0 : t.hasFocus();
      }
    };
  }
  /**
   * Block actions appearance manipulations
   */
  get blockActions() {
    return {
      hide: () => {
        this.nodes.actions.classList.remove(this.CSS.actionsOpened);
      },
      show: () => {
        this.nodes.actions.classList.add(this.CSS.actionsOpened);
      }
    };
  }
  /**
   * Methods for working with Block Tunes toggler
   */
  get blockTunesToggler() {
    return {
      hide: () => this.nodes.settingsToggler.classList.add(this.CSS.settingsTogglerHidden),
      show: () => this.nodes.settingsToggler.classList.remove(this.CSS.settingsTogglerHidden)
    };
  }
  /**
   * Toggles read-only mode
   *
   * @param {boolean} readOnlyEnabled - read-only mode
   */
  toggleReadOnly(e) {
    e ? (this.destroy(), this.Editor.BlockSettings.destroy(), this.disableModuleBindings()) : window.requestIdleCallback(() => {
      this.drawUI(), this.enableModuleBindings();
    }, { timeout: 2e3 });
  }
  /**
   * Move Toolbar to the passed (or current) Block
   *
   * @param block - block to move Toolbar near it
   */
  moveAndOpen(e = this.Editor.BlockManager.currentBlock) {
    if (this.toolboxInstance === null) {
      gt("Can't open Toolbar since Editor initialization is not finished yet", "warn");
      return;
    }
    if (this.toolboxInstance.opened && this.toolboxInstance.close(), this.Editor.BlockSettings.opened && this.Editor.BlockSettings.close(), !e)
      return;
    this.hoveredBlock = e;
    const t = e.holder, { isMobile: n } = this.Editor.UI, r = e.pluginsContent, a = window.getComputedStyle(r), c = parseInt(a.paddingTop, 10), u = t.offsetHeight;
    let p;
    n ? p = t.offsetTop + u : p = t.offsetTop + c, this.nodes.wrapper.style.top = `${Math.floor(p)}px`, this.Editor.BlockManager.blocks.length === 1 && e.isEmpty ? this.blockTunesToggler.hide() : this.blockTunesToggler.show(), this.open();
  }
  /**
   * Close the Toolbar
   */
  close() {
    var e, t;
    this.Editor.ReadOnly.isEnabled || ((e = this.nodes.wrapper) == null || e.classList.remove(this.CSS.toolbarOpened), this.blockActions.hide(), (t = this.toolboxInstance) == null || t.close(), this.Editor.BlockSettings.close(), this.reset());
  }
  /**
   * Reset the Toolbar position to prevent DOM height growth, for example after blocks deletion
   */
  reset() {
    this.nodes.wrapper.style.top = "unset";
  }
  /**
   * Open Toolbar with Plus Button and Actions
   *
   * @param {boolean} withBlockActions - by default, Toolbar opens with Block Actions.
   *                                     This flag allows to open Toolbar without Actions.
   */
  open(e = !0) {
    this.nodes.wrapper.classList.add(this.CSS.toolbarOpened), e ? this.blockActions.show() : this.blockActions.hide();
  }
  /**
   * Draws Toolbar elements
   */
  make() {
    this.nodes.wrapper = ae.make("div", this.CSS.toolbar), ["content", "actions"].forEach((r) => {
      this.nodes[r] = ae.make("div", this.CSS[r]);
    }), ae.append(this.nodes.wrapper, this.nodes.content), ae.append(this.nodes.content, this.nodes.actions), this.nodes.plusButton = ae.make("div", this.CSS.plusButton, {
      innerHTML: pm
    }), ae.append(this.nodes.actions, this.nodes.plusButton), this.readOnlyMutableListeners.on(this.nodes.plusButton, "click", () => {
      Vl(!0), this.plusButtonClicked();
    }, !1);
    const e = ae.make("div");
    e.appendChild(document.createTextNode(Jo.ui(Sn.ui.toolbar.toolbox, "Add"))), e.appendChild(ae.make("div", this.CSS.plusButtonShortcut, {
      textContent: "/"
    })), aa(this.nodes.plusButton, e, {
      hidingDelay: 400
    }), this.nodes.settingsToggler = ae.make("span", this.CSS.settingsToggler, {
      innerHTML: um
    }), ae.append(this.nodes.actions, this.nodes.settingsToggler);
    const t = ae.make("div"), n = ae.text(Jo.ui(Sn.ui.blockTunes.toggler, "Click to tune"));
    t.appendChild(n), t.appendChild(ae.make("div", this.CSS.plusButtonShortcut, {
      textContent: Ja("CMD + /")
    })), aa(this.nodes.settingsToggler, t, {
      hidingDelay: 400
    }), ae.append(this.nodes.actions, this.makeToolbox()), ae.append(this.nodes.actions, this.Editor.BlockSettings.getElement()), ae.append(this.Editor.UI.nodes.wrapper, this.nodes.wrapper);
  }
  /**
   * Creates the Toolbox instance and return it's rendered element
   */
  makeToolbox() {
    return this.toolboxInstance = new Dm({
      api: this.Editor.API.methods,
      tools: this.Editor.Tools.blockTools,
      i18nLabels: {
        filter: Jo.ui(Sn.ui.popover, "Filter"),
        nothingFound: Jo.ui(Sn.ui.popover, "Nothing found")
      }
    }), this.toolboxInstance.on(La.Opened, () => {
      this.Editor.UI.nodes.wrapper.classList.add(this.CSS.openedToolboxHolderModifier);
    }), this.toolboxInstance.on(La.Closed, () => {
      this.Editor.UI.nodes.wrapper.classList.remove(this.CSS.openedToolboxHolderModifier);
    }), this.toolboxInstance.on(La.BlockAdded, ({ block: e }) => {
      const { BlockManager: t, Caret: n } = this.Editor, r = t.getBlockById(e.id);
      r.inputs.length === 0 && (r === t.lastBlock ? (t.insertAtEnd(), n.setToBlock(t.lastBlock)) : n.setToBlock(t.nextBlock));
    }), this.toolboxInstance.make();
  }
  /**
   * Handler for Plus Button
   */
  plusButtonClicked() {
    var e;
    this.Editor.BlockManager.currentBlock = this.hoveredBlock, (e = this.toolboxInstance) == null || e.toggle();
  }
  /**
   * Enable bindings
   */
  enableModuleBindings() {
    this.readOnlyMutableListeners.on(this.nodes.settingsToggler, "mousedown", (e) => {
      var t;
      e.stopPropagation(), this.settingsTogglerClicked(), (t = this.toolboxInstance) != null && t.opened && this.toolboxInstance.close(), Vl(!0);
    }, !0), Ir() || this.eventsDispatcher.on(ou, (e) => {
      var t;
      this.Editor.BlockSettings.opened || (t = this.toolboxInstance) != null && t.opened || this.moveAndOpen(e.block);
    });
  }
  /**
   * Disable bindings
   */
  disableModuleBindings() {
    this.readOnlyMutableListeners.clearAll();
  }
  /**
   * Clicks on the Block Settings toggler
   */
  settingsTogglerClicked() {
    this.Editor.BlockManager.currentBlock = this.hoveredBlock, this.Editor.BlockSettings.opened ? this.Editor.BlockSettings.close() : this.Editor.BlockSettings.open(this.hoveredBlock);
  }
  /**
   * Draws Toolbar UI
   *
   * Toolbar contains BlockSettings and Toolbox.
   * That's why at first we draw its components and then Toolbar itself
   *
   * Steps:
   *  - Make Toolbar dependent components like BlockSettings, Toolbox and so on
   *  - Make itself and append dependent nodes to itself
   *
   */
  drawUI() {
    this.Editor.BlockSettings.make(), this.make();
  }
  /**
   * Removes all created and saved HTMLElements
   * It is used in Read-Only mode
   */
  destroy() {
    this.removeAllNodes(), this.toolboxInstance && this.toolboxInstance.destroy();
  }
};
var el = /* @__PURE__ */ ((o) => (o[o.Block = 0] = "Block", o[o.Inline = 1] = "Inline", o[o.Tune = 2] = "Tune", o))(el || {}), Aa = /* @__PURE__ */ ((o) => (o.Shortcut = "shortcut", o.Toolbox = "toolbox", o.EnabledInlineTools = "inlineToolbar", o.EnabledBlockTunes = "tunes", o.Config = "config", o))(Aa || {}), nu = /* @__PURE__ */ ((o) => (o.Shortcut = "shortcut", o.SanitizeConfig = "sanitize", o))(nu || {}), rs = /* @__PURE__ */ ((o) => (o.IsEnabledLineBreaks = "enableLineBreaks", o.Toolbox = "toolbox", o.ConversionConfig = "conversionConfig", o.IsReadOnlySupported = "isReadOnlySupported", o.PasteConfig = "pasteConfig", o))(rs || {}), bc = /* @__PURE__ */ ((o) => (o.IsInline = "isInline", o.Title = "title", o))(bc || {}), iu = /* @__PURE__ */ ((o) => (o.IsTune = "isTune", o))(iu || {});
class vc {
  /**
   * @class
   * @param {ConstructorOptions} options - Constructor options
   */
  constructor({
    name: e,
    constructable: t,
    config: n,
    api: r,
    isDefault: a,
    isInternal: c = !1,
    defaultPlaceholder: u
  }) {
    this.api = r, this.name = e, this.constructable = t, this.config = n, this.isDefault = a, this.isInternal = c, this.defaultPlaceholder = u;
  }
  /**
   * Returns Tool user configuration
   */
  get settings() {
    const e = this.config.config || {};
    return this.isDefault && !("placeholder" in e) && this.defaultPlaceholder && (e.placeholder = this.defaultPlaceholder), e;
  }
  /**
   * Calls Tool's reset method
   */
  reset() {
    if (Lt(this.constructable.reset))
      return this.constructable.reset();
  }
  /**
   * Calls Tool's prepare method
   */
  prepare() {
    if (Lt(this.constructable.prepare))
      return this.constructable.prepare({
        toolName: this.name,
        config: this.settings
      });
  }
  /**
   * Returns shortcut for Tool (internal or specified by user)
   */
  get shortcut() {
    const e = this.constructable.shortcut;
    return this.config.shortcut || e;
  }
  /**
   * Returns Tool's sanitizer configuration
   */
  get sanitizeConfig() {
    return this.constructable.sanitize || {};
  }
  /**
   * Returns true if Tools is inline
   */
  isInline() {
    return this.type === 1;
  }
  /**
   * Returns true if Tools is block
   */
  isBlock() {
    return this.type === 0;
  }
  /**
   * Returns true if Tools is tune
   */
  isTune() {
    return this.type === 2;
  }
}
let Lm = class extends it {
  /**
   * @class
   * @param moduleConfiguration - Module Configuration
   * @param moduleConfiguration.config - Editor's config
   * @param moduleConfiguration.eventsDispatcher - Editor's event dispatcher
   */
  constructor({ config: e, eventsDispatcher: t }) {
    super({
      config: e,
      eventsDispatcher: t
    }), this.CSS = {
      inlineToolbar: "ce-inline-toolbar",
      inlineToolbarShowed: "ce-inline-toolbar--showed",
      inlineToolbarLeftOriented: "ce-inline-toolbar--left-oriented",
      inlineToolbarRightOriented: "ce-inline-toolbar--right-oriented",
      inlineToolbarShortcut: "ce-inline-toolbar__shortcut",
      buttonsWrapper: "ce-inline-toolbar__buttons",
      actionsWrapper: "ce-inline-toolbar__actions",
      inlineToolButton: "ce-inline-tool",
      inputField: "cdx-input",
      focusedButton: "ce-inline-tool--focused",
      conversionToggler: "ce-inline-toolbar__dropdown",
      conversionTogglerArrow: "ce-inline-toolbar__dropdown-arrow",
      conversionTogglerHidden: "ce-inline-toolbar__dropdown--hidden",
      conversionTogglerContent: "ce-inline-toolbar__dropdown-content",
      togglerAndButtonsWrapper: "ce-inline-toolbar__toggler-and-button-wrapper"
    }, this.opened = !1, this.toolbarVerticalMargin = Ir() ? 20 : 6, this.buttonsList = null, this.width = 0, this.flipper = null;
  }
  /**
   * Toggles read-only mode
   *
   * @param {boolean} readOnlyEnabled - read-only mode
   */
  toggleReadOnly(e) {
    e ? (this.destroy(), this.Editor.ConversionToolbar.destroy()) : window.requestIdleCallback(() => {
      this.make();
    }, { timeout: 2e3 });
  }
  /**
   *  Moving / appearance
   *  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   */
  /**
   * Shows Inline Toolbar if something is selected
   *
   * @param [needToClose] - pass true to close toolbar if it is not allowed.
   *                                  Avoid to use it just for closing IT, better call .close() clearly.
   * @param [needToShowConversionToolbar] - pass false to not to show Conversion Toolbar
   */
  async tryToShow(e = !1, t = !0) {
    e && this.close(), this.allowedToShow() && (await this.addToolsFiltered(t), this.move(), this.open(t), this.Editor.Toolbar.close());
  }
  /**
   * Hides Inline Toolbar
   */
  close() {
    this.opened && (this.Editor.ReadOnly.isEnabled || (this.nodes.wrapper.classList.remove(this.CSS.inlineToolbarShowed), Array.from(this.toolsInstances.entries()).forEach(([e, t]) => {
      const n = this.getToolShortcut(e);
      n && xs.remove(this.Editor.UI.nodes.redactor, n), Lt(t.clear) && t.clear();
    }), this.reset(), this.opened = !1, this.flipper.deactivate(), this.Editor.ConversionToolbar.close()));
  }
  /**
   * Check if node is contained by Inline Toolbar
   *
   * @param {Node} node — node to check
   */
  containsNode(e) {
    return this.nodes.wrapper === void 0 ? !1 : this.nodes.wrapper.contains(e);
  }
  /**
   * Removes UI and its components
   */
  destroy() {
    this.flipper && (this.flipper.deactivate(), this.flipper = null), this.removeAllNodes();
  }
  /**
   * Making DOM
   */
  make() {
    this.nodes.wrapper = ae.make("div", [
      this.CSS.inlineToolbar,
      ...this.isRtl ? [this.Editor.UI.CSS.editorRtlFix] : []
    ]), this.nodes.togglerAndButtonsWrapper = ae.make("div", this.CSS.togglerAndButtonsWrapper), this.nodes.buttons = ae.make("div", this.CSS.buttonsWrapper), this.nodes.actions = ae.make("div", this.CSS.actionsWrapper), this.listeners.on(this.nodes.wrapper, "mousedown", (e) => {
      e.target.closest(`.${this.CSS.actionsWrapper}`) || e.preventDefault();
    }), ae.append(this.nodes.wrapper, [this.nodes.togglerAndButtonsWrapper, this.nodes.actions]), ae.append(this.Editor.UI.nodes.wrapper, this.nodes.wrapper), this.addConversionToggler(), ae.append(this.nodes.togglerAndButtonsWrapper, this.nodes.buttons), this.prepareConversionToolbar(), window.requestAnimationFrame(() => {
      this.recalculateWidth();
    }), this.enableFlipper();
  }
  /**
   * Shows Inline Toolbar
   */
  open() {
    if (this.opened)
      return;
    this.nodes.wrapper.classList.add(this.CSS.inlineToolbarShowed), this.buttonsList = this.nodes.buttons.querySelectorAll(`.${this.CSS.inlineToolButton}`), this.opened = !0;
    let e = Array.from(this.buttonsList);
    e.unshift(this.nodes.conversionToggler), e = e.filter((t) => !t.hidden), this.flipper.activate(e);
  }
  /**
   * Move Toolbar to the selected text
   */
  move() {
    const e = Ye.rect, t = this.Editor.UI.nodes.wrapper.getBoundingClientRect(), n = {
      x: e.x - t.x,
      y: e.y + e.height - // + window.scrollY
      t.top + this.toolbarVerticalMargin
    };
    n.x + this.width + t.x > this.Editor.UI.contentRect.right && (n.x = this.Editor.UI.contentRect.right - this.width - t.x), this.nodes.wrapper.style.left = Math.floor(n.x) + "px", this.nodes.wrapper.style.top = Math.floor(n.y) + "px";
  }
  /**
   * Clear orientation classes and reset position
   */
  reset() {
    this.nodes.wrapper.classList.remove(
      this.CSS.inlineToolbarLeftOriented,
      this.CSS.inlineToolbarRightOriented
    ), this.nodes.wrapper.style.left = "0", this.nodes.wrapper.style.top = "0";
  }
  /**
   * Need to show Inline Toolbar or not
   */
  allowedToShow() {
    const e = ["IMG", "INPUT"], t = Ye.get(), n = Ye.text;
    if (!t || !t.anchorNode || t.isCollapsed || n.length < 1)
      return !1;
    const r = ae.isElement(t.anchorNode) ? t.anchorNode : t.anchorNode.parentElement;
    if (t && e.includes(r.tagName) || r.closest('[contenteditable="true"]') === null)
      return !1;
    const a = this.Editor.BlockManager.getBlock(t.anchorNode);
    return a ? a.tool.inlineTools.size !== 0 : !1;
  }
  /**
   * Recalculate inline toolbar width
   */
  recalculateWidth() {
    this.width = this.nodes.wrapper.offsetWidth;
  }
  /**
   * Create a toggler for Conversion Dropdown
   * and prepend it to the buttons list
   */
  addConversionToggler() {
    this.nodes.conversionToggler = ae.make("div", this.CSS.conversionToggler), this.nodes.conversionTogglerContent = ae.make("div", this.CSS.conversionTogglerContent);
    const e = ae.make("div", this.CSS.conversionTogglerArrow, {
      innerHTML: Gh
    });
    this.nodes.conversionToggler.appendChild(this.nodes.conversionTogglerContent), this.nodes.conversionToggler.appendChild(e), this.nodes.togglerAndButtonsWrapper.appendChild(this.nodes.conversionToggler), this.listeners.on(this.nodes.conversionToggler, "click", () => {
      this.Editor.ConversionToolbar.toggle((t) => {
        !t && this.opened ? this.flipper.activate() : this.opened && this.flipper.deactivate();
      });
    }), Ir() === !1 && aa(this.nodes.conversionToggler, Jo.ui(Sn.ui.inlineToolbar.converter, "Convert to"), {
      placement: "top",
      hidingDelay: 100
    });
  }
  /**
   * Changes Conversion Dropdown content for current block's Tool
   */
  async setConversionTogglerContent() {
    const { BlockManager: e } = this.Editor, { currentBlock: t } = e, n = t.name, r = t.tool.conversionConfig, a = r && r.export;
    this.nodes.conversionToggler.hidden = !a, this.nodes.conversionToggler.classList.toggle(this.CSS.conversionTogglerHidden, !a);
    const c = await t.getActiveToolboxEntry() || {};
    this.nodes.conversionTogglerContent.innerHTML = c.icon || c.title || ws(n);
  }
  /**
   * Makes the Conversion Dropdown
   */
  prepareConversionToolbar() {
    const e = this.Editor.ConversionToolbar.make();
    ae.append(this.nodes.wrapper, e);
  }
  /**
   *  Working with Tools
   *  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   */
  /**
   * Append only allowed Tools
   *
   * @param {boolean} needToShowConversionToolbar - pass false to not to show Conversion Toolbar (e.g. for Footnotes-like tools)
   */
  async addToolsFiltered(e = !0) {
    const t = Ye.get(), n = this.Editor.BlockManager.getBlock(t.anchorNode);
    this.nodes.buttons.innerHTML = "", this.nodes.actions.innerHTML = "", this.toolsInstances = /* @__PURE__ */ new Map(), Array.from(n.tool.inlineTools.values()).forEach((r) => {
      this.addTool(r);
    }), e && this.Editor.ConversionToolbar.hasTools() ? await this.setConversionTogglerContent() : this.nodes.conversionToggler.hidden = !0, this.recalculateWidth();
  }
  /**
   * Add tool button and activate clicks
   *
   * @param {InlineTool} tool - InlineTool object
   */
  addTool(e) {
    const t = e.create(), n = t.render();
    if (!n) {
      gt("Render method must return an instance of Node", "warn", e.name);
      return;
    }
    if (n.dataset.tool = e.name, this.nodes.buttons.appendChild(n), this.toolsInstances.set(e.name, t), Lt(t.renderActions)) {
      const u = t.renderActions();
      this.nodes.actions.appendChild(u);
    }
    this.listeners.on(n, "click", (u) => {
      this.toolClicked(t), u.preventDefault();
    });
    const r = this.getToolShortcut(e.name);
    if (r)
      try {
        this.enableShortcuts(t, r);
      } catch {
      }
    const a = ae.make("div"), c = Jo.t(
      Sn.toolNames,
      e.title || ws(e.name)
    );
    a.appendChild(ae.text(c)), r && a.appendChild(ae.make("div", this.CSS.inlineToolbarShortcut, {
      textContent: Ja(r)
    })), Ir() === !1 && aa(n, a, {
      placement: "top",
      hidingDelay: 100
    }), t.checkState(Ye.get());
  }
  /**
   * Get shortcut name for tool
   *
   * @param toolName — Tool name
   */
  getToolShortcut(e) {
    const { Tools: t } = this.Editor, n = t.inlineTools.get(e), r = t.internal.inlineTools;
    return Array.from(r.keys()).includes(e) ? this.inlineTools[e][nu.Shortcut] : n.shortcut;
  }
  /**
   * Enable Tool shortcut with Editor Shortcuts Module
   *
   * @param {InlineTool} tool - Tool instance
   * @param {string} shortcut - shortcut according to the ShortcutData Module format
   */
  enableShortcuts(e, t) {
    xs.add({
      name: t,
      handler: (n) => {
        const { currentBlock: r } = this.Editor.BlockManager;
        r && r.tool.enabledInlineTools && (n.preventDefault(), this.toolClicked(e));
      },
      on: this.Editor.UI.nodes.redactor
    });
  }
  /**
   * Inline Tool button clicks
   *
   * @param {InlineTool} tool - Tool's instance
   */
  toolClicked(e) {
    const t = Ye.range;
    e.surround(t), this.checkToolsState(), e.renderActions !== void 0 && this.flipper.deactivate();
  }
  /**
   * Check Tools` state by selection
   */
  checkToolsState() {
    this.toolsInstances.forEach((e) => {
      e.checkState(Ye.get());
    });
  }
  /**
   * Get inline tools tools
   * Tools that has isInline is true
   */
  get inlineTools() {
    const e = {};
    return Array.from(this.Editor.Tools.inlineTools.entries()).forEach(([t, n]) => {
      e[t] = n.create();
    }), e;
  }
  /**
   * Allow to leaf buttons by arrows / tab
   * Buttons will be filled on opening
   */
  enableFlipper() {
    this.flipper = new ks({
      focusedItemClass: this.CSS.focusedButton,
      allowedKeys: [
        Fe.ENTER,
        Fe.TAB
      ]
    });
  }
}, Am = class extends it {
  /**
   * All keydowns on Block
   *
   * @param {KeyboardEvent} event - keydown
   */
  keydown(e) {
    switch (this.beforeKeydownProcessing(e), e.keyCode) {
      case Fe.BACKSPACE:
        this.backspace(e);
        break;
      case Fe.DELETE:
        this.delete(e);
        break;
      case Fe.ENTER:
        this.enter(e);
        break;
      case Fe.DOWN:
      case Fe.RIGHT:
        this.arrowRightAndDown(e);
        break;
      case Fe.UP:
      case Fe.LEFT:
        this.arrowLeftAndUp(e);
        break;
      case Fe.TAB:
        this.tabPressed(e);
        break;
      case Fe.SLASH:
        e.ctrlKey || e.metaKey ? this.commandSlashPressed() : this.slashPressed();
        break;
    }
  }
  /**
   * Fires on keydown before event processing
   *
   * @param {KeyboardEvent} event - keydown
   */
  beforeKeydownProcessing(e) {
    this.needToolbarClosing(e) && Bh(e.keyCode) && (this.Editor.Toolbar.close(), this.Editor.ConversionToolbar.close(), e.ctrlKey || e.metaKey || e.altKey || e.shiftKey || this.Editor.BlockSelection.clearSelection(e));
  }
  /**
   * Key up on Block:
   * - shows Inline Toolbar if something selected
   * - shows conversion toolbar with 85% of block selection
   *
   * @param {KeyboardEvent} event - keyup event
   */
  keyup(e) {
    e.shiftKey || this.Editor.UI.checkEmptiness();
  }
  /**
   * Add drop target styles
   *
   * @param {DragEvent} event - drag over event
   */
  dragOver(e) {
    const t = this.Editor.BlockManager.getBlockByChildNode(e.target);
    t.dropTarget = !0;
  }
  /**
   * Remove drop target style
   *
   * @param {DragEvent} event - drag leave event
   */
  dragLeave(e) {
    const t = this.Editor.BlockManager.getBlockByChildNode(e.target);
    t.dropTarget = !1;
  }
  /**
   * Copying selected blocks
   * Before putting to the clipboard we sanitize all blocks and then copy to the clipboard
   *
   * @param {ClipboardEvent} event - clipboard event
   */
  handleCommandC(e) {
    const { BlockSelection: t } = this.Editor;
    t.anyBlockSelected && t.copySelectedBlocks(e);
  }
  /**
   * Copy and Delete selected Blocks
   *
   * @param {ClipboardEvent} event - clipboard event
   */
  handleCommandX(e) {
    const { BlockSelection: t, BlockManager: n, Caret: r } = this.Editor;
    t.anyBlockSelected && t.copySelectedBlocks(e).then(() => {
      const a = n.removeSelectedBlocks(), c = n.insertDefaultBlockAtIndex(a, !0);
      r.setToBlock(c, r.positions.START), t.clearSelection(e);
    });
  }
  /**
   * Tab pressed inside a Block.
   *
   * @param {KeyboardEvent} event - keydown
   */
  tabPressed(e) {
    const { InlineToolbar: t, ConversionToolbar: n, Caret: r } = this.Editor;
    n.opened || t.opened || (e.shiftKey ? r.navigatePrevious(!0) : r.navigateNext(!0)) && e.preventDefault();
  }
  /**
   * '/' + 'command' keydown inside a Block
   */
  commandSlashPressed() {
    this.Editor.BlockSelection.selectedBlocks.length > 1 || this.activateBlockSettings();
  }
  /**
   * '/' keydown inside a Block
   */
  slashPressed() {
    this.Editor.BlockManager.currentBlock.isEmpty && this.activateToolbox();
  }
  /**
   * ENTER pressed on block
   *
   * @param {KeyboardEvent} event - keydown
   */
  enter(e) {
    const { BlockManager: t, UI: n } = this.Editor;
    if (t.currentBlock.tool.isLineBreaksEnabled || n.someToolbarOpened && n.someFlipperButtonFocused || e.shiftKey)
      return;
    let r = this.Editor.BlockManager.currentBlock;
    this.Editor.Caret.isAtStart && !this.Editor.BlockManager.currentBlock.hasMedia ? this.Editor.BlockManager.insertDefaultBlockAtIndex(this.Editor.BlockManager.currentBlockIndex) : this.Editor.Caret.isAtEnd ? r = this.Editor.BlockManager.insertDefaultBlockAtIndex(this.Editor.BlockManager.currentBlockIndex + 1) : r = this.Editor.BlockManager.split(), this.Editor.Caret.setToBlock(r), this.Editor.Toolbar.moveAndOpen(r), e.preventDefault();
  }
  /**
   * Handle backspace keydown on Block
   *
   * @param {KeyboardEvent} event - keydown
   */
  backspace(e) {
    const { BlockManager: t, Caret: n } = this.Editor, { currentBlock: r, previousBlock: a } = t;
    if (!(!Ye.isCollapsed || !n.isAtStart)) {
      if (e.preventDefault(), this.Editor.Toolbar.close(), r.currentInput !== r.firstInput) {
        n.navigatePrevious();
        return;
      }
      if (a !== null) {
        if (a.isEmpty) {
          t.removeBlock(a);
          return;
        }
        if (r.isEmpty) {
          t.removeBlock(r);
          const c = t.currentBlock;
          n.setToBlock(c, n.positions.END);
          return;
        }
        vd(r, a) ? this.mergeBlocks(a, r) : n.setToBlock(a, n.positions.END);
      }
    }
  }
  /**
   * Handles delete keydown on Block
   * Removes char after the caret.
   * If caret is at the end of the block, merge next block with current
   *
   * @param {KeyboardEvent} event - keydown
   */
  delete(e) {
    const { BlockManager: t, Caret: n } = this.Editor, { currentBlock: r, nextBlock: a } = t;
    if (!(!Ye.isCollapsed || !n.isAtEnd)) {
      if (e.preventDefault(), this.Editor.Toolbar.close(), r.currentInput !== r.lastInput) {
        n.navigateNext();
        return;
      }
      if (a !== null) {
        if (a.isEmpty) {
          t.removeBlock(a);
          return;
        }
        if (r.isEmpty) {
          t.removeBlock(r), n.setToBlock(a, n.positions.START);
          return;
        }
        vd(r, a) ? this.mergeBlocks(r, a) : n.setToBlock(a, n.positions.START);
      }
    }
  }
  /**
   * Merge passed Blocks
   *
   * @param targetBlock - to which Block we want to merge
   * @param blockToMerge - what Block we want to merge
   */
  mergeBlocks(e, t) {
    const { BlockManager: n, Caret: r, Toolbar: a } = this.Editor;
    r.createShadow(e.pluginsContent), n.mergeBlocks(e, t).then(() => {
      window.requestAnimationFrame(() => {
        r.restoreCaret(e.pluginsContent), e.pluginsContent.normalize(), a.close();
      });
    });
  }
  /**
   * Handle right and down keyboard keys
   *
   * @param {KeyboardEvent} event - keyboard event
   */
  arrowRightAndDown(e) {
    const t = ks.usedKeys.includes(e.keyCode) && (!e.shiftKey || e.keyCode === Fe.TAB);
    if (this.Editor.UI.someToolbarOpened && t)
      return;
    this.Editor.Toolbar.close();
    const n = this.Editor.Caret.isAtEnd || this.Editor.BlockSelection.anyBlockSelected;
    if (e.shiftKey && e.keyCode === Fe.DOWN && n) {
      this.Editor.CrossBlockSelection.toggleBlockSelectedState();
      return;
    }
    if (e.keyCode === Fe.DOWN || e.keyCode === Fe.RIGHT && !this.isRtl ? this.Editor.Caret.navigateNext() : this.Editor.Caret.navigatePrevious()) {
      e.preventDefault();
      return;
    }
    $a(() => {
      this.Editor.BlockManager.currentBlock && this.Editor.BlockManager.currentBlock.updateCurrentInput();
    }, 20)(), this.Editor.BlockSelection.clearSelection(e);
  }
  /**
   * Handle left and up keyboard keys
   *
   * @param {KeyboardEvent} event - keyboard event
   */
  arrowLeftAndUp(e) {
    if (this.Editor.UI.someToolbarOpened) {
      if (ks.usedKeys.includes(e.keyCode) && (!e.shiftKey || e.keyCode === Fe.TAB))
        return;
      this.Editor.UI.closeAllToolbars();
    }
    this.Editor.Toolbar.close();
    const t = this.Editor.Caret.isAtStart || this.Editor.BlockSelection.anyBlockSelected;
    if (e.shiftKey && e.keyCode === Fe.UP && t) {
      this.Editor.CrossBlockSelection.toggleBlockSelectedState(!1);
      return;
    }
    if (e.keyCode === Fe.UP || e.keyCode === Fe.LEFT && !this.isRtl ? this.Editor.Caret.navigatePrevious() : this.Editor.Caret.navigateNext()) {
      e.preventDefault();
      return;
    }
    $a(() => {
      this.Editor.BlockManager.currentBlock && this.Editor.BlockManager.currentBlock.updateCurrentInput();
    }, 20)(), this.Editor.BlockSelection.clearSelection(e);
  }
  /**
   * Cases when we need to close Toolbar
   *
   * @param {KeyboardEvent} event - keyboard event
   */
  needToolbarClosing(e) {
    const t = e.keyCode === Fe.ENTER && this.Editor.Toolbar.toolbox.opened, n = e.keyCode === Fe.ENTER && this.Editor.BlockSettings.opened, r = e.keyCode === Fe.ENTER && this.Editor.InlineToolbar.opened, a = e.keyCode === Fe.ENTER && this.Editor.ConversionToolbar.opened, c = e.keyCode === Fe.TAB;
    return !(e.shiftKey || c || t || n || r || a);
  }
  /**
   * If Toolbox is not open, then just open it and show plus button
   */
  activateToolbox() {
    this.Editor.Toolbar.opened || this.Editor.Toolbar.moveAndOpen(), this.Editor.Toolbar.toolbox.open();
  }
  /**
   * Open Toolbar and show BlockSettings before flipping Tools
   */
  activateBlockSettings() {
    this.Editor.Toolbar.opened || this.Editor.Toolbar.moveAndOpen(), this.Editor.BlockSettings.opened || this.Editor.BlockSettings.open();
  }
}, Dl = class {
  /**
   * @class
   * @param {HTMLElement} workingArea — editor`s working node
   */
  constructor(e) {
    this.blocks = [], this.workingArea = e;
  }
  /**
   * Get length of Block instances array
   *
   * @returns {number}
   */
  get length() {
    return this.blocks.length;
  }
  /**
   * Get Block instances array
   *
   * @returns {Block[]}
   */
  get array() {
    return this.blocks;
  }
  /**
   * Get blocks html elements array
   *
   * @returns {HTMLElement[]}
   */
  get nodes() {
    return Rh(this.workingArea.children);
  }
  /**
   * Proxy trap to implement array-like setter
   *
   * @example
   * blocks[0] = new Block(...)
   * @param {Blocks} instance — Blocks instance
   * @param {PropertyKey} property — block index or any Blocks class property key to set
   * @param {Block} value — value to set
   * @returns {boolean}
   */
  static set(e, t, n) {
    return isNaN(Number(t)) ? (Reflect.set(e, t, n), !0) : (e.insert(+t, n), !0);
  }
  /**
   * Proxy trap to implement array-like getter
   *
   * @param {Blocks} instance — Blocks instance
   * @param {PropertyKey} property — Blocks class property key
   * @returns {Block|*}
   */
  static get(e, t) {
    return isNaN(Number(t)) ? Reflect.get(e, t) : e.get(+t);
  }
  /**
   * Push new Block to the blocks array and append it to working area
   *
   * @param {Block} block - Block to add
   */
  push(e) {
    this.blocks.push(e), this.insertToDOM(e);
  }
  /**
   * Swaps blocks with indexes first and second
   *
   * @param {number} first - first block index
   * @param {number} second - second block index
   * @deprecated — use 'move' instead
   */
  swap(e, t) {
    const n = this.blocks[t];
    ae.swap(this.blocks[e].holder, n.holder), this.blocks[t] = this.blocks[e], this.blocks[e] = n;
  }
  /**
   * Move a block from one to another index
   *
   * @param {number} toIndex - new index of the block
   * @param {number} fromIndex - block to move
   */
  move(e, t) {
    const n = this.blocks.splice(t, 1)[0], r = e - 1, a = Math.max(0, r), c = this.blocks[a];
    e > 0 ? this.insertToDOM(n, "afterend", c) : this.insertToDOM(n, "beforebegin", c), this.blocks.splice(e, 0, n);
    const u = this.composeBlockEvent("move", {
      fromIndex: t,
      toIndex: e
    });
    n.call(mi.MOVED, u);
  }
  /**
   * Insert new Block at passed index
   *
   * @param {number} index — index to insert Block
   * @param {Block} block — Block to insert
   * @param {boolean} replace — it true, replace block on given index
   */
  insert(e, t, n = !1) {
    if (!this.length) {
      this.push(t);
      return;
    }
    e > this.length && (e = this.length), n && (this.blocks[e].holder.remove(), this.blocks[e].call(mi.REMOVED));
    const r = n ? 1 : 0;
    if (this.blocks.splice(e, r, t), e > 0) {
      const a = this.blocks[e - 1];
      this.insertToDOM(t, "afterend", a);
    } else {
      const a = this.blocks[e + 1];
      a ? this.insertToDOM(t, "beforebegin", a) : this.insertToDOM(t);
    }
  }
  /**
   * Replaces block under passed index with passed block
   *
   * @param index - index of existed block
   * @param block - new block
   */
  replace(e, t) {
    if (this.blocks[e] === void 0)
      throw Error("Incorrect index");
    this.blocks[e].holder.replaceWith(t.holder), this.blocks[e] = t;
  }
  /**
   * Inserts several blocks at once
   *
   * @param blocks - blocks to insert
   * @param index - index to insert blocks at
   */
  insertMany(e, t) {
    const n = new DocumentFragment();
    for (const r of e)
      n.appendChild(r.holder);
    if (this.length > 0) {
      if (t > 0) {
        const r = Math.min(t - 1, this.length - 1);
        this.blocks[r].holder.after(n);
      } else
        t === 0 && this.workingArea.prepend(n);
      this.blocks.splice(t, 0, ...e);
    } else
      this.blocks.push(...e), this.workingArea.appendChild(n);
    e.forEach((r) => r.call(mi.RENDERED));
  }
  /**
   * Remove block
   *
   * @param {number} index - index of Block to remove
   */
  remove(e) {
    isNaN(e) && (e = this.length - 1), this.blocks[e].holder.remove(), this.blocks[e].call(mi.REMOVED), this.blocks.splice(e, 1);
  }
  /**
   * Remove all blocks
   */
  removeAll() {
    this.workingArea.innerHTML = "", this.blocks.forEach((e) => e.call(mi.REMOVED)), this.blocks.length = 0;
  }
  /**
   * Insert Block after passed target
   *
   * @todo decide if this method is necessary
   * @param {Block} targetBlock — target after which Block should be inserted
   * @param {Block} newBlock — Block to insert
   */
  insertAfter(e, t) {
    const n = this.blocks.indexOf(e);
    this.insert(n + 1, t);
  }
  /**
   * Get Block by index
   *
   * @param {number} index — Block index
   * @returns {Block}
   */
  get(e) {
    return this.blocks[e];
  }
  /**
   * Return index of passed Block
   *
   * @param {Block} block - Block to find
   * @returns {number}
   */
  indexOf(e) {
    return this.blocks.indexOf(e);
  }
  /**
   * Insert new Block into DOM
   *
   * @param {Block} block - Block to insert
   * @param {InsertPosition} position — insert position (if set, will use insertAdjacentElement)
   * @param {Block} target — Block related to position
   */
  insertToDOM(e, t, n) {
    t ? n.holder.insertAdjacentElement(t, e.holder) : this.workingArea.appendChild(e.holder), e.call(mi.RENDERED);
  }
  /**
   * Composes Block event with passed type and details
   *
   * @param {string} type - event type
   * @param {object} detail - event detail
   */
  composeBlockEvent(e, t) {
    return new CustomEvent(e, {
      detail: t
    });
  }
};
const kd = "block-removed", xd = "block-added", Bm = "block-moved", Cd = "block-changed";
let Rm = class {
  constructor() {
    this.completed = Promise.resolve();
  }
  /**
   * Add new promise to queue
   *
   * @param operation - promise should be added to queue
   */
  add(e) {
    return new Promise((t, n) => {
      this.completed = this.completed.then(e).then(t).catch(n);
    });
  }
}, Im = class extends it {
  constructor() {
    super(...arguments), this._currentBlockIndex = -1, this._blocks = null;
  }
  /**
   * Returns current Block index
   *
   * @returns {number}
   */
  get currentBlockIndex() {
    return this._currentBlockIndex;
  }
  /**
   * Set current Block index and fire Block lifecycle callbacks
   *
   * @param {number} newIndex - index of Block to set as current
   */
  set currentBlockIndex(e) {
    this._currentBlockIndex = e;
  }
  /**
   * returns first Block
   *
   * @returns {Block}
   */
  get firstBlock() {
    return this._blocks[0];
  }
  /**
   * returns last Block
   *
   * @returns {Block}
   */
  get lastBlock() {
    return this._blocks[this._blocks.length - 1];
  }
  /**
   * Get current Block instance
   *
   * @returns {Block}
   */
  get currentBlock() {
    return this._blocks[this.currentBlockIndex];
  }
  /**
   * Set passed Block as a current
   *
   * @param block - block to set as a current
   */
  set currentBlock(e) {
    this.currentBlockIndex = this.getBlockIndex(e);
  }
  /**
   * Returns next Block instance
   *
   * @returns {Block|null}
   */
  get nextBlock() {
    return this.currentBlockIndex === this._blocks.length - 1 ? null : this._blocks[this.currentBlockIndex + 1];
  }
  /**
   * Return first Block with inputs after current Block
   *
   * @returns {Block | undefined}
   */
  get nextContentfulBlock() {
    return this.blocks.slice(this.currentBlockIndex + 1).find((e) => !!e.inputs.length);
  }
  /**
   * Return first Block with inputs before current Block
   *
   * @returns {Block | undefined}
   */
  get previousContentfulBlock() {
    return this.blocks.slice(0, this.currentBlockIndex).reverse().find((e) => !!e.inputs.length);
  }
  /**
   * Returns previous Block instance
   *
   * @returns {Block|null}
   */
  get previousBlock() {
    return this.currentBlockIndex === 0 ? null : this._blocks[this.currentBlockIndex - 1];
  }
  /**
   * Get array of Block instances
   *
   * @returns {Block[]} {@link Blocks#array}
   */
  get blocks() {
    return this._blocks.array;
  }
  /**
   * Check if each Block is empty
   *
   * @returns {boolean}
   */
  get isEditorEmpty() {
    return this.blocks.every((e) => e.isEmpty);
  }
  /**
   * Should be called after Editor.UI preparation
   * Define this._blocks property
   */
  prepare() {
    const e = new Dl(this.Editor.UI.nodes.redactor);
    this._blocks = new Proxy(e, {
      set: Dl.set,
      get: Dl.get
    }), this.listeners.on(
      document,
      "copy",
      (t) => this.Editor.BlockEvents.handleCommandC(t)
    );
  }
  /**
   * Toggle read-only state
   *
   * If readOnly is true:
   *  - Unbind event handlers from created Blocks
   *
   * if readOnly is false:
   *  - Bind event handlers to all existing Blocks
   *
   * @param {boolean} readOnlyEnabled - "read only" state
   */
  toggleReadOnly(e) {
    e ? this.disableModuleBindings() : this.enableModuleBindings();
  }
  /**
   * Creates Block instance by tool name
   *
   * @param {object} options - block creation options
   * @param {string} options.tool - tools passed in editor config {@link EditorConfig#tools}
   * @param {string} [options.id] - unique id for this block
   * @param {BlockToolData} [options.data] - constructor params
   * @returns {Block}
   */
  composeBlock({
    tool: e,
    data: t = {},
    id: n = void 0,
    tunes: r = {}
  }) {
    const a = this.Editor.ReadOnly.isEnabled, c = this.Editor.Tools.blockTools.get(e), u = new bi({
      id: n,
      data: t,
      tool: c,
      api: this.Editor.API,
      readOnly: a,
      tunesData: r
    }, this.eventsDispatcher);
    return a || window.requestIdleCallback(() => {
      this.bindBlockEvents(u);
    }, { timeout: 2e3 }), u;
  }
  /**
   * Insert new block into _blocks
   *
   * @param {object} options - insert options
   * @param {string} [options.id] - block's unique id
   * @param {string} [options.tool] - plugin name, by default method inserts the default block type
   * @param {object} [options.data] - plugin data
   * @param {number} [options.index] - index where to insert new Block
   * @param {boolean} [options.needToFocus] - flag shows if needed to update current Block index
   * @param {boolean} [options.replace] - flag shows if block by passed index should be replaced with inserted one
   * @returns {Block}
   */
  insert({
    id: e = void 0,
    tool: t = this.config.defaultBlock,
    data: n = {},
    index: r,
    needToFocus: a = !0,
    replace: c = !1,
    tunes: u = {}
  } = {}) {
    let p = r;
    p === void 0 && (p = this.currentBlockIndex + (c ? 0 : 1));
    const g = this.composeBlock({
      id: e,
      tool: t,
      data: n,
      tunes: u
    });
    return c && this.blockDidMutated(kd, this.getBlockByIndex(p), {
      index: p
    }), this._blocks.insert(p, g, c), this.blockDidMutated(xd, g, {
      index: p
    }), a ? this.currentBlockIndex = p : p <= this.currentBlockIndex && this.currentBlockIndex++, g;
  }
  /**
   * Inserts several blocks at once
   *
   * @param blocks - blocks to insert
   * @param index - index where to insert
   */
  insertMany(e, t = 0) {
    this._blocks.insertMany(e, t);
  }
  /**
   * Update Block data.
   *
   * Currently we don't have an 'update' method in the Tools API, so we just create a new block with the same id and type
   * Should not trigger 'block-removed' or 'block-added' events
   *
   * @param block - block to update
   * @param data - new data
   */
  async update(e, t) {
    const n = await e.data, r = this.composeBlock({
      id: e.id,
      tool: e.name,
      data: Object.assign({}, n, t),
      tunes: e.tunes
    }), a = this.getBlockIndex(e);
    return this._blocks.replace(a, r), this.blockDidMutated(Cd, r, {
      index: a
    }), r;
  }
  /**
   * Replace passed Block with the new one with specified Tool and data
   *
   * @param block - block to replace
   * @param newTool - new Tool name
   * @param data - new Tool data
   */
  replace(e, t, n) {
    const r = this.getBlockIndex(e);
    this.insert({
      tool: t,
      data: n,
      index: r,
      replace: !0
    });
  }
  /**
   * Insert pasted content. Call onPaste callback after insert.
   *
   * @param {string} toolName - name of Tool to insert
   * @param {PasteEvent} pasteEvent - pasted data
   * @param {boolean} replace - should replace current block
   */
  paste(e, t, n = !1) {
    const r = this.insert({
      tool: e,
      replace: n
    });
    try {
      window.requestIdleCallback(() => {
        r.call(mi.ON_PASTE, t);
      });
    } catch (a) {
      gt(`${e}: onPaste callback call is failed`, "error", a);
    }
    return r;
  }
  /**
   * Insert new default block at passed index
   *
   * @param {number} index - index where Block should be inserted
   * @param {boolean} needToFocus - if true, updates current Block index
   *
   * TODO: Remove method and use insert() with index instead (?)
   * @returns {Block} inserted Block
   */
  insertDefaultBlockAtIndex(e, t = !1) {
    const n = this.composeBlock({ tool: this.config.defaultBlock });
    return this._blocks[e] = n, this.blockDidMutated(xd, n, {
      index: e
    }), t ? this.currentBlockIndex = e : e <= this.currentBlockIndex && this.currentBlockIndex++, n;
  }
  /**
   * Always inserts at the end
   *
   * @returns {Block}
   */
  insertAtEnd() {
    return this.currentBlockIndex = this.blocks.length - 1, this.insert();
  }
  /**
   * Merge two blocks
   *
   * @param {Block} targetBlock - previous block will be append to this block
   * @param {Block} blockToMerge - block that will be merged with target block
   * @returns {Promise} - the sequence that can be continued
   */
  async mergeBlocks(e, t) {
    const n = await t.data;
    cn(n) || await e.mergeWith(n), this.removeBlock(t), this.currentBlockIndex = this._blocks.indexOf(e);
  }
  /**
   * Remove passed Block
   *
   * @param block - Block to remove
   * @param addLastBlock - if true, adds new default block at the end. @todo remove this logic and use event-bus instead
   */
  removeBlock(e, t = !0) {
    return new Promise((n) => {
      const r = this._blocks.indexOf(e);
      if (!this.validateIndex(r))
        throw new Error("Can't find a Block to remove");
      e.destroy(), this._blocks.remove(r), this.blockDidMutated(kd, e, {
        index: r
      }), this.currentBlockIndex >= r && this.currentBlockIndex--, this.blocks.length ? r === 0 && (this.currentBlockIndex = 0) : (this.currentBlockIndex = -1, t && this.insert()), n();
    });
  }
  /**
   * Remove only selected Blocks
   * and returns first Block index where started removing...
   *
   * @returns {number|undefined}
   */
  removeSelectedBlocks() {
    let e;
    for (let t = this.blocks.length - 1; t >= 0; t--)
      this.blocks[t].selected && (this.removeBlock(this.blocks[t]), e = t);
    return e;
  }
  /**
   * Attention!
   * After removing insert the new default typed Block and focus on it
   * Removes all blocks
   */
  removeAllBlocks() {
    for (let e = this.blocks.length - 1; e >= 0; e--)
      this._blocks.remove(e);
    this.currentBlockIndex = -1, this.insert(), this.currentBlock.firstInput.focus();
  }
  /**
   * Split current Block
   * 1. Extract content from Caret position to the Block`s end
   * 2. Insert a new Block below current one with extracted content
   *
   * @returns {Block}
   */
  split() {
    const e = this.Editor.Caret.extractFragmentFromCaretPosition(), t = ae.make("div");
    t.appendChild(e);
    const n = {
      text: ae.isEmpty(t) ? "" : t.innerHTML
    };
    return this.insert({ data: n });
  }
  /**
   * Returns Block by passed index
   *
   * @param {number} index - index to get. -1 to get last
   * @returns {Block}
   */
  getBlockByIndex(e) {
    return e === -1 && (e = this._blocks.length - 1), this._blocks[e];
  }
  /**
   * Returns an index for passed Block
   *
   * @param block - block to find index
   */
  getBlockIndex(e) {
    return this._blocks.indexOf(e);
  }
  /**
   * Returns the Block by passed id
   *
   * @param id - id of block to get
   * @returns {Block}
   */
  getBlockById(e) {
    return this._blocks.array.find((t) => t.id === e);
  }
  /**
   * Get Block instance by html element
   *
   * @param {Node} element - html element to get Block by
   */
  getBlock(e) {
    ae.isElement(e) || (e = e.parentNode);
    const t = this._blocks.nodes, n = e.closest(`.${bi.CSS.wrapper}`), r = t.indexOf(n);
    if (r >= 0)
      return this._blocks[r];
  }
  /**
   * 1) Find first-level Block from passed child Node
   * 2) Mark it as current
   *
   * @param {Node} childNode - look ahead from this node.
   * @returns {Block | undefined} can return undefined in case when the passed child note is not a part of the current editor instance
   */
  setCurrentBlockByChildNode(e) {
    ae.isElement(e) || (e = e.parentNode);
    const t = e.closest(`.${bi.CSS.wrapper}`);
    if (!t)
      return;
    const n = t.closest(`.${this.Editor.UI.CSS.editorWrapper}`);
    if (n != null && n.isEqualNode(this.Editor.UI.nodes.wrapper))
      return this.currentBlockIndex = this._blocks.nodes.indexOf(t), this.currentBlock.updateCurrentInput(), this.currentBlock;
  }
  /**
   * Return block which contents passed node
   *
   * @param {Node} childNode - node to get Block by
   * @returns {Block}
   */
  getBlockByChildNode(e) {
    if (!e || !(e instanceof Node))
      return;
    ae.isElement(e) || (e = e.parentNode);
    const t = e.closest(`.${bi.CSS.wrapper}`);
    return this.blocks.find((n) => n.holder === t);
  }
  /**
   * Swap Blocks Position
   *
   * @param {number} fromIndex - index of first block
   * @param {number} toIndex - index of second block
   * @deprecated — use 'move' instead
   */
  swap(e, t) {
    this._blocks.swap(e, t), this.currentBlockIndex = t;
  }
  /**
   * Move a block to a new index
   *
   * @param {number} toIndex - index where to move Block
   * @param {number} fromIndex - index of Block to move
   */
  move(e, t = this.currentBlockIndex) {
    if (isNaN(e) || isNaN(t)) {
      gt("Warning during 'move' call: incorrect indices provided.", "warn");
      return;
    }
    if (!this.validateIndex(e) || !this.validateIndex(t)) {
      gt("Warning during 'move' call: indices cannot be lower than 0 or greater than the amount of blocks.", "warn");
      return;
    }
    this._blocks.move(e, t), this.currentBlockIndex = e, this.blockDidMutated(Bm, this.currentBlock, {
      fromIndex: t,
      toIndex: e
    });
  }
  /**
   * Converts passed Block to the new Tool
   * Uses Conversion Config
   *
   * @param blockToConvert - Block that should be converted
   * @param targetToolName - name of the Tool to convert to
   * @param blockDataOverrides - optional new Block data overrides
   */
  async convert(e, t, n) {
    if (!await e.save())
      throw new Error("Could not convert Block. Failed to extract original Block data.");
    const r = this.Editor.Tools.blockTools.get(t);
    if (!r)
      throw new Error(`Could not convert Block. Tool «${t}» not found.`);
    const a = await e.exportDataAsString(), c = vi(
      a,
      r.sanitizeConfig
    );
    let u = Lf(c, r.conversionConfig);
    n && (u = Object.assign(u, n)), this.replace(e, r.name, u);
  }
  /**
   * Sets current Block Index -1 which means unknown
   * and clear highlights
   */
  dropPointer() {
    this.currentBlockIndex = -1;
  }
  /**
   * Clears Editor
   *
   * @param {boolean} needToAddDefaultBlock - 1) in internal calls (for example, in api.blocks.render)
   *                                             we don't need to add an empty default block
   *                                        2) in api.blocks.clear we should add empty block
   */
  async clear(e = !1) {
    const t = new Rm();
    this.blocks.forEach((n) => {
      t.add(async () => {
        await this.removeBlock(n, !1);
      });
    }), await t.completed, this.dropPointer(), e && this.insert(), this.Editor.UI.checkEmptiness();
  }
  /**
   * Cleans up all the block tools' resources
   * This is called when editor is destroyed
   */
  async destroy() {
    await Promise.all(this.blocks.map((e) => e.destroy()));
  }
  /**
   * Bind Block events
   *
   * @param {Block} block - Block to which event should be bound
   */
  bindBlockEvents(e) {
    const { BlockEvents: t } = this.Editor;
    this.readOnlyMutableListeners.on(e.holder, "keydown", (n) => {
      t.keydown(n);
    }), this.readOnlyMutableListeners.on(e.holder, "keyup", (n) => {
      t.keyup(n);
    }), this.readOnlyMutableListeners.on(e.holder, "dragover", (n) => {
      t.dragOver(n);
    }), this.readOnlyMutableListeners.on(e.holder, "dragleave", (n) => {
      t.dragLeave(n);
    }), e.on("didMutated", (n) => this.blockDidMutated(Cd, n, {
      index: this.getBlockIndex(n)
    }));
  }
  /**
   * Disable mutable handlers and bindings
   */
  disableModuleBindings() {
    this.readOnlyMutableListeners.clearAll();
  }
  /**
   * Enables all module handlers and bindings for all Blocks
   */
  enableModuleBindings() {
    this.readOnlyMutableListeners.on(
      document,
      "cut",
      (e) => this.Editor.BlockEvents.handleCommandX(e)
    ), this.blocks.forEach((e) => {
      this.bindBlockEvents(e);
    });
  }
  /**
   * Validates that the given index is not lower than 0 or higher than the amount of blocks
   *
   * @param {number} index - index of blocks array to validate
   * @returns {boolean}
   */
  validateIndex(e) {
    return !(e < 0 || e >= this._blocks.length);
  }
  /**
   * Block mutation callback
   *
   * @param mutationType - what happened with block
   * @param block - mutated block
   * @param detailData - additional data to pass with change event
   */
  blockDidMutated(e, t, n) {
    const r = new CustomEvent(e, {
      detail: {
        target: new Ar(t),
        ...n
      }
    });
    return this.eventsDispatcher.emit($h, {
      event: r
    }), t;
  }
}, Nm = class extends it {
  constructor() {
    super(...arguments), this.anyBlockSelectedCache = null, this.needToSelectAll = !1, this.nativeInputSelected = !1, this.readyToBlockSelection = !1;
  }
  /**
   * Sanitizer Config
   *
   * @returns {SanitizerConfig}
   */
  get sanitizerConfig() {
    return {
      p: {},
      h1: {},
      h2: {},
      h3: {},
      h4: {},
      h5: {},
      h6: {},
      ol: {},
      ul: {},
      li: {},
      br: !0,
      img: {
        src: !0,
        width: !0,
        height: !0
      },
      a: {
        href: !0
      },
      b: {},
      i: {},
      u: {}
    };
  }
  /**
   * Flag that identifies all Blocks selection
   *
   * @returns {boolean}
   */
  get allBlocksSelected() {
    const { BlockManager: e } = this.Editor;
    return e.blocks.every((t) => t.selected === !0);
  }
  /**
   * Set selected all blocks
   *
   * @param {boolean} state - state to set
   */
  set allBlocksSelected(e) {
    const { BlockManager: t } = this.Editor;
    t.blocks.forEach((n) => {
      n.selected = e;
    }), this.clearCache();
  }
  /**
   * Flag that identifies any Block selection
   *
   * @returns {boolean}
   */
  get anyBlockSelected() {
    const { BlockManager: e } = this.Editor;
    return this.anyBlockSelectedCache === null && (this.anyBlockSelectedCache = e.blocks.some((t) => t.selected === !0)), this.anyBlockSelectedCache;
  }
  /**
   * Return selected Blocks array
   *
   * @returns {Block[]}
   */
  get selectedBlocks() {
    return this.Editor.BlockManager.blocks.filter((e) => e.selected);
  }
  /**
   * Module Preparation
   * Registers Shortcuts CMD+A and CMD+C
   * to select all and copy them
   */
  prepare() {
    this.selection = new Ye(), xs.add({
      name: "CMD+A",
      handler: (e) => {
        const { BlockManager: t, ReadOnly: n } = this.Editor;
        if (n.isEnabled) {
          e.preventDefault(), this.selectAllBlocks();
          return;
        }
        t.currentBlock && this.handleCommandA(e);
      },
      on: this.Editor.UI.nodes.redactor
    });
  }
  /**
   * Toggle read-only state
   *
   *  - Remove all ranges
   *  - Unselect all Blocks
   */
  toggleReadOnly() {
    Ye.get().removeAllRanges(), this.allBlocksSelected = !1;
  }
  /**
   * Remove selection of Block
   *
   * @param {number?} index - Block index according to the BlockManager's indexes
   */
  unSelectBlockByIndex(e) {
    const { BlockManager: t } = this.Editor;
    let n;
    isNaN(e) ? n = t.currentBlock : n = t.getBlockByIndex(e), n.selected = !1, this.clearCache();
  }
  /**
   * Clear selection from Blocks
   *
   * @param {Event} reason - event caused clear of selection
   * @param {boolean} restoreSelection - if true, restore saved selection
   */
  clearSelection(e, t = !1) {
    const { BlockManager: n, Caret: r, RectangleSelection: a } = this.Editor;
    this.needToSelectAll = !1, this.nativeInputSelected = !1, this.readyToBlockSelection = !1;
    const c = e && e instanceof KeyboardEvent, u = c && Bh(e.keyCode);
    if (this.anyBlockSelected && c && u && !Ye.isSelectionExists) {
      const p = n.removeSelectedBlocks();
      n.insertDefaultBlockAtIndex(p, !0), r.setToBlock(n.currentBlock), $a(() => {
        const g = e.key;
        r.insertContentAtCaretPosition(g.length > 1 ? "" : g);
      }, 20)();
    }
    if (this.Editor.CrossBlockSelection.clear(e), !this.anyBlockSelected || a.isRectActivated()) {
      this.Editor.RectangleSelection.clearSelection();
      return;
    }
    t && this.selection.restore(), this.allBlocksSelected = !1;
  }
  /**
   * Reduce each Block and copy its content
   *
   * @param {ClipboardEvent} e - copy/cut event
   * @returns {Promise<void>}
   */
  copySelectedBlocks(e) {
    e.preventDefault();
    const t = ae.make("div");
    this.selectedBlocks.forEach((a) => {
      const c = vi(a.holder.innerHTML, this.sanitizerConfig), u = ae.make("p");
      u.innerHTML = c, t.appendChild(u);
    });
    const n = Array.from(t.childNodes).map((a) => a.textContent).join(`

`), r = t.innerHTML;
    return e.clipboardData.setData("text/plain", n), e.clipboardData.setData("text/html", r), Promise.all(this.selectedBlocks.map((a) => a.save())).then((a) => {
      try {
        e.clipboardData.setData(this.Editor.Paste.MIME_TYPE, JSON.stringify(a));
      } catch {
      }
    });
  }
  /**
   * Select Block by its index
   *
   * @param {number?} index - Block index according to the BlockManager's indexes
   */
  selectBlockByIndex(e) {
    const { BlockManager: t } = this.Editor, n = t.getBlockByIndex(e);
    n !== void 0 && this.selectBlock(n);
  }
  /**
   * Select passed Block
   *
   * @param {Block} block - Block to select
   */
  selectBlock(e) {
    this.selection.save(), Ye.get().removeAllRanges(), e.selected = !0, this.clearCache(), this.Editor.InlineToolbar.close();
  }
  /**
   * Remove selection from passed Block
   *
   * @param {Block} block - Block to unselect
   */
  unselectBlock(e) {
    e.selected = !1, this.clearCache();
  }
  /**
   * Clear anyBlockSelected cache
   */
  clearCache() {
    this.anyBlockSelectedCache = null;
  }
  /**
   * Module destruction
   * De-registers Shortcut CMD+A
   */
  destroy() {
    xs.remove(this.Editor.UI.nodes.redactor, "CMD+A");
  }
  /**
   * First CMD+A selects all input content by native behaviour,
   * next CMD+A keypress selects all blocks
   *
   * @param {KeyboardEvent} event - keyboard event
   */
  handleCommandA(e) {
    if (this.Editor.RectangleSelection.clearSelection(), ae.isNativeInput(e.target) && !this.readyToBlockSelection) {
      this.readyToBlockSelection = !0;
      return;
    }
    const t = this.Editor.BlockManager.getBlock(e.target), n = t.inputs;
    if (n.length > 1 && !this.readyToBlockSelection) {
      this.readyToBlockSelection = !0;
      return;
    }
    if (n.length === 1 && !this.needToSelectAll) {
      this.needToSelectAll = !0;
      return;
    }
    this.needToSelectAll ? (e.preventDefault(), this.selectAllBlocks(), this.needToSelectAll = !1, this.readyToBlockSelection = !1, this.Editor.ConversionToolbar.close()) : this.readyToBlockSelection && (e.preventDefault(), this.selectBlock(t), this.needToSelectAll = !0);
  }
  /**
   * Select All Blocks
   * Each Block has selected setter that makes Block copyable
   */
  selectAllBlocks() {
    this.selection.save(), Ye.get().removeAllRanges(), this.allBlocksSelected = !0, this.Editor.InlineToolbar.close();
  }
}, Pm = class Zl extends it {
  /**
   * Allowed caret positions in input
   *
   * @static
   * @returns {{START: string, END: string, DEFAULT: string}}
   */
  get positions() {
    return {
      START: "start",
      END: "end",
      DEFAULT: "default"
    };
  }
  /**
   * Elements styles that can be useful for Caret Module
   */
  static get CSS() {
    return {
      shadowCaret: "cdx-shadow-caret"
    };
  }
  /**
   * Get's deepest first node and checks if offset is zero
   *
   * @returns {boolean}
   */
  get isAtStart() {
    const { currentBlock: e } = this.Editor.BlockManager;
    if (!e.focusable)
      return !0;
    const t = Ye.get(), n = ae.getDeepestNode(e.currentInput);
    let r = t.focusNode;
    if (ae.isNativeInput(n))
      return (n == null ? void 0 : n.selectionEnd) === 0;
    if (!t.anchorNode)
      return !1;
    let a = r.textContent.search(/\S/);
    a === -1 && (a = 0);
    let c = t.focusOffset;
    return r.nodeType !== Node.TEXT_NODE && r.childNodes.length && (r.childNodes[c] ? (r = r.childNodes[c], c = 0) : (r = r.childNodes[c - 1], c = r.textContent.length)), (ae.isLineBreakTag(n) || ae.isEmpty(n)) && this.getHigherLevelSiblings(r, "left").every((u) => {
      const p = ae.isLineBreakTag(u), g = u.children.length === 1 && ae.isLineBreakTag(u.children[0]), v = p || g;
      return ae.isEmpty(u) && !v;
    }) && c === a ? !0 : n === null || r === n && c <= a;
  }
  /**
   * Get's deepest last node and checks if offset is last node text length
   *
   * @returns {boolean}
   */
  get isAtEnd() {
    const { currentBlock: e } = this.Editor.BlockManager;
    if (!e.focusable)
      return !0;
    const t = Ye.get();
    let n = t.focusNode;
    const r = ae.getDeepestNode(e.currentInput, !0);
    if (ae.isNativeInput(r))
      return (r == null ? void 0 : r.selectionEnd) === r.value.length;
    if (!t.focusNode)
      return !1;
    let a = t.focusOffset;
    if (n.nodeType !== Node.TEXT_NODE && n.childNodes.length && (n.childNodes[a - 1] ? (n = n.childNodes[a - 1], a = n.textContent.length) : (n = n.childNodes[0], a = 0)), ae.isLineBreakTag(r) || ae.isEmpty(r)) {
      const u = this.getHigherLevelSiblings(n, "right");
      if (u.every((p, g) => g === u.length - 1 && ae.isLineBreakTag(p) || ae.isEmpty(p) && !ae.isLineBreakTag(p)) && a === n.textContent.length)
        return !0;
    }
    const c = r.textContent.replace(/\s+$/, "");
    return n === r && a >= c.length;
  }
  /**
   * Method gets Block instance and puts caret to the text node with offset
   * There two ways that method applies caret position:
   *   - first found text node: sets at the beginning, but you can pass an offset
   *   - last found text node: sets at the end of the node. Also, you can customize the behaviour
   *
   * @param {Block} block - Block class
   * @param {string} position - position where to set caret.
   *                            If default - leave default behaviour and apply offset if it's passed
   * @param {number} offset - caret offset regarding to the text node
   */
  setToBlock(e, t = this.positions.DEFAULT, n = 0) {
    var r;
    const { BlockManager: a, BlockSelection: c } = this.Editor;
    if (c.clearSelection(), !e.focusable) {
      (r = window.getSelection()) == null || r.removeAllRanges(), c.selectBlock(e), a.currentBlock = e;
      return;
    }
    let u;
    switch (t) {
      case this.positions.START:
        u = e.firstInput;
        break;
      case this.positions.END:
        u = e.lastInput;
        break;
      default:
        u = e.currentInput;
    }
    if (!u)
      return;
    const p = ae.getDeepestNode(u, t === this.positions.END), g = ae.getContentLength(p);
    switch (!0) {
      case t === this.positions.START:
        n = 0;
        break;
      case t === this.positions.END:
      case n > g:
        n = g;
        break;
    }
    this.set(p, n), a.setCurrentBlockByChildNode(e.holder), a.currentBlock.currentInput = u;
  }
  /**
   * Set caret to the current input of current Block.
   *
   * @param {HTMLElement} input - input where caret should be set
   * @param {string} position - position of the caret.
   *                            If default - leave default behaviour and apply offset if it's passed
   * @param {number} offset - caret offset regarding to the text node
   */
  setToInput(e, t = this.positions.DEFAULT, n = 0) {
    const { currentBlock: r } = this.Editor.BlockManager, a = ae.getDeepestNode(e);
    switch (t) {
      case this.positions.START:
        this.set(a, 0);
        break;
      case this.positions.END:
        this.set(a, ae.getContentLength(a));
        break;
      default:
        n && this.set(a, n);
    }
    r.currentInput = e;
  }
  /**
   * Creates Document Range and sets caret to the element with offset
   *
   * @param {HTMLElement} element - target node.
   * @param {number} offset - offset
   */
  set(e, t = 0) {
    const { top: n, bottom: r } = Ye.setCursor(e, t), { innerHeight: a } = window;
    n < 0 ? window.scrollBy(0, n - 30) : r > a && window.scrollBy(0, r - a + 30);
  }
  /**
   * Set Caret to the last Block
   * If last block is not empty, append another empty block
   */
  setToTheLastBlock() {
    const e = this.Editor.BlockManager.lastBlock;
    if (e)
      if (e.tool.isDefault && e.isEmpty)
        this.setToBlock(e);
      else {
        const t = this.Editor.BlockManager.insertAtEnd();
        this.setToBlock(t);
      }
  }
  /**
   * Extract content fragment of current Block from Caret position to the end of the Block
   */
  extractFragmentFromCaretPosition() {
    const e = Ye.get();
    if (e.rangeCount) {
      const t = e.getRangeAt(0), n = this.Editor.BlockManager.currentBlock.currentInput;
      if (t.deleteContents(), n)
        if (ae.isNativeInput(n)) {
          const r = n, a = document.createDocumentFragment(), c = r.value.substring(0, r.selectionStart), u = r.value.substring(r.selectionStart);
          return a.textContent = u, r.value = c, a;
        } else {
          const r = t.cloneRange();
          return r.selectNodeContents(n), r.setStart(t.endContainer, t.endOffset), r.extractContents();
        }
    }
  }
  /**
   * Set's caret to the next Block or Tool`s input
   * Before moving caret, we should check if caret position is at the end of Plugins node
   * Using {@link Dom#getDeepestNode} to get a last node and match with current selection
   *
   * @param {boolean} force - pass true to skip check for caret position
   */
  navigateNext(e = !1) {
    const { BlockManager: t } = this.Editor, { currentBlock: n, nextBlock: r } = t, { nextInput: a } = n, c = this.isAtEnd;
    let u = r;
    const p = e || c;
    if (a && p)
      return this.setToInput(a, this.positions.START), !0;
    if (u === null) {
      if (n.tool.isDefault || !p)
        return !1;
      u = t.insertAtEnd();
    }
    return p ? (this.setToBlock(u, this.positions.START), !0) : !1;
  }
  /**
   * Set's caret to the previous Tool`s input or Block
   * Before moving caret, we should check if caret position is start of the Plugins node
   * Using {@link Dom#getDeepestNode} to get a last node and match with current selection
   *
   * @param {boolean} force - pass true to skip check for caret position
   */
  navigatePrevious(e = !1) {
    const { currentBlock: t, previousBlock: n } = this.Editor.BlockManager;
    if (!t)
      return !1;
    const { previousInput: r } = t, a = e || this.isAtStart;
    return r && a ? (this.setToInput(r, this.positions.END), !0) : n !== null && a ? (this.setToBlock(n, this.positions.END), !0) : !1;
  }
  /**
   * Inserts shadow element after passed element where caret can be placed
   *
   * @param {Element} element - element after which shadow caret should be inserted
   */
  createShadow(e) {
    const t = document.createElement("span");
    t.classList.add(Zl.CSS.shadowCaret), e.insertAdjacentElement("beforeend", t);
  }
  /**
   * Restores caret position
   *
   * @param {HTMLElement} element - element where caret should be restored
   */
  restoreCaret(e) {
    const t = e.querySelector(`.${Zl.CSS.shadowCaret}`);
    if (!t)
      return;
    new Ye().expandToTag(t);
    const n = document.createRange();
    n.selectNode(t), n.extractContents();
  }
  /**
   * Inserts passed content at caret position
   *
   * @param {string} content - content to insert
   */
  insertContentAtCaretPosition(e) {
    const t = document.createDocumentFragment(), n = document.createElement("div"), r = Ye.get(), a = Ye.range;
    n.innerHTML = e, Array.from(n.childNodes).forEach((g) => t.appendChild(g)), t.childNodes.length === 0 && t.appendChild(new Text());
    const c = t.lastChild;
    a.deleteContents(), a.insertNode(t);
    const u = document.createRange(), p = c.nodeType === Node.TEXT_NODE ? c : c.firstChild;
    p !== null && p.textContent !== null && u.setStart(p, p.textContent.length), r.removeAllRanges(), r.addRange(u);
  }
  /**
   * Get all first-level (first child of [contenteditable]) siblings from passed node
   * Then you can check it for emptiness
   *
   * @example
   * <div contenteditable>
   * <p></p>                            |
   * <p></p>                            | left first-level siblings
   * <p></p>                            |
   * <blockquote><a><b>adaddad</b><a><blockquote>       <-- passed node for example <b>
   * <p></p>                            |
   * <p></p>                            | right first-level siblings
   * <p></p>                            |
   * </div>
   * @param {HTMLElement} from - element from which siblings should be searched
   * @param {'left' | 'right'} direction - direction of search
   * @returns {HTMLElement[]}
   */
  getHigherLevelSiblings(e, t) {
    let n = e;
    const r = [];
    for (; n.parentNode && n.parentNode.contentEditable !== "true"; )
      n = n.parentNode;
    const a = t === "left" ? "previousSibling" : "nextSibling";
    for (; n[a]; )
      n = n[a], r.push(n);
    return r;
  }
};
class Hm extends it {
  constructor() {
    super(...arguments), this.onMouseUp = () => {
      this.listeners.off(document, "mouseover", this.onMouseOver), this.listeners.off(document, "mouseup", this.onMouseUp);
    }, this.onMouseOver = (e) => {
      const { BlockManager: t, BlockSelection: n } = this.Editor;
      if (e.relatedTarget === null && e.target === null)
        return;
      const r = t.getBlockByChildNode(e.relatedTarget) || this.lastSelectedBlock, a = t.getBlockByChildNode(e.target);
      if (!(!r || !a) && a !== r) {
        if (r === this.firstSelectedBlock) {
          Ye.get().removeAllRanges(), r.selected = !0, a.selected = !0, n.clearCache();
          return;
        }
        if (a === this.firstSelectedBlock) {
          r.selected = !1, a.selected = !1, n.clearCache();
          return;
        }
        this.Editor.InlineToolbar.close(), this.toggleBlocksSelectedState(r, a), this.lastSelectedBlock = a;
      }
    };
  }
  /**
   * Module preparation
   *
   * @returns {Promise}
   */
  async prepare() {
    this.listeners.on(document, "mousedown", (e) => {
      this.enableCrossBlockSelection(e);
    });
  }
  /**
   * Sets up listeners
   *
   * @param {MouseEvent} event - mouse down event
   */
  watchSelection(e) {
    if (e.button !== pf.LEFT)
      return;
    const { BlockManager: t } = this.Editor;
    this.firstSelectedBlock = t.getBlock(e.target), this.lastSelectedBlock = this.firstSelectedBlock, this.listeners.on(document, "mouseover", this.onMouseOver), this.listeners.on(document, "mouseup", this.onMouseUp);
  }
  /**
   * return boolean is cross block selection started
   */
  get isCrossBlockSelectionStarted() {
    return !!this.firstSelectedBlock && !!this.lastSelectedBlock;
  }
  /**
   * Change selection state of the next Block
   * Used for CBS via Shift + arrow keys
   *
   * @param {boolean} next - if true, toggle next block. Previous otherwise
   */
  toggleBlockSelectedState(e = !0) {
    const { BlockManager: t, BlockSelection: n } = this.Editor;
    this.lastSelectedBlock || (this.lastSelectedBlock = this.firstSelectedBlock = t.currentBlock), this.firstSelectedBlock === this.lastSelectedBlock && (this.firstSelectedBlock.selected = !0, n.clearCache(), Ye.get().removeAllRanges());
    const r = t.blocks.indexOf(this.lastSelectedBlock) + (e ? 1 : -1), a = t.blocks[r];
    a && (this.lastSelectedBlock.selected !== a.selected ? (a.selected = !0, n.clearCache()) : (this.lastSelectedBlock.selected = !1, n.clearCache()), this.lastSelectedBlock = a, this.Editor.InlineToolbar.close(), a.holder.scrollIntoView({
      block: "nearest"
    }));
  }
  /**
   * Clear saved state
   *
   * @param {Event} reason - event caused clear of selection
   */
  clear(e) {
    const { BlockManager: t, BlockSelection: n, Caret: r } = this.Editor, a = t.blocks.indexOf(this.firstSelectedBlock), c = t.blocks.indexOf(this.lastSelectedBlock);
    if (n.anyBlockSelected && a > -1 && c > -1 && e && e instanceof KeyboardEvent)
      switch (e.keyCode) {
        case Fe.DOWN:
        case Fe.RIGHT:
          r.setToBlock(t.blocks[Math.max(a, c)], r.positions.END);
          break;
        case Fe.UP:
        case Fe.LEFT:
          r.setToBlock(t.blocks[Math.min(a, c)], r.positions.START);
          break;
        default:
          r.setToBlock(t.blocks[Math.max(a, c)], r.positions.END);
      }
    this.firstSelectedBlock = this.lastSelectedBlock = null;
  }
  /**
   * Enables Cross Block Selection
   *
   * @param {MouseEvent} event - mouse down event
   */
  enableCrossBlockSelection(e) {
    const { UI: t } = this.Editor;
    Ye.isCollapsed || this.Editor.BlockSelection.clearSelection(e), t.nodes.redactor.contains(e.target) ? this.watchSelection(e) : this.Editor.BlockSelection.clearSelection(e);
  }
  /**
   * Change blocks selection state between passed two blocks.
   *
   * @param {Block} firstBlock - first block in range
   * @param {Block} lastBlock - last block in range
   */
  toggleBlocksSelectedState(e, t) {
    const { BlockManager: n, BlockSelection: r } = this.Editor, a = n.blocks.indexOf(e), c = n.blocks.indexOf(t), u = e.selected !== t.selected;
    for (let p = Math.min(a, c); p <= Math.max(a, c); p++) {
      const g = n.blocks[p];
      g !== this.firstSelectedBlock && g !== (u ? e : t) && (n.blocks[p].selected = !n.blocks[p].selected, r.clearCache());
    }
  }
}
class jm extends it {
  constructor() {
    super(...arguments), this.isStartedAtEditor = !1;
  }
  /**
   * Toggle read-only state
   *
   * if state is true:
   *  - disable all drag-n-drop event handlers
   *
   * if state is false:
   *  - restore drag-n-drop event handlers
   *
   * @param {boolean} readOnlyEnabled - "read only" state
   */
  toggleReadOnly(e) {
    e ? this.disableModuleBindings() : this.enableModuleBindings();
  }
  /**
   * Add drag events listeners to editor zone
   */
  enableModuleBindings() {
    const { UI: e } = this.Editor;
    this.readOnlyMutableListeners.on(e.nodes.holder, "drop", async (t) => {
      await this.processDrop(t);
    }, !0), this.readOnlyMutableListeners.on(e.nodes.holder, "dragstart", () => {
      this.processDragStart();
    }), this.readOnlyMutableListeners.on(e.nodes.holder, "dragover", (t) => {
      this.processDragOver(t);
    }, !0);
  }
  /**
   * Unbind drag-n-drop event handlers
   */
  disableModuleBindings() {
    this.readOnlyMutableListeners.clearAll();
  }
  /**
   * Handle drop event
   *
   * @param {DragEvent} dropEvent - drop event
   */
  async processDrop(e) {
    const {
      BlockManager: t,
      Caret: n,
      Paste: r
    } = this.Editor;
    e.preventDefault(), t.blocks.forEach((c) => {
      c.dropTarget = !1;
    }), Ye.isAtEditor && !Ye.isCollapsed && this.isStartedAtEditor && document.execCommand("delete"), this.isStartedAtEditor = !1;
    const a = t.setCurrentBlockByChildNode(e.target);
    if (a)
      this.Editor.Caret.setToBlock(a, n.positions.END);
    else {
      const c = t.setCurrentBlockByChildNode(t.lastBlock.holder);
      this.Editor.Caret.setToBlock(c, n.positions.END);
    }
    await r.processDataTransfer(e.dataTransfer, !0);
  }
  /**
   * Handle drag start event
   */
  processDragStart() {
    Ye.isAtEditor && !Ye.isCollapsed && (this.isStartedAtEditor = !0), this.Editor.InlineToolbar.close();
  }
  /**
   * @param {DragEvent} dragEvent - drag event
   */
  processDragOver(e) {
    e.preventDefault();
  }
}
class $m extends it {
  /**
   * Prepare the module
   *
   * @param options - options used by the modification observer module
   * @param options.config - Editor configuration object
   * @param options.eventsDispatcher - common Editor event bus
   */
  constructor({ config: e, eventsDispatcher: t }) {
    super({
      config: e,
      eventsDispatcher: t
    }), this.disabled = !1, this.batchingTimeout = null, this.batchingOnChangeQueue = /* @__PURE__ */ new Map(), this.batchTime = 400, this.mutationObserver = new MutationObserver((n) => {
      this.redactorChanged(n);
    }), this.eventsDispatcher.on($h, (n) => {
      this.particularBlockChanged(n.event);
    }), this.eventsDispatcher.on(Yh, () => {
      this.disable();
    }), this.eventsDispatcher.on(Fh, () => {
      this.enable();
    });
  }
  /**
   * Enables onChange event
   */
  enable() {
    this.mutationObserver.observe(
      this.Editor.UI.nodes.redactor,
      {
        childList: !0,
        subtree: !0,
        characterData: !0,
        attributes: !0
      }
    ), this.disabled = !1;
  }
  /**
   * Disables onChange event
   */
  disable() {
    this.mutationObserver.disconnect(), this.disabled = !0;
  }
  /**
   * Call onChange event passed to Editor.js configuration
   *
   * @param event - some of our custom change events
   */
  particularBlockChanged(e) {
    this.disabled || !Lt(this.config.onChange) || (this.batchingOnChangeQueue.set(`block:${e.detail.target.id}:event:${e.type}`, e), this.batchingTimeout && clearTimeout(this.batchingTimeout), this.batchingTimeout = setTimeout(() => {
      let t;
      this.batchingOnChangeQueue.size === 1 ? t = this.batchingOnChangeQueue.values().next().value : t = Array.from(this.batchingOnChangeQueue.values()), this.config.onChange && this.config.onChange(this.Editor.API.methods, t), this.batchingOnChangeQueue.clear();
    }, this.batchTime));
  }
  /**
   * Fired on every blocks wrapper dom change
   *
   * @param mutations - mutations happened
   */
  redactorChanged(e) {
    this.eventsDispatcher.emit(ql, {
      mutations: e
    });
  }
}
const ru = class su extends it {
  constructor() {
    super(...arguments), this.MIME_TYPE = "application/x-editor-js", this.toolsTags = {}, this.tagsByTool = {}, this.toolsPatterns = [], this.toolsFiles = {}, this.exceptionList = [], this.processTool = (e) => {
      try {
        const t = e.create({}, {}, !1);
        if (e.pasteConfig === !1) {
          this.exceptionList.push(e.name);
          return;
        }
        if (!Lt(t.onPaste))
          return;
        this.getTagsConfig(e), this.getFilesConfig(e), this.getPatternsConfig(e);
      } catch (t) {
        gt(
          `Paste handling for «${e.name}» Tool hasn't been set up because of the error`,
          "warn",
          t
        );
      }
    }, this.handlePasteEvent = async (e) => {
      const { BlockManager: t, Toolbar: n } = this.Editor, r = t.setCurrentBlockByChildNode(e.target);
      !r || this.isNativeBehaviour(e.target) && !e.clipboardData.types.includes("Files") || r && this.exceptionList.includes(r.name) || (e.preventDefault(), this.processDataTransfer(e.clipboardData), n.close());
    };
  }
  /**
   * Set onPaste callback and collect tools` paste configurations
   */
  async prepare() {
    this.processTools();
  }
  /**
   * Set read-only state
   *
   * @param {boolean} readOnlyEnabled - read only flag value
   */
  toggleReadOnly(e) {
    e ? this.unsetCallback() : this.setCallback();
  }
  /**
   * Handle pasted or dropped data transfer object
   *
   * @param {DataTransfer} dataTransfer - pasted or dropped data transfer object
   * @param {boolean} isDragNDrop - true if data transfer comes from drag'n'drop events
   */
  async processDataTransfer(e, t = !1) {
    const { Tools: n } = this.Editor, r = e.types;
    if ((r.includes ? r.includes("Files") : r.contains("Files")) && !cn(this.toolsFiles)) {
      await this.processFiles(e.files);
      return;
    }
    const a = e.getData(this.MIME_TYPE), c = e.getData("text/plain");
    let u = e.getData("text/html");
    if (a)
      try {
        this.insertEditorJSData(JSON.parse(a));
        return;
      } catch {
      }
    t && c.trim() && u.trim() && (u = "<p>" + (u.trim() ? u : c) + "</p>");
    const p = Object.keys(this.toolsTags).reduce((x, y) => (x[y.toLowerCase()] = this.toolsTags[y].sanitizationConfig ?? {}, x), {}), g = Object.assign({}, p, n.getAllInlineToolsSanitizeConfig(), { br: {} }), v = vi(u, g);
    !v.trim() || v.trim() === c || !ae.isHTMLString(v) ? await this.processText(c) : await this.processText(v, !0);
  }
  /**
   * Process pasted text and divide them into Blocks
   *
   * @param {string} data - text to process. Can be HTML or plain.
   * @param {boolean} isHTML - if passed string is HTML, this parameter should be true
   */
  async processText(e, t = !1) {
    const { Caret: n, BlockManager: r } = this.Editor, a = t ? this.processHTML(e) : this.processPlain(e);
    if (!a.length)
      return;
    if (a.length === 1) {
      a[0].isBlock ? this.processSingleBlock(a.pop()) : this.processInlinePaste(a.pop());
      return;
    }
    const c = r.currentBlock && r.currentBlock.tool.isDefault && r.currentBlock.isEmpty;
    a.map(
      async (u, p) => this.insertBlock(u, p === 0 && c)
    ), r.currentBlock && n.setToBlock(r.currentBlock, n.positions.END);
  }
  /**
   * Set onPaste callback handler
   */
  setCallback() {
    this.listeners.on(this.Editor.UI.nodes.holder, "paste", this.handlePasteEvent);
  }
  /**
   * Unset onPaste callback handler
   */
  unsetCallback() {
    this.listeners.off(this.Editor.UI.nodes.holder, "paste", this.handlePasteEvent);
  }
  /**
   * Get and process tool`s paste configs
   */
  processTools() {
    const e = this.Editor.Tools.blockTools;
    Array.from(e.values()).forEach(this.processTool);
  }
  /**
   * Get tags name list from either tag name or sanitization config.
   *
   * @param {string | object} tagOrSanitizeConfig - tag name or sanitize config object.
   * @returns {string[]} array of tags.
   */
  collectTagNames(e) {
    return nr(e) ? [e] : uo(e) ? Object.keys(e) : [];
  }
  /**
   * Get tags to substitute by Tool
   *
   * @param tool - BlockTool object
   */
  getTagsConfig(e) {
    if (e.pasteConfig === !1)
      return;
    const t = e.pasteConfig.tags || [], n = [];
    t.forEach((r) => {
      const a = this.collectTagNames(r);
      n.push(...a), a.forEach((c) => {
        if (Object.prototype.hasOwnProperty.call(this.toolsTags, c)) {
          gt(
            `Paste handler for «${e.name}» Tool on «${c}» tag is skipped because it is already used by «${this.toolsTags[c].tool.name}» Tool.`,
            "warn"
          );
          return;
        }
        const u = uo(r) ? r[c] : null;
        this.toolsTags[c.toUpperCase()] = {
          tool: e,
          sanitizationConfig: u
        };
      });
    }), this.tagsByTool[e.name] = n.map((r) => r.toUpperCase());
  }
  /**
   * Get files` types and extensions to substitute by Tool
   *
   * @param tool - BlockTool object
   */
  getFilesConfig(e) {
    if (e.pasteConfig === !1)
      return;
    const { files: t = {} } = e.pasteConfig;
    let { extensions: n, mimeTypes: r } = t;
    !n && !r || (n && !Array.isArray(n) && (gt(`«extensions» property of the onDrop config for «${e.name}» Tool should be an array`), n = []), r && !Array.isArray(r) && (gt(`«mimeTypes» property of the onDrop config for «${e.name}» Tool should be an array`), r = []), r && (r = r.filter((a) => vf(a) ? !0 : (gt(`MIME type value «${a}» for the «${e.name}» Tool is not a valid MIME type`, "warn"), !1))), this.toolsFiles[e.name] = {
      extensions: n || [],
      mimeTypes: r || []
    });
  }
  /**
   * Get RegExp patterns to substitute by Tool
   *
   * @param tool - BlockTool object
   */
  getPatternsConfig(e) {
    e.pasteConfig === !1 || !e.pasteConfig.patterns || cn(e.pasteConfig.patterns) || Object.entries(e.pasteConfig.patterns).forEach(([t, n]) => {
      n instanceof RegExp || gt(
        `Pattern ${n} for «${e.name}» Tool is skipped because it should be a Regexp instance.`,
        "warn"
      ), this.toolsPatterns.push({
        key: t,
        pattern: n,
        tool: e
      });
    });
  }
  /**
   * Check if browser behavior suits better
   *
   * @param {EventTarget} element - element where content has been pasted
   * @returns {boolean}
   */
  isNativeBehaviour(e) {
    return ae.isNativeInput(e);
  }
  /**
   * Get files from data transfer object and insert related Tools
   *
   * @param {FileList} items - pasted or dropped items
   */
  async processFiles(e) {
    const { BlockManager: t } = this.Editor;
    let n;
    n = await Promise.all(
      Array.from(e).map((a) => this.processFile(a))
    ), n = n.filter((a) => !!a);
    const r = t.currentBlock.tool.isDefault && t.currentBlock.isEmpty;
    n.forEach(
      (a, c) => {
        t.paste(a.type, a.event, c === 0 && r);
      }
    );
  }
  /**
   * Get information about file and find Tool to handle it
   *
   * @param {File} file - file to process
   */
  async processFile(e) {
    const t = bf(e), n = Object.entries(this.toolsFiles).find(([a, { mimeTypes: c, extensions: u }]) => {
      const [p, g] = e.type.split("/"), v = u.find((y) => y.toLowerCase() === t.toLowerCase()), x = c.find((y) => {
        const [T, k] = y.split("/");
        return T === p && (k === g || k === "*");
      });
      return !!v || !!x;
    });
    if (!n)
      return;
    const [r] = n;
    return {
      event: this.composePasteEvent("file", {
        file: e
      }),
      type: r
    };
  }
  /**
   * Split HTML string to blocks and return it as array of Block data
   *
   * @param {string} innerHTML - html string to process
   * @returns {PasteData[]}
   */
  processHTML(e) {
    const { Tools: t } = this.Editor, n = ae.make("DIV");
    return n.innerHTML = e, this.getNodes(n).map((r) => {
      let a, c = t.defaultTool, u = !1;
      switch (r.nodeType) {
        case Node.DOCUMENT_FRAGMENT_NODE:
          a = ae.make("div"), a.appendChild(r);
          break;
        case Node.ELEMENT_NODE:
          a = r, u = !0, this.toolsTags[a.tagName] && (c = this.toolsTags[a.tagName].tool);
          break;
      }
      const { tags: p } = c.pasteConfig || { tags: [] }, g = p.reduce((y, T) => (this.collectTagNames(T).forEach((k) => {
        const M = uo(T) ? T[k] : null;
        y[k.toLowerCase()] = M || {};
      }), y), {}), v = Object.assign({}, g, c.baseSanitizeConfig);
      if (a.tagName.toLowerCase() === "table") {
        const y = vi(a.outerHTML, v);
        a = ae.make("div", void 0, {
          innerHTML: y
        }).firstChild;
      } else
        a.innerHTML = vi(a.innerHTML, v);
      const x = this.composePasteEvent("tag", {
        data: a
      });
      return {
        content: a,
        isBlock: u,
        tool: c.name,
        event: x
      };
    }).filter((r) => {
      const a = ae.isEmpty(r.content), c = ae.isSingleTag(r.content);
      return !a || c;
    });
  }
  /**
   * Split plain text by new line symbols and return it as array of Block data
   *
   * @param {string} plain - string to process
   * @returns {PasteData[]}
   */
  processPlain(e) {
    const { defaultBlock: t } = this.config;
    if (!e)
      return [];
    const n = t;
    return e.split(/\r?\n/).filter((r) => r.trim()).map((r) => {
      const a = ae.make("div");
      a.textContent = r;
      const c = this.composePasteEvent("tag", {
        data: a
      });
      return {
        content: a,
        tool: n,
        isBlock: !1,
        event: c
      };
    });
  }
  /**
   * Process paste of single Block tool content
   *
   * @param {PasteData} dataToInsert - data of Block to insert
   */
  async processSingleBlock(e) {
    const { Caret: t, BlockManager: n } = this.Editor, { currentBlock: r } = n;
    if (!r || e.tool !== r.name || !ae.containsOnlyInlineElements(e.content.innerHTML)) {
      this.insertBlock(e, (r == null ? void 0 : r.tool.isDefault) && r.isEmpty);
      return;
    }
    t.insertContentAtCaretPosition(e.content.innerHTML);
  }
  /**
   * Process paste to single Block:
   * 1. Find patterns` matches
   * 2. Insert new block if it is not the same type as current one
   * 3. Just insert text if there is no substitutions
   *
   * @param {PasteData} dataToInsert - data of Block to insert
   */
  async processInlinePaste(e) {
    const { BlockManager: t, Caret: n } = this.Editor, { content: r } = e;
    if (t.currentBlock && t.currentBlock.tool.isDefault && r.textContent.length < su.PATTERN_PROCESSING_MAX_LENGTH) {
      const a = await this.processPattern(r.textContent);
      if (a) {
        const c = t.currentBlock && t.currentBlock.tool.isDefault && t.currentBlock.isEmpty, u = t.paste(a.tool, a.event, c);
        n.setToBlock(u, n.positions.END);
        return;
      }
    }
    if (t.currentBlock && t.currentBlock.currentInput) {
      const a = t.currentBlock.tool.baseSanitizeConfig;
      document.execCommand(
        "insertHTML",
        !1,
        vi(r.innerHTML, a)
      );
    } else
      this.insertBlock(e);
  }
  /**
   * Get patterns` matches
   *
   * @param {string} text - text to process
   * @returns {Promise<{event: PasteEvent, tool: string}>}
   */
  async processPattern(e) {
    const t = this.toolsPatterns.find((n) => {
      const r = n.pattern.exec(e);
      return r ? e === r.shift() : !1;
    });
    return t ? {
      event: this.composePasteEvent("pattern", {
        key: t.key,
        data: e
      }),
      tool: t.tool.name
    } : void 0;
  }
  /**
   * Insert pasted Block content to Editor
   *
   * @param {PasteData} data - data to insert
   * @param {boolean} canReplaceCurrentBlock - if true and is current Block is empty, will replace current Block
   * @returns {void}
   */
  insertBlock(e, t = !1) {
    const { BlockManager: n, Caret: r } = this.Editor, { currentBlock: a } = n;
    let c;
    if (t && a && a.isEmpty) {
      c = n.paste(e.tool, e.event, !0), r.setToBlock(c, r.positions.END);
      return;
    }
    c = n.paste(e.tool, e.event), r.setToBlock(c, r.positions.END);
  }
  /**
   * Insert data passed as application/x-editor-js JSON
   *
   * @param {Array} blocks — Blocks' data to insert
   * @returns {void}
   */
  insertEditorJSData(e) {
    const { BlockManager: t, Caret: n, Tools: r } = this.Editor;
    Uh(
      e,
      (a) => r.blockTools.get(a).sanitizeConfig
    ).forEach(({ tool: a, data: c }, u) => {
      let p = !1;
      u === 0 && (p = t.currentBlock && t.currentBlock.tool.isDefault && t.currentBlock.isEmpty);
      const g = t.insert({
        tool: a,
        data: c,
        replace: p
      });
      n.setToBlock(g, n.positions.END);
    });
  }
  /**
   * Fetch nodes from Element node
   *
   * @param {Node} node - current node
   * @param {Node[]} nodes - processed nodes
   * @param {Node} destNode - destination node
   */
  processElementNode(e, t, n) {
    const r = Object.keys(this.toolsTags), a = e, { tool: c } = this.toolsTags[a.tagName] || {}, u = this.tagsByTool[c == null ? void 0 : c.name] || [], p = r.includes(a.tagName), g = ae.blockElements.includes(a.tagName.toLowerCase()), v = Array.from(a.children).some(
      ({ tagName: y }) => r.includes(y) && !u.includes(y)
    ), x = Array.from(a.children).some(
      ({ tagName: y }) => ae.blockElements.includes(y.toLowerCase())
    );
    if (!g && !p && !v)
      return n.appendChild(a), [...t, n];
    if (p && !v || g && !x && !v)
      return [...t, n, a];
  }
  /**
   * Recursively divide HTML string to two types of nodes:
   * 1. Block element
   * 2. Document Fragments contained text and markup tags like a, b, i etc.
   *
   * @param {Node} wrapper - wrapper of paster HTML content
   * @returns {Node[]}
   */
  getNodes(e) {
    const t = Array.from(e.childNodes);
    let n;
    const r = (a, c) => {
      if (ae.isEmpty(c) && !ae.isSingleTag(c))
        return a;
      const u = a[a.length - 1];
      let p = new DocumentFragment();
      switch (u && ae.isFragment(u) && (p = a.pop()), c.nodeType) {
        case Node.ELEMENT_NODE:
          if (n = this.processElementNode(c, a, p), n)
            return n;
          break;
        case Node.TEXT_NODE:
          return p.appendChild(c), [...a, p];
        default:
          return [...a, p];
      }
      return [...a, ...Array.from(c.childNodes).reduce(r, [])];
    };
    return t.reduce(r, []);
  }
  /**
   * Compose paste event with passed type and detail
   *
   * @param {string} type - event type
   * @param {PasteEventDetail} detail - event detail
   */
  composePasteEvent(e, t) {
    return new CustomEvent(e, {
      detail: t
    });
  }
};
ru.PATTERN_PROCESSING_MAX_LENGTH = 450;
let Ym = ru;
class Fm extends it {
  constructor() {
    super(...arguments), this.toolsDontSupportReadOnly = [], this.readOnlyEnabled = !1;
  }
  /**
   * Returns state of read only mode
   */
  get isEnabled() {
    return this.readOnlyEnabled;
  }
  /**
   * Set initial state
   */
  async prepare() {
    const { Tools: e } = this.Editor, { blockTools: t } = e, n = [];
    Array.from(t.entries()).forEach(([r, a]) => {
      a.isReadOnlySupported || n.push(r);
    }), this.toolsDontSupportReadOnly = n, this.config.readOnly && n.length > 0 && this.throwCriticalError(), this.toggle(this.config.readOnly);
  }
  /**
   * Set read-only mode or toggle current state
   * Call all Modules `toggleReadOnly` method and re-render Editor
   *
   * @param {boolean} state - (optional) read-only state or toggle
   */
  async toggle(e = !this.readOnlyEnabled) {
    e && this.toolsDontSupportReadOnly.length > 0 && this.throwCriticalError();
    const t = this.readOnlyEnabled;
    this.readOnlyEnabled = e;
    for (const r in this.Editor)
      this.Editor[r].toggleReadOnly && this.Editor[r].toggleReadOnly(e);
    if (t === e)
      return this.readOnlyEnabled;
    const n = await this.Editor.Saver.save();
    return await this.Editor.BlockManager.clear(), await this.Editor.Renderer.render(n.blocks), this.readOnlyEnabled;
  }
  /**
   * Throws an error about tools which don't support read-only mode
   */
  throwCriticalError() {
    throw new Hh(
      `To enable read-only mode all connected tools should support it. Tools ${this.toolsDontSupportReadOnly.join(", ")} don't support read-only mode.`
    );
  }
}
class ia extends it {
  constructor() {
    super(...arguments), this.isRectSelectionActivated = !1, this.SCROLL_SPEED = 3, this.HEIGHT_OF_SCROLL_ZONE = 40, this.BOTTOM_SCROLL_ZONE = 1, this.TOP_SCROLL_ZONE = 2, this.MAIN_MOUSE_BUTTON = 0, this.mousedown = !1, this.isScrolling = !1, this.inScrollZone = null, this.startX = 0, this.startY = 0, this.mouseX = 0, this.mouseY = 0, this.stackOfSelected = [], this.listenerIds = [];
  }
  /**
   * CSS classes for the Block
   *
   * @returns {{wrapper: string, content: string}}
   */
  static get CSS() {
    return {
      overlay: "codex-editor-overlay",
      overlayContainer: "codex-editor-overlay__container",
      rect: "codex-editor-overlay__rectangle",
      topScrollZone: "codex-editor-overlay__scroll-zone--top",
      bottomScrollZone: "codex-editor-overlay__scroll-zone--bottom"
    };
  }
  /**
   * Module Preparation
   * Creating rect and hang handlers
   */
  prepare() {
    this.enableModuleBindings();
  }
  /**
   * Init rect params
   *
   * @param {number} pageX - X coord of mouse
   * @param {number} pageY - Y coord of mouse
   */
  startSelection(e, t) {
    const n = document.elementFromPoint(e - window.pageXOffset, t - window.pageYOffset);
    n.closest(`.${this.Editor.Toolbar.CSS.toolbar}`) || (this.Editor.BlockSelection.allBlocksSelected = !1, this.clearSelection(), this.stackOfSelected = []);
    const r = [
      `.${bi.CSS.content}`,
      `.${this.Editor.Toolbar.CSS.toolbar}`,
      `.${this.Editor.InlineToolbar.CSS.inlineToolbar}`
    ], a = n.closest("." + this.Editor.UI.CSS.editorWrapper), c = r.some((u) => !!n.closest(u));
    !a || c || (this.mousedown = !0, this.startX = e, this.startY = t);
  }
  /**
   * Clear all params to end selection
   */
  endSelection() {
    this.mousedown = !1, this.startX = 0, this.startY = 0, this.overlayRectangle.style.display = "none";
  }
  /**
   * is RectSelection Activated
   */
  isRectActivated() {
    return this.isRectSelectionActivated;
  }
  /**
   * Mark that selection is end
   */
  clearSelection() {
    this.isRectSelectionActivated = !1;
  }
  /**
   * Sets Module necessary event handlers
   */
  enableModuleBindings() {
    const { container: e } = this.genHTML();
    this.listeners.on(e, "mousedown", (t) => {
      this.processMouseDown(t);
    }, !1), this.listeners.on(document.body, "mousemove", zl((t) => {
      this.processMouseMove(t);
    }, 10), {
      passive: !0
    }), this.listeners.on(document.body, "mouseleave", () => {
      this.processMouseLeave();
    }), this.listeners.on(window, "scroll", zl((t) => {
      this.processScroll(t);
    }, 10), {
      passive: !0
    }), this.listeners.on(document.body, "mouseup", () => {
      this.processMouseUp();
    }, !1);
  }
  /**
   * Handle mouse down events
   *
   * @param {MouseEvent} mouseEvent - mouse event payload
   */
  processMouseDown(e) {
    e.button === this.MAIN_MOUSE_BUTTON && (e.target.closest(ae.allInputsSelector) !== null || this.startSelection(e.pageX, e.pageY));
  }
  /**
   * Handle mouse move events
   *
   * @param {MouseEvent} mouseEvent - mouse event payload
   */
  processMouseMove(e) {
    this.changingRectangle(e), this.scrollByZones(e.clientY);
  }
  /**
   * Handle mouse leave
   */
  processMouseLeave() {
    this.clearSelection(), this.endSelection();
  }
  /**
   * @param {MouseEvent} mouseEvent - mouse event payload
   */
  processScroll(e) {
    this.changingRectangle(e);
  }
  /**
   * Handle mouse up
   */
  processMouseUp() {
    this.clearSelection(), this.endSelection();
  }
  /**
   * Scroll If mouse in scroll zone
   *
   * @param {number} clientY - Y coord of mouse
   */
  scrollByZones(e) {
    if (this.inScrollZone = null, e <= this.HEIGHT_OF_SCROLL_ZONE && (this.inScrollZone = this.TOP_SCROLL_ZONE), document.documentElement.clientHeight - e <= this.HEIGHT_OF_SCROLL_ZONE && (this.inScrollZone = this.BOTTOM_SCROLL_ZONE), !this.inScrollZone) {
      this.isScrolling = !1;
      return;
    }
    this.isScrolling || (this.scrollVertical(this.inScrollZone === this.TOP_SCROLL_ZONE ? -this.SCROLL_SPEED : this.SCROLL_SPEED), this.isScrolling = !0);
  }
  /**
   * Generates required HTML elements
   *
   * @returns {Object<string, Element>}
   */
  genHTML() {
    const { UI: e } = this.Editor, t = e.nodes.holder.querySelector("." + e.CSS.editorWrapper), n = ae.make("div", ia.CSS.overlay, {}), r = ae.make("div", ia.CSS.overlayContainer, {}), a = ae.make("div", ia.CSS.rect, {});
    return r.appendChild(a), n.appendChild(r), t.appendChild(n), this.overlayRectangle = a, {
      container: t,
      overlay: n
    };
  }
  /**
   * Activates scrolling if blockSelection is active and mouse is in scroll zone
   *
   * @param {number} speed - speed of scrolling
   */
  scrollVertical(e) {
    if (!(this.inScrollZone && this.mousedown))
      return;
    const t = window.pageYOffset;
    window.scrollBy(0, e), this.mouseY += window.pageYOffset - t, setTimeout(() => {
      this.scrollVertical(e);
    }, 0);
  }
  /**
   * Handles the change in the rectangle and its effect
   *
   * @param {MouseEvent} event - mouse event
   */
  changingRectangle(e) {
    if (!this.mousedown)
      return;
    e.pageY !== void 0 && (this.mouseX = e.pageX, this.mouseY = e.pageY);
    const { rightPos: t, leftPos: n, index: r } = this.genInfoForMouseSelection(), a = this.startX > t && this.mouseX > t, c = this.startX < n && this.mouseX < n;
    this.rectCrossesBlocks = !(a || c), this.isRectSelectionActivated || (this.rectCrossesBlocks = !1, this.isRectSelectionActivated = !0, this.shrinkRectangleToPoint(), this.overlayRectangle.style.display = "block"), this.updateRectangleSize(), this.Editor.Toolbar.close(), r !== void 0 && (this.trySelectNextBlock(r), this.inverseSelection(), Ye.get().removeAllRanges());
  }
  /**
   * Shrink rect to singular point
   */
  shrinkRectangleToPoint() {
    this.overlayRectangle.style.left = `${this.startX - window.pageXOffset}px`, this.overlayRectangle.style.top = `${this.startY - window.pageYOffset}px`, this.overlayRectangle.style.bottom = `calc(100% - ${this.startY - window.pageYOffset}px`, this.overlayRectangle.style.right = `calc(100% - ${this.startX - window.pageXOffset}px`;
  }
  /**
   * Select or unselect all of blocks in array if rect is out or in selectable area
   */
  inverseSelection() {
    const e = this.Editor.BlockManager.getBlockByIndex(this.stackOfSelected[0]).selected;
    if (this.rectCrossesBlocks && !e)
      for (const t of this.stackOfSelected)
        this.Editor.BlockSelection.selectBlockByIndex(t);
    if (!this.rectCrossesBlocks && e)
      for (const t of this.stackOfSelected)
        this.Editor.BlockSelection.unSelectBlockByIndex(t);
  }
  /**
   * Updates size of rectangle
   */
  updateRectangleSize() {
    this.mouseY >= this.startY ? (this.overlayRectangle.style.top = `${this.startY - window.pageYOffset}px`, this.overlayRectangle.style.bottom = `calc(100% - ${this.mouseY - window.pageYOffset}px`) : (this.overlayRectangle.style.bottom = `calc(100% - ${this.startY - window.pageYOffset}px`, this.overlayRectangle.style.top = `${this.mouseY - window.pageYOffset}px`), this.mouseX >= this.startX ? (this.overlayRectangle.style.left = `${this.startX - window.pageXOffset}px`, this.overlayRectangle.style.right = `calc(100% - ${this.mouseX - window.pageXOffset}px`) : (this.overlayRectangle.style.right = `calc(100% - ${this.startX - window.pageXOffset}px`, this.overlayRectangle.style.left = `${this.mouseX - window.pageXOffset}px`);
  }
  /**
   * Collects information needed to determine the behavior of the rectangle
   *
   * @returns {object} index - index next Block, leftPos - start of left border of Block, rightPos - right border
   */
  genInfoForMouseSelection() {
    const e = document.body.offsetWidth / 2, t = this.mouseY - window.pageYOffset, n = document.elementFromPoint(e, t), r = this.Editor.BlockManager.getBlockByChildNode(n);
    let a;
    r !== void 0 && (a = this.Editor.BlockManager.blocks.findIndex((v) => v.holder === r.holder));
    const c = this.Editor.BlockManager.lastBlock.holder.querySelector("." + bi.CSS.content), u = Number.parseInt(window.getComputedStyle(c).width, 10) / 2, p = e - u, g = e + u;
    return {
      index: a,
      leftPos: p,
      rightPos: g
    };
  }
  /**
   * Select block with index index
   *
   * @param index - index of block in redactor
   */
  addBlockInSelection(e) {
    this.rectCrossesBlocks && this.Editor.BlockSelection.selectBlockByIndex(e), this.stackOfSelected.push(e);
  }
  /**
   * Adds a block to the selection and determines which blocks should be selected
   *
   * @param {object} index - index of new block in the reactor
   */
  trySelectNextBlock(e) {
    const t = this.stackOfSelected[this.stackOfSelected.length - 1] === e, n = this.stackOfSelected.length, r = 1, a = -1, c = 0;
    if (t)
      return;
    const u = this.stackOfSelected[n - 1] - this.stackOfSelected[n - 2] > 0;
    let p = c;
    n > 1 && (p = u ? r : a);
    const g = e > this.stackOfSelected[n - 1] && p === r, v = e < this.stackOfSelected[n - 1] && p === a, x = !(g || v || p === c);
    if (!x && (e > this.stackOfSelected[n - 1] || this.stackOfSelected[n - 1] === void 0)) {
      let k = this.stackOfSelected[n - 1] + 1 || e;
      for (k; k <= e; k++)
        this.addBlockInSelection(k);
      return;
    }
    if (!x && e < this.stackOfSelected[n - 1]) {
      for (let k = this.stackOfSelected[n - 1] - 1; k >= e; k--)
        this.addBlockInSelection(k);
      return;
    }
    if (!x)
      return;
    let y = n - 1, T;
    for (e > this.stackOfSelected[n - 1] ? T = () => e > this.stackOfSelected[y] : T = () => e < this.stackOfSelected[y]; T(); )
      this.rectCrossesBlocks && this.Editor.BlockSelection.unSelectBlockByIndex(this.stackOfSelected[y]), this.stackOfSelected.pop(), y--;
  }
}
class zm extends it {
  /**
   * Renders passed blocks as one batch
   *
   * @param blocksData - blocks to render
   */
  async render(e) {
    return new Promise((t) => {
      const { Tools: n, BlockManager: r } = this.Editor;
      if (e.length === 0)
        r.insert();
      else {
        const a = e.map(({ type: c, data: u, tunes: p, id: g }) => {
          n.available.has(c) === !1 && (Xo(`Tool «${c}» is not found. Check 'tools' property at the Editor.js config.`, "warn"), u = this.composeStubDataForTool(c, u, g), c = n.stubTool);
          let v;
          try {
            v = r.composeBlock({
              id: g,
              tool: c,
              data: u,
              tunes: p
            });
          } catch (x) {
            gt(`Block «${c}» skipped because of plugins error`, "error", {
              data: u,
              error: x
            }), u = this.composeStubDataForTool(c, u, g), c = n.stubTool, v = r.composeBlock({
              id: g,
              tool: c,
              data: u,
              tunes: p
            });
          }
          return v;
        });
        r.insertMany(a);
      }
      window.requestIdleCallback(() => {
        t();
      }, { timeout: 2e3 });
    });
  }
  /**
   * Create data for the Stub Tool that will be used instead of unavailable tool
   *
   * @param tool - unavailable tool name to stub
   * @param data - data of unavailable block
   * @param [id] - id of unavailable block
   */
  composeStubDataForTool(e, t, n) {
    const { Tools: r } = this.Editor;
    let a = e;
    if (r.unavailable.has(e)) {
      const c = r.unavailable.get(e).toolbox;
      c !== void 0 && c[0].title !== void 0 && (a = c[0].title);
    }
    return {
      savedData: {
        id: n,
        type: e,
        data: t
      },
      title: a
    };
  }
}
class Wm extends it {
  /**
   * Composes new chain of Promises to fire them alternatelly
   *
   * @returns {OutputData}
   */
  async save() {
    const { BlockManager: e, Tools: t } = this.Editor, n = e.blocks, r = [];
    try {
      n.forEach((u) => {
        r.push(this.getSavedData(u));
      });
      const a = await Promise.all(r), c = await Uh(a, (u) => t.blockTools.get(u).sanitizeConfig);
      return this.makeOutput(c);
    } catch (a) {
      Xo("Saving failed due to the Error %o", "error", a);
    }
  }
  /**
   * Saves and validates
   *
   * @param {Block} block - Editor's Tool
   * @returns {ValidatedData} - Tool's validated data
   */
  async getSavedData(e) {
    const t = await e.save(), n = t && await e.validate(t.data);
    return {
      ...t,
      isValid: n
    };
  }
  /**
   * Creates output object with saved data, time and version of editor
   *
   * @param {ValidatedData} allExtractedData - data extracted from Blocks
   * @returns {OutputData}
   */
  makeOutput(e) {
    const t = [];
    return e.forEach(({ id: n, tool: r, data: a, tunes: c, isValid: u }) => {
      if (!u) {
        gt(`Block «${r}» skipped because saved data is invalid`);
        return;
      }
      if (r === this.Editor.Tools.stubTool) {
        t.push(a);
        return;
      }
      const p = {
        id: n,
        type: r,
        data: a,
        ...!cn(c) && {
          tunes: c
        }
      };
      t.push(p);
    }), {
      time: +/* @__PURE__ */ new Date(),
      blocks: t,
      version: "2.29.0"
    };
  }
}
(function() {
  try {
    if (typeof document < "u") {
      var o = document.createElement("style");
      o.appendChild(document.createTextNode(".ce-paragraph{line-height:1.6em;outline:none}.ce-paragraph[data-placeholder]:empty:before{content:attr(data-placeholder);color:#707684;font-weight:400;opacity:0}.codex-editor--empty .ce-block:first-child .ce-paragraph[data-placeholder]:empty:before{opacity:1}.codex-editor--toolbox-opened .ce-block:first-child .ce-paragraph[data-placeholder]:empty:before,.codex-editor--empty .ce-block:first-child .ce-paragraph[data-placeholder]:empty:focus:before{opacity:0}.ce-paragraph p:first-of-type{margin-top:0}.ce-paragraph p:last-of-type{margin-bottom:0}")), document.head.appendChild(o);
    }
  } catch (e) {
    console.error("vite-plugin-css-injected-by-js", e);
  }
})();
const Um = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 9V7.2C8 7.08954 8.08954 7 8.2 7L12 7M16 9V7.2C16 7.08954 15.9105 7 15.8 7L12 7M12 7L12 17M12 17H10M12 17H14"/></svg>';
/**
 * Base Paragraph Block for the Editor.js.
 * Represents a regular text block
 *
 * @author CodeX (team@codex.so)
 * @copyright CodeX 2018
 * @license The MIT License (MIT)
 */
class yc {
  /**
   * Default placeholder for Paragraph Tool
   *
   * @returns {string}
   * @class
   */
  static get DEFAULT_PLACEHOLDER() {
    return "";
  }
  /**
   * Render plugin`s main Element and fill it with saved data
   *
   * @param {object} params - constructor params
   * @param {ParagraphData} params.data - previously saved data
   * @param {ParagraphConfig} params.config - user config for Tool
   * @param {object} params.api - editor.js api
   * @param {boolean} readOnly - read only mode flag
   */
  constructor({ data: e, config: t, api: n, readOnly: r }) {
    this.api = n, this.readOnly = r, this._CSS = {
      block: this.api.styles.block,
      wrapper: "ce-paragraph"
    }, this.readOnly || (this.onKeyUp = this.onKeyUp.bind(this)), this._placeholder = t.placeholder ? t.placeholder : yc.DEFAULT_PLACEHOLDER, this._data = {}, this._element = null, this._preserveBlank = t.preserveBlank !== void 0 ? t.preserveBlank : !1, this.data = e;
  }
  /**
   * Check if text content is empty and set empty string to inner html.
   * We need this because some browsers (e.g. Safari) insert <br> into empty contenteditanle elements
   *
   * @param {KeyboardEvent} e - key up event
   */
  onKeyUp(e) {
    if (e.code !== "Backspace" && e.code !== "Delete")
      return;
    const { textContent: t } = this._element;
    t === "" && (this._element.innerHTML = "");
  }
  /**
   * Create Tool's view
   *
   * @returns {HTMLElement}
   * @private
   */
  drawView() {
    const e = document.createElement("DIV");
    return e.classList.add(this._CSS.wrapper, this._CSS.block), e.contentEditable = !1, e.dataset.placeholder = this.api.i18n.t(this._placeholder), this._data.text && (e.innerHTML = this._data.text), this.readOnly || (e.contentEditable = !0, e.addEventListener("keyup", this.onKeyUp)), e;
  }
  /**
   * Return Tool's view
   *
   * @returns {HTMLDivElement}
   */
  render() {
    return this._element = this.drawView(), this._element;
  }
  /**
   * Method that specified how to merge two Text blocks.
   * Called by Editor.js by backspace at the beginning of the Block
   *
   * @param {ParagraphData} data
   * @public
   */
  merge(e) {
    const t = {
      text: this.data.text + e.text
    };
    this.data = t;
  }
  /**
   * Validate Paragraph block data:
   * - check for emptiness
   *
   * @param {ParagraphData} savedData — data received after saving
   * @returns {boolean} false if saved data is not correct, otherwise true
   * @public
   */
  validate(e) {
    return !(e.text.trim() === "" && !this._preserveBlank);
  }
  /**
   * Extract Tool's data from the view
   *
   * @param {HTMLDivElement} toolsContent - Paragraph tools rendered view
   * @returns {ParagraphData} - saved data
   * @public
   */
  save(e) {
    return {
      text: e.innerHTML
    };
  }
  /**
   * On paste callback fired from Editor.
   *
   * @param {PasteEvent} event - event with pasted data
   */
  onPaste(e) {
    const t = {
      text: e.detail.data.innerHTML
    };
    this.data = t;
  }
  /**
   * Enable Conversion Toolbar. Paragraph can be converted to/from other tools
   */
  static get conversionConfig() {
    return {
      export: "text",
      // to convert Paragraph to other block, use 'text' property of saved data
      import: "text"
      // to covert other block's exported string to Paragraph, fill 'text' property of tool data
    };
  }
  /**
   * Sanitizer rules
   */
  static get sanitize() {
    return {
      text: {
        br: !0
      }
    };
  }
  /**
   * Returns true to notify the core that read-only mode is supported
   *
   * @returns {boolean}
   */
  static get isReadOnlySupported() {
    return !0;
  }
  /**
   * Get current Tools`s data
   *
   * @returns {ParagraphData} Current data
   * @private
   */
  get data() {
    if (this._element !== null) {
      const e = this._element.innerHTML;
      this._data.text = e;
    }
    return this._data;
  }
  /**
   * Store data in plugin:
   * - at the this._data property
   * - at the HTML
   *
   * @param {ParagraphData} data — data to set
   * @private
   */
  set data(e) {
    this._data = e || {}, this._element !== null && this.hydrate();
  }
  /**
   * Fill tool's view with data
   */
  hydrate() {
    window.requestAnimationFrame(() => {
      this._element.innerHTML = this._data.text || "";
    });
  }
  /**
   * Used by Editor paste handling API.
   * Provides configuration to handle P tags.
   *
   * @returns {{tags: string[]}}
   */
  static get pasteConfig() {
    return {
      tags: ["P"]
    };
  }
  /**
   * Icon and title for displaying at the Toolbox
   *
   * @returns {{icon: string, title: string}}
   */
  static get toolbox() {
    return {
      icon: Um,
      title: "Text"
    };
  }
}
let wc = class {
  constructor() {
    this.commandName = "bold", this.CSS = {
      button: "ce-inline-tool",
      buttonActive: "ce-inline-tool--active",
      buttonModifier: "ce-inline-tool--bold"
    }, this.nodes = {
      button: void 0
    };
  }
  /**
   * Sanitizer Rule
   * Leave <b> tags
   *
   * @returns {object}
   */
  static get sanitize() {
    return {
      b: {}
    };
  }
  /**
   * Create button for Inline Toolbar
   */
  render() {
    return this.nodes.button = document.createElement("button"), this.nodes.button.type = "button", this.nodes.button.classList.add(this.CSS.button, this.CSS.buttonModifier), this.nodes.button.innerHTML = am, this.nodes.button;
  }
  /**
   * Wrap range with <b> tag
   */
  surround() {
    document.execCommand(this.commandName);
  }
  /**
   * Check selection and set activated state to button if there are <b> tag
   *
   * @returns {boolean}
   */
  checkState() {
    const e = document.queryCommandState(this.commandName);
    return this.nodes.button.classList.toggle(this.CSS.buttonActive, e), e;
  }
  /**
   * Set a shortcut
   *
   * @returns {boolean}
   */
  get shortcut() {
    return "CMD+B";
  }
};
wc.isInline = !0;
wc.title = "Bold";
let kc = class {
  constructor() {
    this.commandName = "italic", this.CSS = {
      button: "ce-inline-tool",
      buttonActive: "ce-inline-tool--active",
      buttonModifier: "ce-inline-tool--italic"
    }, this.nodes = {
      button: null
    };
  }
  /**
   * Sanitizer Rule
   * Leave <i> tags
   *
   * @returns {object}
   */
  static get sanitize() {
    return {
      i: {}
    };
  }
  /**
   * Create button for Inline Toolbar
   */
  render() {
    return this.nodes.button = document.createElement("button"), this.nodes.button.type = "button", this.nodes.button.classList.add(this.CSS.button, this.CSS.buttonModifier), this.nodes.button.innerHTML = hm, this.nodes.button;
  }
  /**
   * Wrap range with <i> tag
   */
  surround() {
    document.execCommand(this.commandName);
  }
  /**
   * Check selection and set activated state to button if there are <i> tag
   */
  checkState() {
    const e = document.queryCommandState(this.commandName);
    return this.nodes.button.classList.toggle(this.CSS.buttonActive, e), e;
  }
  /**
   * Set a shortcut
   */
  get shortcut() {
    return "CMD+I";
  }
};
kc.isInline = !0;
kc.title = "Italic";
let xc = class {
  /**
   * @param api - Editor.js API
   */
  constructor({ api: e }) {
    this.commandLink = "createLink", this.commandUnlink = "unlink", this.ENTER_KEY = 13, this.CSS = {
      button: "ce-inline-tool",
      buttonActive: "ce-inline-tool--active",
      buttonModifier: "ce-inline-tool--link",
      buttonUnlink: "ce-inline-tool--unlink",
      input: "ce-inline-tool-input",
      inputShowed: "ce-inline-tool-input--showed"
    }, this.nodes = {
      button: null,
      input: null
    }, this.inputOpened = !1, this.toolbar = e.toolbar, this.inlineToolbar = e.inlineToolbar, this.notifier = e.notifier, this.i18n = e.i18n, this.selection = new Ye();
  }
  /**
   * Sanitizer Rule
   * Leave <a> tags
   *
   * @returns {object}
   */
  static get sanitize() {
    return {
      a: {
        href: !0,
        target: "_blank",
        rel: "nofollow"
      }
    };
  }
  /**
   * Create button for Inline Toolbar
   */
  render() {
    return this.nodes.button = document.createElement("button"), this.nodes.button.type = "button", this.nodes.button.classList.add(this.CSS.button, this.CSS.buttonModifier), this.nodes.button.innerHTML = yd, this.nodes.button;
  }
  /**
   * Input for the link
   */
  renderActions() {
    return this.nodes.input = document.createElement("input"), this.nodes.input.placeholder = this.i18n.t("Add a link"), this.nodes.input.classList.add(this.CSS.input), this.nodes.input.addEventListener("keydown", (e) => {
      e.keyCode === this.ENTER_KEY && this.enterPressed(e);
    }), this.nodes.input;
  }
  /**
   * Handle clicks on the Inline Toolbar icon
   *
   * @param {Range} range - range to wrap with link
   */
  surround(e) {
    if (e) {
      this.inputOpened ? (this.selection.restore(), this.selection.removeFakeBackground()) : (this.selection.setFakeBackground(), this.selection.save());
      const t = this.selection.findParentTag("A");
      if (t) {
        this.selection.expandToTag(t), this.unlink(), this.closeActions(), this.checkState(), this.toolbar.close();
        return;
      }
    }
    this.toggleActions();
  }
  /**
   * Check selection and set activated state to button if there are <a> tag
   */
  checkState() {
    const e = this.selection.findParentTag("A");
    if (e) {
      this.nodes.button.innerHTML = mm, this.nodes.button.classList.add(this.CSS.buttonUnlink), this.nodes.button.classList.add(this.CSS.buttonActive), this.openActions();
      const t = e.getAttribute("href");
      this.nodes.input.value = t !== "null" ? t : "", this.selection.save();
    } else
      this.nodes.button.innerHTML = yd, this.nodes.button.classList.remove(this.CSS.buttonUnlink), this.nodes.button.classList.remove(this.CSS.buttonActive);
    return !!e;
  }
  /**
   * Function called with Inline Toolbar closing
   */
  clear() {
    this.closeActions();
  }
  /**
   * Set a shortcut
   */
  get shortcut() {
    return "CMD+K";
  }
  /**
   * Show/close link input
   */
  toggleActions() {
    this.inputOpened ? this.closeActions(!1) : this.openActions(!0);
  }
  /**
   * @param {boolean} needFocus - on link creation we need to focus input. On editing - nope.
   */
  openActions(e = !1) {
    this.nodes.input.classList.add(this.CSS.inputShowed), e && this.nodes.input.focus(), this.inputOpened = !0;
  }
  /**
   * Close input
   *
   * @param {boolean} clearSavedSelection — we don't need to clear saved selection
   *                                        on toggle-clicks on the icon of opened Toolbar
   */
  closeActions(e = !0) {
    if (this.selection.isFakeBackgroundEnabled) {
      const t = new Ye();
      t.save(), this.selection.restore(), this.selection.removeFakeBackground(), t.restore();
    }
    this.nodes.input.classList.remove(this.CSS.inputShowed), this.nodes.input.value = "", e && this.selection.clearSaved(), this.inputOpened = !1;
  }
  /**
   * Enter pressed on input
   *
   * @param {KeyboardEvent} event - enter keydown event
   */
  enterPressed(e) {
    let t = this.nodes.input.value || "";
    if (!t.trim()) {
      this.selection.restore(), this.unlink(), e.preventDefault(), this.closeActions();
      return;
    }
    if (!this.validateURL(t)) {
      this.notifier.show({
        message: "Pasted link is not valid.",
        style: "error"
      }), gt("Incorrect Link pasted", "warn", t);
      return;
    }
    t = this.prepareLink(t), this.selection.restore(), this.selection.removeFakeBackground(), this.insertLink(t), e.preventDefault(), e.stopPropagation(), e.stopImmediatePropagation(), this.selection.collapseToEnd(), this.inlineToolbar.close();
  }
  /**
   * Detects if passed string is URL
   *
   * @param {string} str - string to validate
   * @returns {boolean}
   */
  validateURL(e) {
    return !/\s/.test(e);
  }
  /**
   * Process link before injection
   * - sanitize
   * - add protocol for links like 'google.com'
   *
   * @param {string} link - raw user input
   */
  prepareLink(e) {
    return e = e.trim(), e = this.addProtocol(e), e;
  }
  /**
   * Add 'http' protocol to the links like 'vc.ru', 'google.com'
   *
   * @param {string} link - string to process
   */
  addProtocol(e) {
    if (/^(\w+):(\/\/)?/.test(e))
      return e;
    const t = /^\/[^/\s]/.test(e), n = e.substring(0, 1) === "#", r = /^\/\/[^/\s]/.test(e);
    return !t && !n && !r && (e = "http://" + e), e;
  }
  /**
   * Inserts <a> tag with "href"
   *
   * @param {string} link - "href" value
   */
  insertLink(e) {
    const t = this.selection.findParentTag("A");
    t && this.selection.expandToTag(t), document.execCommand(this.commandLink, !1, e);
  }
  /**
   * Removes <a> tag
   */
  unlink() {
    document.execCommand(this.commandUnlink);
  }
};
xc.isInline = !0;
xc.title = "Link";
class au {
  /**
   * @param options - constructor options
   * @param options.data - stub tool data
   * @param options.api - Editor.js API
   */
  constructor({ data: e, api: t }) {
    this.CSS = {
      wrapper: "ce-stub",
      info: "ce-stub__info",
      title: "ce-stub__title",
      subtitle: "ce-stub__subtitle"
    }, this.api = t, this.title = e.title || this.api.i18n.t("Error"), this.subtitle = this.api.i18n.t("The block can not be displayed correctly."), this.savedData = e.savedData, this.wrapper = this.make();
  }
  /**
   * Returns stub holder
   *
   * @returns {HTMLElement}
   */
  render() {
    return this.wrapper;
  }
  /**
   * Return original Tool data
   *
   * @returns {BlockToolData}
   */
  save() {
    return this.savedData;
  }
  /**
   * Create Tool html markup
   *
   * @returns {HTMLElement}
   */
  make() {
    const e = ae.make("div", this.CSS.wrapper), t = gm, n = ae.make("div", this.CSS.info), r = ae.make("div", this.CSS.title, {
      textContent: this.title
    }), a = ae.make("div", this.CSS.subtitle, {
      textContent: this.subtitle
    });
    return e.innerHTML = t, n.appendChild(r), n.appendChild(a), e.appendChild(n), e;
  }
}
au.isReadOnlySupported = !0;
class qm extends vc {
  constructor() {
    super(...arguments), this.type = el.Inline;
  }
  /**
   * Returns title for Inline Tool if specified by user
   */
  get title() {
    return this.constructable[bc.Title];
  }
  /**
   * Constructs new InlineTool instance from constructable
   */
  create() {
    return new this.constructable({
      api: this.api.getMethodsForTool(this),
      config: this.settings
    });
  }
}
class Vm extends vc {
  constructor() {
    super(...arguments), this.type = el.Tune;
  }
  /**
   * Constructs new BlockTune instance from constructable
   *
   * @param data - Tune data
   * @param block - Block API object
   */
  create(e, t) {
    return new this.constructable({
      api: this.api.getMethodsForTool(this),
      config: this.settings,
      block: t,
      data: e
    });
  }
}
class go extends Map {
  /**
   * Returns Block Tools collection
   */
  get blockTools() {
    const e = Array.from(this.entries()).filter(([, t]) => t.isBlock());
    return new go(e);
  }
  /**
   * Returns Inline Tools collection
   */
  get inlineTools() {
    const e = Array.from(this.entries()).filter(([, t]) => t.isInline());
    return new go(e);
  }
  /**
   * Returns Block Tunes collection
   */
  get blockTunes() {
    const e = Array.from(this.entries()).filter(([, t]) => t.isTune());
    return new go(e);
  }
  /**
   * Returns internal Tools collection
   */
  get internalTools() {
    const e = Array.from(this.entries()).filter(([, t]) => t.isInternal);
    return new go(e);
  }
  /**
   * Returns Tools collection provided by user
   */
  get externalTools() {
    const e = Array.from(this.entries()).filter(([, t]) => !t.isInternal);
    return new go(e);
  }
}
var Gm = Object.defineProperty, Zm = Object.getOwnPropertyDescriptor, lu = (o, e, t, n) => {
  for (var r = n > 1 ? void 0 : n ? Zm(e, t) : e, a = o.length - 1, c; a >= 0; a--)
    (c = o[a]) && (r = (n ? c(e, t, r) : c(r)) || r);
  return n && r && Gm(e, t, r), r;
};
class Cc extends vc {
  constructor() {
    super(...arguments), this.type = el.Block, this.inlineTools = new go(), this.tunes = new go();
  }
  /**
   * Creates new Tool instance
   *
   * @param data - Tool data
   * @param block - BlockAPI for current Block
   * @param readOnly - True if Editor is in read-only mode
   */
  create(e, t, n) {
    return new this.constructable({
      data: e,
      block: t,
      readOnly: n,
      api: this.api.getMethodsForTool(this),
      config: this.settings
    });
  }
  /**
   * Returns true if read-only mode is supported by Tool
   */
  get isReadOnlySupported() {
    return this.constructable[rs.IsReadOnlySupported] === !0;
  }
  /**
   * Returns true if Tool supports linebreaks
   */
  get isLineBreaksEnabled() {
    return this.constructable[rs.IsEnabledLineBreaks];
  }
  /**
   * Returns Tool toolbox configuration (internal or user-specified).
   *
   * Merges internal and user-defined toolbox configs based on the following rules:
   *
   * - If both internal and user-defined toolbox configs are arrays their items are merged.
   * Length of the second one is kept.
   *
   * - If both are objects their properties are merged.
   *
   * - If one is an object and another is an array than internal config is replaced with user-defined
   * config. This is made to allow user to override default tool's toolbox representation (single/multiple entries)
   */
  get toolbox() {
    const e = this.constructable[rs.Toolbox], t = this.config[Aa.Toolbox];
    if (!cn(e) && t !== !1)
      return t ? Array.isArray(e) ? Array.isArray(t) ? t.map((n, r) => {
        const a = e[r];
        return a ? {
          ...a,
          ...n
        } : n;
      }) : [t] : Array.isArray(t) ? t : [
        {
          ...e,
          ...t
        }
      ] : Array.isArray(e) ? e : [e];
  }
  /**
   * Returns Tool conversion configuration
   */
  get conversionConfig() {
    return this.constructable[rs.ConversionConfig];
  }
  /**
   * Returns enabled inline tools for Tool
   */
  get enabledInlineTools() {
    return this.config[Aa.EnabledInlineTools] || !1;
  }
  /**
   * Returns enabled tunes for Tool
   */
  get enabledBlockTunes() {
    return this.config[Aa.EnabledBlockTunes];
  }
  /**
   * Returns Tool paste configuration
   */
  get pasteConfig() {
    return this.constructable[rs.PasteConfig] ?? {};
  }
  get sanitizeConfig() {
    const e = super.sanitizeConfig, t = this.baseSanitizeConfig;
    if (cn(e))
      return t;
    const n = {};
    for (const r in e)
      if (Object.prototype.hasOwnProperty.call(e, r)) {
        const a = e[r];
        uo(a) ? n[r] = Object.assign({}, t, a) : n[r] = a;
      }
    return n;
  }
  get baseSanitizeConfig() {
    const e = {};
    return Array.from(this.inlineTools.values()).forEach((t) => Object.assign(e, t.sanitizeConfig)), Array.from(this.tunes.values()).forEach((t) => Object.assign(e, t.sanitizeConfig)), e;
  }
}
lu([
  Cs
], Cc.prototype, "sanitizeConfig", 1);
lu([
  Cs
], Cc.prototype, "baseSanitizeConfig", 1);
class Km {
  /**
   * @class
   * @param config - tools config
   * @param editorConfig - EditorJS config
   * @param api - EditorJS API module
   */
  constructor(e, t, n) {
    this.api = n, this.config = e, this.editorConfig = t;
  }
  /**
   * Returns Tool object based on it's type
   *
   * @param name - tool name
   */
  get(e) {
    const { class: t, isInternal: n = !1, ...r } = this.config[e], a = this.getConstructor(t);
    return new a({
      name: e,
      constructable: t,
      config: r,
      api: this.api,
      isDefault: e === this.editorConfig.defaultBlock,
      defaultPlaceholder: this.editorConfig.placeholder,
      isInternal: n
    });
  }
  /**
   * Find appropriate Tool object constructor for Tool constructable
   *
   * @param constructable - Tools constructable
   */
  getConstructor(e) {
    switch (!0) {
      case e[bc.IsInline]:
        return qm;
      case e[iu.IsTune]:
        return Vm;
      default:
        return Cc;
    }
  }
}
let cu = class {
  /**
   * MoveDownTune constructor
   *
   * @param {API} api — Editor's API
   */
  constructor({ api: e }) {
    this.CSS = {
      animation: "wobble"
    }, this.api = e;
  }
  /**
   * Tune's appearance in block settings menu
   */
  render() {
    return {
      icon: Gh,
      title: this.api.i18n.t("Move down"),
      onActivate: () => this.handleClick(),
      name: "move-down"
    };
  }
  /**
   * Handle clicks on 'move down' button
   */
  handleClick() {
    const e = this.api.blocks.getCurrentBlockIndex(), t = this.api.blocks.getBlockByIndex(e + 1);
    if (!t)
      throw new Error("Unable to move Block down since it is already the last");
    const n = t.holder, r = n.getBoundingClientRect();
    let a = Math.abs(window.innerHeight - n.offsetHeight);
    r.top < window.innerHeight && (a = window.scrollY + n.offsetHeight), window.scrollTo(0, a), this.api.blocks.move(e + 1), this.api.toolbar.toggleBlockSettings(!0);
  }
};
cu.isTune = !0;
class du {
  /**
   * DeleteTune constructor
   *
   * @param {API} api - Editor's API
   */
  constructor({ api: e }) {
    this.api = e;
  }
  /**
   * Tune's appearance in block settings menu
   */
  render() {
    return {
      icon: cm,
      title: this.api.i18n.t("Delete"),
      name: "delete",
      confirmation: {
        title: this.api.i18n.t("Click to delete"),
        onActivate: () => this.handleClick()
      }
    };
  }
  /**
   * Delete block conditions passed
   */
  handleClick() {
    this.api.blocks.delete();
  }
}
du.isTune = !0;
class hu {
  /**
   * MoveUpTune constructor
   *
   * @param {API} api - Editor's API
   */
  constructor({ api: e }) {
    this.CSS = {
      animation: "wobble"
    }, this.api = e;
  }
  /**
   * Tune's appearance in block settings menu
   */
  render() {
    return {
      icon: lm,
      title: this.api.i18n.t("Move up"),
      onActivate: () => this.handleClick(),
      name: "move-up"
    };
  }
  /**
   * Move current block up
   */
  handleClick() {
    const e = this.api.blocks.getCurrentBlockIndex(), t = this.api.blocks.getBlockByIndex(e), n = this.api.blocks.getBlockByIndex(e - 1);
    if (e === 0 || !t || !n)
      throw new Error("Unable to move Block up since it is already the first");
    const r = t.holder, a = n.holder, c = r.getBoundingClientRect(), u = a.getBoundingClientRect();
    let p;
    u.top > 0 ? p = Math.abs(c.top) - Math.abs(u.top) : p = Math.abs(c.top) + u.height, window.scrollBy(0, -1 * p), this.api.blocks.move(e - 1), this.api.toolbar.toggleBlockSettings(!0);
  }
}
hu.isTune = !0;
var Xm = Object.defineProperty, Jm = Object.getOwnPropertyDescriptor, Qm = (o, e, t, n) => {
  for (var r = n > 1 ? void 0 : n ? Jm(e, t) : e, a = o.length - 1, c; a >= 0; a--)
    (c = o[a]) && (r = (n ? c(e, t, r) : c(r)) || r);
  return n && r && Xm(e, t, r), r;
};
class uu extends it {
  constructor() {
    super(...arguments), this.stubTool = "stub", this.toolsAvailable = new go(), this.toolsUnavailable = new go();
  }
  /**
   * Returns available Tools
   */
  get available() {
    return this.toolsAvailable;
  }
  /**
   * Returns unavailable Tools
   */
  get unavailable() {
    return this.toolsUnavailable;
  }
  /**
   * Return Tools for the Inline Toolbar
   */
  get inlineTools() {
    return this.available.inlineTools;
  }
  /**
   * Return editor block tools
   */
  get blockTools() {
    return this.available.blockTools;
  }
  /**
   * Return available Block Tunes
   *
   * @returns {object} - object of Inline Tool's classes
   */
  get blockTunes() {
    return this.available.blockTunes;
  }
  /**
   * Returns default Tool object
   */
  get defaultTool() {
    return this.blockTools.get(this.config.defaultBlock);
  }
  /**
   * Returns internal tools
   */
  get internal() {
    return this.available.internalTools;
  }
  /**
   * Creates instances via passed or default configuration
   *
   * @returns {Promise<void>}
   */
  async prepare() {
    if (this.validateTools(), this.config.tools = Wl({}, this.internalTools, this.config.tools), !Object.prototype.hasOwnProperty.call(this.config, "tools") || Object.keys(this.config.tools).length === 0)
      throw Error("Can't start without tools");
    const e = this.prepareConfig();
    this.factory = new Km(e, this.config, this.Editor.API);
    const t = this.getListOfPrepareFunctions(e);
    if (t.length === 0)
      return Promise.resolve();
    await gf(t, (n) => {
      this.toolPrepareMethodSuccess(n);
    }, (n) => {
      this.toolPrepareMethodFallback(n);
    }), this.prepareBlockTools();
  }
  getAllInlineToolsSanitizeConfig() {
    const e = {};
    return Array.from(this.inlineTools.values()).forEach((t) => {
      Object.assign(e, t.sanitizeConfig);
    }), e;
  }
  /**
   * Calls each Tool reset method to clean up anything set by Tool
   */
  destroy() {
    Object.values(this.available).forEach(async (e) => {
      Lt(e.reset) && await e.reset();
    });
  }
  /**
   * Returns internal tools
   * Includes Bold, Italic, Link and Paragraph
   */
  get internalTools() {
    return {
      bold: {
        class: wc,
        isInternal: !0
      },
      italic: {
        class: kc,
        isInternal: !0
      },
      link: {
        class: xc,
        isInternal: !0
      },
      paragraph: {
        class: yc,
        inlineToolbar: !0,
        isInternal: !0
      },
      stub: {
        class: au,
        isInternal: !0
      },
      moveUp: {
        class: hu,
        isInternal: !0
      },
      delete: {
        class: du,
        isInternal: !0
      },
      moveDown: {
        class: cu,
        isInternal: !0
      }
    };
  }
  /**
   * Tool prepare method success callback
   *
   * @param {object} data - append tool to available list
   */
  toolPrepareMethodSuccess(e) {
    const t = this.factory.get(e.toolName);
    if (t.isInline()) {
      const n = ["render", "surround", "checkState"].filter((r) => !t.create()[r]);
      if (n.length) {
        gt(
          `Incorrect Inline Tool: ${t.name}. Some of required methods is not implemented %o`,
          "warn",
          n
        ), this.toolsUnavailable.set(t.name, t);
        return;
      }
    }
    this.toolsAvailable.set(t.name, t);
  }
  /**
   * Tool prepare method fail callback
   *
   * @param {object} data - append tool to unavailable list
   */
  toolPrepareMethodFallback(e) {
    this.toolsUnavailable.set(e.toolName, this.factory.get(e.toolName));
  }
  /**
   * Binds prepare function of plugins with user or default config
   *
   * @returns {Array} list of functions that needs to be fired sequentially
   * @param config - tools config
   */
  getListOfPrepareFunctions(e) {
    const t = [];
    return Object.entries(e).forEach(([n, r]) => {
      t.push({
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        function: Lt(r.class.prepare) ? r.class.prepare : () => {
        },
        data: {
          toolName: n,
          config: r.config
        }
      });
    }), t;
  }
  /**
   * Assign enabled Inline Tools and Block Tunes for Block Tool
   */
  prepareBlockTools() {
    Array.from(this.blockTools.values()).forEach((e) => {
      this.assignInlineToolsToBlockTool(e), this.assignBlockTunesToBlockTool(e);
    });
  }
  /**
   * Assign enabled Inline Tools for Block Tool
   *
   * @param tool - Block Tool
   */
  assignInlineToolsToBlockTool(e) {
    if (this.config.inlineToolbar !== !1) {
      if (e.enabledInlineTools === !0) {
        e.inlineTools = new go(
          Array.isArray(this.config.inlineToolbar) ? this.config.inlineToolbar.map((t) => [t, this.inlineTools.get(t)]) : Array.from(this.inlineTools.entries())
        );
        return;
      }
      Array.isArray(e.enabledInlineTools) && (e.inlineTools = new go(
        e.enabledInlineTools.map((t) => [t, this.inlineTools.get(t)])
      ));
    }
  }
  /**
   * Assign enabled Block Tunes for Block Tool
   *
   * @param tool — Block Tool
   */
  assignBlockTunesToBlockTool(e) {
    if (e.enabledBlockTunes !== !1) {
      if (Array.isArray(e.enabledBlockTunes)) {
        const t = new go(
          e.enabledBlockTunes.map((n) => [n, this.blockTunes.get(n)])
        );
        e.tunes = new go([...t, ...this.blockTunes.internalTools]);
        return;
      }
      if (Array.isArray(this.config.tunes)) {
        const t = new go(
          this.config.tunes.map((n) => [n, this.blockTunes.get(n)])
        );
        e.tunes = new go([...t, ...this.blockTunes.internalTools]);
        return;
      }
      e.tunes = this.blockTunes.internalTools;
    }
  }
  /**
   * Validate Tools configuration objects and throw Error for user if it is invalid
   */
  validateTools() {
    for (const e in this.config.tools)
      if (Object.prototype.hasOwnProperty.call(this.config.tools, e)) {
        if (e in this.internalTools)
          return;
        const t = this.config.tools[e];
        if (!Lt(t) && !Lt(t.class))
          throw Error(
            `Tool «${e}» must be a constructor function or an object with function in the «class» property`
          );
      }
  }
  /**
   * Unify tools config
   */
  prepareConfig() {
    const e = {};
    for (const t in this.config.tools)
      uo(this.config.tools[t]) ? e[t] = this.config.tools[t] : e[t] = { class: this.config.tools[t] };
    return e;
  }
}
Qm([
  Cs
], uu.prototype, "getAllInlineToolsSanitizeConfig", 1);
const eg = `:root{--selectionColor: #e1f2ff;--inlineSelectionColor: #d4ecff;--bg-light: #eff2f5;--grayText: #707684;--color-dark: #1D202B;--color-active-icon: #388AE5;--color-gray-border: rgba(201, 201, 204, .48);--content-width: 650px;--narrow-mode-right-padding: 50px;--toolbox-buttons-size: 26px;--toolbox-buttons-size--mobile: 36px;--icon-size: 20px;--icon-size--mobile: 28px;--block-padding-vertical: .4em;--color-line-gray: #EFF0F1 }.codex-editor{position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;z-index:1}.codex-editor .hide{display:none}.codex-editor__redactor [contenteditable]:empty:after{content:"\\feff"}@media (min-width: 651px){.codex-editor--narrow .codex-editor__redactor{margin-right:50px}}@media (min-width: 651px){.codex-editor--narrow.codex-editor--rtl .codex-editor__redactor{margin-left:50px;margin-right:0}}@media (min-width: 651px){.codex-editor--narrow .ce-toolbar__actions{right:-5px}}.codex-editor-copyable{position:absolute;height:1px;width:1px;top:-400%;opacity:.001}.codex-editor-overlay{position:fixed;top:0;left:0;right:0;bottom:0;z-index:999;pointer-events:none;overflow:hidden}.codex-editor-overlay__container{position:relative;pointer-events:auto;z-index:0}.codex-editor-overlay__rectangle{position:absolute;pointer-events:none;background-color:#2eaadc33;border:1px solid transparent}.codex-editor svg{max-height:100%}.codex-editor path{stroke:currentColor}.codex-editor ::-moz-selection{background-color:#d4ecff}.codex-editor ::selection{background-color:#d4ecff}.codex-editor--toolbox-opened [contentEditable=true][data-placeholder]:focus:before{opacity:0!important}.ce-scroll-locked{overflow:hidden}.ce-scroll-locked--hard{overflow:hidden;top:calc(-1 * var(--window-scroll-offset));position:fixed;width:100%}.ce-toolbar{position:absolute;left:0;right:0;top:0;-webkit-transition:opacity .1s ease;transition:opacity .1s ease;will-change:opacity,top;display:none}.ce-toolbar--opened{display:block}.ce-toolbar__content{max-width:650px;margin:0 auto;position:relative}.ce-toolbar__plus{color:#1d202b;cursor:pointer;width:26px;height:26px;border-radius:7px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-flex-negative:0;flex-shrink:0}@media (max-width: 650px){.ce-toolbar__plus{width:36px;height:36px}}@media (hover: hover){.ce-toolbar__plus:hover{background-color:#eff2f5}}.ce-toolbar__plus--active{background-color:#eff2f5;-webkit-animation:bounceIn .75s 1;animation:bounceIn .75s 1;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.ce-toolbar__plus-shortcut{opacity:.6;word-spacing:-2px;margin-top:5px}@media (max-width: 650px){.ce-toolbar__plus{position:absolute;background-color:#fff;border:1px solid #E8E8EB;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;z-index:2;position:static}.ce-toolbar__plus--left-oriented:before{left:15px;margin-left:0}.ce-toolbar__plus--right-oriented:before{left:auto;right:15px;margin-left:0}}.ce-toolbar__actions{position:absolute;right:100%;opacity:0;display:-webkit-box;display:-ms-flexbox;display:flex;padding-right:5px}.ce-toolbar__actions--opened{opacity:1}@media (max-width: 650px){.ce-toolbar__actions{right:auto}}.ce-toolbar__settings-btn{color:#1d202b;width:26px;height:26px;border-radius:7px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;margin-left:3px;cursor:pointer;user-select:none}@media (max-width: 650px){.ce-toolbar__settings-btn{width:36px;height:36px}}@media (hover: hover){.ce-toolbar__settings-btn:hover{background-color:#eff2f5}}.ce-toolbar__settings-btn--active{background-color:#eff2f5;-webkit-animation:bounceIn .75s 1;animation:bounceIn .75s 1;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}@media (min-width: 651px){.ce-toolbar__settings-btn{width:24px}}.ce-toolbar__settings-btn--hidden{display:none}@media (max-width: 650px){.ce-toolbar__settings-btn{position:absolute;background-color:#fff;border:1px solid #E8E8EB;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;z-index:2;position:static}.ce-toolbar__settings-btn--left-oriented:before{left:15px;margin-left:0}.ce-toolbar__settings-btn--right-oriented:before{left:auto;right:15px;margin-left:0}}.ce-toolbar__plus svg,.ce-toolbar__settings-btn svg{width:24px;height:24px}@media (min-width: 651px){.codex-editor--narrow .ce-toolbar__plus{left:5px}}@media (min-width: 651px){.codex-editor--narrow .ce-toolbox .ce-popover{right:0;left:auto;left:initial}}.ce-inline-toolbar{--y-offset: 8px;position:absolute;background-color:#fff;border:1px solid #E8E8EB;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;z-index:2;opacity:0;visibility:hidden;-webkit-transition:opacity .25s ease;transition:opacity .25s ease;will-change:opacity,left,top;top:0;left:0;z-index:3}.ce-inline-toolbar--left-oriented:before{left:15px;margin-left:0}.ce-inline-toolbar--right-oriented:before{left:auto;right:15px;margin-left:0}.ce-inline-toolbar--showed{opacity:1;visibility:visible}.ce-inline-toolbar [hidden]{display:none!important}.ce-inline-toolbar__toggler-and-button-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;padding:0 6px}.ce-inline-toolbar__buttons{display:-webkit-box;display:-ms-flexbox;display:flex}.ce-inline-toolbar__dropdown{display:-webkit-box;display:-ms-flexbox;display:flex;padding:6px;margin:0 6px 0 -6px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;border-right:1px solid rgba(201,201,204,.48);-webkit-box-sizing:border-box;box-sizing:border-box}@media (hover: hover){.ce-inline-toolbar__dropdown:hover{background:#eff2f5}}.ce-inline-toolbar__dropdown--hidden{display:none}.ce-inline-toolbar__dropdown-content,.ce-inline-toolbar__dropdown-arrow{display:-webkit-box;display:-ms-flexbox;display:flex}.ce-inline-toolbar__dropdown-content svg,.ce-inline-toolbar__dropdown-arrow svg{width:20px;height:20px}.ce-inline-toolbar__shortcut{opacity:.6;word-spacing:-3px;margin-top:3px}.ce-inline-tool{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:6px 1px;cursor:pointer;border:0;outline:none;background-color:transparent;vertical-align:bottom;color:inherit;margin:0;border-radius:0;line-height:normal}.ce-inline-tool svg{width:20px;height:20px}@media (max-width: 650px){.ce-inline-tool svg{width:28px;height:28px}}@media (hover: hover){.ce-inline-tool:hover{background-color:#eff2f5}}.ce-inline-tool--active{color:#388ae5}.ce-inline-tool--focused{background:rgba(34,186,255,.08)!important}.ce-inline-tool--focused{-webkit-box-shadow:inset 0 0 0px 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px #07a1e314}.ce-inline-tool--focused-animated{-webkit-animation-name:buttonClicked;animation-name:buttonClicked;-webkit-animation-duration:.25s;animation-duration:.25s}.ce-inline-tool--link .icon--unlink,.ce-inline-tool--unlink .icon--link{display:none}.ce-inline-tool--unlink .icon--unlink{display:inline-block;margin-bottom:-1px}.ce-inline-tool-input{outline:none;border:0;border-radius:0 0 4px 4px;margin:0;font-size:13px;padding:10px;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;display:none;font-weight:500;border-top:1px solid rgba(201,201,204,.48);-webkit-appearance:none;font-family:inherit}@media (max-width: 650px){.ce-inline-tool-input{font-size:15px;font-weight:500}}.ce-inline-tool-input::-webkit-input-placeholder{color:#707684}.ce-inline-tool-input::-moz-placeholder{color:#707684}.ce-inline-tool-input:-ms-input-placeholder{color:#707684}.ce-inline-tool-input::-ms-input-placeholder{color:#707684}.ce-inline-tool-input::placeholder{color:#707684}.ce-inline-tool-input--showed{display:block}.ce-conversion-toolbar{position:absolute;background-color:#fff;border:1px solid #E8E8EB;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;z-index:2;opacity:0;visibility:hidden;will-change:transform,opacity;-webkit-transition:opacity .1s ease,-webkit-transform .1s ease;transition:opacity .1s ease,-webkit-transform .1s ease;transition:transform .1s ease,opacity .1s ease;transition:transform .1s ease,opacity .1s ease,-webkit-transform .1s ease;-webkit-transform:translateY(-8px);transform:translateY(-8px);left:-1px;width:190px;margin-top:5px;-webkit-box-sizing:content-box;box-sizing:content-box}.ce-conversion-toolbar--left-oriented:before{left:15px;margin-left:0}.ce-conversion-toolbar--right-oriented:before{left:auto;right:15px;margin-left:0}.ce-conversion-toolbar--showed{opacity:1;visibility:visible;-webkit-transform:none;transform:none}.ce-conversion-toolbar [hidden]{display:none!important}.ce-conversion-toolbar__buttons{display:-webkit-box;display:-ms-flexbox;display:flex}.ce-conversion-toolbar__label{color:#707684;font-size:11px;font-weight:500;letter-spacing:.33px;padding:10px 10px 5px;text-transform:uppercase}.ce-conversion-tool{display:-webkit-box;display:-ms-flexbox;display:flex;padding:5px 10px;font-size:14px;line-height:20px;font-weight:500;cursor:pointer;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ce-conversion-tool--hidden{display:none}.ce-conversion-tool--focused{background:rgba(34,186,255,.08)!important}.ce-conversion-tool--focused{-webkit-box-shadow:inset 0 0 0px 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px #07a1e314}.ce-conversion-tool--focused-animated{-webkit-animation-name:buttonClicked;animation-name:buttonClicked;-webkit-animation-duration:.25s;animation-duration:.25s}.ce-conversion-tool:hover{background:#eff2f5}.ce-conversion-tool__icon{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;width:26px;height:26px;-webkit-box-shadow:0 0 0 1px rgba(201,201,204,.48);box-shadow:0 0 0 1px #c9c9cc7a;border-radius:5px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background:#fff;-webkit-box-sizing:content-box;box-sizing:content-box;-ms-flex-negative:0;flex-shrink:0;margin-right:10px}.ce-conversion-tool__icon svg{width:20px;height:20px}@media (max-width: 650px){.ce-conversion-tool__icon{width:36px;height:36px;border-radius:8px}.ce-conversion-tool__icon svg{width:28px;height:28px}}.ce-conversion-tool--last{margin-right:0!important}.ce-conversion-tool--active{color:#388ae5!important}.ce-conversion-tool--active{-webkit-animation:bounceIn .75s 1;animation:bounceIn .75s 1;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.ce-conversion-tool__secondary-label{color:#707684;font-size:12px;margin-left:auto;white-space:nowrap;letter-spacing:-.1em;padding-right:5px;margin-bottom:-2px;opacity:.6}@media (max-width: 650px){.ce-conversion-tool__secondary-label{display:none}}.ce-settings__button{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:6px 1px;border-radius:3px;cursor:pointer;border:0;outline:none;background-color:transparent;vertical-align:bottom;color:inherit;margin:0;line-height:32px}.ce-settings__button svg{width:20px;height:20px}@media (max-width: 650px){.ce-settings__button svg{width:28px;height:28px}}@media (hover: hover){.ce-settings__button:hover{background-color:#eff2f5}}.ce-settings__button--active{color:#388ae5}.ce-settings__button--focused{background:rgba(34,186,255,.08)!important}.ce-settings__button--focused{-webkit-box-shadow:inset 0 0 0px 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px #07a1e314}.ce-settings__button--focused-animated{-webkit-animation-name:buttonClicked;animation-name:buttonClicked;-webkit-animation-duration:.25s;animation-duration:.25s}.ce-settings__button:not(:nth-child(3n+3)){margin-right:3px}.ce-settings__button:nth-child(n+4){margin-top:3px}.ce-settings__button--disabled{cursor:not-allowed!important}.ce-settings__button--disabled{opacity:.3}.ce-settings__button--selected{color:#388ae5}@media (min-width: 651px){.codex-editor--narrow .ce-settings .ce-popover{right:0;left:auto;left:initial}}@-webkit-keyframes fade-in{0%{opacity:0}to{opacity:1}}@keyframes fade-in{0%{opacity:0}to{opacity:1}}.ce-block{-webkit-animation:fade-in .3s ease;animation:fade-in .3s ease;-webkit-animation-fill-mode:none;animation-fill-mode:none;-webkit-animation-fill-mode:initial;animation-fill-mode:initial}.ce-block:first-of-type{margin-top:0}.ce-block--selected .ce-block__content{background:#e1f2ff}.ce-block--selected .ce-block__content [contenteditable]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ce-block--selected .ce-block__content img,.ce-block--selected .ce-block__content .ce-stub{opacity:.55}.ce-block--stretched .ce-block__content{max-width:none}.ce-block__content{position:relative;max-width:650px;margin:0 auto;-webkit-transition:background-color .15s ease;transition:background-color .15s ease}.ce-block--drop-target .ce-block__content:before{content:"";position:absolute;top:100%;left:-20px;margin-top:-1px;height:8px;width:8px;border:solid #388AE5;border-width:1px 1px 0 0;-webkit-transform-origin:right;transform-origin:right;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.ce-block--drop-target .ce-block__content:after{content:"";position:absolute;top:100%;height:1px;width:100%;color:#388ae5;background:repeating-linear-gradient(90deg,#388AE5,#388AE5 1px,#fff 1px,#fff 6px)}.ce-block a{cursor:pointer;-webkit-text-decoration:underline;text-decoration:underline}.ce-block b{font-weight:700}.ce-block i{font-style:italic}@-webkit-keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}20%{-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}60%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}@keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}20%{-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}60%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}@-webkit-keyframes selectionBounce{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}50%{-webkit-transform:scale3d(1.01,1.01,1.01);transform:scale3d(1.01,1.01,1.01)}70%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}@keyframes selectionBounce{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}50%{-webkit-transform:scale3d(1.01,1.01,1.01);transform:scale3d(1.01,1.01,1.01)}70%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}@-webkit-keyframes buttonClicked{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.95,.95,.95);transform:scale3d(.95,.95,.95)}60%{-webkit-transform:scale3d(1.02,1.02,1.02);transform:scale3d(1.02,1.02,1.02)}80%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}@keyframes buttonClicked{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.95,.95,.95);transform:scale3d(.95,.95,.95)}60%{-webkit-transform:scale3d(1.02,1.02,1.02);transform:scale3d(1.02,1.02,1.02)}80%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}.cdx-block{padding:.4em 0}.cdx-block::-webkit-input-placeholder{line-height:normal!important}.cdx-input{border:1px solid rgba(201,201,204,.48);-webkit-box-shadow:inset 0 1px 2px 0 rgba(35,44,72,.06);box-shadow:inset 0 1px 2px #232c480f;border-radius:3px;padding:10px 12px;outline:none;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box}.cdx-input[data-placeholder]:before{position:static!important}.cdx-input[data-placeholder]:before{display:inline-block;width:0;white-space:nowrap;pointer-events:none}.cdx-settings-button{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:6px 1px;border-radius:3px;cursor:pointer;border:0;outline:none;background-color:transparent;vertical-align:bottom;color:inherit;margin:0;min-width:26px;min-height:26px}.cdx-settings-button svg{width:20px;height:20px}@media (max-width: 650px){.cdx-settings-button svg{width:28px;height:28px}}@media (hover: hover){.cdx-settings-button:hover{background-color:#eff2f5}}.cdx-settings-button--focused{background:rgba(34,186,255,.08)!important}.cdx-settings-button--focused{-webkit-box-shadow:inset 0 0 0px 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px #07a1e314}.cdx-settings-button--focused-animated{-webkit-animation-name:buttonClicked;animation-name:buttonClicked;-webkit-animation-duration:.25s;animation-duration:.25s}.cdx-settings-button--active{color:#388ae5}.cdx-settings-button svg{width:auto;height:auto}@media (max-width: 650px){.cdx-settings-button{width:36px;height:36px;border-radius:8px}}.cdx-loader{position:relative;border:1px solid rgba(201,201,204,.48)}.cdx-loader:before{content:"";position:absolute;left:50%;top:50%;width:18px;height:18px;margin:-11px 0 0 -11px;border:2px solid rgba(201,201,204,.48);border-left-color:#388ae5;border-radius:50%;-webkit-animation:cdxRotation 1.2s infinite linear;animation:cdxRotation 1.2s infinite linear}@-webkit-keyframes cdxRotation{0%{-webkit-transform:rotate(0deg);transform:rotate(0)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes cdxRotation{0%{-webkit-transform:rotate(0deg);transform:rotate(0)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.cdx-button{padding:13px;border-radius:3px;border:1px solid rgba(201,201,204,.48);font-size:14.9px;background:#fff;-webkit-box-shadow:0 2px 2px 0 rgba(18,30,57,.04);box-shadow:0 2px 2px #121e390a;color:#707684;text-align:center;cursor:pointer}@media (hover: hover){.cdx-button:hover{background:#FBFCFE;-webkit-box-shadow:0 1px 3px 0 rgba(18,30,57,.08);box-shadow:0 1px 3px #121e3914}}.cdx-button svg{height:20px;margin-right:.2em;margin-top:-2px}.ce-stub{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:12px 18px;margin:10px 0;border-radius:10px;background:#eff2f5;border:1px solid #EFF0F1;color:#707684;font-size:14px}.ce-stub svg{width:20px;height:20px}.ce-stub__info{margin-left:14px}.ce-stub__title{font-weight:500;text-transform:capitalize}.codex-editor.codex-editor--rtl{direction:rtl}.codex-editor.codex-editor--rtl .cdx-list{padding-left:0;padding-right:40px}.codex-editor.codex-editor--rtl .ce-toolbar__plus{right:-26px;left:auto}.codex-editor.codex-editor--rtl .ce-toolbar__actions{right:auto;left:-26px}@media (max-width: 650px){.codex-editor.codex-editor--rtl .ce-toolbar__actions{margin-left:0;margin-right:auto;padding-right:0;padding-left:10px}}.codex-editor.codex-editor--rtl .ce-settings{left:5px;right:auto}.codex-editor.codex-editor--rtl .ce-settings:before{right:auto;left:25px}.codex-editor.codex-editor--rtl .ce-settings__button:not(:nth-child(3n+3)){margin-left:3px;margin-right:0}.codex-editor.codex-editor--rtl .ce-conversion-tool__icon{margin-right:0;margin-left:10px}.codex-editor.codex-editor--rtl .ce-inline-toolbar__dropdown{border-right:0px solid transparent;border-left:1px solid rgba(201,201,204,.48);margin:0 -6px 0 6px}.codex-editor.codex-editor--rtl .ce-inline-toolbar__dropdown .icon--toggler-down{margin-left:0;margin-right:4px}@media (min-width: 651px){.codex-editor--narrow.codex-editor--rtl .ce-toolbar__plus{left:0;right:5px}}@media (min-width: 651px){.codex-editor--narrow.codex-editor--rtl .ce-toolbar__actions{left:-5px}}.cdx-search-field{--icon-margin-right: 10px;background:rgba(232,232,235,.49);border:1px solid rgba(226,226,229,.2);border-radius:6px;padding:2px;display:grid;grid-template-columns:auto auto 1fr;grid-template-rows:auto}.cdx-search-field__icon{width:26px;height:26px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-right:var(--icon-margin-right)}.cdx-search-field__icon svg{width:20px;height:20px;color:#707684}.cdx-search-field__input{font-size:14px;outline:none;font-weight:500;font-family:inherit;border:0;background:transparent;margin:0;padding:0;line-height:22px;min-width:calc(100% - 26px - var(--icon-margin-right))}.cdx-search-field__input::-webkit-input-placeholder{color:#707684;font-weight:500}.cdx-search-field__input::-moz-placeholder{color:#707684;font-weight:500}.cdx-search-field__input:-ms-input-placeholder{color:#707684;font-weight:500}.cdx-search-field__input::-ms-input-placeholder{color:#707684;font-weight:500}.cdx-search-field__input::placeholder{color:#707684;font-weight:500}.ce-popover{--border-radius: 6px;--width: 200px;--max-height: 270px;--padding: 6px;--offset-from-target: 8px;--color-border: #e8e8eb;--color-shadow: rgba(13,20,33,.13);--color-background: white;--color-text-primary: black;--color-text-secondary: #707684;--color-border-icon: rgba(201, 201, 204, .48);--color-border-icon-disabled: #EFF0F1;--color-text-icon-active: #388AE5;--color-background-icon-active: rgba(56, 138, 229, .1);--color-background-item-focus: rgba(34, 186, 255, .08);--color-shadow-item-focus: rgba(7, 161, 227, .08);--color-background-item-hover: #eff2f5;--color-background-item-confirm: #E24A4A;--color-background-item-confirm-hover: #CE4343;min-width:var(--width);width:var(--width);max-height:var(--max-height);border-radius:var(--border-radius);overflow:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-box-shadow:0 3px 15px -3px var(--color-shadow);box-shadow:0 3px 15px -3px var(--color-shadow);position:absolute;left:0;top:calc(100% + var(--offset-from-target));background:var(--color-background);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;z-index:4;opacity:0;max-height:0;pointer-events:none;padding:0;border:none}.ce-popover--opened{opacity:1;padding:var(--padding);max-height:var(--max-height);pointer-events:auto;-webkit-animation:panelShowing .1s ease;animation:panelShowing .1s ease;border:1px solid var(--color-border)}@media (max-width: 650px){.ce-popover--opened{-webkit-animation:panelShowingMobile .25s ease;animation:panelShowingMobile .25s ease}}.ce-popover__items{overflow-y:auto;-ms-scroll-chaining:none;overscroll-behavior:contain}@media (max-width: 650px){.ce-popover__overlay{position:fixed;top:0;bottom:0;left:0;right:0;background:#1D202B;z-index:3;opacity:.5;-webkit-transition:opacity .12s ease-in;transition:opacity .12s ease-in;will-change:opacity;visibility:visible}}.ce-popover__overlay--hidden{display:none}.ce-popover--open-top{top:calc(-1 * (var(--offset-from-target) + var(--popover-height)))}@media (max-width: 650px){.ce-popover{--offset: 5px;position:fixed;max-width:none;min-width:calc(100% - var(--offset) * 2);left:var(--offset);right:var(--offset);bottom:calc(var(--offset) + env(safe-area-inset-bottom));top:auto;border-radius:10px}.ce-popover .ce-popover__search{display:none}}.ce-popover__search,.ce-popover__custom-content:not(:empty){margin-bottom:5px}.ce-popover__nothing-found-message{color:#707684;display:none;cursor:default;padding:3px;font-size:14px;line-height:20px;font-weight:500;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ce-popover__nothing-found-message--displayed{display:block}.ce-popover__custom-content:not(:empty){padding:4px}@media (min-width: 651px){.ce-popover__custom-content:not(:empty){padding:0}}.ce-popover__custom-content--hidden{display:none}.ce-popover-item{--border-radius: 6px;--icon-size: 20px;--icon-size-mobile: 28px;border-radius:var(--border-radius);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:3px;color:var(--color-text-primary);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}@media (max-width: 650px){.ce-popover-item{padding:4px}}.ce-popover-item:not(:last-of-type){margin-bottom:1px}.ce-popover-item__icon{border-radius:5px;width:26px;height:26px;-webkit-box-shadow:0 0 0 1px var(--color-border-icon);box-shadow:0 0 0 1px var(--color-border-icon);background:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-right:10px}.ce-popover-item__icon svg{width:20px;height:20px}@media (max-width: 650px){.ce-popover-item__icon{width:36px;height:36px;border-radius:8px}.ce-popover-item__icon svg{width:var(--icon-size-mobile);height:var(--icon-size-mobile)}}.ce-popover-item__title{font-size:14px;line-height:20px;font-weight:500;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}@media (max-width: 650px){.ce-popover-item__title{font-size:16px}}.ce-popover-item__secondary-title{color:var(--color-text-secondary);font-size:12px;margin-left:auto;white-space:nowrap;letter-spacing:-.1em;padding-right:5px;margin-bottom:-2px;opacity:.6}@media (max-width: 650px){.ce-popover-item__secondary-title{display:none}}.ce-popover-item--active{background:var(--color-background-icon-active);color:var(--color-text-icon-active)}.ce-popover-item--active .ce-popover-item__icon{-webkit-box-shadow:none;box-shadow:none}.ce-popover-item--disabled{color:var(--color-text-secondary);cursor:default;pointer-events:none}.ce-popover-item--disabled .ce-popover-item__icon{-webkit-box-shadow:0 0 0 1px var(--color-border-icon-disabled);box-shadow:0 0 0 1px var(--color-border-icon-disabled)}.ce-popover-item--focused:not(.ce-popover-item--no-focus){background:var(--color-background-item-focus)!important}.ce-popover-item--focused:not(.ce-popover-item--no-focus){-webkit-box-shadow:inset 0 0 0px 1px var(--color-shadow-item-focus);box-shadow:inset 0 0 0 1px var(--color-shadow-item-focus)}.ce-popover-item--hidden{display:none}@media (hover: hover){.ce-popover-item:hover{cursor:pointer}.ce-popover-item:hover:not(.ce-popover-item--no-hover){background-color:var(--color-background-item-hover)}.ce-popover-item:hover .ce-popover-item__icon{-webkit-box-shadow:none;box-shadow:none}}.ce-popover-item--confirmation{background:var(--color-background-item-confirm)}.ce-popover-item--confirmation .ce-popover-item__icon{color:var(--color-background-item-confirm)}.ce-popover-item--confirmation .ce-popover-item__title{color:#fff}@media (hover: hover){.ce-popover-item--confirmation:not(.ce-popover-item--no-hover):hover{background:var(--color-background-item-confirm-hover)}}.ce-popover-item--confirmation:not(.ce-popover-item--no-focus).ce-popover-item--focused{background:var(--color-background-item-confirm-hover)!important}.ce-popover-item--confirmation .ce-popover-item__icon,.ce-popover-item--active .ce-popover-item__icon,.ce-popover-item--focused .ce-popover-item__icon{-webkit-box-shadow:none;box-shadow:none}@-webkit-keyframes panelShowing{0%{opacity:0;-webkit-transform:translateY(-8px) scale(.9);transform:translateY(-8px) scale(.9)}70%{opacity:1;-webkit-transform:translateY(2px);transform:translateY(2px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes panelShowing{0%{opacity:0;-webkit-transform:translateY(-8px) scale(.9);transform:translateY(-8px) scale(.9)}70%{opacity:1;-webkit-transform:translateY(2px);transform:translateY(2px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@-webkit-keyframes panelShowingMobile{0%{opacity:0;-webkit-transform:translateY(14px) scale(.98);transform:translateY(14px) scale(.98)}70%{opacity:1;-webkit-transform:translateY(-4px);transform:translateY(-4px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes panelShowingMobile{0%{opacity:0;-webkit-transform:translateY(14px) scale(.98);transform:translateY(14px) scale(.98)}70%{opacity:1;-webkit-transform:translateY(-4px);transform:translateY(-4px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.wobble{-webkit-animation-name:wobble;animation-name:wobble;-webkit-animation-duration:.4s;animation-duration:.4s}@-webkit-keyframes wobble{0%{-webkit-transform:translate3d(0,0,0);transform:translateZ(0)}15%{-webkit-transform:translate3d(-9%,0,0);transform:translate3d(-9%,0,0)}30%{-webkit-transform:translate3d(9%,0,0);transform:translate3d(9%,0,0)}45%{-webkit-transform:translate3d(-4%,0,0);transform:translate3d(-4%,0,0)}60%{-webkit-transform:translate3d(4%,0,0);transform:translate3d(4%,0,0)}75%{-webkit-transform:translate3d(-1%,0,0);transform:translate3d(-1%,0,0)}to{-webkit-transform:translate3d(0,0,0);transform:translateZ(0)}}@keyframes wobble{0%{-webkit-transform:translate3d(0,0,0);transform:translateZ(0)}15%{-webkit-transform:translate3d(-9%,0,0);transform:translate3d(-9%,0,0)}30%{-webkit-transform:translate3d(9%,0,0);transform:translate3d(9%,0,0)}45%{-webkit-transform:translate3d(-4%,0,0);transform:translate3d(-4%,0,0)}60%{-webkit-transform:translate3d(4%,0,0);transform:translate3d(4%,0,0)}75%{-webkit-transform:translate3d(-1%,0,0);transform:translate3d(-1%,0,0)}to{-webkit-transform:translate3d(0,0,0);transform:translateZ(0)}}
`;
let tg = class extends it {
  constructor() {
    super(...arguments), this.isMobile = !1, this.contentRectCache = void 0, this.resizeDebouncer = gd(() => {
      this.windowResize();
    }, 200);
  }
  /**
   * Editor.js UI CSS class names
   *
   * @returns {{editorWrapper: string, editorZone: string}}
   */
  get CSS() {
    return {
      editorWrapper: "codex-editor",
      editorWrapperNarrow: "codex-editor--narrow",
      editorZone: "codex-editor__redactor",
      editorZoneHidden: "codex-editor__redactor--hidden",
      editorEmpty: "codex-editor--empty",
      editorRtlFix: "codex-editor--rtl"
    };
  }
  /**
   * Return Width of center column of Editor
   *
   * @returns {DOMRect}
   */
  get contentRect() {
    if (this.contentRectCache)
      return this.contentRectCache;
    const e = this.nodes.wrapper.querySelector(`.${bi.CSS.content}`);
    return e ? (this.contentRectCache = e.getBoundingClientRect(), this.contentRectCache) : {
      width: 650,
      left: 0,
      right: 0
    };
  }
  /**
   * Making main interface
   */
  async prepare() {
    this.checkIsMobile(), this.make(), this.loadStyles();
  }
  /**
   * Toggle read-only state
   *
   * If readOnly is true:
   *  - removes all listeners from main UI module elements
   *
   * if readOnly is false:
   *  - enables all listeners to UI module elements
   *
   * @param {boolean} readOnlyEnabled - "read only" state
   */
  toggleReadOnly(e) {
    e ? this.disableModuleBindings() : window.requestIdleCallback(() => {
      this.enableModuleBindings();
    }, {
      timeout: 2e3
    });
  }
  /**
   * Check if Editor is empty and set CSS class to wrapper
   */
  checkEmptiness() {
    const { BlockManager: e } = this.Editor;
    this.nodes.wrapper.classList.toggle(this.CSS.editorEmpty, e.isEditorEmpty);
  }
  /**
   * Check if one of Toolbar is opened
   * Used to prevent global keydowns (for example, Enter) conflicts with Enter-on-toolbar
   *
   * @returns {boolean}
   */
  get someToolbarOpened() {
    const { Toolbar: e, BlockSettings: t, InlineToolbar: n, ConversionToolbar: r } = this.Editor;
    return t.opened || n.opened || r.opened || e.toolbox.opened;
  }
  /**
   * Check for some Flipper-buttons is under focus
   */
  get someFlipperButtonFocused() {
    return this.Editor.Toolbar.toolbox.hasFocus() ? !0 : Object.entries(this.Editor).filter(([e, t]) => t.flipper instanceof ks).some(([e, t]) => t.flipper.hasFocus());
  }
  /**
   * Clean editor`s UI
   */
  destroy() {
    this.nodes.holder.innerHTML = "";
  }
  /**
   * Close all Editor's toolbars
   */
  closeAllToolbars() {
    const { Toolbar: e, BlockSettings: t, InlineToolbar: n, ConversionToolbar: r } = this.Editor;
    t.close(), n.close(), r.close(), e.toolbox.close();
  }
  /**
   * Check for mobile mode and cache a result
   */
  checkIsMobile() {
    this.isMobile = window.innerWidth < Ih;
  }
  /**
   * Makes Editor.js interface
   */
  make() {
    this.nodes.holder = ae.getHolder(this.config.holder), this.nodes.wrapper = ae.make("div", [
      this.CSS.editorWrapper,
      ...this.isRtl ? [this.CSS.editorRtlFix] : []
    ]), this.nodes.redactor = ae.make("div", this.CSS.editorZone), this.nodes.holder.offsetWidth < this.contentRect.width && this.nodes.wrapper.classList.add(this.CSS.editorWrapperNarrow), this.nodes.redactor.style.paddingBottom = this.config.minHeight + "px", this.nodes.wrapper.appendChild(this.nodes.redactor), this.nodes.holder.appendChild(this.nodes.wrapper);
  }
  /**
   * Appends CSS
   */
  loadStyles() {
    const e = "editor-js-styles";
    if (ae.get(e))
      return;
    const t = ae.make("style", null, {
      id: e,
      textContent: eg.toString()
    });
    this.config.style && !cn(this.config.style) && this.config.style.nonce && t.setAttribute("nonce", this.config.style.nonce), ae.prepend(document.head, t);
  }
  /**
   * Bind events on the Editor.js interface
   */
  enableModuleBindings() {
    this.readOnlyMutableListeners.on(this.nodes.redactor, "click", (t) => {
      this.redactorClicked(t);
    }, !1), this.readOnlyMutableListeners.on(this.nodes.redactor, "mousedown", (t) => {
      this.documentTouched(t);
    }, {
      capture: !0,
      passive: !0
    }), this.readOnlyMutableListeners.on(this.nodes.redactor, "touchstart", (t) => {
      this.documentTouched(t);
    }, {
      capture: !0,
      passive: !0
    }), this.readOnlyMutableListeners.on(document, "keydown", (t) => {
      this.documentKeydown(t);
    }, !0), this.readOnlyMutableListeners.on(document, "mousedown", (t) => {
      this.documentClicked(t);
    }, !0);
    const e = gd(() => {
      this.selectionChanged();
    }, 180);
    this.readOnlyMutableListeners.on(document, "selectionchange", e, !0), this.readOnlyMutableListeners.on(window, "resize", () => {
      this.resizeDebouncer();
    }, {
      passive: !0
    }), this.watchBlockHoveredEvents();
  }
  /**
   * Listen redactor mousemove to emit 'block-hovered' event
   */
  watchBlockHoveredEvents() {
    let e;
    this.readOnlyMutableListeners.on(this.nodes.redactor, "mousemove", zl((t) => {
      const n = t.target.closest(".ce-block");
      this.Editor.BlockSelection.anyBlockSelected || n && e !== n && (e = n, this.eventsDispatcher.emit(ou, {
        block: this.Editor.BlockManager.getBlockByChildNode(n)
      }));
    }, 20), {
      passive: !0
    });
  }
  /**
   * Unbind events on the Editor.js interface
   */
  disableModuleBindings() {
    this.readOnlyMutableListeners.clearAll();
  }
  /**
   * Resize window handler
   */
  windowResize() {
    this.contentRectCache = null, this.checkIsMobile();
  }
  /**
   * All keydowns on document
   *
   * @param {KeyboardEvent} event - keyboard event
   */
  documentKeydown(e) {
    switch (e.keyCode) {
      case Fe.ENTER:
        this.enterPressed(e);
        break;
      case Fe.BACKSPACE:
      case Fe.DELETE:
        this.backspacePressed(e);
        break;
      case Fe.ESC:
        this.escapePressed(e);
        break;
      default:
        this.defaultBehaviour(e);
        break;
    }
  }
  /**
   * Ignore all other document's keydown events
   *
   * @param {KeyboardEvent} event - keyboard event
   */
  defaultBehaviour(e) {
    const { currentBlock: t } = this.Editor.BlockManager, n = e.target.closest(`.${this.CSS.editorWrapper}`), r = e.altKey || e.ctrlKey || e.metaKey || e.shiftKey;
    if (t !== void 0 && n === null) {
      this.Editor.BlockEvents.keydown(e);
      return;
    }
    n || t && r || (this.Editor.BlockManager.dropPointer(), this.Editor.Toolbar.close());
  }
  /**
   * @param {KeyboardEvent} event - keyboard event
   */
  backspacePressed(e) {
    const { BlockManager: t, BlockSelection: n, Caret: r } = this.Editor;
    if (n.anyBlockSelected && !Ye.isSelectionExists) {
      const a = t.removeSelectedBlocks(), c = t.insertDefaultBlockAtIndex(a, !0);
      r.setToBlock(c, r.positions.START), n.clearSelection(e), e.preventDefault(), e.stopPropagation(), e.stopImmediatePropagation();
    }
  }
  /**
   * Escape pressed
   * If some of Toolbar components are opened, then close it otherwise close Toolbar
   *
   * @param {Event} event - escape keydown event
   */
  escapePressed(e) {
    this.Editor.BlockSelection.clearSelection(e), this.Editor.Toolbar.toolbox.opened ? (this.Editor.Toolbar.toolbox.close(), this.Editor.Caret.setToBlock(this.Editor.BlockManager.currentBlock, this.Editor.Caret.positions.END)) : this.Editor.BlockSettings.opened ? this.Editor.BlockSettings.close() : this.Editor.ConversionToolbar.opened ? this.Editor.ConversionToolbar.close() : this.Editor.InlineToolbar.opened ? this.Editor.InlineToolbar.close() : this.Editor.Toolbar.close();
  }
  /**
   * Enter pressed on document
   *
   * @param {KeyboardEvent} event - keyboard event
   */
  enterPressed(e) {
    const { BlockManager: t, BlockSelection: n } = this.Editor, r = t.currentBlockIndex >= 0;
    if (n.anyBlockSelected && !Ye.isSelectionExists) {
      n.clearSelection(e), e.preventDefault(), e.stopImmediatePropagation(), e.stopPropagation();
      return;
    }
    if (!this.someToolbarOpened && r && e.target.tagName === "BODY") {
      const a = this.Editor.BlockManager.insert();
      this.Editor.Caret.setToBlock(a), this.Editor.Toolbar.moveAndOpen(a);
    }
    this.Editor.BlockSelection.clearSelection(e);
  }
  /**
   * All clicks on document
   *
   * @param {MouseEvent} event - Click event
   */
  documentClicked(e) {
    var t, n;
    if (!e.isTrusted)
      return;
    const r = e.target;
    this.nodes.holder.contains(r) || Ye.isAtEditor || (this.Editor.BlockManager.dropPointer(), this.Editor.Toolbar.close());
    const a = (t = this.Editor.BlockSettings.nodes.wrapper) == null ? void 0 : t.contains(r), c = (n = this.Editor.Toolbar.nodes.settingsToggler) == null ? void 0 : n.contains(r), u = a || c;
    if (this.Editor.BlockSettings.opened && !u) {
      this.Editor.BlockSettings.close();
      const p = this.Editor.BlockManager.getBlockByChildNode(r);
      this.Editor.Toolbar.moveAndOpen(p);
    }
    this.Editor.BlockSelection.clearSelection(e);
  }
  /**
   * First touch on editor
   * Fired before click
   *
   * Used to change current block — we need to do it before 'selectionChange' event.
   * Also:
   * - Move and show the Toolbar
   * - Set a Caret
   *
   * @param {MouseEvent | TouchEvent} event - touch or mouse event
   */
  documentTouched(e) {
    let t = e.target;
    if (t === this.nodes.redactor) {
      const n = e instanceof MouseEvent ? e.clientX : e.touches[0].clientX, r = e instanceof MouseEvent ? e.clientY : e.touches[0].clientY;
      t = document.elementFromPoint(n, r);
    }
    try {
      this.Editor.BlockManager.setCurrentBlockByChildNode(t);
    } catch {
      this.Editor.RectangleSelection.isRectActivated() || this.Editor.Caret.setToTheLastBlock();
    }
    this.Editor.Toolbar.moveAndOpen();
  }
  /**
   * All clicks on the redactor zone
   *
   * @param {MouseEvent} event - click event
   * @description
   * - By clicks on the Editor's bottom zone:
   *      - if last Block is empty, set a Caret to this
   *      - otherwise, add a new empty Block and set a Caret to that
   */
  redactorClicked(e) {
    if (!Ye.isCollapsed)
      return;
    const t = e.target, n = e.metaKey || e.ctrlKey;
    if (ae.isAnchor(t) && n) {
      e.stopImmediatePropagation(), e.stopPropagation();
      const r = t.getAttribute("href"), a = wf(r);
      xf(a);
      return;
    }
    this.processBottomZoneClick(e);
  }
  /**
   * Check if user clicks on the Editor's bottom zone:
   *  - set caret to the last block
   *  - or add new empty block
   *
   * @param event - click event
   */
  processBottomZoneClick(e) {
    const t = this.Editor.BlockManager.getBlockByIndex(-1), n = ae.offset(t.holder).bottom, r = e.pageY, { BlockSelection: a } = this.Editor;
    if (e.target instanceof Element && e.target.isEqualNode(this.nodes.redactor) && /**
    * If there is cross block selection started, target will be equal to redactor so we need additional check
    */
    !a.anyBlockSelected && /**
    * Prevent caret jumping (to last block) when clicking between blocks
    */
    n < r) {
      e.stopImmediatePropagation(), e.stopPropagation();
      const { BlockManager: c, Caret: u, Toolbar: p } = this.Editor;
      (!c.lastBlock.tool.isDefault || !c.lastBlock.isEmpty) && c.insertAtEnd(), u.setToTheLastBlock(), p.moveAndOpen(c.lastBlock);
    }
  }
  /**
   * Handle selection changes on mobile devices
   * Uses for showing the Inline Toolbar
   */
  selectionChanged() {
    const { CrossBlockSelection: e, BlockSelection: t } = this.Editor, n = Ye.anchorElement;
    if (e.isCrossBlockSelectionStarted && t.anyBlockSelected && Ye.get().removeAllRanges(), !n) {
      Ye.range || this.Editor.InlineToolbar.close();
      return;
    }
    const r = n.closest(`.${bi.CSS.content}`) === null;
    if (r && (this.Editor.InlineToolbar.containsNode(n) || this.Editor.InlineToolbar.close(), n.dataset.inlineToolbar !== "true"))
      return;
    this.Editor.BlockManager.currentBlock || this.Editor.BlockManager.setCurrentBlockByChildNode(n);
    const a = r !== !0;
    this.Editor.InlineToolbar.tryToShow(!0, a);
  }
};
const og = {
  // API Modules
  BlocksAPI: Af,
  CaretAPI: Bf,
  EventsAPI: Rf,
  I18nAPI: pc,
  API: If,
  InlineToolbarAPI: Nf,
  ListenersAPI: Pf,
  NotifierAPI: Yf,
  ReadOnlyAPI: Ff,
  SanitizerAPI: Zf,
  SaverAPI: Kf,
  SelectionAPI: Xf,
  StylesAPI: Jf,
  ToolbarAPI: Qf,
  TooltipAPI: im,
  UiAPI: rm,
  // Toolbar Modules
  BlockSettings: xm,
  ConversionToolbar: Cm,
  Toolbar: Om,
  InlineToolbar: Lm,
  // Modules
  BlockEvents: Am,
  BlockManager: Im,
  BlockSelection: Nm,
  Caret: Pm,
  CrossBlockSelection: Hm,
  DragNDrop: jm,
  ModificationsObserver: $m,
  Paste: Ym,
  ReadOnly: Fm,
  RectangleSelection: ia,
  Renderer: zm,
  Saver: Wm,
  Tools: uu,
  UI: tg
};
class ng {
  /**
   * @param {EditorConfig} config - user configuration
   */
  constructor(e) {
    this.moduleInstances = {}, this.eventsDispatcher = new Qa();
    let t, n;
    this.isReady = new Promise((r, a) => {
      t = r, n = a;
    }), Promise.resolve().then(async () => {
      this.configuration = e, this.validate(), this.init(), await this.start(), await this.render();
      const { BlockManager: r, Caret: a, UI: c, ModificationsObserver: u } = this.moduleInstances;
      c.checkEmptiness(), u.enable(), this.configuration.autofocus && a.setToBlock(r.blocks[0], a.positions.START), t();
    }).catch((r) => {
      gt(`Editor.js is not ready because of ${r}`, "error"), n(r);
    });
  }
  /**
   * Setting for configuration
   *
   * @param {EditorConfig|string} config - Editor's config to set
   */
  set configuration(e) {
    var t, n;
    uo(e) ? this.config = {
      ...e
    } : this.config = {
      holder: e
    }, Ul(!!this.config.holderId, "config.holderId", "config.holder"), this.config.holderId && !this.config.holder && (this.config.holder = this.config.holderId, this.config.holderId = null), this.config.holder == null && (this.config.holder = "editorjs"), this.config.logLevel || (this.config.logLevel = Ah.VERBOSE), ff(this.config.logLevel), Ul(!!this.config.initialBlock, "config.initialBlock", "config.defaultBlock"), this.config.defaultBlock = this.config.defaultBlock || this.config.initialBlock || "paragraph", this.config.minHeight = this.config.minHeight !== void 0 ? this.config.minHeight : 300;
    const r = {
      type: this.config.defaultBlock,
      data: {}
    };
    this.config.placeholder = this.config.placeholder || !1, this.config.sanitizer = this.config.sanitizer || {
      p: !0,
      b: !0,
      a: !0
    }, this.config.hideToolbar = this.config.hideToolbar ? this.config.hideToolbar : !1, this.config.tools = this.config.tools || {}, this.config.i18n = this.config.i18n || {}, this.config.data = this.config.data || { blocks: [] }, this.config.onReady = this.config.onReady || (() => {
    }), this.config.onChange = this.config.onChange || (() => {
    }), this.config.inlineToolbar = this.config.inlineToolbar !== void 0 ? this.config.inlineToolbar : !0, (cn(this.config.data) || !this.config.data.blocks || this.config.data.blocks.length === 0) && (this.config.data = { blocks: [r] }), this.config.readOnly = this.config.readOnly || !1, (t = this.config.i18n) != null && t.messages && Jo.setDictionary(this.config.i18n.messages), this.config.i18n.direction = ((n = this.config.i18n) == null ? void 0 : n.direction) || "ltr";
  }
  /**
   * Returns private property
   *
   * @returns {EditorConfig}
   */
  get configuration() {
    return this.config;
  }
  /**
   * Checks for required fields in Editor's config
   */
  validate() {
    const { holderId: e, holder: t } = this.config;
    if (e && t)
      throw Error("«holderId» and «holder» param can't assign at the same time.");
    if (nr(t) && !ae.get(t))
      throw Error(`element with ID «${t}» is missing. Pass correct holder's ID.`);
    if (t && uo(t) && !ae.isElement(t))
      throw Error("«holder» value must be an Element node");
  }
  /**
   * Initializes modules:
   *  - make and save instances
   *  - configure
   */
  init() {
    this.constructModules(), this.configureModules();
  }
  /**
   * Start Editor!
   *
   * Get list of modules that needs to be prepared and return a sequence (Promise)
   *
   * @returns {Promise<void>}
   */
  async start() {
    await [
      "Tools",
      "UI",
      "BlockManager",
      "Paste",
      "BlockSelection",
      "RectangleSelection",
      "CrossBlockSelection",
      "ReadOnly"
    ].reduce(
      (e, t) => e.then(async () => {
        try {
          await this.moduleInstances[t].prepare();
        } catch (n) {
          if (n instanceof Hh)
            throw new Error(n.message);
          gt(`Module ${t} was skipped because of %o`, "warn", n);
        }
      }),
      Promise.resolve()
    );
  }
  /**
   * Render initial data
   */
  render() {
    return this.moduleInstances.Renderer.render(this.config.data.blocks);
  }
  /**
   * Make modules instances and save it to the @property this.moduleInstances
   */
  constructModules() {
    Object.entries(og).forEach(([e, t]) => {
      try {
        this.moduleInstances[e] = new t({
          config: this.configuration,
          eventsDispatcher: this.eventsDispatcher
        });
      } catch (n) {
        gt("[constructModules]", `Module ${e} skipped because`, "error", n);
      }
    });
  }
  /**
   * Modules instances configuration:
   *  - pass other modules to the 'state' property
   *  - ...
   */
  configureModules() {
    for (const e in this.moduleInstances)
      Object.prototype.hasOwnProperty.call(this.moduleInstances, e) && (this.moduleInstances[e].state = this.getModulesDiff(e));
  }
  /**
   * Return modules without passed name
   *
   * @param {string} name - module for witch modules difference should be calculated
   */
  getModulesDiff(e) {
    const t = {};
    for (const n in this.moduleInstances)
      n !== e && (t[n] = this.moduleInstances[n]);
    return t;
  }
}
/**
 * Editor.js
 *
 * @license Apache-2.0
 * @see Editor.js <https://editorjs.io>
 * @author CodeX Team <https://codex.so>
 */
let Sd = class {
  /** Editor version */
  static get version() {
    return "2.29.0";
  }
  /**
   * @param {EditorConfig|string|undefined} [configuration] - user configuration
   */
  constructor(e) {
    let t = () => {
    };
    uo(e) && Lt(e.onReady) && (t = e.onReady);
    const n = new ng(e);
    this.isReady = n.isReady.then(() => {
      this.exportAPI(n), t();
    });
  }
  /**
   * Export external API methods
   *
   * @param {Core} editor — Editor's instance
   */
  exportAPI(e) {
    const t = ["configuration"], n = () => {
      Object.values(e.moduleInstances).forEach((r) => {
        Lt(r.destroy) && r.destroy(), r.listeners.removeAll();
      }), nm(), e = null;
      for (const r in this)
        Object.prototype.hasOwnProperty.call(this, r) && delete this[r];
      Object.setPrototypeOf(this, null);
    };
    t.forEach((r) => {
      this[r] = e[r];
    }), this.destroy = n, Object.setPrototypeOf(this, e.moduleInstances.API.methods), delete this.exportAPI, Object.entries({
      blocks: {
        clear: "clear",
        render: "render"
      },
      caret: {
        focus: "focus"
      },
      events: {
        on: "on",
        off: "off",
        emit: "emit"
      },
      saver: {
        save: "save"
      }
    }).forEach(([r, a]) => {
      Object.entries(a).forEach(([c, u]) => {
        this[u] = e.moduleInstances.API.methods[r][c];
      });
    });
  }
};
function An(o) {
  return o && o.__esModule && Object.prototype.hasOwnProperty.call(o, "default") ? o.default : o;
}
var pu = { exports: {} };
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(window, function() {
    return function(t) {
      var n = {};
      function r(a) {
        if (n[a])
          return n[a].exports;
        var c = n[a] = { i: a, l: !1, exports: {} };
        return t[a].call(c.exports, c, c.exports, r), c.l = !0, c.exports;
      }
      return r.m = t, r.c = n, r.d = function(a, c, u) {
        r.o(a, c) || Object.defineProperty(a, c, { enumerable: !0, get: u });
      }, r.r = function(a) {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(a, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(a, "__esModule", { value: !0 });
      }, r.t = function(a, c) {
        if (1 & c && (a = r(a)), 8 & c || 4 & c && typeof a == "object" && a && a.__esModule)
          return a;
        var u = /* @__PURE__ */ Object.create(null);
        if (r.r(u), Object.defineProperty(u, "default", { enumerable: !0, value: a }), 2 & c && typeof a != "string")
          for (var p in a)
            r.d(u, p, (function(g) {
              return a[g];
            }).bind(null, p));
        return u;
      }, r.n = function(a) {
        var c = a && a.__esModule ? function() {
          return a.default;
        } : function() {
          return a;
        };
        return r.d(c, "a", c), c;
      }, r.o = function(a, c) {
        return Object.prototype.hasOwnProperty.call(a, c);
      }, r.p = "/", r(r.s = 4);
    }([function(t, n, r) {
      var a = r(1), c = r(2);
      typeof (c = c.__esModule ? c.default : c) == "string" && (c = [[t.i, c, ""]]);
      var u = { insert: "head", singleton: !1 };
      a(c, u), t.exports = c.locals || {};
    }, function(t, n, r) {
      var a, c = function() {
        return a === void 0 && (a = !!(window && document && document.all && !window.atob)), a;
      }, u = function() {
        var F = {};
        return function(Q) {
          if (F[Q] === void 0) {
            var U = document.querySelector(Q);
            if (window.HTMLIFrameElement && U instanceof window.HTMLIFrameElement)
              try {
                U = U.contentDocument.head;
              } catch {
                U = null;
              }
            F[Q] = U;
          }
          return F[Q];
        };
      }(), p = [];
      function g(F) {
        for (var Q = -1, U = 0; U < p.length; U++)
          if (p[U].identifier === F) {
            Q = U;
            break;
          }
        return Q;
      }
      function v(F, Q) {
        for (var U = {}, z = [], d = 0; d < F.length; d++) {
          var j = F[d], R = Q.base ? j[0] + Q.base : j[0], V = U[R] || 0, K = "".concat(R, " ").concat(V);
          U[R] = V + 1;
          var J = g(K), B = { css: j[1], media: j[2], sourceMap: j[3] };
          J !== -1 ? (p[J].references++, p[J].updater(B)) : p.push({ identifier: K, updater: I(B, Q), references: 1 }), z.push(K);
        }
        return z;
      }
      function x(F) {
        var Q = document.createElement("style"), U = F.attributes || {};
        if (U.nonce === void 0) {
          var z = r.nc;
          z && (U.nonce = z);
        }
        if (Object.keys(U).forEach(function(j) {
          Q.setAttribute(j, U[j]);
        }), typeof F.insert == "function")
          F.insert(Q);
        else {
          var d = u(F.insert || "head");
          if (!d)
            throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
          d.appendChild(Q);
        }
        return Q;
      }
      var y, T = (y = [], function(F, Q) {
        return y[F] = Q, y.filter(Boolean).join(`
`);
      });
      function k(F, Q, U, z) {
        var d = U ? "" : z.media ? "@media ".concat(z.media, " {").concat(z.css, "}") : z.css;
        if (F.styleSheet)
          F.styleSheet.cssText = T(Q, d);
        else {
          var j = document.createTextNode(d), R = F.childNodes;
          R[Q] && F.removeChild(R[Q]), R.length ? F.insertBefore(j, R[Q]) : F.appendChild(j);
        }
      }
      function M(F, Q, U) {
        var z = U.css, d = U.media, j = U.sourceMap;
        if (d ? F.setAttribute("media", d) : F.removeAttribute("media"), j && typeof btoa < "u" && (z += `
/*# sourceMappingURL=data:application/json;base64,`.concat(btoa(unescape(encodeURIComponent(JSON.stringify(j)))), " */")), F.styleSheet)
          F.styleSheet.cssText = z;
        else {
          for (; F.firstChild; )
            F.removeChild(F.firstChild);
          F.appendChild(document.createTextNode(z));
        }
      }
      var O = null, Y = 0;
      function I(F, Q) {
        var U, z, d;
        if (Q.singleton) {
          var j = Y++;
          U = O || (O = x(Q)), z = k.bind(null, U, j, !1), d = k.bind(null, U, j, !0);
        } else
          U = x(Q), z = M.bind(null, U, Q), d = function() {
            (function(R) {
              if (R.parentNode === null)
                return !1;
              R.parentNode.removeChild(R);
            })(U);
          };
        return z(F), function(R) {
          if (R) {
            if (R.css === F.css && R.media === F.media && R.sourceMap === F.sourceMap)
              return;
            z(F = R);
          } else
            d();
        };
      }
      t.exports = function(F, Q) {
        (Q = Q || {}).singleton || typeof Q.singleton == "boolean" || (Q.singleton = c());
        var U = v(F = F || [], Q);
        return function(z) {
          if (z = z || [], Object.prototype.toString.call(z) === "[object Array]") {
            for (var d = 0; d < U.length; d++) {
              var j = g(U[d]);
              p[j].references--;
            }
            for (var R = v(z, Q), V = 0; V < U.length; V++) {
              var K = g(U[V]);
              p[K].references === 0 && (p[K].updater(), p.splice(K, 1));
            }
            U = R;
          }
        };
      };
    }, function(t, n, r) {
      (n = r(3)(!1)).push([t.i, `.cdx-underline {
    text-decoration: underline;
}
`, ""]), t.exports = n;
    }, function(t, n, r) {
      t.exports = function(a) {
        var c = [];
        return c.toString = function() {
          return this.map(function(u) {
            var p = function(g, v) {
              var x = g[1] || "", y = g[3];
              if (!y)
                return x;
              if (v && typeof btoa == "function") {
                var T = (M = y, O = btoa(unescape(encodeURIComponent(JSON.stringify(M)))), Y = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(O), "/*# ".concat(Y, " */")), k = y.sources.map(function(I) {
                  return "/*# sourceURL=".concat(y.sourceRoot || "").concat(I, " */");
                });
                return [x].concat(k).concat([T]).join(`
`);
              }
              var M, O, Y;
              return [x].join(`
`);
            }(u, a);
            return u[2] ? "@media ".concat(u[2], " {").concat(p, "}") : p;
          }).join("");
        }, c.i = function(u, p, g) {
          typeof u == "string" && (u = [[null, u, ""]]);
          var v = {};
          if (g)
            for (var x = 0; x < this.length; x++) {
              var y = this[x][0];
              y != null && (v[y] = !0);
            }
          for (var T = 0; T < u.length; T++) {
            var k = [].concat(u[T]);
            g && v[k[0]] || (p && (k[2] ? k[2] = "".concat(p, " and ").concat(k[2]) : k[2] = p), c.push(k));
          }
        }, c;
      };
    }, function(t, n, r) {
      r.r(n), r.d(n, "default", function() {
        return u;
      }), r(0);
      function a(p) {
        return (a = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(g) {
          return typeof g;
        } : function(g) {
          return g && typeof Symbol == "function" && g.constructor === Symbol && g !== Symbol.prototype ? "symbol" : typeof g;
        })(p);
      }
      function c(p, g) {
        for (var v = 0; v < g.length; v++) {
          var x = g[v];
          x.enumerable = x.enumerable || !1, x.configurable = !0, "value" in x && (x.writable = !0), Object.defineProperty(p, (y = x.key, T = void 0, T = function(k, M) {
            if (a(k) !== "object" || k === null)
              return k;
            var O = k[Symbol.toPrimitive];
            if (O !== void 0) {
              var Y = O.call(k, M || "default");
              if (a(Y) !== "object")
                return Y;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (M === "string" ? String : Number)(k);
          }(y, "string"), a(T) === "symbol" ? T : String(T)), x);
        }
        var y, T;
      }
      var u = function() {
        function p(y) {
          var T = y.api;
          (function(k, M) {
            if (!(k instanceof M))
              throw new TypeError("Cannot call a class as a function");
          })(this, p), this.api = T, this.button = null, this.tag = "U", this.iconClasses = { base: this.api.styles.inlineToolButton, active: this.api.styles.inlineToolButtonActive };
        }
        var g, v, x;
        return g = p, x = [{ key: "CSS", get: function() {
          return "cdx-underline";
        } }, { key: "isInline", get: function() {
          return !0;
        } }, { key: "sanitize", get: function() {
          return { u: { class: p.CSS } };
        } }], (v = [{ key: "render", value: function() {
          return this.button = document.createElement("button"), this.button.type = "button", this.button.classList.add(this.iconClasses.base), this.button.innerHTML = this.toolboxIcon, this.button;
        } }, { key: "surround", value: function(y) {
          if (y) {
            var T = this.api.selection.findParentTag(this.tag, p.CSS);
            T ? this.unwrap(T) : this.wrap(y);
          }
        } }, { key: "wrap", value: function(y) {
          var T = document.createElement(this.tag);
          T.classList.add(p.CSS), T.appendChild(y.extractContents()), y.insertNode(T), this.api.selection.expandToTag(T);
        } }, { key: "unwrap", value: function(y) {
          this.api.selection.expandToTag(y);
          var T = window.getSelection(), k = T.getRangeAt(0), M = k.extractContents();
          y.parentNode.removeChild(y), k.insertNode(M), T.removeAllRanges(), T.addRange(k);
        } }, { key: "checkState", value: function() {
          var y = this.api.selection.findParentTag(this.tag, p.CSS);
          this.button.classList.toggle(this.iconClasses.active, !!y);
        } }, { key: "toolboxIcon", get: function() {
          return '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7.5V11.5C9 12.2956 9.31607 13.0587 9.87868 13.6213C10.4413 14.1839 11.2044 14.5 12 14.5C12.7956 14.5 13.5587 14.1839 14.1213 13.6213C14.6839 13.0587 15 12.2956 15 11.5V7.5"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7.71429 18H16.2857"/></svg>';
        } }]) && c(g.prototype, v), x && c(g, x), Object.defineProperty(g, "prototype", { writable: !1 }), p;
      }();
    }]).default;
  });
})(pu);
var ig = pu.exports;
const rg = /* @__PURE__ */ An(ig);
var fu = { exports: {} };
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(self, () => (() => {
    var t = { 424: (c, u, p) => {
      p.d(u, { Z: () => T });
      var g = p(81), v = p.n(g), x = p(645), y = p.n(x)()(v());
      y.push([c.id, `.tooltip-tool__input{
  border: 0;
  border-radius: 0 0 4px 4px;
  border-top: 1px solid rgba(201,201,204,.48);
}

.tooltip-tool__span{
  padding: 3px;
  border-radius: 6px;
}

.tooltip-tool__underline{
  text-decoration: underline;
}

.tooltip-color::before {
  background-color: transparent;
}

.tooltip-color::after {
  background-color: transparent;
}

.tooltip-text-color {
  color: transparent;
}

.cdx-tooltip {
  display: inline-block;
}
`, ""]);
      const T = y;
    }, 645: (c) => {
      c.exports = function(u) {
        var p = [];
        return p.toString = function() {
          return this.map(function(g) {
            var v = "", x = g[5] !== void 0;
            return g[4] && (v += "@supports (".concat(g[4], ") {")), g[2] && (v += "@media ".concat(g[2], " {")), x && (v += "@layer".concat(g[5].length > 0 ? " ".concat(g[5]) : "", " {")), v += u(g), x && (v += "}"), g[2] && (v += "}"), g[4] && (v += "}"), v;
          }).join("");
        }, p.i = function(g, v, x, y, T) {
          typeof g == "string" && (g = [[null, g, void 0]]);
          var k = {};
          if (x)
            for (var M = 0; M < this.length; M++) {
              var O = this[M][0];
              O != null && (k[O] = !0);
            }
          for (var Y = 0; Y < g.length; Y++) {
            var I = [].concat(g[Y]);
            x && k[I[0]] || (T !== void 0 && (I[5] === void 0 || (I[1] = "@layer".concat(I[5].length > 0 ? " ".concat(I[5]) : "", " {").concat(I[1], "}")), I[5] = T), v && (I[2] && (I[1] = "@media ".concat(I[2], " {").concat(I[1], "}")), I[2] = v), y && (I[4] ? (I[1] = "@supports (".concat(I[4], ") {").concat(I[1], "}"), I[4] = y) : I[4] = "".concat(y)), p.push(I));
          }
        }, p;
      };
    }, 81: (c) => {
      c.exports = function(u) {
        return u[1];
      };
    }, 379: (c) => {
      var u = [];
      function p(x) {
        for (var y = -1, T = 0; T < u.length; T++)
          if (u[T].identifier === x) {
            y = T;
            break;
          }
        return y;
      }
      function g(x, y) {
        for (var T = {}, k = [], M = 0; M < x.length; M++) {
          var O = x[M], Y = y.base ? O[0] + y.base : O[0], I = T[Y] || 0, F = "".concat(Y, " ").concat(I);
          T[Y] = I + 1;
          var Q = p(F), U = { css: O[1], media: O[2], sourceMap: O[3], supports: O[4], layer: O[5] };
          if (Q !== -1)
            u[Q].references++, u[Q].updater(U);
          else {
            var z = v(U, y);
            y.byIndex = M, u.splice(M, 0, { identifier: F, updater: z, references: 1 });
          }
          k.push(F);
        }
        return k;
      }
      function v(x, y) {
        var T = y.domAPI(y);
        return T.update(x), function(k) {
          if (k) {
            if (k.css === x.css && k.media === x.media && k.sourceMap === x.sourceMap && k.supports === x.supports && k.layer === x.layer)
              return;
            T.update(x = k);
          } else
            T.remove();
        };
      }
      c.exports = function(x, y) {
        var T = g(x = x || [], y = y || {});
        return function(k) {
          k = k || [];
          for (var M = 0; M < T.length; M++) {
            var O = p(T[M]);
            u[O].references--;
          }
          for (var Y = g(k, y), I = 0; I < T.length; I++) {
            var F = p(T[I]);
            u[F].references === 0 && (u[F].updater(), u.splice(F, 1));
          }
          T = Y;
        };
      };
    }, 569: (c) => {
      var u = {};
      c.exports = function(p, g) {
        var v = function(x) {
          if (u[x] === void 0) {
            var y = document.querySelector(x);
            if (window.HTMLIFrameElement && y instanceof window.HTMLIFrameElement)
              try {
                y = y.contentDocument.head;
              } catch {
                y = null;
              }
            u[x] = y;
          }
          return u[x];
        }(p);
        if (!v)
          throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
        v.appendChild(g);
      };
    }, 216: (c) => {
      c.exports = function(u) {
        var p = document.createElement("style");
        return u.setAttributes(p, u.attributes), u.insert(p, u.options), p;
      };
    }, 575: (c) => {
      c.exports = function(u, p) {
        Object.keys(p).forEach(function(g) {
          u.setAttribute(g, p[g]);
        });
      };
    }, 795: (c) => {
      c.exports = function(u) {
        var p = u.insertStyleElement(u);
        return { update: function(g) {
          (function(v, x, y) {
            var T = "";
            y.supports && (T += "@supports (".concat(y.supports, ") {")), y.media && (T += "@media ".concat(y.media, " {"));
            var k = y.layer !== void 0;
            k && (T += "@layer".concat(y.layer.length > 0 ? " ".concat(y.layer) : "", " {")), T += y.css, k && (T += "}"), y.media && (T += "}"), y.supports && (T += "}");
            var M = y.sourceMap;
            M && typeof btoa < "u" && (T += `
/*# sourceMappingURL=data:application/json;base64,`.concat(btoa(unescape(encodeURIComponent(JSON.stringify(M)))), " */")), x.styleTagTransform(T, v, x.options);
          })(p, u, g);
        }, remove: function() {
          (function(g) {
            if (g.parentNode === null)
              return !1;
            g.parentNode.removeChild(g);
          })(p);
        } };
      };
    }, 589: (c) => {
      c.exports = function(u, p) {
        if (p.styleSheet)
          p.styleSheet.cssText = u;
        else {
          for (; p.firstChild; )
            p.removeChild(p.firstChild);
          p.appendChild(document.createTextNode(u));
        }
      };
    }, 980: (c) => {
      c.exports = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="16" height="14" viewBox="0 -5 21 30"><path fill="currentColor" stroke-width="0" d="M4,2H20A2,2 0 0,1 22,4V16A2,2 0 0,1 20,18H16L12,22L8,18H4A2,2 0 0,1 2,16V4A2,2 0 0,1 4,2M4,4V16H8.83L12,19.17L15.17,16H20V4H4M6,7H18V9H6V7M6,11H16V13H6V11Z"></path></svg>';
    } }, n = {};
    function r(c) {
      var u = n[c];
      if (u !== void 0)
        return u.exports;
      var p = n[c] = { id: c, exports: {} };
      return t[c](p, p.exports, r), p.exports;
    }
    r.n = (c) => {
      var u = c && c.__esModule ? () => c.default : () => c;
      return r.d(u, { a: u }), u;
    }, r.d = (c, u) => {
      for (var p in u)
        r.o(u, p) && !r.o(c, p) && Object.defineProperty(c, p, { enumerable: !0, get: u[p] });
    }, r.o = (c, u) => Object.prototype.hasOwnProperty.call(c, u);
    var a = {};
    return (() => {
      r.d(a, { default: () => d });
      var c = r(379), u = r.n(c), p = r(795), g = r.n(p), v = r(569), x = r.n(v), y = r(575), T = r.n(y), k = r(216), M = r.n(k), O = r(589), Y = r.n(O), I = r(424), F = { attributes: { id: "editorjs-tooltip" } };
      F.styleTagTransform = Y(), F.setAttributes = T(), F.insert = x().bind(null, "head"), F.domAPI = g(), F.insertStyleElement = M(), u()(I.Z, F), I.Z && I.Z.locals && I.Z.locals;
      var Q = r(980), U = r.n(Q);
      function z(j, R) {
        for (var V = 0; V < R.length; V++) {
          var K = R[V];
          K.enumerable = K.enumerable || !1, K.configurable = !0, "value" in K && (K.writable = !0), Object.defineProperty(j, K.key, K);
        }
      }
      var d = function() {
        function j(J) {
          var B = J.api, se = J.config, Z = se === void 0 ? {} : se;
          (function(oe, fe) {
            if (!(oe instanceof fe))
              throw new TypeError("Cannot call a class as a function");
          })(this, j), this.api = B, this.button = null, this._state = !1, this.spanTooltip = null;
          var ne = Z.location, le = ne === void 0 ? "bottom" : ne;
          this.tooltipLocation = le, this.highlightColor = Z.highlightColor, this.underline = !!Z.underline && Z.underline, this.backgroundColor = Z.backgroundColor, this.textColor = Z.textColor, this.editorId = Z.holder ? Z.holder : "editorjs", this.tag = "SPAN", this.CSS = { input: "tooltip-tool__input", tooltip: "cdx-tooltip", span: "tooltip-tool__span", underline: "tooltip-tool__underline" }, this.tooltipsObserver(), (this.backgroundColor || this.textColor) && this.customTooltip();
        }
        var R, V, K;
        return R = j, V = [{ key: "state", get: function() {
          return this._state;
        }, set: function(J) {
          this._state = J;
          var B = this.button, se = this.api.styles.inlineToolButtonActive;
          B.classList.toggle(se, J);
        } }, { key: "customTooltip", value: function() {
          var J = this, B = document.querySelector(".ct"), se = document.querySelector(".ct__content");
          new MutationObserver(function(Z) {
            Z.forEach(function(ne) {
              if (ne.type === "childList") {
                var le = se.textContent;
                document.querySelector('[data-tooltip="'.concat(le, '"]')) ? (J.backgroundColor && J.setTooltipColor(), J.textColor && J.setTooltipTextColor()) : (B.classList.remove("tooltip-color"), se.classList.remove("tooltip-text-color"));
              }
            });
          }).observe(se, { childList: !0 });
        } }, { key: "tooltipSheet", value: function() {
          var J = document.styleSheets;
          return Object.values(J).filter(function(B) {
            return B.ownerNode.id === "editorjs-tooltip";
          });
        } }, { key: "tooltipCssRule", value: function(J) {
          var B = this.tooltipSheet();
          return Object.values(B[0].cssRules).filter(function(se) {
            return se.selectorText === J;
          });
        } }, { key: "setTooltipColor", value: function() {
          var J = document.querySelector(".ct"), B = this.tooltipCssRule(".tooltip-color::before"), se = this.tooltipCssRule(".tooltip-color::after");
          B[0].style.setProperty("background-color", this.backgroundColor), se[0].style.setProperty("background-color", this.backgroundColor), J.classList.add("tooltip-color");
        } }, { key: "setTooltipTextColor", value: function() {
          var J = this.tooltipCssRule(".tooltip-text-color"), B = document.querySelector(".ct__content");
          J[0].style.setProperty("color", this.textColor), B.classList.add("tooltip-text-color");
        } }, { key: "tooltipsObserver", value: function() {
          var J = this, B = document.getElementById(this.editorId);
          new MutationObserver(function(se) {
            se.forEach(function(Z) {
              Z.type === "childList" && Z.target.classList.contains("codex-editor__redactor") && document.querySelectorAll(".cdx-tooltip").forEach(function(ne) {
                return J.createTooltip(ne.dataset.tooltip, ne);
              });
            });
          }).observe(B, { childList: !0, subtree: !0 });
        } }, { key: "createTooltip", value: function(J) {
          var B = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.spanTooltip;
          this.spanTooltip ? (this.spanTooltip.dataset.tooltip = J, this.setBackgroundColor(this.spanTooltip), this.setUnderlineDecoration(this.spanTooltip)) : (this.setBackgroundColor(B), this.setUnderlineDecoration(B));
          var se = this.tooltipLocation;
          this.api.tooltip.onHover(B, J, { placement: se });
        } }, { key: "setBackgroundColor", value: function(J) {
          var B = J;
          B.childElementCount > 0 ? (B.firstChild.classList.add(this.CSS.span), B.firstChild.style.background = this.highlightColor) : (B.classList.add(this.CSS.span), B.style.background = this.highlightColor);
        } }, { key: "setUnderlineDecoration", value: function(J) {
          var B = J;
          this.underline && (B.childElementCount > 0 ? B.firstChild.classList.add(this.CSS.underline) : B.classList.add(this.CSS.underline));
        } }, { key: "render", value: function() {
          this.button = document.createElement("button"), this.button.type = "button", this.button.innerHTML = U();
          var J = this.api.styles.inlineToolButton;
          return this.button.classList.add(J), this.button;
        } }, { key: "surround", value: function(J) {
          this.state ? this.unwrap(J) : this.wrap(J);
        } }, { key: "wrap", value: function(J) {
          var B = J.extractContents();
          this.spanTooltip = document.createElement(this.tag), this.spanTooltip.classList.add(this.CSS.tooltip), this.spanTooltip.appendChild(B), J.insertNode(this.spanTooltip), this.api.selection.expandToTag(this.spanTooltip);
        } }, { key: "unwrap", value: function(J) {
          this.spanTooltip = this.api.selection.findParentTag(this.tag, this.CSS.tooltip);
          var B = J.extractContents();
          this.spanTooltip.remove(), J.insertNode(B);
        } }, { key: "checkState", value: function() {
          this.spanTooltip = this.api.selection.findParentTag(this.tag), this.state = !!this.spanTooltip, this.state ? this.showActions() : this.hideActions();
        } }, { key: "renderActions", value: function() {
          if (this.spanTooltip = this.api.selection.findParentTag(this.tag), this.tooltipInput = document.createElement("input"), this.tooltipInput.placeholder = "Add a tooltip", this.tooltipInput.classList.add(this.api.styles.input), this.tooltipInput.classList.add(this.CSS.input), this.spanTooltip) {
            var J = this.spanTooltip.dataset.tooltip;
            this.tooltipInput.value = J;
          }
          return this.tooltipInput.hidden = !0, this.tooltipInput;
        } }, { key: "showActions", value: function() {
          var J = this;
          this.tooltipInput.hidden = !1, this.api.listeners.on(this.tooltipInput, "keydown", function(B) {
            if (B.key === "Enter") {
              var se = J.tooltipInput.value;
              J.createTooltip(se), J.closeToolbar();
            }
          }, !1);
        } }, { key: "hideActions", value: function() {
          this.tooltipInput.hidden = !0;
        } }, { key: "closeToolbar", value: function() {
          document.querySelector(".ce-inline-toolbar--showed").classList.remove("ce-inline-toolbar--showed");
        } }], K = [{ key: "isInline", get: function() {
          return !0;
        } }, { key: "sanitize", get: function() {
          return { span: function(J) {
            return J.classList.remove("tooltip-tool__span", "tooltip-tool__underline"), { class: !0, "data-tooltip": !0 };
          } };
        } }], V && z(R.prototype, V), K && z(R, K), Object.defineProperty(R, "prototype", { writable: !1 }), j;
      }();
    })(), a.default;
  })());
})(fu);
var sg = fu.exports;
const ag = /* @__PURE__ */ An(sg);
var mu = { exports: {} };
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(window, function() {
    return function(t) {
      var n = {};
      function r(a) {
        if (n[a])
          return n[a].exports;
        var c = n[a] = { i: a, l: !1, exports: {} };
        return t[a].call(c.exports, c, c.exports, r), c.l = !0, c.exports;
      }
      return r.m = t, r.c = n, r.d = function(a, c, u) {
        r.o(a, c) || Object.defineProperty(a, c, { enumerable: !0, get: u });
      }, r.r = function(a) {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(a, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(a, "__esModule", { value: !0 });
      }, r.t = function(a, c) {
        if (1 & c && (a = r(a)), 8 & c || 4 & c && typeof a == "object" && a && a.__esModule)
          return a;
        var u = /* @__PURE__ */ Object.create(null);
        if (r.r(u), Object.defineProperty(u, "default", { enumerable: !0, value: a }), 2 & c && typeof a != "string")
          for (var p in a)
            r.d(u, p, (function(g) {
              return a[g];
            }).bind(null, p));
        return u;
      }, r.n = function(a) {
        var c = a && a.__esModule ? function() {
          return a.default;
        } : function() {
          return a;
        };
        return r.d(c, "a", c), c;
      }, r.o = function(a, c) {
        return Object.prototype.hasOwnProperty.call(a, c);
      }, r.p = "/", r(r.s = 4);
    }([function(t, n, r) {
      var a = r(1), c = r(2);
      typeof (c = c.__esModule ? c.default : c) == "string" && (c = [[t.i, c, ""]]);
      var u = { insert: "head", singleton: !1 };
      a(c, u), t.exports = c.locals || {};
    }, function(t, n, r) {
      var a, c = function() {
        return a === void 0 && (a = !!(window && document && document.all && !window.atob)), a;
      }, u = function() {
        var F = {};
        return function(Q) {
          if (F[Q] === void 0) {
            var U = document.querySelector(Q);
            if (window.HTMLIFrameElement && U instanceof window.HTMLIFrameElement)
              try {
                U = U.contentDocument.head;
              } catch {
                U = null;
              }
            F[Q] = U;
          }
          return F[Q];
        };
      }(), p = [];
      function g(F) {
        for (var Q = -1, U = 0; U < p.length; U++)
          if (p[U].identifier === F) {
            Q = U;
            break;
          }
        return Q;
      }
      function v(F, Q) {
        for (var U = {}, z = [], d = 0; d < F.length; d++) {
          var j = F[d], R = Q.base ? j[0] + Q.base : j[0], V = U[R] || 0, K = "".concat(R, " ").concat(V);
          U[R] = V + 1;
          var J = g(K), B = { css: j[1], media: j[2], sourceMap: j[3] };
          J !== -1 ? (p[J].references++, p[J].updater(B)) : p.push({ identifier: K, updater: I(B, Q), references: 1 }), z.push(K);
        }
        return z;
      }
      function x(F) {
        var Q = document.createElement("style"), U = F.attributes || {};
        if (U.nonce === void 0) {
          var z = r.nc;
          z && (U.nonce = z);
        }
        if (Object.keys(U).forEach(function(j) {
          Q.setAttribute(j, U[j]);
        }), typeof F.insert == "function")
          F.insert(Q);
        else {
          var d = u(F.insert || "head");
          if (!d)
            throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
          d.appendChild(Q);
        }
        return Q;
      }
      var y, T = (y = [], function(F, Q) {
        return y[F] = Q, y.filter(Boolean).join(`
`);
      });
      function k(F, Q, U, z) {
        var d = U ? "" : z.media ? "@media ".concat(z.media, " {").concat(z.css, "}") : z.css;
        if (F.styleSheet)
          F.styleSheet.cssText = T(Q, d);
        else {
          var j = document.createTextNode(d), R = F.childNodes;
          R[Q] && F.removeChild(R[Q]), R.length ? F.insertBefore(j, R[Q]) : F.appendChild(j);
        }
      }
      function M(F, Q, U) {
        var z = U.css, d = U.media, j = U.sourceMap;
        if (d ? F.setAttribute("media", d) : F.removeAttribute("media"), j && btoa && (z += `
/*# sourceMappingURL=data:application/json;base64,`.concat(btoa(unescape(encodeURIComponent(JSON.stringify(j)))), " */")), F.styleSheet)
          F.styleSheet.cssText = z;
        else {
          for (; F.firstChild; )
            F.removeChild(F.firstChild);
          F.appendChild(document.createTextNode(z));
        }
      }
      var O = null, Y = 0;
      function I(F, Q) {
        var U, z, d;
        if (Q.singleton) {
          var j = Y++;
          U = O || (O = x(Q)), z = k.bind(null, U, j, !1), d = k.bind(null, U, j, !0);
        } else
          U = x(Q), z = M.bind(null, U, Q), d = function() {
            (function(R) {
              if (R.parentNode === null)
                return !1;
              R.parentNode.removeChild(R);
            })(U);
          };
        return z(F), function(R) {
          if (R) {
            if (R.css === F.css && R.media === F.media && R.sourceMap === F.sourceMap)
              return;
            z(F = R);
          } else
            d();
        };
      }
      t.exports = function(F, Q) {
        (Q = Q || {}).singleton || typeof Q.singleton == "boolean" || (Q.singleton = c());
        var U = v(F = F || [], Q);
        return function(z) {
          if (z = z || [], Object.prototype.toString.call(z) === "[object Array]") {
            for (var d = 0; d < U.length; d++) {
              var j = g(U[d]);
              p[j].references--;
            }
            for (var R = v(z, Q), V = 0; V < U.length; V++) {
              var K = g(U[V]);
              p[K].references === 0 && (p[K].updater(), p.splice(K, 1));
            }
            U = R;
          }
        };
      };
    }, function(t, n, r) {
      (n = r(3)(!1)).push([t.i, `.cdx-strikethrough {
    text-decoration: line-through;
}
`, ""]), t.exports = n;
    }, function(t, n, r) {
      t.exports = function(a) {
        var c = [];
        return c.toString = function() {
          return this.map(function(u) {
            var p = function(g, v) {
              var x = g[1] || "", y = g[3];
              if (!y)
                return x;
              if (v && typeof btoa == "function") {
                var T = (M = y, O = btoa(unescape(encodeURIComponent(JSON.stringify(M)))), Y = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(O), "/*# ".concat(Y, " */")), k = y.sources.map(function(I) {
                  return "/*# sourceURL=".concat(y.sourceRoot || "").concat(I, " */");
                });
                return [x].concat(k).concat([T]).join(`
`);
              }
              var M, O, Y;
              return [x].join(`
`);
            }(u, a);
            return u[2] ? "@media ".concat(u[2], " {").concat(p, "}") : p;
          }).join("");
        }, c.i = function(u, p, g) {
          typeof u == "string" && (u = [[null, u, ""]]);
          var v = {};
          if (g)
            for (var x = 0; x < this.length; x++) {
              var y = this[x][0];
              y != null && (v[y] = !0);
            }
          for (var T = 0; T < u.length; T++) {
            var k = [].concat(u[T]);
            g && v[k[0]] || (p && (k[2] ? k[2] = "".concat(p, " and ").concat(k[2]) : k[2] = p), c.push(k));
          }
        }, c;
      };
    }, function(t, n, r) {
      r.r(n), r.d(n, "default", function() {
        return u;
      }), r(0);
      function a(p, g) {
        for (var v = 0; v < g.length; v++) {
          var x = g[v];
          x.enumerable = x.enumerable || !1, x.configurable = !0, "value" in x && (x.writable = !0), Object.defineProperty(p, x.key, x);
        }
      }
      function c(p, g, v) {
        return g && a(p.prototype, g), v && a(p, v), p;
      }
      var u = function() {
        function p(g) {
          var v = g.api;
          (function(x, y) {
            if (!(x instanceof y))
              throw new TypeError("Cannot call a class as a function");
          })(this, p), this.api = v, this.button = null, this.tag = "S", this.iconClasses = { base: this.api.styles.inlineToolButton, active: this.api.styles.inlineToolButtonActive };
        }
        return c(p, null, [{ key: "CSS", get: function() {
          return "cdx-strikethrough";
        } }]), c(p, [{ key: "render", value: function() {
          return this.button = document.createElement("button"), this.button.type = "button", this.button.classList.add(this.iconClasses.base), this.button.innerHTML = this.toolboxIcon, this.button;
        } }, { key: "surround", value: function(g) {
          if (g) {
            var v = this.api.selection.findParentTag(this.tag, p.CSS);
            v ? this.unwrap(v) : this.wrap(g);
          }
        } }, { key: "wrap", value: function(g) {
          var v = document.createElement(this.tag);
          v.classList.add(p.CSS), v.appendChild(g.extractContents()), g.insertNode(v), this.api.selection.expandToTag(v);
        } }, { key: "unwrap", value: function(g) {
          this.api.selection.expandToTag(g);
          var v = window.getSelection(), x = v.getRangeAt(0), y = x.extractContents();
          g.parentNode.removeChild(g), x.insertNode(y), v.removeAllRanges(), v.addRange(x);
        } }, { key: "checkState", value: function() {
          var g = this.api.selection.findParentTag(this.tag, p.CSS);
          this.button.classList.toggle(this.iconClasses.active, !!g);
        } }, { key: "toolboxIcon", get: function() {
          return '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.5 8.50001C13.5 7 10.935 6.66476 9.75315 7.79706C9.27092 8.25909 9 8.88574 9 9.53915C9 10.1926 9.27092 10.8192 9.75315 11.2812C10.9835 12.46 13.0165 11.5457 14.2468 12.7244C14.7291 13.1865 15 13.8131 15 14.4665C15 15.1199 14.7291 15.7466 14.2468 16.2086C12.8659 17.5317 10 17.5 9 16"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 12H18"/></svg>';
        } }], [{ key: "isInline", get: function() {
          return !0;
        } }, { key: "sanitize", get: function() {
          return { s: { class: p.CSS } };
        } }]), p;
      }();
    }]).default;
  });
})(mu);
var lg = mu.exports;
const cg = /* @__PURE__ */ An(lg);
var gu = { exports: {} };
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(self, () => (() => {
    var t = { 424: (a, c, u) => {
      (c = u(645)(!1)).push([a.id, `.picker_wrapper.popup {
  z-index: 99;
  width: 170px;
  margin: 0;
  box-shadow: 0 0 10px 1px #eaeaea;
  background: #ffffff;
}

.picker_arrow {
  display: none;
}

.layout_default .picker_slider, .layout_default .picker_selector {
  padding: 5px;
}

.colorPlugin.ce-inline-tool {
  width: 32px;
  border-radius: 3px;
}

.colorPlugin.ce-inline-tool--active svg {
  fill: #3c99ff;
}

#color-left-btn {
  height: 35px;
  width: 18px;
  font-weight: 600;
  display: flex;
  align-items: center;
}

#color-left-btn:hover {
  border-radius: 5px 0 0 5px;
  background: rgba(203, 203, 203, 0.49);
}

#color-text {
  padding: 0 4px;
}

#color-btn-text {
  height: 15px;
}

`, ""]), a.exports = c;
    }, 645: (a) => {
      a.exports = function(c) {
        var u = [];
        return u.toString = function() {
          return this.map(function(p) {
            var g = function(v, x) {
              var y, T, k, M = v[1] || "", O = v[3];
              if (!O)
                return M;
              if (x && typeof btoa == "function") {
                var Y = (y = O, T = btoa(unescape(encodeURIComponent(JSON.stringify(y)))), k = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(T), "/*# ".concat(k, " */")), I = O.sources.map(function(F) {
                  return "/*# sourceURL=".concat(O.sourceRoot || "").concat(F, " */");
                });
                return [M].concat(I).concat([Y]).join(`
`);
              }
              return [M].join(`
`);
            }(p, c);
            return p[2] ? "@media ".concat(p[2], " {").concat(g, "}") : g;
          }).join("");
        }, u.i = function(p, g, v) {
          typeof p == "string" && (p = [[null, p, ""]]);
          var x = {};
          if (v)
            for (var y = 0; y < this.length; y++) {
              var T = this[y][0];
              T != null && (x[T] = !0);
            }
          for (var k = 0; k < p.length; k++) {
            var M = [].concat(p[k]);
            v && x[M[0]] || (g && (M[2] ? M[2] = "".concat(g, " and ").concat(M[2]) : M[2] = g), u.push(M));
          }
        }, u;
      };
    }, 548: (a, c, u) => {
      var p = u(379), g = u(424);
      typeof (g = g.__esModule ? g.default : g) == "string" && (g = [[a.id, g, ""]]), p(g, { insert: "head", singleton: !1 }), a.exports = g.locals || {};
    }, 379: (a, c, u) => {
      var p, g = function() {
        var U = {};
        return function(z) {
          if (U[z] === void 0) {
            var d = document.querySelector(z);
            if (window.HTMLIFrameElement && d instanceof window.HTMLIFrameElement)
              try {
                d = d.contentDocument.head;
              } catch {
                d = null;
              }
            U[z] = d;
          }
          return U[z];
        };
      }(), v = [];
      function x(U) {
        for (var z = -1, d = 0; d < v.length; d++)
          if (v[d].identifier === U) {
            z = d;
            break;
          }
        return z;
      }
      function y(U, z) {
        for (var d = {}, j = [], R = 0; R < U.length; R++) {
          var V = U[R], K = z.base ? V[0] + z.base : V[0], J = d[K] || 0, B = "".concat(K, " ").concat(J);
          d[K] = J + 1;
          var se = x(B), Z = { css: V[1], media: V[2], sourceMap: V[3] };
          se !== -1 ? (v[se].references++, v[se].updater(Z)) : v.push({ identifier: B, updater: Q(Z, z), references: 1 }), j.push(B);
        }
        return j;
      }
      function T(U) {
        var z = document.createElement("style"), d = U.attributes || {};
        if (d.nonce === void 0) {
          var j = u.nc;
          j && (d.nonce = j);
        }
        if (Object.keys(d).forEach(function(V) {
          z.setAttribute(V, d[V]);
        }), typeof U.insert == "function")
          U.insert(z);
        else {
          var R = g(U.insert || "head");
          if (!R)
            throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
          R.appendChild(z);
        }
        return z;
      }
      var k, M = (k = [], function(U, z) {
        return k[U] = z, k.filter(Boolean).join(`
`);
      });
      function O(U, z, d, j) {
        var R = d ? "" : j.media ? "@media ".concat(j.media, " {").concat(j.css, "}") : j.css;
        if (U.styleSheet)
          U.styleSheet.cssText = M(z, R);
        else {
          var V = document.createTextNode(R), K = U.childNodes;
          K[z] && U.removeChild(K[z]), K.length ? U.insertBefore(V, K[z]) : U.appendChild(V);
        }
      }
      function Y(U, z, d) {
        var j = d.css, R = d.media, V = d.sourceMap;
        if (R ? U.setAttribute("media", R) : U.removeAttribute("media"), V && typeof btoa < "u" && (j += `
/*# sourceMappingURL=data:application/json;base64,`.concat(btoa(unescape(encodeURIComponent(JSON.stringify(V)))), " */")), U.styleSheet)
          U.styleSheet.cssText = j;
        else {
          for (; U.firstChild; )
            U.removeChild(U.firstChild);
          U.appendChild(document.createTextNode(j));
        }
      }
      var I = null, F = 0;
      function Q(U, z) {
        var d, j, R;
        if (z.singleton) {
          var V = F++;
          d = I || (I = T(z)), j = O.bind(null, d, V, !1), R = O.bind(null, d, V, !0);
        } else
          d = T(z), j = Y.bind(null, d, z), R = function() {
            (function(K) {
              if (K.parentNode === null)
                return !1;
              K.parentNode.removeChild(K);
            })(d);
          };
        return j(U), function(K) {
          if (K) {
            if (K.css === U.css && K.media === U.media && K.sourceMap === U.sourceMap)
              return;
            j(U = K);
          } else
            R();
        };
      }
      a.exports = function(U, z) {
        (z = z || {}).singleton || typeof z.singleton == "boolean" || (z.singleton = (p === void 0 && (p = !!(window && document && document.all && !window.atob)), p));
        var d = y(U = U || [], z);
        return function(j) {
          if (j = j || [], Object.prototype.toString.call(j) === "[object Array]") {
            for (var R = 0; R < d.length; R++) {
              var V = x(d[R]);
              v[V].references--;
            }
            for (var K = y(j, z), J = 0; J < d.length; J++) {
              var B = x(d[J]);
              v[B].references === 0 && (v[B].updater(), v.splice(B, 1));
            }
            d = K;
          }
        };
      };
    }, 452: (a) => {
      a.exports = { markerIcon: `<svg fill="#000000" height="34px" width="34px" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" 
	 viewBox="0 0 491.644 491.644" xml:space="preserve">
<g>
	<path d="M456.623,2.282c-42.758-20.283-141.107,96.84-223.473,264.224c-2.35,4.776-2.686,10.294-0.936,15.32
		c1.75,5.026,5.442,9.145,10.251,11.426L366.758,352.2c4.809,2.281,10.332,2.538,15.333,0.714c5.001-1.825,9.059-5.579,11.272-10.42
		C470.883,172.829,499.385,22.562,456.623,2.282z"/>
	<path d="M34.71,461.799l-17.257,16.708c-2.225,2.17-2.934,5.475-1.773,8.363c1.179,2.886,3.985,4.773,7.099,4.773h160.887
		c-1.364-5.043-0.921-10.445,1.391-15.306l7.919-16.692H40.036C38.036,459.646,36.129,460.419,34.71,461.799z"/>
	<path d="M264.766,448.864l-32.615-15.458c-1.046-0.502-2.161-0.744-3.257-0.744c-2.87,0-5.611,1.614-6.901,4.372l-22.001,46.384
		c-0.871,1.789-0.723,3.895,0.341,5.564c1.046,1.661,2.888,2.661,4.855,2.661h0.046l44.275-0.378
		c2.206-0.016,4.206-1.299,5.159-3.292l13.724-28.925c0.856-1.838,0.967-3.936,0.29-5.846
		C268.004,451.292,266.585,449.728,264.766,448.864z"/>
	<path d="M348.445,366.038l-112.572-51.392c-8.909-4.067-19.434-0.227-23.63,8.622c-2.551,5.378-3.58,11.353-2.975,17.275
		l5.2,50.909c0.703,6.882,4.983,12.884,11.261,15.792l60.031,27.797c6.688,3.097,14.548,2.179,20.343-2.375l45.983-36.137
		c4.931-3.875,7.487-10.041,6.743-16.269C358.086,374.032,354.151,368.642,348.445,366.038z"/>
</g>
</svg>`, textIcon: '<svg fill="#000000" viewBox="-6 0 512 512" xmlns="http://www.w3.org/2000/svg"><g stroke-width="0"></g><g stroke-linecap="round" stroke-linejoin="round"></g><g><title>text</title><path d="M365 432L328 352 172 352 135 432 64 432 227 80 272 80 436 432 365 432ZM201 288L299 288 250 183 201 288Z"></path></g></svg>' };
    }, 138: (a, c, u) => {
      const p = u(442), { markerIcon: g, textIcon: v } = u(452), { getDefaultColorCache: x, handleCSSVariables: y } = u(697);
      u(548).toString(), a.exports = class {
        constructor({ config: T, api: k }) {
          this.api = k, this.config = T, this.clickedOnLeft = !1, this.pluginType = this.config.type || "text", this.parentTag = this.pluginType === "marker" ? "MARK" : "FONT", this.hasCustomPicker = this.config.customPicker || !1, this.color = y(x(this.config.defaultColor, this.pluginType)), this.picker = null, this.icon = null, this.button = null, this.iconClasses = { base: this.api.styles.inlineToolButton, active: this.api.styles.inlineToolButtonActive };
        }
        static get isInline() {
          return !0;
        }
        render() {
          return this.button = document.createElement("button"), this.button.type = "button", this.button.classList.add("colorPlugin"), this.button.classList.add(this.iconClasses.base), this.button.appendChild(this.createLeftButton()), this.button.appendChild(this.createRightButton(this)), this.button;
        }
        createLeftButton() {
          return this.icon || (this.icon = document.createElement("div"), this.icon.id = "color-left-btn", this.icon.appendChild(this.createButtonIcon()), this.icon.addEventListener("click", () => this.clickedOnLeft = !0)), this.icon;
        }
        createButtonIcon() {
          const T = document.createElement("div");
          T.id = "color-btn-text";
          const k = this.pluginType === "marker" ? g : v;
          return T.innerHTML = this.config.icon || k, T;
        }
        createRightButton(T) {
          return this.picker || (this.picker = new p.ColorPlugin({ onColorPicked: function(k) {
            T.color = k;
          }, hasCustomPicker: this.hasCustomPicker, defaultColor: this.config.defaultColor, colorCollections: this.config.colorCollections, type: this.pluginType })), this.picker;
        }
        surround(T) {
          if (!T)
            return;
          const k = this.api.selection.findParentTag("SPAN");
          k && this.unwrap(k);
          const M = this.api.selection.findParentTag(this.parentTag);
          M ? this.unwrap(M) : this.wrap(T), this.clickedOnLeft = !1;
        }
        wrap(T) {
          const k = T.extractContents(), M = document.createElement(this.parentTag);
          M.appendChild(k), T.insertNode(M), this.pluginType === "marker" ? this.wrapMarker(M) : this.wrapTextColor(M), this.api.selection.expandToTag(M);
        }
        wrapMarker(T) {
          T.style.backgroundColor = this.color;
          const k = this.api.selection.findParentTag("FONT");
          k && (T.style.color = k.style.color);
        }
        wrapTextColor(T) {
          T.style.color = this.color;
        }
        unwrap(T) {
          this.api.selection.expandToTag(T);
          const k = window.getSelection(), M = k.getRangeAt(0), O = M.extractContents();
          this.clickedOnLeft ? this.removeWrapper(T) : this.updateWrapper(T), M.insertNode(O), k.removeAllRanges(), k.addRange(M);
        }
        updateWrapper(T) {
          this.pluginType === "marker" ? T.style.backgroundColor = this.color : T.style.color = this.color;
        }
        removeWrapper(T) {
          T.parentNode.removeChild(T);
        }
        checkState() {
          const T = this.api.selection.findParentTag("SPAN"), k = this.api.selection.findParentTag(this.parentTag);
          let M = T ? this.handleLegacyWrapper(T, k) : k;
          return this.button.classList.toggle(this.iconClasses.active, !!M), !!M;
        }
        handleLegacyWrapper(T, k) {
          return this.pluginType === "marker" ? T : k & T;
        }
        static get sanitize() {
          return { font: !0, span: !0, mark: !0 };
        }
        clear() {
          this.picker = null, this.icon = null;
        }
      };
    }, 442: (a, c, u) => {
      u.r(c), u.d(c, { ColorPlugin: () => k });
      class p extends HTMLElement {
        static get observedAttributes() {
          return ["disabled", "icon", "loading", "href", "htmltype"];
        }
        constructor() {
          super(), this.attachShadow({ mode: "open" }).innerHTML = `
        <style>
        :host{ 
            position:relative; 
            display:inline-flex; 
            padding: .25em .625em;
            box-sizing:border-box; 
            vertical-align: middle;
            line-height: 1.8;
            width: 5px;
            overflow:hidden; 
            align-items:center;
            justify-content: center;
            font-size: 14px; 
            color: var(--fontColor,#333);  
            border-radius: var(--borderRadius,.25em);
            background: var(--fontColor,#333); 
            transition:background .3s,box-shadow .3s,border-color .3s,color .3s;
        }
        :host([shape="circle"]){ 
            border-radius:50%; 
        }
        /*
        :host(:not([disabled]):active){
            z-index:1;
            transform:translateY(.1em);
        }
        */
        :host([disabled]),:host([loading]){
            pointer-events: none; 
            opacity:.6; 
        }
        :host([block]){ 
            display:flex; 
        }
        :host([disabled]:not([type])){ 
            background:rgba(0,0,0,.1); 
        }
        :host([disabled]) .btn,:host([loading]) .btn{ 
            cursor: not-allowed; 
            pointer-events: all; 
        }
        :host(:not([type="primary"]):not([type="danger"]):not([disabled]):hover),
        :host(:not([type="primary"]):not([type="danger"]):focus-within),
        :host([type="flat"][focus]){ 
            color:var(--themeColor,#42b983); 
            border-color: var(--themeColor,#42b983); 
        }
        :host(:not([type="primary"]):not([type="danger"])) .btn::after{ 
            background-image: radial-gradient(circle, var(--themeColor,#42b983) 10%, transparent 10.01%); 
        }
        :host([type="primary"]){ 
            color: #fff; 
            background:var(--themeBackground,var(--themeColor,#42b983));
        }
        :host([type="danger"]){ 
            color: #fff; 
            background:var(--themeBackground,var(--dangerColor,#ff7875));
        }
        :host([type="dashed"]){ 
            border-style:dashed 
        }
        :host([type="flat"]),:host([type="primary"]),:host([type="danger"]){ 
            border:0;
            padding: calc( .25em + 1px ) calc( .625em + 1px );
        }
        :host([type="flat"]) .btn::before{ 
            content:''; 
            position:absolute; 
            background:var(--themeColor,#42b983);
            pointer-events:none; 
            left:0; 
            right:0; 
            top:0; 
            bottom:0; 
            opacity:0; 
            transition:.3s;
        }
        :host([type="flat"]:not([disabled]):hover) .btn::before{ 
            opacity:.1 
        }
        :host(:not([disabled]):hover){ 
            z-index:1 
        }
        :host([type="flat"]:focus-within) .btn:before,
        :host([type="flat"][focus]) .btn:before{ 
            opacity:.2; 
        }
        :host(:focus-within){ 
            /*box-shadow: 0 0 10px rgba(0,0,0,0.1);*/ 
        }
        .btn{ 
            background:none; 
            outline:0; 
            border:0; 
            position: 
            absolute; 
            left:0; 
            top:0;
            width:100%;
            height:100%;
            padding:0;
            user-select: none;
            cursor: unset;
        }
        xy-loading{ 
            margin-right: 0.35em;  
        }
        ::-moz-focus-inner{
            border:0;
        }
        .btn::before{
            content: "";
            display: block;
            position: absolute;
            width: 100%;
            height: 100%;
            left:0;
            top:0;
            transition:.2s;
            background:#fff;
            opacity:0;
        }
        :host(:not([disabled]):active) .btn::before{ 
            opacity:.2;
        }
        .btn::after {
            content: "";
            display: block;
            position: absolute;
            width: 100%;
            height: 100%;
            left: var(--x,0); 
            top: var(--y,0);
            pointer-events: none;
            background-image: radial-gradient(circle, #fff 10%, transparent 10.01%);
            background-repeat: no-repeat;
            background-position: 50%;
            transform: translate(-50%,-50%) scale(10);
            opacity: 0;
            transition: transform .3s, opacity .8s;
        }
        .btn:not([disabled]):active::after {
            transform: translate(-50%,-50%) scale(0);
            opacity: .3;
            transition: 0s;
        }
        xy-icon{
            margin-right: 0.35em;
            transition: none;
        }
        :host(:empty) xy-icon{
            margin: auto;
        }
        :host(:empty){
            padding: .65em;
        }
        :host([type="flat"]:empty),:host([type="primary"]:empty){ 
            padding: calc( .65em + 1px );
        }
        ::slotted(xy-icon){
            transition: none;
        }
        :host([href]){
            cursor:pointer;
        }
        </style>
        <${this.href ? "a" : "button"} ${this.htmltype ? 'type="' + this.htmltype + '"' : ""} ${this.download && this.href ? 'download="' + this.download + '"' : ""} ${this.href ? 'href="' + this.href + '" target="' + this.target + '" rel="' + this.rel + '"' : ""} class="btn" id="btn"></${this.href ? "a" : "button"}>${!this.loading && this.icon && this.icon != "null" ? '<xy-icon id="icon" name=' + this.icon + "></xy-icon>" : ""}<slot></slot>
        `;
        }
        focus() {
          this.btn.focus();
        }
        get disabled() {
          return this.getAttribute("disabled") !== null;
        }
        get toggle() {
          return this.getAttribute("toggle") !== null;
        }
        get htmltype() {
          return this.getAttribute("htmltype");
        }
        get name() {
          return this.getAttribute("name");
        }
        get checked() {
          return this.getAttribute("checked") !== null;
        }
        get href() {
          return this.getAttribute("href");
        }
        get target() {
          return this.getAttribute("target") || "_blank";
        }
        get rel() {
          return this.getAttribute("rel");
        }
        get download() {
          return this.getAttribute("download");
        }
        get icon() {
          return this.getAttribute("icon");
        }
        get loading() {
          return this.getAttribute("loading") !== null;
        }
        set icon(O) {
          this.setAttribute("icon", O);
        }
        set htmltype(O) {
          this.setAttribute("htmltype", O);
        }
        set href(O) {
          this.setAttribute("href", O);
        }
        set disabled(O) {
          O === null || O === !1 ? this.removeAttribute("disabled") : this.setAttribute("disabled", "");
        }
        set checked(O) {
          O === null || O === !1 ? this.removeAttribute("checked") : this.setAttribute("checked", "");
        }
        set loading(O) {
          O === null || O === !1 ? this.removeAttribute("loading") : this.setAttribute("loading", "");
        }
        connectedCallback() {
          this.btn = this.shadowRoot.getElementById("btn"), this.ico = this.shadowRoot.getElementById("icon"), this.load = document.createElement("xy-loading"), this.load.style.color = "inherit", this.btn.addEventListener("mousedown", function(O) {
            if (!this.disabled) {
              const { left: Y, top: I } = this.getBoundingClientRect();
              this.style.setProperty("--x", O.clientX - Y + "px"), this.style.setProperty("--y", O.clientY - I + "px");
            }
          }), this.addEventListener("click", function(O) {
            this.toggle && (this.checked = !this.checked);
          }), this.btn.addEventListener("keydown", (O) => {
            O.keyCode === 13 && O.stopPropagation();
          }), this.disabled = this.disabled, this.loading = this.loading;
        }
        attributeChangedCallback(O, Y, I) {
          O == "disabled" && this.btn && (I !== null ? (this.btn.setAttribute("disabled", "disabled"), this.href && this.btn.removeAttribute("href")) : (this.btn.removeAttribute("disabled"), this.href && (this.btn.href = this.href))), O == "loading" && this.btn && (I !== null ? (this.shadowRoot.prepend(this.load), this.btn.setAttribute("disabled", "disabled")) : (this.shadowRoot.removeChild(this.load), this.btn.removeAttribute("disabled"))), O == "icon" && this.ico && (this.ico.name = I), O == "href" && this.btn && (this.disabled || (this.btn.href = I)), O == "htmltype" && this.btn && (this.btn.type = I);
        }
      }
      customElements.get("xy-button") || customElements.define("xy-button", p);
      class g extends HTMLElement {
        static get observedAttributes() {
          return ["disabled"];
        }
        constructor() {
          super(), this.attachShadow({ mode: "open" }).innerHTML = `
        <style>
        :host {
            display:inline-flex;
        }
        ::slotted(xy-button:not(:first-of-type):not(:last-of-type)){
            border-radius:0;
        }
        ::slotted(xy-button){
            margin:0!important;
        }
        ::slotted(xy-button:not(:first-of-type)){
            margin-left:-1px!important;
        }
        ::slotted(xy-button[type]:not([type="dashed"]):not(:first-of-type)){
            margin-left:1px!important;
        }
        ::slotted(xy-button:first-of-type){
            border-top-right-radius: 0;
            border-bottom-right-radius: 0px;
        }
        ::slotted(xy-button:last-of-type){
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
        </style>
        <slot></slot>
        `;
        }
        get disabled() {
          return this.getAttribute("disabled") !== null;
        }
        set disabled(O) {
          O === null || O === !1 ? this.removeAttribute("disabled") : this.setAttribute("disabled", "");
        }
        connectedCallback() {
        }
        attributeChangedCallback(O, Y, I) {
        }
      }
      customElements.get("xy-button-group") || customElements.define("xy-button-group", g);
      class v extends HTMLElement {
        static get observedAttributes() {
          return ["open", "title", "oktext", "canceltext", "loading", "type"];
        }
        constructor(O) {
          super(), this.attachShadow({ mode: "open" }).innerHTML = `
        <style>
        :host{
            position:absolute;
            display:flex;
            box-shadow: 2px 2px 15px rgba(0,0,0,0.15);
            box-sizing: border-box;
            transform:scale(0);
            opacity:0.5;
            border-radius: 3px;
            z-index:10;
            transition:.3s cubic-bezier(.645, .045, .355, 1);
            transform-origin:inherit;
            background:#fff;
            visibility:hidden;
        }
        .popcon-content{
            box-sizing: border-box;
            display:flex;
            width: max-content;
            padding: 0 15px;
            flex:1;
            flex-direction:column;
        }
        .popcon-title {
            line-height: 30px;
            padding: 15px 30px 0 0;
            font-weight: 700;
            font-size: 14px;
            color: #4c5161;
            user-select: none;
            cursor: default;
        }
        .popcon-body {
            flex: 1;
            padding: 5px 0 15px 0;
        }
        .popcon-footer {
            padding: 3px 0 15px 0;
            margin-top: -3px;
            text-align: right;
            white-space: nowrap;
        }
        .btn-close{
            position:absolute;
            right:10px;
            top:10px;
            border:0;
        }
        .popcon-footer xy-button {
            font-size: .8em;
            margin-left: .8em;
        }
        .popcon-type{
            display:flex;
            width:30px;
            height:30px;
            font-size:22px;
            margin: 15px -10px 0 15px;
        }
        /*
        :host(:not([type="confirm"])) .popcon-type,
        :host(:not([type="confirm"])) .popcon-footer,
        :host(:not([type])) .popcon-title,
        :host(:not([type])) .btn-close{
            display:none;
        }
        */
        :host([type="confirm"]){
            min-width:250px;
        }
        :host([type="confirm"]) .popcon-body{
            font-size:14px;
        }
        :host(:not([type])) .popcon-content,:host(:not([type])) .popcon-body{
            padding: 0;
        }
        </style>
            ${(O || this.type) === "confirm" ? '<xy-icon id="popcon-type" class="popcon-type" name="question-circle" color="var(--waringColor,#faad14)"></xy-icon>' : ""}
            <div class="popcon-content">
                ${(O || this.type) !== null ? '<div class="popcon-title" id="title">' + this.title + '</div><xy-button class="btn-close" id="btn-close" icon="close"></xy-button>' : ""}
                <div class="popcon-body">
                    <slot></slot>
                </div>
                ${(O || this.type) === "confirm" ? '<div class="popcon-footer"><xy-button id="btn-cancel">' + this.canceltext + '</xy-button><xy-button id="btn-submit" type="primary">' + this.oktext + "</xy-button></div>" : ""}
            </div>
        `;
        }
        get open() {
          return this.getAttribute("open") !== null;
        }
        get stopfocus() {
          return this.getAttribute("stopfocus") !== null;
        }
        get title() {
          return this.getAttribute("title") || "popcon";
        }
        get type() {
          return this.getAttribute("type");
        }
        get oktext() {
          return this.getAttribute("oktext") || "confirm";
        }
        get canceltext() {
          return this.getAttribute("canceltext") || "cancel";
        }
        get loading() {
          return this.getAttribute("loading") !== null;
        }
        set title(O) {
          this.setAttribute("title", O);
        }
        set type(O) {
          O === null || O === !1 ? this.removeAttribute("type") : this.setAttribute("type", O);
        }
        set oktext(O) {
          this.setAttribute("oktext", O);
        }
        set canceltext(O) {
          this.setAttribute("canceltext", O);
        }
        set open(O) {
          O === null || O === !1 ? (this.removeAttribute("open"), this.parentNode.removeAttribute("open")) : (this.setAttribute("open", ""), this.parentNode.setAttribute("open", ""), this.loading && (this.loading = !1));
        }
        set loading(O) {
          O === null || O === !1 ? this.removeAttribute("loading") : this.setAttribute("loading", "");
        }
        connectedCallback() {
          this.remove = !1, this.type && (this.titles = this.shadowRoot.getElementById("title"), this.btnClose = this.shadowRoot.getElementById("btn-close")), this.type == "confirm" && (this.btnCancel = this.shadowRoot.getElementById("btn-cancel"), this.btnSubmit = this.shadowRoot.getElementById("btn-submit")), this.addEventListener("transitionend", (O) => {
            O.propertyName === "transform" && this.open && (this.type == "confirm" && this.btnSubmit.focus(), this.type == "pane" && this.btnClose.focus(), this.dispatchEvent(new CustomEvent("open")));
          }), this.addEventListener("transitionend", (O) => {
            O.propertyName !== "transform" || this.open || (this.remove && this.parentNode.removeChild(this), this.dispatchEvent(new CustomEvent("close")));
          }), this.addEventListener("click", (O) => {
            O.target.closest("[autoclose]") && (this.open = !1, window.xyActiveElement.focus());
          }), this.type && this.btnClose.addEventListener("click", () => {
            this.open = !1, window.xyActiveElement.focus();
          }), this.type == "confirm" && (this.btnCancel.addEventListener("click", async () => {
            this.dispatchEvent(new CustomEvent("cancel")), this.open = !1, window.xyActiveElement.focus();
          }), this.btnSubmit.addEventListener("click", () => {
            this.dispatchEvent(new CustomEvent("submit")), this.loading || (this.open = !1, window.xyActiveElement.focus());
          }));
        }
        attributeChangedCallback(O, Y, I) {
          O == "open" && this.shadowRoot && I == null && this.stopfocus, O == "loading" && this.shadowRoot && (this.btnSubmit.loading = I !== null), O == "title" && this.titles && I !== null && (this.titles.innerHTML = I), O == "oktext" && this.btnSubmit && I !== null && (this.btnSubmit.innerHTML = I), O == "canceltext" && this.btnCancel && I !== null && (this.btnCancel.innerHTML = I);
        }
      }
      customElements.get("xy-popcon") || customElements.define("xy-popcon", v);
      class x extends HTMLElement {
        static get observedAttributes() {
          return ["title", "oktext", "canceltext", "loading", "type"];
        }
        constructor() {
          super(), this.attachShadow({ mode: "open" }).innerHTML = `
        <style>
        :host {
            display:inline-block;
            position:relative;
            overflow:visible;
        }
        :host([dir="top"]) ::slotted(xy-popcon){
            bottom:100%;
            left:50%;
            transform:translate(-50%,-10px) scale(0);
            transform-origin: center bottom;
        }
        :host([dir="top"]) ::slotted(xy-popcon[open]),
        :host([dir="top"][trigger="hover"]:not([disabled]):hover) ::slotted(xy-popcon),
        :host([dir="top"][trigger="focus"]:not([disabled]):focus-within) ::slotted(xy-popcon){
            transform:translate(-50%,-10px) scale(1);
        }
        :host([dir="right"]) ::slotted(xy-popcon){
            left:100%;
            top:50%;
            transform:translate(10px,-50%) scale(0);
            transform-origin: left;
        }
        :host([dir="right"]) ::slotted(xy-popcon[open]),
        :host([dir="right"][trigger="hover"]:not([disabled]):hover) ::slotted(xy-popcon),
        :host([dir="right"][trigger="focus"]:not([disabled]):focus-within) ::slotted(xy-popcon){
            transform:translate(10px,-50%) scale(1);
        }
        :host([dir="bottom"]) ::slotted(xy-popcon){
            top:100%;
            left:50%;
            transform:translate(-50%,10px) scale(0);
            transform-origin: center top;
        }
        :host([dir="bottom"]) ::slotted(xy-popcon[open]),
        :host([dir="bottom"][trigger="hover"]:not([disabled]):hover) ::slotted(xy-popcon),
        :host([dir="bottom"][trigger="focus"]:not([disabled]):focus-within) ::slotted(xy-popcon){
            transform:translate(-50%,10px) scale(1);
        }
        :host([dir="left"]) ::slotted(xy-popcon){
            right:100%;
            top:50%;
            transform:translate(-10px,-50%) scale(0);
            transform-origin: right;
        }
        :host([dir="left"]) ::slotted(xy-popcon[open]),
        :host([dir="left"][trigger="hover"]:not([disabled]):hover) ::slotted(xy-popcon),
        :host([dir="left"][trigger="focus"]:not([disabled]):focus-within) ::slotted(xy-popcon){
            transform:translate(-10px,-50%) scale(1);
        }
        :host([dir="lefttop"]) ::slotted(xy-popcon){
            right:100%;
            top:0;
            transform:translate(-10px) scale(0);
            transform-origin: right top;
        }
        :host([dir="lefttop"]) ::slotted(xy-popcon[open]),
        :host([dir="lefttop"][trigger="hover"]:not([disabled]):hover) ::slotted(xy-popcon),
        :host([dir="lefttop"][trigger="focus"]:not([disabled]):focus-within) ::slotted(xy-popcon){
            transform:translate(-10px) scale(1);
        }
        :host([dir="leftbottom"]) ::slotted(xy-popcon){
            right:100%;
            bottom:0;
            transform:translate(-10px) scale(0);
            transform-origin: right bottom;
        }
        :host([dir="leftbottom"]) ::slotted(xy-popcon[open]),
        :host([dir="leftbottom"][trigger="hover"]:not([disabled]):hover) ::slotted(xy-popcon),
        :host([dir="leftbottom"][trigger="focus"]:not([disabled]):focus-within) ::slotted(xy-popcon){
            transform:translate(-10px) scale(1);
        }
        :host([dir="topleft"]) ::slotted(xy-popcon){
            bottom:100%;
            left:0;
            transform:translate(0,-10px) scale(0);
            transform-origin: left bottom;
        }
        :host([dir="topleft"]) ::slotted(xy-popcon[open]),
        :host([dir="topleft"][trigger="hover"]:not([disabled]):hover) ::slotted(xy-popcon),
        :host([dir="topleft"][trigger="focus"]:not([disabled]):focus-within) ::slotted(xy-popcon){
            transform:translate(0,-10px) scale(1);
        }
        :host([dir="topright"]) ::slotted(xy-popcon){
            bottom:100%;
            right:0;
            transform:translate(0,-10px) scale(0);
            transform-origin: right bottom;
        }
        :host([dir="topright"]) ::slotted(xy-popcon[open]),
        :host([dir="topright"][trigger="hover"]:not([disabled]):hover) ::slotted(xy-popcon),
        :host([dir="topright"][trigger="focus"]:not([disabled]):focus-within) ::slotted(xy-popcon){
            transform:translate(0,-10px) scale(1);
        }
        :host([dir="righttop"]) ::slotted(xy-popcon){
            left:100%;
            top:0;
            transform:translate(10px) scale(0);
            transform-origin: left top;
        }
        :host([dir="righttop"]) ::slotted(xy-popcon[open]),
        :host([dir="righttop"][trigger="hover"]:not([disabled]):hover) ::slotted(xy-popcon),
        :host([dir="righttop"][trigger="focus"]:not([disabled]):focus-within) ::slotted(xy-popcon){
            transform:translate(10px) scale(1);
        }
        :host([dir="rightbottom"]) ::slotted(xy-popcon){
            left:100%;
            bottom:0;
            transform:translate(10px) scale(0);
            transform-origin: left bottom;
        }
        :host([dir="rightbottom"]) ::slotted(xy-popcon[open]),
        :host([dir="rightbottom"][trigger="hover"]:not([disabled]):hover) ::slotted(xy-popcon),
        :host([dir="rightbottom"][trigger="focus"]:not([disabled]):focus-within) ::slotted(xy-popcon){
            transform:translate(10px) scale(1);
        }
        :host([dir="bottomleft"]) ::slotted(xy-popcon),
        :host(:not([dir])) ::slotted(xy-popcon){
            left:0;
            top:100%;
            transform:translate(0,10px) scale(0);
            transform-origin: left top;
        }
        :host(:not([dir])) ::slotted(xy-popcon[open]),
        :host(:not([dir])[trigger="hover"]:not([disabled]):hover) ::slotted(xy-popcon),
        :host(:not([dir])[trigger="focus"]:not([disabled]):focus-within) ::slotted(xy-popcon),
        :host([dir="bottomleft"]) ::slotted(xy-popcon[open]),
        :host([dir="bottomleft"][trigger="hover"]:not([disabled]):hover) ::slotted(xy-popcon),
        :host([dir="bottomleft"][trigger="focus"]:not([disabled]):focus-within) ::slotted(xy-popcon){
            transform:translate(0,10px) scale(1);
        }
        :host([dir="bottomright"]) ::slotted(xy-popcon){
            right:0;
            top:100%;
            transform:translate(0,10px) scale(0);
            transform-origin: right top;
        }
        :host([dir="bottomright"]) ::slotted(xy-popcon[open]),
        :host([dir="bottomright"][trigger="hover"]:not([disabled]):hover) ::slotted(xy-popcon),
        :host([dir="bottomright"][trigger="focus"]:not([disabled]):focus-within) ::slotted(xy-popcon){
            transform:translate(0,10px) scale(1);
        }
        :host([trigger="contextmenu"]) ::slotted(xy-popcon){
            right:auto;
            bottom:auto;
            left:var(--x,0);
            top:var(--y,100%);
            transform-origin: left top;
            transform:translate(5px,5px) scale(0);
            transition: .15s;
        }
        :host([trigger="contextmenu"]) ::slotted(xy-popcon[open]){
            transform:translate(5px,5px) scale(1);
        }
        :host ::slotted(xy-popcon[open]),
        :host([trigger="hover"]:not([disabled]):hover) ::slotted(xy-popcon),
        :host([trigger="focus"]:not([disabled]):focus-within) ::slotted(xy-popcon){
            opacity:1;
            visibility:visible;
        }
        slot{
            border-radius: inherit;
        }
        </style>
        <slot></slot>
        `;
        }
        get title() {
          return this.getAttribute("title") || "popcon";
        }
        get trigger() {
          return this.getAttribute("trigger");
        }
        get disabled() {
          return this.getAttribute("disabled") !== null;
        }
        get type() {
          return this.getAttribute("type");
        }
        get accomplish() {
          return this.getAttribute("accomplish") !== null;
        }
        get content() {
          return this.getAttribute("content");
        }
        get oktext() {
          return this.getAttribute("oktext");
        }
        get canceltext() {
          return this.getAttribute("canceltext");
        }
        get dir() {
          return this.getAttribute("dir");
        }
        get loading() {
          return this.getAttribute("loading") !== null;
        }
        set dir(O) {
          this.setAttribute("dir", O);
        }
        set title(O) {
          this.setAttribute("title", O);
        }
        set type(O) {
          this.setAttribute("type", O);
        }
        set oktext(O) {
          this.setAttribute("oktext", O);
        }
        set canceltext(O) {
          this.setAttribute("canceltext", O);
        }
        set loading(O) {
          O === null || O === !1 ? this.removeAttribute("loading") : this.setAttribute("loading", "");
        }
        set disabled(O) {
          O === null || O === !1 ? this.removeAttribute("disabled") : this.setAttribute("disabled", "");
        }
        show(O) {
          if (this.popcon = this.querySelector("xy-popcon"), this.disabled)
            (this.popcon || this).dispatchEvent(new CustomEvent("submit"));
          else if (this.popcon || (this.popcon = new v(this.type), this.popcon.type = this.type, this.appendChild(this.popcon), this.popcon.title = this.title || "popover", this.popcon.innerHTML = this.content || "", this.type == "confirm" && (this.popcon.oktext = this.oktext || "confirm", this.popcon.canceltext = this.canceltext || "cancel", this.popcon.onsubmit = () => this.dispatchEvent(new CustomEvent("submit")), this.popcon.oncancel = () => this.dispatchEvent(new CustomEvent("cancel")))), this.trigger === "contextmenu") {
            const { x: Y, y: I } = this.getBoundingClientRect();
            this.popcon.style.setProperty("--x", O.clientX - Y + "px"), this.popcon.style.setProperty("--y", O.clientY - I + "px"), this.popcon.open = !0;
          } else
            (O.path || O.composedPath && O.composedPath()).includes(this.popcon) || (window.xyActiveElement = document.activeElement, this.accomplish ? this.popcon.open = !0 : this.popcon.open = !this.popcon.open);
          return this.popcon;
        }
        connectedCallback() {
          this.popcon = this.querySelector("xy-popcon"), this.trigger && this.trigger !== "click" || this.addEventListener("click", this.show), this.trigger === "contextmenu" && this.addEventListener("contextmenu", (O) => {
            O.preventDefault(), (O.path || O.composedPath && O.composedPath()).includes(this.popcon) || this.show(O);
          }), document.addEventListener("mousedown", (O) => {
            const Y = O.path || O.composedPath && O.composedPath();
            (this.popcon && !Y.includes(this.popcon) && !this.popcon.loading && !Y.includes(this.children[0]) || this.trigger === "contextmenu" && !Y.includes(this.popcon) && O.which == "1") && (this.popcon.open = !1);
          });
        }
        attributeChangedCallback(O, Y, I) {
          O == "loading" && this.popcon && (this.popcon.loading = I !== null), O == "title" && this.popcon && I !== null && (this.popcon.title = I), O == "oktext" && this.popcon && I !== null && (this.popcon.oktext = I), O == "canceltext" && this.popcon && I !== null && (this.popcon.canceltext = I);
        }
      }
      customElements.get("xy-popover") || customElements.define("xy-popover", x);
      var y = u(697);
      const T = ["#ff1300", "#EC7878", "#9C27B0", "#673AB7", "#3F51B5", "#0070FF", "#03A9F4", "#00BCD4", "#4CAF50", "#8BC34A", "#CDDC39", "#FFE500", "#FFBF00", "#FF9800", "#795548", "#9E9E9E", "#5A5A5A", "#FFF"];
      class k extends HTMLElement {
        static get observedAttributes() {
          return ["disabled", "dir"];
        }
        constructor(O) {
          super();
          const Y = this.attachShadow({ mode: "open" });
          this.colorCollections = O.colorCollections || T, this.onColorPicked = O.onColorPicked, this.defaulColor = (0, y.handleCSSVariables)(O.defaultColor || this.colorCollections[0]), this.pluginType = O.type, this.hasCustomPicker = O.hasCustomPicker, this.customColor = (0, y.getCustomColorCache)(this.pluginType), Y.innerHTML = `
        <style>
        :host{
            display:inline-block;
            width:15px;
            font-size:14px;
            border: none;
        }
        :host([block]){
            display:block;
        }
        :host([disabled]){
            pointer-events:none;
        }
        
        :host(:focus-within) xy-popover,:host(:hover) xy-popover{ 
            z-index: 2;
        }
        input[type="color"]{
            -webkit-appearance: none;
            outline: none;
            border: none;
        }
        xy-popover{
            width: 12px;
            height:35px;
            padding-right: 1px;
        }
        xy-popover:hover {
            border-radius: 0 5px 5px 0;
            background: rgba(203, 203, 203, 0.49);
        }
        .color-btn {
            border: 1px solid #cab9b9;
            margin: 18px 3px 2px 3px;
            width: 7px;
            height: 7px;
            opacity: 0.9;
            padding: 1px 0 1px 0;
            color: var(--themeColor, #42b983);
            background: var(--themeColor, #42b983);
            font-weight: bolder;
            border-radius: 2px;
        }
        .color-btn:hover {
            opacity: 1;
            z-index: auto;
        }
        xy-popover{
            display:block;
        }
        xy-popcon{
            position: fixed;
            min-width:100%;
        }
        #custom-picker {
            position: relative;
            top: -1px;
            background-color: rgb(250, 250, 250);
            border-color: rgb(255 118 21) rgb(245 80 80 / 74%) #89c1c9 #95d5b6;
            border-width: 3px;
            border-radius: 8px;
            height: 18px;
        }
        .pop-footer{
            display:flex;
            justify-content:flex-end;
            padding:0 .8em .8em;
        }
        .pop-footer xy-button{
            font-size: .8em;
            margin-left: .8em;
        }
        .color-btn::before{
            content:'';
            position:absolute;
            left:5px;
            top:5px;
            right:5px;
            bottom:5px;
            z-index:-1;
            background: linear-gradient(45deg, #ddd 25%,transparent 0,transparent 75%,#ddd 0 ), linear-gradient(45deg, #ddd 25%, transparent 0, transparent 75%, #ddd 0);
            background-position: 0 0,5px 5px;
            background-size: 10px 10px;
        }
        .color-sign {
           max-width: 220px;
           padding: 10px;
           display:grid;
           cursor: default;
           grid-template-columns: repeat(auto-fit, minmax(15px, 1fr));
           grid-gap: 10px;     
        }
        .color-sign>button {
            position: relative;
            width: 16px;
            height: 16px;
            border-radius: 6px;
            border: 1px solid #b8b9b49e;
            outline: 0;
            opacity: 0.9;
        }
        .color-sign>button:hover {
            cursor: pointer;
            opacity: 1;
        }
        .color-section {
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .color-fire-btn {
            font-size: 17px;
            font-weight: bold;
            height: 28px;
            padding-top: 8px;
            padding-right: 1px;
            margin-left: 3px;
            padding-left: 3px;
            border-radius: 5px 0 0 5px;
        }
        .color-fire-btn:hover {
            font-size: 17px;
            font-weight: bold;
            background: rgba(203, 203, 203, 0.49);
            border-radius: 5px 0 0 5px;
        }
        </style>
        <section class="color-section">
            <xy-popover id="popover" ${this.dir ? "dir='" + this.dir + "'" : ""}>
                <xy-button class="color-btn" id="color-btn" ${this.disabled ? "disabled" : ""}>_</xy-button>
                <xy-popcon id="popcon">
                    <div class="color-sign" id="colors">
                        ${this.hasCustomPicker ? '<button id="custom-picker" class="rainbow-mask"/>' : ""}
                        ${this.colorCollections.map((I) => '<button class="color-cube" style="background-color:' + I + '" data-color=' + I + "></button>").join("")}
                    </div>
                </xy-popcon>
            </xy-popover>
        </section>`;
        }
        focus() {
          this.colorBtn.focus();
        }
        connectedCallback() {
          this.popoverEle = this.shadowRoot.getElementById("popover"), this.popcon = this.shadowRoot.getElementById("popcon"), this.colorBtn = this.shadowRoot.getElementById("color-btn"), this.colors = this.shadowRoot.getElementById("colors"), this.colors.addEventListener("click", (O) => {
            const Y = O.target.closest("button");
            Y && Y.id !== "custom-picker" && (this.nativeclick = !0, this.value = (0, y.handleCSSVariables)(Y.dataset.color), this.onColorPicked(this.value));
          }), this.popoverEle.addEventListener("click", () => this.closeConverter()), this.hasCustomPicker && this.setupCustomPicker(), this.value = this.defaultvalue;
        }
        closeConverter() {
          if (document.getElementsByClassName(y.CONVERTER_PANEL)[0]) {
            const O = document.getElementsByClassName(y.CONVERTER_BTN)[0];
            O == null || O.click();
          }
        }
        disconnectedCallback() {
          this.pickerInput && document.body.removeChild(this.pickerInput);
        }
        setupCustomPicker() {
          let O = !1;
          this.customPicker = this.shadowRoot.getElementById("custom-picker");
          const Y = this.customPicker;
          Y.style.backgroundColor = this.customColor, this.customPicker.addEventListener("click", (I) => {
            if (O)
              return void (O = !1);
            this.pickerInput && document.body.removeChild(this.pickerInput), this.pickerInput = document.createElement("input");
            const F = this.pickerInput, Q = this.popcon.getBoundingClientRect();
            F.setAttribute("type", "color"), F.value = this.customColor, F.style.position = "fixed", F.style.left = `${Q.x + 3}px`, F.style.top = `${Q.y + 10}px`, F.style.pointerEvents = "none", F.style.zIndex = "999", F.style.opacity = "0", F.addEventListener("input", (0, y.throttle)((U) => {
              this.nativeclick = !0, this.value = (0, y.handleCSSVariables)(U.target.value), this.onColorPicked(this.value), (0, y.setCustomColorCache)(this.value, this.pluginType), Y.style.backgroundColor = this.value, O = !0, Y.click();
            }, 30)), document.body.appendChild(F), setTimeout(() => {
              F.focus(), F.click();
            }, 0);
          });
        }
        get defaultvalue() {
          return this.defaulColor;
        }
        get value() {
          return this.$value;
        }
        get type() {
          return this.getAttribute("type");
        }
        get disabled() {
          return this.getAttribute("disabled") !== null;
        }
        get dir() {
          return this.getAttribute("dir");
        }
        set dir(O) {
          this.setAttribute("dir", O);
        }
        set disabled(O) {
          O === null || O === !1 ? this.removeAttribute("disabled") : this.setAttribute("disabled", "");
        }
        set defaultvalue(O) {
          this.setAttribute("defaultvalue", O);
        }
        set value(O) {
          O && (this.$value = O, this.colorBtn.style.setProperty("--themeColor", this.nativeclick ? (0, y.setDefaultColorCache)(O, this.pluginType) : (0, y.getDefaultColorCache)(O, this.pluginType)), this.nativeclick ? (this.nativeclick = !1, this.dispatchEvent(new CustomEvent("change", { detail: { value: this.value } }))) : this.colorPane ? this.colorPane.value = this.value : this.defaultvalue = this.value);
        }
        attributeChangedCallback(O, Y, I) {
          O == "disabled" && this.colorBtn && (I != null ? this.colorBtn.setAttribute("disabled", "disabled") : this.colorBtn.removeAttribute("disabled")), O == "dir" && this.popoverEle && I != null && (this.popoverEle.dir = I);
        }
      }
      customElements.get("xy-color-picker") || customElements.define("xy-color-picker", k);
    }, 697: (a, c, u) => {
      u.r(c), u.d(c, { CONVERTER_BTN: () => M, CONVERTER_PANEL: () => O, getCustomColorCache: () => k, getDefaultColorCache: () => y, handleCSSVariables: () => g, setCustomColorCache: () => T, setDefaultColorCache: () => x, throttle: () => v });
      const p = "editor-js-text-color-cache";
      function g(Y) {
        if (function(I) {
          return (typeof (F = I) == "string" || F instanceof String) && I.includes("--");
          var F;
        }(Y)) {
          const I = function(F) {
            const Q = /\((.*?)\)/.exec(F);
            if (Q)
              return Q[1];
          }(Y);
          return function(F) {
            return window.getComputedStyle(document.documentElement).getPropertyValue(F);
          }(I);
        }
        return Y;
      }
      function v(Y, I) {
        let F;
        return (...Q) => {
          F || (F = setTimeout(() => {
            Y(...Q), F = null;
          }, I));
        };
      }
      function x(Y, I) {
        return sessionStorage.setItem(`${p}-${I}`, JSON.stringify(Y)), Y;
      }
      function y(Y, I) {
        const F = sessionStorage.getItem(`${p}-${I}`);
        return F ? JSON.parse(F) : Y;
      }
      function T(Y, I) {
        sessionStorage.setItem(`${p}-${I}-custom`, JSON.stringify(Y));
      }
      function k(Y) {
        const I = sessionStorage.getItem(`${p}-${Y}-custom`);
        return I ? JSON.parse(I) : null;
      }
      const M = "ce-inline-toolbar__dropdown", O = "ce-conversion-toolbar--showed";
    } }, n = {};
    function r(a) {
      var c = n[a];
      if (c !== void 0)
        return c.exports;
      var u = n[a] = { id: a, exports: {} };
      return t[a](u, u.exports, r), u.exports;
    }
    return r.d = (a, c) => {
      for (var u in c)
        r.o(c, u) && !r.o(a, u) && Object.defineProperty(a, u, { enumerable: !0, get: c[u] });
    }, r.o = (a, c) => Object.prototype.hasOwnProperty.call(a, c), r.r = (a) => {
      typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(a, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(a, "__esModule", { value: !0 });
    }, r.nc = void 0, r(138);
  })());
})(gu);
var dg = gu.exports;
const Td = /* @__PURE__ */ An(dg);
var bu = { exports: {} };
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(self, function() {
    return (() => {
      var t = { 771: (c, u, p) => {
        p.d(u, { Z: () => x });
        var g = p(645), v = p.n(g)()(function(y) {
          return y[1];
        });
        v.push([c.id, `.cdx-text-variant--call-out .ce-block__content {
  border: 1px solid rgb(255, 135, 135);
  padding: 8px 16px;
  border-radius: 6px;
  box-shadow: 0 0 0 5px rgba(255, 120, 84, 0.16);
  margin-top: 0.6em;
  margin-bottom: 0.6em;
}

.cdx-text-variant--citation {
  font-style: italic;
}

.cdx-text-variant--details {
  font-size: 0.84em;
}

.cdx-text-variant__toggler svg {
  width: 20px;
  height: 20px;
}
`, ""]);
        const x = v;
      }, 645: (c) => {
        c.exports = function(u) {
          var p = [];
          return p.toString = function() {
            return this.map(function(g) {
              var v = u(g);
              return g[2] ? "@media ".concat(g[2], " {").concat(v, "}") : v;
            }).join("");
          }, p.i = function(g, v, x) {
            typeof g == "string" && (g = [[null, g, ""]]);
            var y = {};
            if (x)
              for (var T = 0; T < this.length; T++) {
                var k = this[T][0];
                k != null && (y[k] = !0);
              }
            for (var M = 0; M < g.length; M++) {
              var O = [].concat(g[M]);
              x && y[O[0]] || (v && (O[2] ? O[2] = "".concat(v, " and ").concat(O[2]) : O[2] = v), p.push(O));
            }
          }, p;
        };
      }, 379: (c, u, p) => {
        var g, v = function() {
          var z = {};
          return function(d) {
            if (z[d] === void 0) {
              var j = document.querySelector(d);
              if (window.HTMLIFrameElement && j instanceof window.HTMLIFrameElement)
                try {
                  j = j.contentDocument.head;
                } catch {
                  j = null;
                }
              z[d] = j;
            }
            return z[d];
          };
        }(), x = [];
        function y(z) {
          for (var d = -1, j = 0; j < x.length; j++)
            if (x[j].identifier === z) {
              d = j;
              break;
            }
          return d;
        }
        function T(z, d) {
          for (var j = {}, R = [], V = 0; V < z.length; V++) {
            var K = z[V], J = d.base ? K[0] + d.base : K[0], B = j[J] || 0, se = "".concat(J, " ").concat(B);
            j[J] = B + 1;
            var Z = y(se), ne = { css: K[1], media: K[2], sourceMap: K[3] };
            Z !== -1 ? (x[Z].references++, x[Z].updater(ne)) : x.push({ identifier: se, updater: U(ne, d), references: 1 }), R.push(se);
          }
          return R;
        }
        function k(z) {
          var d = document.createElement("style"), j = z.attributes || {};
          if (j.nonce === void 0) {
            var R = p.nc;
            R && (j.nonce = R);
          }
          if (Object.keys(j).forEach(function(K) {
            d.setAttribute(K, j[K]);
          }), typeof z.insert == "function")
            z.insert(d);
          else {
            var V = v(z.insert || "head");
            if (!V)
              throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
            V.appendChild(d);
          }
          return d;
        }
        var M, O = (M = [], function(z, d) {
          return M[z] = d, M.filter(Boolean).join(`
`);
        });
        function Y(z, d, j, R) {
          var V = j ? "" : R.media ? "@media ".concat(R.media, " {").concat(R.css, "}") : R.css;
          if (z.styleSheet)
            z.styleSheet.cssText = O(d, V);
          else {
            var K = document.createTextNode(V), J = z.childNodes;
            J[d] && z.removeChild(J[d]), J.length ? z.insertBefore(K, J[d]) : z.appendChild(K);
          }
        }
        function I(z, d, j) {
          var R = j.css, V = j.media, K = j.sourceMap;
          if (V ? z.setAttribute("media", V) : z.removeAttribute("media"), K && typeof btoa < "u" && (R += `
/*# sourceMappingURL=data:application/json;base64,`.concat(btoa(unescape(encodeURIComponent(JSON.stringify(K)))), " */")), z.styleSheet)
            z.styleSheet.cssText = R;
          else {
            for (; z.firstChild; )
              z.removeChild(z.firstChild);
            z.appendChild(document.createTextNode(R));
          }
        }
        var F = null, Q = 0;
        function U(z, d) {
          var j, R, V;
          if (d.singleton) {
            var K = Q++;
            j = F || (F = k(d)), R = Y.bind(null, j, K, !1), V = Y.bind(null, j, K, !0);
          } else
            j = k(d), R = I.bind(null, j, d), V = function() {
              (function(J) {
                if (J.parentNode === null)
                  return !1;
                J.parentNode.removeChild(J);
              })(j);
            };
          return R(z), function(J) {
            if (J) {
              if (J.css === z.css && J.media === z.media && J.sourceMap === z.sourceMap)
                return;
              R(z = J);
            } else
              V();
          };
        }
        c.exports = function(z, d) {
          (d = d || {}).singleton || typeof d.singleton == "boolean" || (d.singleton = (g === void 0 && (g = !!(window && document && document.all && !window.atob)), g));
          var j = T(z = z || [], d);
          return function(R) {
            if (R = R || [], Object.prototype.toString.call(R) === "[object Array]") {
              for (var V = 0; V < j.length; V++) {
                var K = y(j[V]);
                x[K].references--;
              }
              for (var J = T(R, d), B = 0; B < j.length; B++) {
                var se = y(j[B]);
                x[se].references === 0 && (x[se].updater(), x.splice(se, 1));
              }
              j = J;
            }
          };
        };
      }, 962: (c) => {
        c.exports = '<svg viewBox="0 0 400 400" xmlns="http://www.w3.org/2000/svg"><path d="M200.48 53c10.359 0 19.704 2.99 27.99 7.933 5.625 3.356 10.563 7.492 15.193 12.354 6.735 7.072 13.08 15.997 19.645 27.12l.142.24 76.986 134.194c6.553 10.46 11.425 19.799 14.654 28.577 2.216 6.027 3.735 11.967 4.393 18.103.963 8.977.067 18.035-3.552 26.98-7.933 19.612-24.283 33.336-45.054 37.586l-4.464.913h-204.65l-2.817-.357c-10.267-1.3-19.764-4.163-28.422-9.16-11.051-6.377-19.82-15.823-25.055-27.664-4.432-10.03-5.235-19.952-3.914-29.887.821-6.175 2.486-12.239 4.864-18.58 3.616-9.64 9.159-20.55 16.718-33.309l74.632-127.44c6.469-11.125 12.743-20.061 19.436-27.158 4.62-4.899 9.562-9.07 15.206-12.456 8.301-4.979 17.68-7.989 28.07-7.989zm0 45c-6.102 0-14.05 8.427-23.842 25.28l-74.73 127.605c-12.713 21.444-17.806 35.025-15.28 40.742 2.527 5.717 8.519 9.175 17.974 10.373h197.255c5.932-1.214 10.051-4.671 12.357-10.373 2.307-5.702-1.812-16.903-12.357-33.603l-77.302-134.743C214.608 106.427 206.583 98 200.48 98zm.02 135c14.636 0 26.5 11.864 26.5 26.5S215.136 286 200.5 286 174 274.136 174 259.5s11.864-26.5 26.5-26.5zm0-83c12.426 0 22.5 10.074 22.5 22.5v28c0 12.426-10.074 22.5-22.5 22.5S178 212.926 178 200.5v-28c0-12.426 10.074-22.5 22.5-22.5z"></path></svg>';
      }, 737: (c) => {
        c.exports = '<svg viewBox="0 0 400 400" xmlns="http://www.w3.org/2000/svg"><path d="M281.488 301c6.388 0 12.311-1.14 17.768-3.42 5.457-2.28 10.315-5.433 14.574-9.456a43.696 43.696 0 009.983-14.084c2.395-5.365 3.593-11.133 3.593-17.303 0-10.999-2.994-20.388-8.984-28.167-5.99-7.78-14.707-11.67-26.153-11.67-5.324 0-10.249.805-14.774 2.415-4.526 1.61-7.587 3.085-9.184 4.426a165.146 165.146 0 01-1.997-9.054 46.483 46.483 0 01-.798-8.651c0-9.658 1.664-18.242 4.991-25.753 3.328-7.511 7.92-14.486 13.776-20.924 5.856-6.439 12.777-12.609 20.763-18.51 7.986-5.902 16.637-11.938 25.954-18.108L313.032 99c-12.778 6.975-24.89 14.352-36.336 22.131-11.446 7.78-21.562 16.9-30.346 27.363-8.785 10.462-15.706 22.534-20.763 36.215-5.058 13.681-7.587 29.777-7.587 48.287 0 7.511 1.264 15.29 3.793 23.339 2.53 8.047 6.389 15.358 11.58 21.93 5.19 6.572 11.779 12.005 19.765 16.297 7.986 4.292 17.436 6.438 28.35 6.438zm-148 0c6.388 0 12.311-1.14 17.768-3.42 5.457-2.28 10.315-5.433 14.574-9.456a43.696 43.696 0 009.983-14.084c2.395-5.365 3.593-11.133 3.593-17.303 0-10.999-2.994-20.388-8.984-28.167-5.99-7.78-14.707-11.67-26.153-11.67-5.324 0-10.249.805-14.774 2.415-4.526 1.61-7.587 3.085-9.184 4.426a165.146 165.146 0 01-1.997-9.054 46.483 46.483 0 01-.798-8.651c0-9.658 1.664-18.242 4.991-25.753 3.328-7.511 7.92-14.486 13.776-20.924 5.856-6.439 12.777-12.609 20.763-18.51 7.986-5.902 16.637-11.938 25.954-18.108L165.032 99c-12.778 6.975-24.89 14.352-36.336 22.131-11.446 7.78-21.562 16.9-30.346 27.363-8.785 10.462-15.706 22.534-20.763 36.215C72.529 198.39 70 214.486 70 232.996c0 7.511 1.264 15.29 3.793 23.339 2.53 8.047 6.389 15.358 11.58 21.93 5.19 6.572 11.779 12.005 19.765 16.297 7.986 4.292 17.436 6.438 28.35 6.438z"></path></svg>';
      }, 399: (c) => {
        c.exports = '<svg viewBox="0 0 400 400" xmlns="http://www.w3.org/2000/svg"><path d="M204.615 84L288 320h-53.354l-15.175-48.513h-86.74L116.437 320H65l84.024-236h55.59zm-28.275 53.957l-30.35 92.863h59.743l-29.393-92.863zm211.05-36.018l.256.25c5.579 5.578 5.662 14.57.25 20.25l-.25.256-45.49 45.49c-5.577 5.578-14.57 5.66-20.25.25l-.255-.25-45.49-45.49c-5.663-5.663-5.663-14.844 0-20.506 5.578-5.578 14.57-5.662 20.25-.25l.256.25 35.236 35.236 35.237-35.236c5.578-5.578 14.57-5.662 20.25-.25z"></path></svg>';
      } }, n = {};
      function r(c) {
        var u = n[c];
        if (u !== void 0)
          return u.exports;
        var p = n[c] = { id: c, exports: {} };
        return t[c](p, p.exports, r), p.exports;
      }
      r.n = (c) => {
        var u = c && c.__esModule ? () => c.default : () => c;
        return r.d(u, { a: u }), u;
      }, r.d = (c, u) => {
        for (var p in u)
          r.o(u, p) && !r.o(c, p) && Object.defineProperty(c, p, { enumerable: !0, get: u[p] });
      }, r.o = (c, u) => Object.prototype.hasOwnProperty.call(c, u);
      var a = {};
      return (() => {
        r.d(a, { default: () => O });
        var c = r(379), u = r.n(c), p = r(771);
        function g(Y, I = null, F = {}) {
          const Q = document.createElement(Y);
          Array.isArray(I) ? Q.classList.add(...I) : I && Q.classList.add(I);
          for (const U in F)
            Q[U] = F[U];
          return Q;
        }
        u()(p.Z, { insert: "head", singleton: !1 }), p.Z.locals;
        var v = r(962), x = r.n(v), y = r(737), T = r.n(y), k = r(399), M = r.n(k);
        class O {
          constructor({ api: I, data: F, config: Q, block: U }) {
            this.api = I, this.data = F, this.config = Q, this.block = U, this.variants = [{ name: "call-out", icon: x(), title: this.api.i18n.t("Call-out") }, { name: "citation", icon: T(), title: this.api.i18n.t("Citation") }, { name: "details", icon: M(), title: this.api.i18n.t("Details") }], this.wrapper = void 0;
          }
          static get isTune() {
            return !0;
          }
          static get CSS() {
            return { toggler: "cdx-text-variant__toggler" };
          }
          render() {
            const I = g("div", "");
            return this.variants.forEach(({ name: F, icon: Q, title: U }) => {
              const z = g("div", [this.api.styles.settingsButton, O.CSS.toggler], { innerHTML: Q });
              z.dataset.name = F, this.api.tooltip.onHover(z, U, { placement: "top", hidingDelay: 500 }), I.appendChild(z);
            }), this.api.listeners.on(I, "click", (F) => {
              this.tuneClicked(F);
            }), I;
          }
          tuneClicked(I) {
            const F = I.target.closest(`.${this.api.styles.settingsButton}`), Q = F.classList.contains(this.api.styles.settingsButtonActive);
            F.classList.toggle(this.api.styles.settingsButtonActive, !Q), this.variant = Q ? "" : F.dataset.name;
          }
          wrap(I) {
            return this.wrapper = g("div"), this.variant = this.data, this.wrapper.appendChild(I), this.wrapper;
          }
          set variant(I) {
            this.data = I, this.variants.forEach((F) => {
              this.wrapper.classList.toggle(`cdx-text-variant--${F.name}`, F.name === this.data);
            });
          }
          save() {
            return this.data || "";
          }
        }
      })(), a.default;
    })();
  });
})(bu);
var hg = bu.exports;
const ug = /* @__PURE__ */ An(hg);
var vu = { exports: {} };
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(self, function() {
    return function() {
      var t = { 966: function(a, c, u) {
        function p(x, y) {
          for (var T = 0; T < y.length; T++) {
            var k = y[T];
            k.enumerable = k.enumerable || !1, k.configurable = !0, "value" in k && (k.writable = !0), Object.defineProperty(x, k.key, k);
          }
        }
        u(548).toString();
        var g = u(630).make, v = function() {
          function x(M) {
            var O = M.api, Y = M.data, I = M.config, F = M.block;
            (function(Q, U) {
              if (!(Q instanceof U))
                throw new TypeError("Cannot call a class as a function");
            })(this, x), this.api = O, this.block = F, this.settings = I, this.data = Y || { alignment: this.getAlignment() }, this.alignmentSettings = [{ name: "left", icon: '<svg xmlns="http://www.w3.org/2000/svg" id="Layer" enable-background="new 0 0 64 64" height="20" viewBox="0 0 64 64" width="20"><path d="m54 8h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m54 52h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m10 23h28c1.104 0 2-.896 2-2s-.896-2-2-2h-28c-1.104 0-2 .896-2 2s.896 2 2 2z"/><path d="m54 30h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m10 45h28c1.104 0 2-.896 2-2s-.896-2-2-2h-28c-1.104 0-2 .896-2 2s.896 2 2 2z"/></svg>' }, { name: "center", icon: '<svg xmlns="http://www.w3.org/2000/svg" id="Layer" enable-background="new 0 0 64 64" height="20" viewBox="0 0 64 64" width="20"><path d="m54 8h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m54 52h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m46 23c1.104 0 2-.896 2-2s-.896-2-2-2h-28c-1.104 0-2 .896-2 2s.896 2 2 2z"/><path d="m54 30h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m46 45c1.104 0 2-.896 2-2s-.896-2-2-2h-28c-1.104 0-2 .896-2 2s.896 2 2 2z"/></svg>' }, { name: "right", icon: '<svg xmlns="http://www.w3.org/2000/svg" id="Layer" enable-background="new 0 0 64 64" height="20" viewBox="0 0 64 64" width="20"><path d="m54 8h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m54 52h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m54 19h-28c-1.104 0-2 .896-2 2s.896 2 2 2h28c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m54 30h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m54 41h-28c-1.104 0-2 .896-2 2s.896 2 2 2h28c1.104 0 2-.896 2-2s-.896-2-2-2z"/></svg>' }], this._CSS = { alignment: { left: "ce-tune-alignment--left", center: "ce-tune-alignment--center", right: "ce-tune-alignment--right" } };
          }
          var y, T, k;
          return y = x, k = [{ key: "DEFAULT_ALIGNMENT", get: function() {
            return "left";
          } }, { key: "isTune", get: function() {
            return !0;
          } }], (T = [{ key: "getAlignment", value: function() {
            var M, O;
            return (M = this.settings) !== null && M !== void 0 && M.blocks && this.settings.blocks.hasOwnProperty(this.block.name) ? this.settings.blocks[this.block.name] : (O = this.settings) !== null && O !== void 0 && O.default ? this.settings.default : x.DEFAULT_ALIGNMENT;
          } }, { key: "wrap", value: function(M) {
            return this.wrapper = g("div"), this.wrapper.classList.toggle(this._CSS.alignment[this.data.alignment]), this.wrapper.append(M), this.wrapper;
          } }, { key: "render", value: function() {
            var M = this, O = g("div");
            return this.alignmentSettings.map(function(Y) {
              var I = document.createElement("button");
              return I.classList.add(M.api.styles.settingsButton), I.innerHTML = Y.icon, I.type = "button", I.classList.toggle(M.api.styles.settingsButtonActive, Y.name === M.data.alignment), O.appendChild(I), I;
            }).forEach(function(Y, I, F) {
              Y.addEventListener("click", function() {
                M.data = { alignment: M.alignmentSettings[I].name }, F.forEach(function(Q, U) {
                  var z = M.alignmentSettings[U].name;
                  Q.classList.toggle(M.api.styles.settingsButtonActive, z === M.data.alignment), M.wrapper.classList.toggle(M._CSS.alignment[z], z === M.data.alignment);
                });
              });
            }), O;
          } }, { key: "save", value: function() {
            return this.data;
          } }]) && p(y.prototype, T), k && p(y, k), x;
        }();
        a.exports = v;
      }, 630: function(a, c, u) {
        function p(x) {
          return function(y) {
            if (Array.isArray(y))
              return g(y);
          }(x) || function(y) {
            if (typeof Symbol < "u" && Symbol.iterator in Object(y))
              return Array.from(y);
          }(x) || function(y, T) {
            if (y) {
              if (typeof y == "string")
                return g(y, T);
              var k = Object.prototype.toString.call(y).slice(8, -1);
              return k === "Object" && y.constructor && (k = y.constructor.name), k === "Map" || k === "Set" ? Array.from(y) : k === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(k) ? g(y, T) : void 0;
            }
          }(x) || function() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function g(x, y) {
          (y == null || y > x.length) && (y = x.length);
          for (var T = 0, k = new Array(y); T < y; T++)
            k[T] = x[T];
          return k;
        }
        function v(x) {
          var y, T = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, k = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, M = document.createElement(x);
          for (var O in Array.isArray(T) ? (y = M.classList).add.apply(y, p(T)) : T && M.classList.add(T), k)
            M[O] = k[O];
          return M;
        }
        u.r(c), u.d(c, { make: function() {
          return v;
        } });
      }, 424: function(a, c, u) {
        var p = u(645), g = u.n(p)()(function(v) {
          return v[1];
        });
        g.push([a.id, `.ce-tune-alignment--right {
    text-align: right;
}
.ce-tune-alignment--center {
    text-align: center;
}
.ce-tune-alignment--left {
    text-align: left;
}`, ""]), c.Z = g;
      }, 645: function(a) {
        a.exports = function(c) {
          var u = [];
          return u.toString = function() {
            return this.map(function(p) {
              var g = c(p);
              return p[2] ? "@media ".concat(p[2], " {").concat(g, "}") : g;
            }).join("");
          }, u.i = function(p, g, v) {
            typeof p == "string" && (p = [[null, p, ""]]);
            var x = {};
            if (v)
              for (var y = 0; y < this.length; y++) {
                var T = this[y][0];
                T != null && (x[T] = !0);
              }
            for (var k = 0; k < p.length; k++) {
              var M = [].concat(p[k]);
              v && x[M[0]] || (g && (M[2] ? M[2] = "".concat(g, " and ").concat(M[2]) : M[2] = g), u.push(M));
            }
          }, u;
        };
      }, 548: function(a, c, u) {
        var p = u(379), g = u.n(p), v = u(424);
        g()(v.Z, { insert: "head", singleton: !1 }), v.Z.locals;
      }, 379: function(a, c, u) {
        var p, g = function() {
          var U = {};
          return function(z) {
            if (U[z] === void 0) {
              var d = document.querySelector(z);
              if (window.HTMLIFrameElement && d instanceof window.HTMLIFrameElement)
                try {
                  d = d.contentDocument.head;
                } catch {
                  d = null;
                }
              U[z] = d;
            }
            return U[z];
          };
        }(), v = [];
        function x(U) {
          for (var z = -1, d = 0; d < v.length; d++)
            if (v[d].identifier === U) {
              z = d;
              break;
            }
          return z;
        }
        function y(U, z) {
          for (var d = {}, j = [], R = 0; R < U.length; R++) {
            var V = U[R], K = z.base ? V[0] + z.base : V[0], J = d[K] || 0, B = "".concat(K, " ").concat(J);
            d[K] = J + 1;
            var se = x(B), Z = { css: V[1], media: V[2], sourceMap: V[3] };
            se !== -1 ? (v[se].references++, v[se].updater(Z)) : v.push({ identifier: B, updater: Q(Z, z), references: 1 }), j.push(B);
          }
          return j;
        }
        function T(U) {
          var z = document.createElement("style"), d = U.attributes || {};
          if (d.nonce === void 0) {
            var j = u.nc;
            j && (d.nonce = j);
          }
          if (Object.keys(d).forEach(function(V) {
            z.setAttribute(V, d[V]);
          }), typeof U.insert == "function")
            U.insert(z);
          else {
            var R = g(U.insert || "head");
            if (!R)
              throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
            R.appendChild(z);
          }
          return z;
        }
        var k, M = (k = [], function(U, z) {
          return k[U] = z, k.filter(Boolean).join(`
`);
        });
        function O(U, z, d, j) {
          var R = d ? "" : j.media ? "@media ".concat(j.media, " {").concat(j.css, "}") : j.css;
          if (U.styleSheet)
            U.styleSheet.cssText = M(z, R);
          else {
            var V = document.createTextNode(R), K = U.childNodes;
            K[z] && U.removeChild(K[z]), K.length ? U.insertBefore(V, K[z]) : U.appendChild(V);
          }
        }
        function Y(U, z, d) {
          var j = d.css, R = d.media, V = d.sourceMap;
          if (R ? U.setAttribute("media", R) : U.removeAttribute("media"), V && typeof btoa < "u" && (j += `
/*# sourceMappingURL=data:application/json;base64,`.concat(btoa(unescape(encodeURIComponent(JSON.stringify(V)))), " */")), U.styleSheet)
            U.styleSheet.cssText = j;
          else {
            for (; U.firstChild; )
              U.removeChild(U.firstChild);
            U.appendChild(document.createTextNode(j));
          }
        }
        var I = null, F = 0;
        function Q(U, z) {
          var d, j, R;
          if (z.singleton) {
            var V = F++;
            d = I || (I = T(z)), j = O.bind(null, d, V, !1), R = O.bind(null, d, V, !0);
          } else
            d = T(z), j = Y.bind(null, d, z), R = function() {
              (function(K) {
                if (K.parentNode === null)
                  return !1;
                K.parentNode.removeChild(K);
              })(d);
            };
          return j(U), function(K) {
            if (K) {
              if (K.css === U.css && K.media === U.media && K.sourceMap === U.sourceMap)
                return;
              j(U = K);
            } else
              R();
          };
        }
        a.exports = function(U, z) {
          (z = z || {}).singleton || typeof z.singleton == "boolean" || (z.singleton = (p === void 0 && (p = !!(window && document && document.all && !window.atob)), p));
          var d = y(U = U || [], z);
          return function(j) {
            if (j = j || [], Object.prototype.toString.call(j) === "[object Array]") {
              for (var R = 0; R < d.length; R++) {
                var V = x(d[R]);
                v[V].references--;
              }
              for (var K = y(j, z), J = 0; J < d.length; J++) {
                var B = x(d[J]);
                v[B].references === 0 && (v[B].updater(), v.splice(B, 1));
              }
              d = K;
            }
          };
        };
      } }, n = {};
      function r(a) {
        var c = n[a];
        if (c !== void 0)
          return c.exports;
        var u = n[a] = { id: a, exports: {} };
        return t[a](u, u.exports, r), u.exports;
      }
      return r.n = function(a) {
        var c = a && a.__esModule ? function() {
          return a.default;
        } : function() {
          return a;
        };
        return r.d(c, { a: c }), c;
      }, r.d = function(a, c) {
        for (var u in c)
          r.o(c, u) && !r.o(a, u) && Object.defineProperty(a, u, { enumerable: !0, get: c[u] });
      }, r.o = function(a, c) {
        return Object.prototype.hasOwnProperty.call(a, c);
      }, r.r = function(a) {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(a, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(a, "__esModule", { value: !0 });
      }, r(966);
    }();
  });
})(vu);
var pg = vu.exports;
const fg = /* @__PURE__ */ An(pg);
(function() {
  try {
    if (typeof document < "u") {
      var o = document.createElement("style");
      o.appendChild(document.createTextNode(".ce-header{padding:.6em 0 3px;margin:0;line-height:1.25em;outline:none}.ce-header p,.ce-header div{padding:0!important;margin:0!important}.ce-header[contentEditable=true][data-placeholder]:before{position:absolute;content:attr(data-placeholder);color:#707684;font-weight:400;display:none;cursor:text}.ce-header[contentEditable=true][data-placeholder]:empty:before{display:block}.ce-header[contentEditable=true][data-placeholder]:empty:focus:before{display:none}")), document.head.appendChild(o);
    }
  } catch (e) {
    console.error("vite-plugin-css-injected-by-js", e);
  }
})();
const mg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M19 17V10.2135C19 10.1287 18.9011 10.0824 18.836 10.1367L16 12.5"/></svg>', gg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 11C16 10 19 9.5 19 12C19 13.9771 16.0684 13.9997 16.0012 16.8981C15.9999 16.9533 16.0448 17 16.1 17L19.3 17"/></svg>', bg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 11C16 10.5 16.8323 10 17.6 10C18.3677 10 19.5 10.311 19.5 11.5C19.5 12.5315 18.7474 12.9022 18.548 12.9823C18.5378 12.9864 18.5395 13.0047 18.5503 13.0063C18.8115 13.0456 20 13.3065 20 14.8C20 16 19.5 17 17.8 17C17.8 17 16 17 16 16.3"/></svg>', vg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M18 10L15.2834 14.8511C15.246 14.9178 15.294 15 15.3704 15C16.8489 15 18.7561 15 20.2 15M19 17C19 15.7187 19 14.8813 19 13.6"/></svg>', yg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 15.9C16 15.9 16.3768 17 17.8 17C19.5 17 20 15.6199 20 14.7C20 12.7323 17.6745 12.0486 16.1635 12.9894C16.094 13.0327 16 12.9846 16 12.9027V10.1C16 10.0448 16.0448 10 16.1 10H19.8"/></svg>', wg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M19.5 10C16.5 10.5 16 13.3285 16 15M16 15V15C16 16.1046 16.8954 17 18 17H18.3246C19.3251 17 20.3191 16.3492 20.2522 15.3509C20.0612 12.4958 16 12.6611 16 15Z"/></svg>', kg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M9 7L9 12M9 17V12M9 12L15 12M15 7V12M15 17L15 12"/></svg>';
/**
 * Header block for the Editor.js.
 *
 * @author CodeX (team@ifmo.su)
 * @copyright CodeX 2018
 * @license MIT
 * @version 2.0.0
 */
let _d = class {
  /**
   * Render plugin`s main Element and fill it with saved data
   *
   * @param {{data: HeaderData, config: HeaderConfig, api: object}}
   *   data — previously saved data
   *   config - user config for Tool
   *   api - Editor.js API
   *   readOnly - read only mode flag
   */
  constructor({ data: e, config: t, api: n, readOnly: r }) {
    this.api = n, this.readOnly = r, this._CSS = {
      block: this.api.styles.block,
      wrapper: "ce-header"
    }, this._settings = t, this._data = this.normalizeData(e), this._element = this.getTag();
  }
  /**
   * Normalize input data
   *
   * @param {HeaderData} data - saved data to process
   *
   * @returns {HeaderData}
   * @private
   */
  normalizeData(e) {
    const t = {};
    return typeof e != "object" && (e = {}), t.text = e.text || "", t.level = parseInt(e.level) || this.defaultLevel.number, t;
  }
  /**
   * Return Tool's view
   *
   * @returns {HTMLHeadingElement}
   * @public
   */
  render() {
    return this._element;
  }
  /**
   * Returns header block tunes config
   *
   * @returns {Array}
   */
  renderSettings() {
    return this.levels.map((e) => ({
      icon: e.svg,
      label: this.api.i18n.t(`Heading ${e.number}`),
      onActivate: () => this.setLevel(e.number),
      closeOnActivate: !0,
      isActive: this.currentLevel.number === e.number
    }));
  }
  /**
   * Callback for Block's settings buttons
   *
   * @param {number} level - level to set
   */
  setLevel(e) {
    this.data = {
      level: e,
      text: this.data.text
    };
  }
  /**
   * Method that specified how to merge two Text blocks.
   * Called by Editor.js by backspace at the beginning of the Block
   *
   * @param {HeaderData} data - saved data to merger with current block
   * @public
   */
  merge(e) {
    const t = {
      text: this.data.text + e.text,
      level: this.data.level
    };
    this.data = t;
  }
  /**
   * Validate Text block data:
   * - check for emptiness
   *
   * @param {HeaderData} blockData — data received after saving
   * @returns {boolean} false if saved data is not correct, otherwise true
   * @public
   */
  validate(e) {
    return e.text.trim() !== "";
  }
  /**
   * Extract Tool's data from the view
   *
   * @param {HTMLHeadingElement} toolsContent - Text tools rendered view
   * @returns {HeaderData} - saved data
   * @public
   */
  save(e) {
    return {
      text: e.innerHTML,
      level: this.currentLevel.number
    };
  }
  /**
   * Allow Header to be converted to/from other blocks
   */
  static get conversionConfig() {
    return {
      export: "text",
      // use 'text' property for other blocks
      import: "text"
      // fill 'text' property from other block's export string
    };
  }
  /**
   * Sanitizer Rules
   */
  static get sanitize() {
    return {
      level: !1,
      text: {}
    };
  }
  /**
   * Returns true to notify core that read-only is supported
   *
   * @returns {boolean}
   */
  static get isReadOnlySupported() {
    return !0;
  }
  /**
   * Get current Tools`s data
   *
   * @returns {HeaderData} Current data
   * @private
   */
  get data() {
    return this._data.text = this._element.innerHTML, this._data.level = this.currentLevel.number, this._data;
  }
  /**
   * Store data in plugin:
   * - at the this._data property
   * - at the HTML
   *
   * @param {HeaderData} data — data to set
   * @private
   */
  set data(e) {
    if (this._data = this.normalizeData(e), e.level !== void 0 && this._element.parentNode) {
      const t = this.getTag();
      t.innerHTML = this._element.innerHTML, this._element.parentNode.replaceChild(t, this._element), this._element = t;
    }
    e.text !== void 0 && (this._element.innerHTML = this._data.text || "");
  }
  /**
   * Get tag for target level
   * By default returns second-leveled header
   *
   * @returns {HTMLElement}
   */
  getTag() {
    const e = document.createElement(this.currentLevel.tag);
    return e.innerHTML = this._data.text || "", e.classList.add(this._CSS.wrapper), e.contentEditable = this.readOnly ? "false" : "true", e.dataset.placeholder = this.api.i18n.t(this._settings.placeholder || ""), e;
  }
  /**
   * Get current level
   *
   * @returns {level}
   */
  get currentLevel() {
    let e = this.levels.find((t) => t.number === this._data.level);
    return e || (e = this.defaultLevel), e;
  }
  /**
   * Return default level
   *
   * @returns {level}
   */
  get defaultLevel() {
    if (this._settings.defaultLevel) {
      const e = this.levels.find((t) => t.number === this._settings.defaultLevel);
      if (e)
        return e;
      console.warn("(ง'̀-'́)ง Heading Tool: the default level specified was not found in available levels");
    }
    return this.levels[1];
  }
  /**
   * @typedef {object} level
   * @property {number} number - level number
   * @property {string} tag - tag corresponds with level number
   * @property {string} svg - icon
   */
  /**
   * Available header levels
   *
   * @returns {level[]}
   */
  get levels() {
    const e = [
      {
        number: 1,
        tag: "H1",
        svg: mg
      },
      {
        number: 2,
        tag: "H2",
        svg: gg
      },
      {
        number: 3,
        tag: "H3",
        svg: bg
      },
      {
        number: 4,
        tag: "H4",
        svg: vg
      },
      {
        number: 5,
        tag: "H5",
        svg: yg
      },
      {
        number: 6,
        tag: "H6",
        svg: wg
      }
    ];
    return this._settings.levels ? e.filter(
      (t) => this._settings.levels.includes(t.number)
    ) : e;
  }
  /**
   * Handle H1-H6 tags on paste to substitute it with header Tool
   *
   * @param {PasteEvent} event - event with pasted content
   */
  onPaste(e) {
    const t = e.detail.data;
    let n = this.defaultLevel.number;
    switch (t.tagName) {
      case "H1":
        n = 1;
        break;
      case "H2":
        n = 2;
        break;
      case "H3":
        n = 3;
        break;
      case "H4":
        n = 4;
        break;
      case "H5":
        n = 5;
        break;
      case "H6":
        n = 6;
        break;
    }
    this._settings.levels && (n = this._settings.levels.reduce((r, a) => Math.abs(a - n) < Math.abs(r - n) ? a : r)), this.data = {
      level: n,
      text: t.innerHTML
    };
  }
  /**
   * Used by Editor.js paste handling API.
   * Provides configuration to handle H1-H6 tags.
   *
   * @returns {{handler: (function(HTMLElement): {text: string}), tags: string[]}}
   */
  static get pasteConfig() {
    return {
      tags: ["H1", "H2", "H3", "H4", "H5", "H6"]
    };
  }
  /**
   * Get Tool toolbox settings
   * icon - Tool icon's SVG
   * title - title to show in toolbox
   *
   * @returns {{icon: string, title: string}}
   */
  static get toolbox() {
    return {
      icon: kg,
      title: "Heading"
    };
  }
};
(function() {
  try {
    if (typeof document < "u") {
      var o = document.createElement("style");
      o.appendChild(document.createTextNode(".cdx-list{margin:0;padding-left:40px;outline:none}.cdx-list__item{padding:5.5px 0 5.5px 3px;line-height:1.6em}.cdx-list--unordered{list-style:disc}.cdx-list--ordered{list-style:decimal}.cdx-list-settings{display:flex}.cdx-list-settings .cdx-settings-button{width:50%}")), document.head.appendChild(o);
    }
  } catch (e) {
    console.error("vite-plugin-css-injected-by-js", e);
  }
})();
const Ed = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><line x1="9" x2="19" y1="7" y2="7" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="9" x2="19" y1="12" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="9" x2="19" y1="17" y2="17" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M5.00001 17H4.99002"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M5.00001 12H4.99002"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M5.00001 7H4.99002"/></svg>', xg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><line x1="12" x2="19" y1="7" y2="7" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="12" x2="19" y1="12" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="12" x2="19" y1="17" y2="17" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7.79999 14L7.79999 7.2135C7.79999 7.12872 7.7011 7.0824 7.63597 7.13668L4.79999 9.5"/></svg>';
let Cg = class {
  /**
   * Notify core that read-only mode is supported
   *
   * @returns {boolean}
   */
  static get isReadOnlySupported() {
    return !0;
  }
  /**
   * Allow to use native Enter behaviour
   *
   * @returns {boolean}
   * @public
   */
  static get enableLineBreaks() {
    return !0;
  }
  /**
   * Get Tool toolbox settings
   * icon - Tool icon's SVG
   * title - title to show in toolbox
   *
   * @returns {{icon: string, title: string}}
   */
  static get toolbox() {
    return {
      icon: Ed,
      title: "List"
    };
  }
  /**
   * Render plugin`s main Element and fill it with saved data
   *
   * @param {object} params - tool constructor options
   * @param {ListData} params.data - previously saved data
   * @param {object} params.config - user config for Tool
   * @param {object} params.api - Editor.js API
   * @param {boolean} params.readOnly - read-only mode flag
   */
  constructor({ data: e, config: t, api: n, readOnly: r }) {
    this._elements = {
      wrapper: null
    }, this.api = n, this.readOnly = r, this.settings = [
      {
        name: "unordered",
        label: this.api.i18n.t("Unordered"),
        icon: Ed,
        default: t.defaultStyle === "unordered" || !1
      },
      {
        name: "ordered",
        label: this.api.i18n.t("Ordered"),
        icon: xg,
        default: t.defaultStyle === "ordered" || !0
      }
    ], this._data = {
      style: this.settings.find((a) => a.default === !0).name,
      items: []
    }, this.data = e;
  }
  /**
   * Returns list tag with items
   *
   * @returns {Element}
   * @public
   */
  render() {
    return this._elements.wrapper = this.makeMainTag(this._data.style), this._data.items.length ? this._data.items.forEach((e) => {
      this._elements.wrapper.appendChild(this._make("li", this.CSS.item, {
        innerHTML: e
      }));
    }) : this._elements.wrapper.appendChild(this._make("li", this.CSS.item)), this.readOnly || this._elements.wrapper.addEventListener("keydown", (e) => {
      const [t, n] = [13, 8];
      switch (e.keyCode) {
        case t:
          this.getOutofList(e);
          break;
        case n:
          this.backspace(e);
          break;
      }
    }, !1), this._elements.wrapper;
  }
  /**
   * @returns {ListData}
   * @public
   */
  save() {
    return this.data;
  }
  /**
   * Allow List Tool to be converted to/from other block
   *
   * @returns {{export: Function, import: Function}}
   */
  static get conversionConfig() {
    return {
      /**
       * To create exported string from list, concatenate items by dot-symbol.
       *
       * @param {ListData} data - list data to create a string from thats
       * @returns {string}
       */
      export: (e) => e.items.join(". "),
      /**
       * To create a list from other block's string, just put it at the first item
       *
       * @param {string} string - string to create list tool data from that
       * @returns {ListData}
       */
      import: (e) => ({
        items: [e],
        style: "unordered"
      })
    };
  }
  /**
   * Sanitizer rules
   *
   * @returns {object}
   */
  static get sanitize() {
    return {
      style: {},
      items: {
        br: !0
      }
    };
  }
  /**
   * Settings
   *
   * @public
   * @returns {Array}
   */
  renderSettings() {
    return this.settings.map((e) => ({
      ...e,
      isActive: this._data.style === e.name,
      closeOnActivate: !0,
      onActivate: () => this.toggleTune(e.name)
    }));
  }
  /**
   * On paste callback that is fired from Editor
   *
   * @param {PasteEvent} event - event with pasted data
   */
  onPaste(e) {
    const t = e.detail.data;
    this.data = this.pasteHandler(t);
  }
  /**
   * List Tool on paste configuration
   *
   * @public
   */
  static get pasteConfig() {
    return {
      tags: ["OL", "UL", "LI"]
    };
  }
  /**
   * Creates main <ul> or <ol> tag depended on style
   *
   * @param {string} style - 'ordered' or 'unordered'
   * @returns {HTMLOListElement|HTMLUListElement}
   */
  makeMainTag(e) {
    const t = e === "ordered" ? this.CSS.wrapperOrdered : this.CSS.wrapperUnordered, n = e === "ordered" ? "ol" : "ul";
    return this._make(n, [this.CSS.baseBlock, this.CSS.wrapper, t], {
      contentEditable: !this.readOnly
    });
  }
  /**
   * Toggles List style
   *
   * @param {string} style - 'ordered'|'unordered'
   */
  toggleTune(e) {
    const t = this.makeMainTag(e);
    for (; this._elements.wrapper.hasChildNodes(); )
      t.appendChild(this._elements.wrapper.firstChild);
    this._elements.wrapper.replaceWith(t), this._elements.wrapper = t, this._data.style = e;
  }
  /**
   * Styles
   *
   * @private
   */
  get CSS() {
    return {
      baseBlock: this.api.styles.block,
      wrapper: "cdx-list",
      wrapperOrdered: "cdx-list--ordered",
      wrapperUnordered: "cdx-list--unordered",
      item: "cdx-list__item"
    };
  }
  /**
   * List data setter
   *
   * @param {ListData} listData
   */
  set data(e) {
    e || (e = {}), this._data.style = e.style || this.settings.find((n) => n.default === !0).name, this._data.items = e.items || [];
    const t = this._elements.wrapper;
    t && t.parentNode.replaceChild(this.render(), t);
  }
  /**
   * Return List data
   *
   * @returns {ListData}
   */
  get data() {
    this._data.items = [];
    const e = this._elements.wrapper.querySelectorAll(`.${this.CSS.item}`);
    for (let t = 0; t < e.length; t++)
      e[t].innerHTML.replace("<br>", " ").trim() && this._data.items.push(e[t].innerHTML);
    return this._data;
  }
  /**
   * Helper for making Elements with attributes
   *
   * @param  {string} tagName           - new Element tag name
   * @param  {Array|string} classNames  - list or name of CSS classname(s)
   * @param  {object} attributes        - any attributes
   * @returns {Element}
   */
  _make(e, t = null, n = {}) {
    const r = document.createElement(e);
    Array.isArray(t) ? r.classList.add(...t) : t && r.classList.add(t);
    for (const a in n)
      r[a] = n[a];
    return r;
  }
  /**
   * Returns current List item by the caret position
   *
   * @returns {Element}
   */
  get currentItem() {
    let e = window.getSelection().anchorNode;
    return e.nodeType !== Node.ELEMENT_NODE && (e = e.parentNode), e.closest(`.${this.CSS.item}`);
  }
  /**
   * Get out from List Tool
   * by Enter on the empty last item
   *
   * @param {KeyboardEvent} event
   */
  getOutofList(e) {
    const t = this._elements.wrapper.querySelectorAll("." + this.CSS.item);
    if (t.length < 2)
      return;
    const n = t[t.length - 1], r = this.currentItem;
    r === n && !n.textContent.trim().length && (r.parentElement.removeChild(r), this.api.blocks.insert(), this.api.caret.setToBlock(this.api.blocks.getCurrentBlockIndex()), e.preventDefault(), e.stopPropagation());
  }
  /**
   * Handle backspace
   *
   * @param {KeyboardEvent} event
   */
  backspace(e) {
    const t = this._elements.wrapper.querySelectorAll("." + this.CSS.item), n = t[0];
    n && t.length < 2 && !n.innerHTML.replace("<br>", " ").trim() && e.preventDefault();
  }
  /**
   * Select LI content by CMD+A
   *
   * @param {KeyboardEvent} event
   */
  selectItem(e) {
    e.preventDefault();
    const t = window.getSelection(), n = t.anchorNode.parentNode, r = n.closest("." + this.CSS.item), a = new Range();
    a.selectNodeContents(r), t.removeAllRanges(), t.addRange(a);
  }
  /**
   * Handle UL, OL and LI tags paste and returns List data
   *
   * @param {HTMLUListElement|HTMLOListElement|HTMLLIElement} element
   * @returns {ListData}
   */
  pasteHandler(e) {
    const { tagName: t } = e;
    let n;
    switch (t) {
      case "OL":
        n = "ordered";
        break;
      case "UL":
      case "LI":
        n = "unordered";
    }
    const r = {
      style: n,
      items: []
    };
    if (t === "LI")
      r.items = [e.innerHTML];
    else {
      const a = Array.from(e.querySelectorAll("LI"));
      r.items = a.map((c) => c.innerHTML).filter((c) => !!c.trim());
    }
    return r;
  }
};
(function() {
  try {
    if (typeof document < "u") {
      var o = document.createElement("style");
      o.appendChild(document.createTextNode(".ce-paragraph{line-height:1.6em;outline:none}.ce-paragraph[data-placeholder]:empty:before{content:attr(data-placeholder);color:#707684;font-weight:400;opacity:0}.codex-editor--empty .ce-block:first-child .ce-paragraph[data-placeholder]:empty:before{opacity:1}.codex-editor--toolbox-opened .ce-block:first-child .ce-paragraph[data-placeholder]:empty:before,.codex-editor--empty .ce-block:first-child .ce-paragraph[data-placeholder]:empty:focus:before{opacity:0}.ce-paragraph p:first-of-type{margin-top:0}.ce-paragraph p:last-of-type{margin-bottom:0}")), document.head.appendChild(o);
    }
  } catch (e) {
    console.error("vite-plugin-css-injected-by-js", e);
  }
})();
const Sg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 9V7.2C8 7.08954 8.08954 7 8.2 7L12 7M16 9V7.2C16 7.08954 15.9105 7 15.8 7L12 7M12 7L12 17M12 17H10M12 17H14"/></svg>';
/**
 * Base Paragraph Block for the Editor.js.
 * Represents a regular text block
 *
 * @author CodeX (team@codex.so)
 * @copyright CodeX 2018
 * @license The MIT License (MIT)
 */
let Tg = class yu {
  /**
   * Default placeholder for Paragraph Tool
   *
   * @returns {string}
   * @class
   */
  static get DEFAULT_PLACEHOLDER() {
    return "";
  }
  /**
   * Render plugin`s main Element and fill it with saved data
   *
   * @param {object} params - constructor params
   * @param {ParagraphData} params.data - previously saved data
   * @param {ParagraphConfig} params.config - user config for Tool
   * @param {object} params.api - editor.js api
   * @param {boolean} readOnly - read only mode flag
   */
  constructor({ data: e, config: t, api: n, readOnly: r }) {
    this.api = n, this.readOnly = r, this._CSS = {
      block: this.api.styles.block,
      wrapper: "ce-paragraph"
    }, this.readOnly || (this.onKeyUp = this.onKeyUp.bind(this)), this._placeholder = t.placeholder ? t.placeholder : yu.DEFAULT_PLACEHOLDER, this._data = {}, this._element = null, this._preserveBlank = t.preserveBlank !== void 0 ? t.preserveBlank : !1, this.data = e;
  }
  /**
   * Check if text content is empty and set empty string to inner html.
   * We need this because some browsers (e.g. Safari) insert <br> into empty contenteditanle elements
   *
   * @param {KeyboardEvent} e - key up event
   */
  onKeyUp(e) {
    if (e.code !== "Backspace" && e.code !== "Delete")
      return;
    const { textContent: t } = this._element;
    t === "" && (this._element.innerHTML = "");
  }
  /**
   * Create Tool's view
   *
   * @returns {HTMLElement}
   * @private
   */
  drawView() {
    const e = document.createElement("DIV");
    return e.classList.add(this._CSS.wrapper, this._CSS.block), e.contentEditable = !1, e.dataset.placeholder = this.api.i18n.t(this._placeholder), this._data.text && (e.innerHTML = this._data.text), this.readOnly || (e.contentEditable = !0, e.addEventListener("keyup", this.onKeyUp)), e;
  }
  /**
   * Return Tool's view
   *
   * @returns {HTMLDivElement}
   */
  render() {
    return this._element = this.drawView(), this._element;
  }
  /**
   * Method that specified how to merge two Text blocks.
   * Called by Editor.js by backspace at the beginning of the Block
   *
   * @param {ParagraphData} data
   * @public
   */
  merge(e) {
    const t = {
      text: this.data.text + e.text
    };
    this.data = t;
  }
  /**
   * Validate Paragraph block data:
   * - check for emptiness
   *
   * @param {ParagraphData} savedData — data received after saving
   * @returns {boolean} false if saved data is not correct, otherwise true
   * @public
   */
  validate(e) {
    return !(e.text.trim() === "" && !this._preserveBlank);
  }
  /**
   * Extract Tool's data from the view
   *
   * @param {HTMLDivElement} toolsContent - Paragraph tools rendered view
   * @returns {ParagraphData} - saved data
   * @public
   */
  save(e) {
    return {
      text: e.innerHTML
    };
  }
  /**
   * On paste callback fired from Editor.
   *
   * @param {PasteEvent} event - event with pasted data
   */
  onPaste(e) {
    const t = {
      text: e.detail.data.innerHTML
    };
    this.data = t;
  }
  /**
   * Enable Conversion Toolbar. Paragraph can be converted to/from other tools
   */
  static get conversionConfig() {
    return {
      export: "text",
      // to convert Paragraph to other block, use 'text' property of saved data
      import: "text"
      // to covert other block's exported string to Paragraph, fill 'text' property of tool data
    };
  }
  /**
   * Sanitizer rules
   */
  static get sanitize() {
    return {
      text: {
        br: !0
      }
    };
  }
  /**
   * Returns true to notify the core that read-only mode is supported
   *
   * @returns {boolean}
   */
  static get isReadOnlySupported() {
    return !0;
  }
  /**
   * Get current Tools`s data
   *
   * @returns {ParagraphData} Current data
   * @private
   */
  get data() {
    if (this._element !== null) {
      const e = this._element.innerHTML;
      this._data.text = e;
    }
    return this._data;
  }
  /**
   * Store data in plugin:
   * - at the this._data property
   * - at the HTML
   *
   * @param {ParagraphData} data — data to set
   * @private
   */
  set data(e) {
    this._data = e || {}, this._element !== null && this.hydrate();
  }
  /**
   * Fill tool's view with data
   */
  hydrate() {
    window.requestAnimationFrame(() => {
      this._element.innerHTML = this._data.text || "";
    });
  }
  /**
   * Used by Editor paste handling API.
   * Provides configuration to handle P tags.
   *
   * @returns {{tags: string[]}}
   */
  static get pasteConfig() {
    return {
      tags: ["P"]
    };
  }
  /**
   * Icon and title for displaying at the Toolbox
   *
   * @returns {{icon: string, title: string}}
   */
  static get toolbox() {
    return {
      icon: Sg,
      title: "Text"
    };
  }
};
(function() {
  try {
    if (typeof document < "u") {
      var o = document.createElement("style");
      o.appendChild(document.createTextNode('.tc-wrap{--color-background:#f9f9fb;--color-text-secondary:#7b7e89;--color-border:#e8e8eb;--cell-size:34px;--toolbox-icon-size:18px;--toolbox-padding:6px;--toolbox-aiming-field-size:calc(var(--toolbox-icon-size) + var(--toolbox-padding)*2);border-left:0;position:relative;height:100%;width:100%;margin-top:var(--toolbox-icon-size);box-sizing:border-box;display:grid;grid-template-columns:calc(100% - var(--cell-size)) var(--cell-size)}.tc-wrap--readonly{grid-template-columns:100% var(--cell-size)}.tc-wrap svg{vertical-align:top}@media print{.tc-wrap{border-left-color:var(--color-border);border-left-style:solid;border-left-width:1px;grid-template-columns:100% var(--cell-size)}}@media print{.tc-wrap .tc-row:after{display:none}}.tc-table{position:relative;width:100%;height:100%;display:grid;font-size:14px;border-top:1px solid var(--color-border);line-height:1.4}.tc-table:after{width:calc(var(--cell-size));height:100%;left:calc(var(--cell-size)*-1);top:0}.tc-table:after,.tc-table:before{position:absolute;content:""}.tc-table:before{width:100%;height:var(--toolbox-aiming-field-size);top:calc(var(--toolbox-aiming-field-size)*-1);left:0}.tc-table--heading .tc-row:first-child{font-weight:600;border-bottom:2px solid var(--color-border)}.tc-table--heading .tc-row:first-child [contenteditable]:empty:before{content:attr(heading);color:var(--color-text-secondary)}.tc-table--heading .tc-row:first-child:after{bottom:-2px;border-bottom:2px solid var(--color-border)}.tc-add-column,.tc-add-row{display:flex;color:var(--color-text-secondary)}@media print{.tc-add{display:none}}.tc-add-column{padding:4px 0;justify-content:center;border-top:1px solid var(--color-border)}@media print{.tc-add-column{display:none}}.tc-add-row{height:var(--cell-size);align-items:center;padding-left:4px;position:relative}.tc-add-row:before{content:"";position:absolute;right:calc(var(--cell-size)*-1);width:var(--cell-size);height:100%}@media print{.tc-add-row{display:none}}.tc-add-column,.tc-add-row{transition:0s;cursor:pointer;will-change:background-color}.tc-add-column:hover,.tc-add-row:hover{transition:background-color .1s ease;background-color:var(--color-background)}.tc-add-row{margin-top:1px}.tc-add-row:hover:before{transition:.1s;background-color:var(--color-background)}.tc-row{display:grid;grid-template-columns:repeat(auto-fit,minmax(10px,1fr));position:relative;border-bottom:1px solid var(--color-border)}.tc-row:after{content:"";pointer-events:none;position:absolute;width:var(--cell-size);height:100%;bottom:-1px;right:calc(var(--cell-size)*-1);border-bottom:1px solid var(--color-border)}.tc-row--selected{background:var(--color-background)}.tc-row--selected:after{background:var(--color-background)}.tc-cell{border-right:1px solid var(--color-border);padding:6px 12px;overflow:hidden;outline:none;line-break:normal}.tc-cell--selected{background:var(--color-background)}.tc-wrap--readonly .tc-row:after{display:none}.tc-toolbox{--toolbox-padding:6px;--popover-margin:30px;--toggler-click-zone-size:30px;--toggler-dots-color:#7b7e89;--toggler-dots-color-hovered:#1d202b;position:absolute;cursor:pointer;z-index:1;opacity:0;transition:opacity .1s;will-change:left,opacity}.tc-toolbox--column{top:calc(var(--toggler-click-zone-size)*-1);transform:translate(calc(var(--toggler-click-zone-size)*-1/2));will-change:left,opacity}.tc-toolbox--row{left:calc(var(--popover-margin)*-1);transform:translateY(calc(var(--toggler-click-zone-size)*-1/2));margin-top:-1px;will-change:top,opacity}.tc-toolbox--showed{opacity:1}.tc-toolbox .tc-popover{position:absolute;top:0;left:var(--popover-margin)}.tc-toolbox__toggler{display:flex;align-items:center;justify-content:center;width:var(--toggler-click-zone-size);height:var(--toggler-click-zone-size);color:var(--toggler-dots-color);opacity:0;transition:opacity .15s ease;will-change:opacity}.tc-toolbox__toggler:hover{color:var(--toggler-dots-color-hovered)}.tc-toolbox__toggler svg{fill:currentColor}.tc-wrap:hover .tc-toolbox__toggler{opacity:1}.tc-settings .cdx-settings-button{width:50%;margin:0}.tc-popover{--color-border:#eaeaea;--color-background:#fff;--color-background-hover:rgba(232,232,235,.49);--color-background-confirm:#e24a4a;--color-background-confirm-hover:#d54040;--color-text-confirm:#fff;background:var(--color-background);border:1px solid var(--color-border);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;padding:6px;display:none;will-change:opacity,transform}.tc-popover--opened{display:block;animation:menuShowing .1s cubic-bezier(.215,.61,.355,1) forwards}.tc-popover__item{display:flex;align-items:center;padding:2px 14px 2px 2px;border-radius:5px;cursor:pointer;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;user-select:none}.tc-popover__item:hover{background:var(--color-background-hover)}.tc-popover__item:not(:last-of-type){margin-bottom:2px}.tc-popover__item-icon{display:inline-flex;width:26px;height:26px;align-items:center;justify-content:center;background:var(--color-background);border-radius:5px;border:1px solid var(--color-border);margin-right:8px}.tc-popover__item-label{line-height:22px;font-size:14px;font-weight:500}.tc-popover__item--confirm{background:var(--color-background-confirm);color:var(--color-text-confirm)}.tc-popover__item--confirm:hover{background-color:var(--color-background-confirm-hover)}.tc-popover__item--confirm .tc-popover__item-icon{background:var(--color-background-confirm);border-color:#0000001a}.tc-popover__item--confirm .tc-popover__item-icon svg{transition:transform .2s ease-in;transform:rotate(90deg) scale(1.2)}.tc-popover__item--hidden{display:none}@keyframes menuShowing{0%{opacity:0;transform:translateY(-8px) scale(.9)}70%{opacity:1;transform:translateY(2px)}to{transform:translateY(0)}}')), document.head.appendChild(o);
    }
  } catch (e) {
    console.error("vite-plugin-css-injected-by-js", e);
  }
})();
function Ko(o, e, t = {}) {
  const n = document.createElement(o);
  Array.isArray(e) ? n.classList.add(...e) : e && n.classList.add(e);
  for (const r in t)
    Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]);
  return n;
}
function Md(o) {
  const e = o.getBoundingClientRect();
  return {
    y1: Math.floor(e.top + window.pageYOffset),
    x1: Math.floor(e.left + window.pageXOffset),
    x2: Math.floor(e.right + window.pageXOffset),
    y2: Math.floor(e.bottom + window.pageYOffset)
  };
}
function Dd(o, e) {
  const t = Md(o), n = Md(e);
  return {
    fromTopBorder: n.y1 - t.y1,
    fromLeftBorder: n.x1 - t.x1,
    fromRightBorder: t.x2 - n.x2,
    fromBottomBorder: t.y2 - n.y2
  };
}
function _g(o, e) {
  const t = o.getBoundingClientRect(), { width: n, height: r, x: a, y: c } = t, { clientX: u, clientY: p } = e;
  return {
    width: n,
    height: r,
    x: u - a,
    y: p - c
  };
}
function Od(o, e) {
  return e.parentNode.insertBefore(o, e);
}
function Ld(o, e = !0) {
  const t = document.createRange(), n = window.getSelection();
  t.selectNodeContents(o), t.collapse(e), n.removeAllRanges(), n.addRange(t);
}
let Eg = class Vo {
  /**
   * @param {object} options - constructor options
   * @param {PopoverItem[]} options.items - constructor options
   */
  constructor({ items: e }) {
    this.items = e, this.wrapper = void 0, this.itemEls = [];
  }
  /**
   * Set of CSS classnames used in popover
   *
   * @returns {object}
   */
  static get CSS() {
    return {
      popover: "tc-popover",
      popoverOpened: "tc-popover--opened",
      item: "tc-popover__item",
      itemHidden: "tc-popover__item--hidden",
      itemConfirmState: "tc-popover__item--confirm",
      itemIcon: "tc-popover__item-icon",
      itemLabel: "tc-popover__item-label"
    };
  }
  /**
   * Returns the popover element
   *
   * @returns {Element}
   */
  render() {
    return this.wrapper = Ko("div", Vo.CSS.popover), this.items.forEach((e, t) => {
      const n = Ko("div", Vo.CSS.item), r = Ko("div", Vo.CSS.itemIcon, {
        innerHTML: e.icon
      }), a = Ko("div", Vo.CSS.itemLabel, {
        textContent: e.label
      });
      n.dataset.index = t, n.appendChild(r), n.appendChild(a), this.wrapper.appendChild(n), this.itemEls.push(n);
    }), this.wrapper.addEventListener("click", (e) => {
      this.popoverClicked(e);
    }), this.wrapper;
  }
  /**
   * Popover wrapper click listener
   * Used to delegate clicks in items
   *
   * @returns {void}
   */
  popoverClicked(e) {
    const t = e.target.closest(`.${Vo.CSS.item}`);
    if (!t)
      return;
    const n = t.dataset.index, r = this.items[n];
    if (r.confirmationRequired && !this.hasConfirmationState(t)) {
      this.setConfirmationState(t);
      return;
    }
    r.onClick();
  }
  /**
   * Enable the confirmation state on passed item
   *
   * @returns {void}
   */
  setConfirmationState(e) {
    e.classList.add(Vo.CSS.itemConfirmState);
  }
  /**
   * Disable the confirmation state on passed item
   *
   * @returns {void}
   */
  clearConfirmationState(e) {
    e.classList.remove(Vo.CSS.itemConfirmState);
  }
  /**
   * Check if passed item has the confirmation state
   *
   * @returns {boolean}
   */
  hasConfirmationState(e) {
    return e.classList.contains(Vo.CSS.itemConfirmState);
  }
  /**
   * Return an opening state
   *
   * @returns {boolean}
   */
  get opened() {
    return this.wrapper.classList.contains(Vo.CSS.popoverOpened);
  }
  /**
   * Opens the popover
   *
   * @returns {void}
   */
  open() {
    this.items.forEach((e, t) => {
      typeof e.hideIf == "function" && this.itemEls[t].classList.toggle(Vo.CSS.itemHidden, e.hideIf());
    }), this.wrapper.classList.add(Vo.CSS.popoverOpened);
  }
  /**
   * Closes the popover
   *
   * @returns {void}
   */
  close() {
    this.wrapper.classList.remove(Vo.CSS.popoverOpened), this.itemEls.forEach((e) => {
      this.clearConfirmationState(e);
    });
  }
};
const Ad = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 8L12 12M12 12L16 16M12 12L16 8M12 12L8 16"/></svg>', Mg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 9.16666L18.2167 12.5M18.2167 12.5L14.8833 15.8333M18.2167 12.5H10.05C9.16594 12.5 8.31809 12.1488 7.69297 11.5237C7.06785 10.8986 6.71666 10.0507 6.71666 9.16666"/></svg>', Dg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.9167 14.9167L11.5833 18.25M11.5833 18.25L8.25 14.9167M11.5833 18.25L11.5833 10.0833C11.5833 9.19928 11.9345 8.35143 12.5596 7.72631C13.1848 7.10119 14.0326 6.75 14.9167 6.75"/></svg>', Og = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.13333 14.9167L12.4667 18.25M12.4667 18.25L15.8 14.9167M12.4667 18.25L12.4667 10.0833C12.4667 9.19928 12.1155 8.35143 11.4904 7.72631C10.8652 7.10119 10.0174 6.75 9.13333 6.75"/></svg>', Lg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 15.8333L18.2167 12.5M18.2167 12.5L14.8833 9.16667M18.2167 12.5L10.05 12.5C9.16595 12.5 8.31811 12.8512 7.69299 13.4763C7.06787 14.1014 6.71667 14.9493 6.71667 15.8333"/></svg>', Ag = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.41 9.66H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 9.66H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.31 14.36H9.3"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 14.36H14.59"/></svg>', Bd = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 7V12M12 17V12M17 12H12M12 12H7"/></svg>', Bg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', Rg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M14 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><path stroke="currentColor" stroke-width="2" d="M5 14H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', Ig = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>';
let Rd = class ss {
  /**
   * Creates toolbox buttons and toolbox menus
   *
   * @param {object} api - Editor.js api
   * @param {PopoverItem[]} items - Editor.js api
   * @param {function} onOpen - callback fired when the Popover is opening
   * @param {function} onClose - callback fired when the Popover is closing
   * @param {string} [cssModifier] - the modifier for the Toolbox. Allows to add some specific styles.
   */
  constructor({ api: e, items: t, onOpen: n, onClose: r, cssModifier: a = "" }) {
    this.api = e, this.items = t, this.onOpen = n, this.onClose = r, this.cssModifier = a, this.popover = null, this.wrapper = this.createToolbox();
  }
  /**
   * Style classes
   */
  static get CSS() {
    return {
      toolbox: "tc-toolbox",
      toolboxShowed: "tc-toolbox--showed",
      toggler: "tc-toolbox__toggler"
    };
  }
  /**
   * Returns rendered Toolbox element
   */
  get element() {
    return this.wrapper;
  }
  /**
   * Creating a toolbox to open menu for a manipulating columns
   *
   * @returns {Element}
   */
  createToolbox() {
    const e = Ko("div", [
      ss.CSS.toolbox,
      this.cssModifier ? `${ss.CSS.toolbox}--${this.cssModifier}` : ""
    ]);
    e.dataset.mutationFree = "true";
    const t = this.createPopover(), n = this.createToggler();
    return e.appendChild(n), e.appendChild(t), e;
  }
  /**
   * Creates the Toggler
   *
   * @returns {Element}
   */
  createToggler() {
    const e = Ko("div", ss.CSS.toggler, {
      innerHTML: Ag
    });
    return e.addEventListener("click", () => {
      this.togglerClicked();
    }), e;
  }
  /**
   * Creates the Popover instance and render it
   *
   * @returns {Element}
   */
  createPopover() {
    return this.popover = new Eg({
      items: this.items
    }), this.popover.render();
  }
  /**
   * Toggler click handler. Opens/Closes the popover
   *
   * @returns {void}
   */
  togglerClicked() {
    this.popover.opened ? (this.popover.close(), this.onClose()) : (this.popover.open(), this.onOpen());
  }
  /**
   * Shows the Toolbox
   *
   * @param {function} computePositionMethod - method that returns the position coordinate
   * @returns {void}
   */
  show(e) {
    const t = e();
    Object.entries(t).forEach(([n, r]) => {
      this.wrapper.style[n] = r;
    }), this.wrapper.classList.add(ss.CSS.toolboxShowed);
  }
  /**
   * Hides the Toolbox
   *
   * @returns {void}
   */
  hide() {
    this.popover.close(), this.wrapper.classList.remove(ss.CSS.toolboxShowed);
  }
};
function Ng(o, e) {
  let t = 0;
  return function(...n) {
    const r = (/* @__PURE__ */ new Date()).getTime();
    if (!(r - t < o))
      return t = r, e(...n);
  };
}
const yt = {
  wrapper: "tc-wrap",
  wrapperReadOnly: "tc-wrap--readonly",
  table: "tc-table",
  row: "tc-row",
  withHeadings: "tc-table--heading",
  rowSelected: "tc-row--selected",
  cell: "tc-cell",
  cellSelected: "tc-cell--selected",
  addRow: "tc-add-row",
  addColumn: "tc-add-column"
};
let Pg = class {
  /**
   * Creates
   *
   * @constructor
   * @param {boolean} readOnly - read-only mode flag
   * @param {object} api - Editor.js API
   * @param {TableData} data - Editor.js API
   * @param {TableConfig} config - Editor.js API
   */
  constructor(e, t, n, r) {
    this.readOnly = e, this.api = t, this.data = n, this.config = r, this.wrapper = null, this.table = null, this.toolboxColumn = this.createColumnToolbox(), this.toolboxRow = this.createRowToolbox(), this.createTableWrapper(), this.hoveredRow = 0, this.hoveredColumn = 0, this.selectedRow = 0, this.selectedColumn = 0, this.tunes = {
      withHeadings: !1
    }, this.resize(), this.fill(), this.focusedCell = {
      row: 0,
      column: 0
    }, this.documentClicked = (a) => {
      const c = a.target.closest(`.${yt.table}`) !== null, u = a.target.closest(`.${yt.wrapper}`) === null;
      (c || u) && this.hideToolboxes();
      const p = a.target.closest(`.${yt.addRow}`), g = a.target.closest(`.${yt.addColumn}`);
      p && p.parentNode === this.wrapper ? (this.addRow(void 0, !0), this.hideToolboxes()) : g && g.parentNode === this.wrapper && (this.addColumn(void 0, !0), this.hideToolboxes());
    }, this.readOnly || this.bindEvents();
  }
  /**
   * Returns the rendered table wrapper
   *
   * @returns {Element}
   */
  getWrapper() {
    return this.wrapper;
  }
  /**
   * Hangs the necessary handlers to events
   */
  bindEvents() {
    document.addEventListener("click", this.documentClicked), this.table.addEventListener("mousemove", Ng(150, (e) => this.onMouseMoveInTable(e)), { passive: !0 }), this.table.onkeypress = (e) => this.onKeyPressListener(e), this.table.addEventListener("keydown", (e) => this.onKeyDownListener(e)), this.table.addEventListener("focusin", (e) => this.focusInTableListener(e));
  }
  /**
   * Configures and creates the toolbox for manipulating with columns
   *
   * @returns {Toolbox}
   */
  createColumnToolbox() {
    return new Rd({
      api: this.api,
      cssModifier: "column",
      items: [
        {
          label: this.api.i18n.t("Add column to left"),
          icon: Dg,
          onClick: () => {
            this.addColumn(this.selectedColumn, !0), this.hideToolboxes();
          }
        },
        {
          label: this.api.i18n.t("Add column to right"),
          icon: Og,
          onClick: () => {
            this.addColumn(this.selectedColumn + 1, !0), this.hideToolboxes();
          }
        },
        {
          label: this.api.i18n.t("Delete column"),
          icon: Ad,
          hideIf: () => this.numberOfColumns === 1,
          confirmationRequired: !0,
          onClick: () => {
            this.deleteColumn(this.selectedColumn), this.hideToolboxes();
          }
        }
      ],
      onOpen: () => {
        this.selectColumn(this.hoveredColumn), this.hideRowToolbox();
      },
      onClose: () => {
        this.unselectColumn();
      }
    });
  }
  /**
   * Configures and creates the toolbox for manipulating with rows
   *
   * @returns {Toolbox}
   */
  createRowToolbox() {
    return new Rd({
      api: this.api,
      cssModifier: "row",
      items: [
        {
          label: this.api.i18n.t("Add row above"),
          icon: Lg,
          onClick: () => {
            this.addRow(this.selectedRow, !0), this.hideToolboxes();
          }
        },
        {
          label: this.api.i18n.t("Add row below"),
          icon: Mg,
          onClick: () => {
            this.addRow(this.selectedRow + 1, !0), this.hideToolboxes();
          }
        },
        {
          label: this.api.i18n.t("Delete row"),
          icon: Ad,
          hideIf: () => this.numberOfRows === 1,
          confirmationRequired: !0,
          onClick: () => {
            this.deleteRow(this.selectedRow), this.hideToolboxes();
          }
        }
      ],
      onOpen: () => {
        this.selectRow(this.hoveredRow), this.hideColumnToolbox();
      },
      onClose: () => {
        this.unselectRow();
      }
    });
  }
  /**
   * When you press enter it moves the cursor down to the next row
   * or creates it if the click occurred on the last one
   */
  moveCursorToNextRow() {
    this.focusedCell.row !== this.numberOfRows ? (this.focusedCell.row += 1, this.focusCell(this.focusedCell)) : (this.addRow(), this.focusedCell.row += 1, this.focusCell(this.focusedCell), this.updateToolboxesPosition(0, 0));
  }
  /**
   * Get table cell by row and col index
   *
   * @param {number} row - cell row coordinate
   * @param {number} column - cell column coordinate
   * @returns {HTMLElement}
   */
  getCell(e, t) {
    return this.table.querySelectorAll(`.${yt.row}:nth-child(${e}) .${yt.cell}`)[t - 1];
  }
  /**
   * Get table row by index
   *
   * @param {number} row - row coordinate
   * @returns {HTMLElement}
   */
  getRow(e) {
    return this.table.querySelector(`.${yt.row}:nth-child(${e})`);
  }
  /**
   * The parent of the cell which is the row
   *
   * @param {HTMLElement} cell - cell element
   * @returns {HTMLElement}
   */
  getRowByCell(e) {
    return e.parentElement;
  }
  /**
   * Ger row's first cell
   *
   * @param {Element} row - row to find its first cell
   * @returns {Element}
   */
  getRowFirstCell(e) {
    return e.querySelector(`.${yt.cell}:first-child`);
  }
  /**
   * Set the sell's content by row and column numbers
   *
   * @param {number} row - cell row coordinate
   * @param {number} column - cell column coordinate
   * @param {string} content - cell HTML content
   */
  setCellContent(e, t, n) {
    const r = this.getCell(e, t);
    r.innerHTML = n;
  }
  /**
   * Add column in table on index place
   * Add cells in each row
   *
   * @param {number} columnIndex - number in the array of columns, where new column to insert, -1 if insert at the end
   * @param {boolean} [setFocus] - pass true to focus the first cell
   */
  addColumn(e = -1, t = !1) {
    let n = this.numberOfColumns;
    for (let r = 1; r <= this.numberOfRows; r++) {
      let a;
      const c = this.createCell();
      if (e > 0 && e <= n ? (a = this.getCell(r, e), Od(c, a)) : a = this.getRow(r).appendChild(c), r === 1) {
        const u = this.getCell(r, e > 0 ? e : n + 1);
        u && t && Ld(u);
      }
    }
    this.addHeadingAttrToFirstRow();
  }
  /**
   * Add row in table on index place
   *
   * @param {number} index - number in the array of rows, where new column to insert, -1 if insert at the end
   * @param {boolean} [setFocus] - pass true to focus the inserted row
   * @returns {HTMLElement} row
   */
  addRow(e = -1, t = !1) {
    let n, r = Ko("div", yt.row);
    this.tunes.withHeadings && this.removeHeadingAttrFromFirstRow();
    let a = this.numberOfColumns;
    if (e > 0 && e <= this.numberOfRows) {
      let u = this.getRow(e);
      n = Od(r, u);
    } else
      n = this.table.appendChild(r);
    this.fillRow(n, a), this.tunes.withHeadings && this.addHeadingAttrToFirstRow();
    const c = this.getRowFirstCell(n);
    return c && t && Ld(c), n;
  }
  /**
   * Delete a column by index
   *
   * @param {number} index
   */
  deleteColumn(e) {
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.getCell(t, e);
      if (!n)
        return;
      n.remove();
    }
  }
  /**
   * Delete a row by index
   *
   * @param {number} index
   */
  deleteRow(e) {
    this.getRow(e).remove(), this.addHeadingAttrToFirstRow();
  }
  /**
   * Create a wrapper containing a table, toolboxes
   * and buttons for adding rows and columns
   *
   * @returns {HTMLElement} wrapper - where all buttons for a table and the table itself will be
   */
  createTableWrapper() {
    if (this.wrapper = Ko("div", yt.wrapper), this.table = Ko("div", yt.table), this.readOnly && this.wrapper.classList.add(yt.wrapperReadOnly), this.wrapper.appendChild(this.toolboxRow.element), this.wrapper.appendChild(this.toolboxColumn.element), this.wrapper.appendChild(this.table), !this.readOnly) {
      const e = Ko("div", yt.addColumn, {
        innerHTML: Bd
      }), t = Ko("div", yt.addRow, {
        innerHTML: Bd
      });
      this.wrapper.appendChild(e), this.wrapper.appendChild(t);
    }
  }
  /**
   * Returns the size of the table based on initial data or config "size" property
   *
   * @return {{rows: number, cols: number}} - number of cols and rows
   */
  computeInitialSize() {
    const e = this.data && this.data.content, t = Array.isArray(e), n = t ? e.length : !1, r = t ? e.length : void 0, a = n ? e[0].length : void 0, c = Number.parseInt(this.config && this.config.rows), u = Number.parseInt(this.config && this.config.cols), p = !isNaN(c) && c > 0 ? c : void 0, g = !isNaN(u) && u > 0 ? u : void 0;
    return {
      rows: r || p || 2,
      cols: a || g || 2
    };
  }
  /**
   * Resize table to match config size or transmitted data size
   *
   * @return {{rows: number, cols: number}} - number of cols and rows
   */
  resize() {
    const { rows: e, cols: t } = this.computeInitialSize();
    for (let n = 0; n < e; n++)
      this.addRow();
    for (let n = 0; n < t; n++)
      this.addColumn();
  }
  /**
   * Fills the table with data passed to the constructor
   *
   * @returns {void}
   */
  fill() {
    const e = this.data;
    if (e && e.content)
      for (let t = 0; t < e.content.length; t++)
        for (let n = 0; n < e.content[t].length; n++)
          this.setCellContent(t + 1, n + 1, e.content[t][n]);
  }
  /**
   * Fills a row with cells
   *
   * @param {HTMLElement} row - row to fill
   * @param {number} numberOfColumns - how many cells should be in a row
   */
  fillRow(e, t) {
    for (let n = 1; n <= t; n++) {
      const r = this.createCell();
      e.appendChild(r);
    }
  }
  /**
   * Creating a cell element
   *
   * @return {Element}
   */
  createCell() {
    return Ko("div", yt.cell, {
      contentEditable: !this.readOnly
    });
  }
  /**
   * Get number of rows in the table
   */
  get numberOfRows() {
    return this.table.childElementCount;
  }
  /**
   * Get number of columns in the table
   */
  get numberOfColumns() {
    return this.numberOfRows ? this.table.querySelectorAll(`.${yt.row}:first-child .${yt.cell}`).length : 0;
  }
  /**
   * Is the column toolbox menu displayed or not
   *
   * @returns {boolean}
   */
  get isColumnMenuShowing() {
    return this.selectedColumn !== 0;
  }
  /**
   * Is the row toolbox menu displayed or not
   *
   * @returns {boolean}
   */
  get isRowMenuShowing() {
    return this.selectedRow !== 0;
  }
  /**
   * Recalculate position of toolbox icons
   *
   * @param {Event} event - mouse move event
   */
  onMouseMoveInTable(e) {
    const { row: t, column: n } = this.getHoveredCell(e);
    this.hoveredColumn = n, this.hoveredRow = t, this.updateToolboxesPosition();
  }
  /**
   * Prevents default Enter behaviors
   * Adds Shift+Enter processing
   *
   * @param {KeyboardEvent} event - keypress event
   */
  onKeyPressListener(e) {
    if (e.key === "Enter") {
      if (e.shiftKey)
        return !0;
      this.moveCursorToNextRow();
    }
    return e.key !== "Enter";
  }
  /**
   * Prevents tab keydown event from bubbling
   * so that it only works inside the table
   *
   * @param {KeyboardEvent} event - keydown event
   */
  onKeyDownListener(e) {
    e.key === "Tab" && e.stopPropagation();
  }
  /**
   * Set the coordinates of the cell that the focus has moved to
   *
   * @param {FocusEvent} event - focusin event
   */
  focusInTableListener(e) {
    const t = e.target, n = this.getRowByCell(t);
    this.focusedCell = {
      row: Array.from(this.table.querySelectorAll(`.${yt.row}`)).indexOf(n) + 1,
      column: Array.from(n.querySelectorAll(`.${yt.cell}`)).indexOf(t) + 1
    };
  }
  /**
   * Unselect row/column
   * Close toolbox menu
   * Hide toolboxes
   *
   * @returns {void}
   */
  hideToolboxes() {
    this.hideRowToolbox(), this.hideColumnToolbox(), this.updateToolboxesPosition();
  }
  /**
   * Unselect row, close toolbox
   *
   * @returns {void}
   */
  hideRowToolbox() {
    this.unselectRow(), this.toolboxRow.hide();
  }
  /**
   * Unselect column, close toolbox
   *
   * @returns {void}
   */
  hideColumnToolbox() {
    this.unselectColumn(), this.toolboxColumn.hide();
  }
  /**
   * Set the cursor focus to the focused cell
   *
   * @returns {void}
   */
  focusCell() {
    this.focusedCellElem.focus();
  }
  /**
   * Get current focused element
   *
   * @returns {HTMLElement} - focused cell
   */
  get focusedCellElem() {
    const { row: e, column: t } = this.focusedCell;
    return this.getCell(e, t);
  }
  /**
   * Update toolboxes position
   *
   * @param {number} row - hovered row
   * @param {number} column - hovered column
   */
  updateToolboxesPosition(e = this.hoveredRow, t = this.hoveredColumn) {
    this.isColumnMenuShowing || t > 0 && t <= this.numberOfColumns && this.toolboxColumn.show(() => ({
      left: `calc((100% - var(--cell-size)) / (${this.numberOfColumns} * 2) * (1 + (${t} - 1) * 2))`
    })), this.isRowMenuShowing || e > 0 && e <= this.numberOfRows && this.toolboxRow.show(() => {
      const n = this.getRow(e), { fromTopBorder: r } = Dd(this.table, n), { height: a } = n.getBoundingClientRect();
      return {
        top: `${Math.ceil(r + a / 2)}px`
      };
    });
  }
  /**
   * Makes the first row headings
   *
   * @param {boolean} withHeadings - use headings row or not
   */
  setHeadingsSetting(e) {
    this.tunes.withHeadings = e, e ? (this.table.classList.add(yt.withHeadings), this.addHeadingAttrToFirstRow()) : (this.table.classList.remove(yt.withHeadings), this.removeHeadingAttrFromFirstRow());
  }
  /**
   * Adds an attribute for displaying the placeholder in the cell
   */
  addHeadingAttrToFirstRow() {
    for (let e = 1; e <= this.numberOfColumns; e++) {
      let t = this.getCell(1, e);
      t && t.setAttribute("heading", this.api.i18n.t("Heading"));
    }
  }
  /**
   * Removes an attribute for displaying the placeholder in the cell
   */
  removeHeadingAttrFromFirstRow() {
    for (let e = 1; e <= this.numberOfColumns; e++) {
      let t = this.getCell(1, e);
      t && t.removeAttribute("heading");
    }
  }
  /**
   * Add effect of a selected row
   *
   * @param {number} index
   */
  selectRow(e) {
    const t = this.getRow(e);
    t && (this.selectedRow = e, t.classList.add(yt.rowSelected));
  }
  /**
   * Remove effect of a selected row
   */
  unselectRow() {
    if (this.selectedRow <= 0)
      return;
    const e = this.table.querySelector(`.${yt.rowSelected}`);
    e && e.classList.remove(yt.rowSelected), this.selectedRow = 0;
  }
  /**
   * Add effect of a selected column
   *
   * @param {number} index
   */
  selectColumn(e) {
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.getCell(t, e);
      n && n.classList.add(yt.cellSelected);
    }
    this.selectedColumn = e;
  }
  /**
   * Remove effect of a selected column
   */
  unselectColumn() {
    if (this.selectedColumn <= 0)
      return;
    let e = this.table.querySelectorAll(`.${yt.cellSelected}`);
    Array.from(e).forEach((t) => {
      t.classList.remove(yt.cellSelected);
    }), this.selectedColumn = 0;
  }
  /**
   * Calculates the row and column that the cursor is currently hovering over
   * The search was optimized from O(n) to O (log n) via bin search to reduce the number of calculations
   *
   * @param {Event} event - mousemove event
   * @returns hovered cell coordinates as an integer row and column
   */
  getHoveredCell(e) {
    let t = this.hoveredRow, n = this.hoveredColumn;
    const { width: r, height: a, x: c, y: u } = _g(this.table, e);
    return c >= 0 && (n = this.binSearch(
      this.numberOfColumns,
      (p) => this.getCell(1, p),
      ({ fromLeftBorder: p }) => c < p,
      ({ fromRightBorder: p }) => c > r - p
    )), u >= 0 && (t = this.binSearch(
      this.numberOfRows,
      (p) => this.getCell(p, 1),
      ({ fromTopBorder: p }) => u < p,
      ({ fromBottomBorder: p }) => u > a - p
    )), {
      row: t || this.hoveredRow,
      column: n || this.hoveredColumn
    };
  }
  /**
   * Looks for the index of the cell the mouse is hovering over.
   * Cells can be represented as ordered intervals with left and
   * right (upper and lower for rows) borders inside the table, if the mouse enters it, then this is our index
   *
   * @param {number} numberOfCells - upper bound of binary search
   * @param {function} getCell - function to take the currently viewed cell
   * @param {function} beforeTheLeftBorder - determines the cursor position, to the left of the cell or not
   * @param {function} afterTheRightBorder - determines the cursor position, to the right of the cell or not
   * @returns {number}
   */
  binSearch(e, t, n, r) {
    let a = 0, c = e + 1, u = 0, p;
    for (; a < c - 1 && u < 10; ) {
      p = Math.ceil((a + c) / 2);
      const g = t(p), v = Dd(this.table, g);
      if (n(v))
        c = p;
      else if (r(v))
        a = p;
      else
        break;
      u++;
    }
    return p;
  }
  /**
   * Collects data from cells into a two-dimensional array
   *
   * @returns {string[][]}
   */
  getData() {
    const e = [];
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.table.querySelector(`.${yt.row}:nth-child(${t})`), r = Array.from(n.querySelectorAll(`.${yt.cell}`));
      r.every((a) => !a.textContent.trim()) || e.push(r.map((a) => a.innerHTML));
    }
    return e;
  }
  /**
   * Remove listeners on the document
   */
  destroy() {
    document.removeEventListener("click", this.documentClicked);
  }
}, Hg = class {
  /**
   * Notify core that read-only mode is supported
   *
   * @returns {boolean}
   */
  static get isReadOnlySupported() {
    return !0;
  }
  /**
   * Allow to press Enter inside the CodeTool textarea
   *
   * @returns {boolean}
   * @public
   */
  static get enableLineBreaks() {
    return !0;
  }
  /**
   * Render plugin`s main Element and fill it with saved data
   *
   * @param {TableData} data — previously saved data
   * @param {TableConfig} config - user config for Tool
   * @param {object} api - Editor.js API
   * @param {boolean} readOnly - read-only mode flag
   */
  constructor({ data: e, config: t, api: n, readOnly: r }) {
    this.api = n, this.readOnly = r, this.config = t, this.data = {
      withHeadings: this.getConfig("withHeadings", !1, e),
      content: e && e.content ? e.content : []
    }, this.table = null;
  }
  /**
   * Get Tool toolbox settings
   * icon - Tool icon's SVG
   * title - title to show in toolbox
   *
   * @returns {{icon: string, title: string}}
   */
  static get toolbox() {
    return {
      icon: Ig,
      title: "Table"
    };
  }
  /**
   * Return Tool's view
   *
   * @returns {HTMLDivElement}
   */
  render() {
    return this.table = new Pg(this.readOnly, this.api, this.data, this.config), this.container = Ko("div", this.api.styles.block), this.container.appendChild(this.table.getWrapper()), this.table.setHeadingsSetting(this.data.withHeadings), this.container;
  }
  /**
   * Returns plugin settings
   *
   * @returns {Array}
   */
  renderSettings() {
    return [
      {
        label: this.api.i18n.t("With headings"),
        icon: Bg,
        isActive: this.data.withHeadings,
        closeOnActivate: !0,
        toggle: !0,
        onActivate: () => {
          this.data.withHeadings = !0, this.table.setHeadingsSetting(this.data.withHeadings);
        }
      },
      {
        label: this.api.i18n.t("Without headings"),
        icon: Rg,
        isActive: !this.data.withHeadings,
        closeOnActivate: !0,
        toggle: !0,
        onActivate: () => {
          this.data.withHeadings = !1, this.table.setHeadingsSetting(this.data.withHeadings);
        }
      }
    ];
  }
  /**
   * Extract table data from the view
   *
   * @returns {TableData} - saved data
   */
  save() {
    const e = this.table.getData();
    return {
      withHeadings: this.data.withHeadings,
      content: e
    };
  }
  /**
   * Plugin destroyer
   *
   * @returns {void}
   */
  destroy() {
    this.table.destroy();
  }
  /**
   * A helper to get config value.
   * 
   * @param {string} configName - the key to get from the config. 
   * @param {any} defaultValue - default value if config doesn't have passed key
   * @param {object} savedData - previously saved data. If passed, the key will be got from there, otherwise from the config
   * @returns {any} - config value.
   */
  getConfig(e, t = void 0, n = void 0) {
    const r = this.data || n;
    return r ? r[e] ? r[e] : t : this.config && this.config[e] ? this.config[e] : t;
  }
  /**  
   * Table onPaste configuration
   *
   * @public
   */
  static get pasteConfig() {
    return { tags: ["TABLE", "TR", "TH", "TD"] };
  }
  /**
   * On paste callback that is fired from Editor
   *
   * @param {PasteEvent} event - event with pasted data
   */
  onPaste(e) {
    const t = e.detail.data, n = t.querySelector(":scope > thead, tr:first-of-type th"), r = Array.from(t.querySelectorAll("tr")).map((a) => Array.from(a.querySelectorAll("th, td")).map((c) => c.innerHTML));
    this.data = {
      withHeadings: n !== null,
      content: r
    }, this.table.wrapper && this.table.wrapper.replaceWith(this.render());
  }
};
var wu = { exports: {} };
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(self, function() {
    return (() => {
      var t = { 424: (c, u, p) => {
        p.r(u), p.d(u, { default: () => T });
        var g = p(81), v = p.n(g), x = p(645), y = p.n(x)()(v());
        y.push([c.id, `.ce-block--drop-target .ce-block__content:before {
  content: "";
  position: absolute;
  top: 50%;
  left: -20px;
  margin-top: -1px;
  height: 8px;
  width: 8px;
  border: solid #a0a0a0;
  border-width: 1px 1px 0 0;
  -webkit-transform-origin: right;
  transform-origin: right;
  -webkit-transform: rotate(45deg);
  transform: rotate(45deg);
}

.ce-block--drop-target .ce-block__content:after {
  background: none;
}`, ""]);
        const T = y;
      }, 645: (c) => {
        c.exports = function(u) {
          var p = [];
          return p.toString = function() {
            return this.map(function(g) {
              var v = "", x = g[5] !== void 0;
              return g[4] && (v += "@supports (".concat(g[4], ") {")), g[2] && (v += "@media ".concat(g[2], " {")), x && (v += "@layer".concat(g[5].length > 0 ? " ".concat(g[5]) : "", " {")), v += u(g), x && (v += "}"), g[2] && (v += "}"), g[4] && (v += "}"), v;
            }).join("");
          }, p.i = function(g, v, x, y, T) {
            typeof g == "string" && (g = [[null, g, void 0]]);
            var k = {};
            if (x)
              for (var M = 0; M < this.length; M++) {
                var O = this[M][0];
                O != null && (k[O] = !0);
              }
            for (var Y = 0; Y < g.length; Y++) {
              var I = [].concat(g[Y]);
              x && k[I[0]] || (T !== void 0 && (I[5] === void 0 || (I[1] = "@layer".concat(I[5].length > 0 ? " ".concat(I[5]) : "", " {").concat(I[1], "}")), I[5] = T), v && (I[2] && (I[1] = "@media ".concat(I[2], " {").concat(I[1], "}")), I[2] = v), y && (I[4] ? (I[1] = "@supports (".concat(I[4], ") {").concat(I[1], "}"), I[4] = y) : I[4] = "".concat(y)), p.push(I));
            }
          }, p;
        };
      }, 81: (c) => {
        c.exports = function(u) {
          return u[1];
        };
      }, 406: (c, u, p) => {
        var g = p(424);
        typeof g == "string" && (g = [[c.id, g, ""]]), p(723)(g, { hmr: !0, transform: void 0, insertInto: void 0 }), g.locals && (c.exports = g.locals);
      }, 723: (c, u, p) => {
        var g, v, x = {}, y = (g = function() {
          return window && document && document.all && !window.atob;
        }, function() {
          return v === void 0 && (v = g.apply(this, arguments)), v;
        }), T = function(Z) {
          return document.querySelector(Z);
        }, k = function(Z) {
          var ne = {};
          return function(le) {
            if (typeof le == "function")
              return le();
            if (ne[le] === void 0) {
              var oe = T.call(this, le);
              if (window.HTMLIFrameElement && oe instanceof window.HTMLIFrameElement)
                try {
                  oe = oe.contentDocument.head;
                } catch {
                  oe = null;
                }
              ne[le] = oe;
            }
            return ne[le];
          };
        }(), M = null, O = 0, Y = [], I = p(947);
        function F(Z, ne) {
          for (var le = 0; le < Z.length; le++) {
            var oe = Z[le], fe = x[oe.id];
            if (fe) {
              fe.refs++;
              for (var Me = 0; Me < fe.parts.length; Me++)
                fe.parts[Me](oe.parts[Me]);
              for (; Me < oe.parts.length; Me++)
                fe.parts.push(R(oe.parts[Me], ne));
            } else {
              var je = [];
              for (Me = 0; Me < oe.parts.length; Me++)
                je.push(R(oe.parts[Me], ne));
              x[oe.id] = { id: oe.id, refs: 1, parts: je };
            }
          }
        }
        function Q(Z, ne) {
          for (var le = [], oe = {}, fe = 0; fe < Z.length; fe++) {
            var Me = Z[fe], je = ne.base ? Me[0] + ne.base : Me[0], Be = { css: Me[1], media: Me[2], sourceMap: Me[3] };
            oe[je] ? oe[je].parts.push(Be) : le.push(oe[je] = { id: je, parts: [Be] });
          }
          return le;
        }
        function U(Z, ne) {
          var le = k(Z.insertInto);
          if (!le)
            throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
          var oe = Y[Y.length - 1];
          if (Z.insertAt === "top")
            oe ? oe.nextSibling ? le.insertBefore(ne, oe.nextSibling) : le.appendChild(ne) : le.insertBefore(ne, le.firstChild), Y.push(ne);
          else if (Z.insertAt === "bottom")
            le.appendChild(ne);
          else {
            if (typeof Z.insertAt != "object" || !Z.insertAt.before)
              throw new Error(`[Style Loader]

 Invalid value for parameter 'insertAt' ('options.insertAt') found.
 Must be 'top', 'bottom', or Object.
 (https://github.com/webpack-contrib/style-loader#insertat)
`);
            var fe = k(Z.insertInto + " " + Z.insertAt.before);
            le.insertBefore(ne, fe);
          }
        }
        function z(Z) {
          if (Z.parentNode === null)
            return !1;
          Z.parentNode.removeChild(Z);
          var ne = Y.indexOf(Z);
          ne >= 0 && Y.splice(ne, 1);
        }
        function d(Z) {
          var ne = document.createElement("style");
          return Z.attrs.type === void 0 && (Z.attrs.type = "text/css"), j(ne, Z.attrs), U(Z, ne), ne;
        }
        function j(Z, ne) {
          Object.keys(ne).forEach(function(le) {
            Z.setAttribute(le, ne[le]);
          });
        }
        function R(Z, ne) {
          var le, oe, fe, Me;
          if (ne.transform && Z.css) {
            if (!(Me = ne.transform(Z.css)))
              return function() {
              };
            Z.css = Me;
          }
          if (ne.singleton) {
            var je = O++;
            le = M || (M = d(ne)), oe = J.bind(null, le, je, !1), fe = J.bind(null, le, je, !0);
          } else
            Z.sourceMap && typeof URL == "function" && typeof URL.createObjectURL == "function" && typeof URL.revokeObjectURL == "function" && typeof Blob == "function" && typeof btoa == "function" ? (le = function(Be) {
              var Ke = document.createElement("link");
              return Be.attrs.type === void 0 && (Be.attrs.type = "text/css"), Be.attrs.rel = "stylesheet", j(Ke, Be.attrs), U(Be, Ke), Ke;
            }(ne), oe = se.bind(null, le, ne), fe = function() {
              z(le), le.href && URL.revokeObjectURL(le.href);
            }) : (le = d(ne), oe = B.bind(null, le), fe = function() {
              z(le);
            });
          return oe(Z), function(Be) {
            if (Be) {
              if (Be.css === Z.css && Be.media === Z.media && Be.sourceMap === Z.sourceMap)
                return;
              oe(Z = Be);
            } else
              fe();
          };
        }
        c.exports = function(Z, ne) {
          if (typeof DEBUG < "u" && DEBUG && typeof document != "object")
            throw new Error("The style-loader cannot be used in a non-browser environment");
          (ne = ne || {}).attrs = typeof ne.attrs == "object" ? ne.attrs : {}, ne.singleton || typeof ne.singleton == "boolean" || (ne.singleton = y()), ne.insertInto || (ne.insertInto = "head"), ne.insertAt || (ne.insertAt = "bottom");
          var le = Q(Z, ne);
          return F(le, ne), function(oe) {
            for (var fe = [], Me = 0; Me < le.length; Me++) {
              var je = le[Me];
              (Be = x[je.id]).refs--, fe.push(Be);
            }
            for (oe && F(Q(oe, ne), ne), Me = 0; Me < fe.length; Me++) {
              var Be;
              if ((Be = fe[Me]).refs === 0) {
                for (var Ke = 0; Ke < Be.parts.length; Ke++)
                  Be.parts[Ke]();
                delete x[Be.id];
              }
            }
          };
        };
        var V, K = (V = [], function(Z, ne) {
          return V[Z] = ne, V.filter(Boolean).join(`
`);
        });
        function J(Z, ne, le, oe) {
          var fe = le ? "" : oe.css;
          if (Z.styleSheet)
            Z.styleSheet.cssText = K(ne, fe);
          else {
            var Me = document.createTextNode(fe), je = Z.childNodes;
            je[ne] && Z.removeChild(je[ne]), je.length ? Z.insertBefore(Me, je[ne]) : Z.appendChild(Me);
          }
        }
        function B(Z, ne) {
          var le = ne.css, oe = ne.media;
          if (oe && Z.setAttribute("media", oe), Z.styleSheet)
            Z.styleSheet.cssText = le;
          else {
            for (; Z.firstChild; )
              Z.removeChild(Z.firstChild);
            Z.appendChild(document.createTextNode(le));
          }
        }
        function se(Z, ne, le) {
          var oe = le.css, fe = le.sourceMap, Me = ne.convertToAbsoluteUrls === void 0 && fe;
          (ne.convertToAbsoluteUrls || Me) && (oe = I(oe)), fe && (oe += `
/*# sourceMappingURL=data:application/json;base64,` + btoa(unescape(encodeURIComponent(JSON.stringify(fe)))) + " */");
          var je = new Blob([oe], { type: "text/css" }), Be = Z.href;
          Z.href = URL.createObjectURL(je), Be && URL.revokeObjectURL(Be);
        }
      }, 947: (c) => {
        c.exports = function(u) {
          var p = typeof window < "u" && window.location;
          if (!p)
            throw new Error("fixUrls requires window.location");
          if (!u || typeof u != "string")
            return u;
          var g = p.protocol + "//" + p.host, v = g + p.pathname.replace(/\/[^\/]*$/, "/");
          return u.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(x, y) {
            var T, k = y.trim().replace(/^"(.*)"$/, function(M, O) {
              return O;
            }).replace(/^'(.*)'$/, function(M, O) {
              return O;
            });
            return /^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(k) ? x : (T = k.indexOf("//") === 0 ? k : k.indexOf("/") === 0 ? g + k : v + k.replace(/^\.\//, ""), "url(" + JSON.stringify(T) + ")");
          });
        };
      } }, n = {};
      function r(c) {
        var u = n[c];
        if (u !== void 0)
          return u.exports;
        var p = n[c] = { id: c, exports: {} };
        return t[c](p, p.exports, r), p.exports;
      }
      r.n = (c) => {
        var u = c && c.__esModule ? () => c.default : () => c;
        return r.d(u, { a: u }), u;
      }, r.d = (c, u) => {
        for (var p in u)
          r.o(u, p) && !r.o(c, p) && Object.defineProperty(c, p, { enumerable: !0, get: u[p] });
      }, r.o = (c, u) => Object.prototype.hasOwnProperty.call(c, u), r.r = (c) => {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(c, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(c, "__esModule", { value: !0 });
      };
      var a = {};
      return (() => {
        function c(p, g) {
          for (var v = 0; v < g.length; v++) {
            var x = g[v];
            x.enumerable = x.enumerable || !1, x.configurable = !0, "value" in x && (x.writable = !0), Object.defineProperty(p, x.key, x);
          }
        }
        r.d(a, { default: () => u }), r(406);
        var u = function() {
          function p(y, T) {
            var k = y.configuration, M = y.blocks, O = y.toolbar, Y = y.save;
            (function(I, F) {
              if (!(I instanceof F))
                throw new TypeError("Cannot call a class as a function");
            })(this, p), this.toolbar = O, this.borderStyle = T || "1px dashed #aaa", this.api = M, this.holder = typeof k.holder == "string" ? document.getElementById(k.holder) : k.holder, this.readOnly = k.readOnly, this.startBlock = null, this.endBlock = null, this.save = Y, this.setDragListener(), this.setDropListener();
          }
          var g, v, x;
          return g = p, x = [{ key: "isReadOnlySupported", get: function() {
            return !0;
          } }], (v = [{ key: "setElementCursor", value: function(y) {
            if (y) {
              var T = document.createRange(), k = window.getSelection();
              T.setStart(y.childNodes[0], 0), T.collapse(!0), k.removeAllRanges(), k.addRange(T), y.focus();
            }
          } }, { key: "setDragListener", value: function() {
            var y = this;
            if (!this.readOnly) {
              var T = this.holder.querySelector(".ce-toolbar__settings-btn");
              T.setAttribute("draggable", "true"), T.addEventListener("dragstart", function() {
                y.startBlock = y.api.getCurrentBlockIndex();
              }), T.addEventListener("drag", function() {
                if (y.toolbar.close(), !y.isTheOnlyBlock()) {
                  var k = y.holder.querySelectorAll(".ce-block"), M = y.holder.querySelector(".ce-block--drop-target");
                  y.setElementCursor(M), y.setBorderBlocks(k, M);
                }
              });
            }
          } }, { key: "setBorderBlocks", value: function(y, T) {
            var k = this;
            Object.values(y).forEach(function(M) {
              var O = M.querySelector(".ce-block__content");
              M !== T ? (O.style.removeProperty("border-top"), O.style.removeProperty("border-bottom")) : Object.keys(y).find(function(Y) {
                return y[Y] === T;
              }) > k.startBlock ? O.style.borderBottom = k.borderStyle || borderStyle : O.style.borderTop = k.borderStyle;
            });
          } }, { key: "setDropListener", value: function() {
            var y = this;
            document.addEventListener("drop", function(T) {
              var k = T.target;
              if (y.holder.contains(k) && y.startBlock !== null) {
                var M = y.getDropTarget(k);
                if (M) {
                  var O = M.querySelector(".ce-block__content");
                  O.style.removeProperty("border-top"), O.style.removeProperty("border-bottom"), y.endBlock = y.getTargetPosition(M), y.moveBlocks();
                }
              }
              y.startBlock = null;
            });
          } }, { key: "getDropTarget", value: function(y) {
            return y.classList.contains("ce-block") ? y : y.closest(".ce-block");
          } }, { key: "getTargetPosition", value: function(y) {
            return Array.from(y.parentNode.children).indexOf(y);
          } }, { key: "isTheOnlyBlock", value: function() {
            return this.api.getBlocksCount() === 1;
          } }, { key: "moveBlocks", value: function() {
            this.isTheOnlyBlock() || this.api.move(this.endBlock, this.startBlock);
          } }]) && c(g.prototype, v), x && c(g, x), Object.defineProperty(g, "prototype", { writable: !1 }), p;
        }();
      })(), a.default;
    })();
  });
})(wu);
var jg = wu.exports;
const $g = /* @__PURE__ */ An(jg);
var ku = { exports: {} };
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(self, function() {
    return (() => {
      var t = { d: (p, g) => {
        for (var v in g)
          t.o(g, v) && !t.o(p, v) && Object.defineProperty(p, v, { enumerable: !0, get: g[v] });
      }, o: (p, g) => Object.prototype.hasOwnProperty.call(p, g) }, n = {};
      function r(p, g) {
        for (var v = 0; v < g.length; v++) {
          var x = g[v];
          x.enumerable = x.enumerable || !1, x.configurable = !0, "value" in x && (x.writable = !0), Object.defineProperty(p, x.key, x);
        }
      }
      t.d(n, { default: () => u });
      var a = function() {
        function p(x, y) {
          (function(T, k) {
            if (!(T instanceof k))
              throw new TypeError("Cannot call a class as a function");
          })(this, p), this.holder = y, this.observer = null, this.debounceTimer = 200, this.mutationDebouncer = this.debounce(function() {
            x();
          }, this.debounceTimer);
        }
        var g, v;
        return g = p, v = [{ key: "setMutationObserver", value: function() {
          var x = this, y = this.holder;
          this.observer = new MutationObserver(function(T) {
            x.mutationHandler(T);
          }), this.observer.observe(y, { childList: !0, attributes: !0, subtree: !0, characterData: !0, characterDataOldValue: !0 });
        } }, { key: "mutationHandler", value: function(x) {
          var y = this, T = !1;
          x.forEach(function(k) {
            switch (k.type) {
              case "childList":
                k.target === y.holder ? y.onDestroy() : T = !0;
                break;
              case "characterData":
                T = !0;
                break;
              case "attributes":
                k.target.classList.contains("ce-block") || (T = !0);
            }
          }), T && this.mutationDebouncer();
        } }, { key: "debounce", value: function(x, y) {
          var T, k = this;
          return function() {
            for (var M = arguments.length, O = new Array(M), Y = 0; Y < M; Y++)
              O[Y] = arguments[Y];
            var I = k;
            clearTimeout(T), T = setTimeout(function() {
              return x.apply(I, O);
            }, y);
          };
        } }, { key: "onDestroy", value: function() {
          var x = new CustomEvent("destroy");
          document.dispatchEvent(x), this.observer.disconnect();
        } }], v && r(g.prototype, v), p;
      }();
      function c(p, g) {
        for (var v = 0; v < g.length; v++) {
          var x = g[v];
          x.enumerable = x.enumerable || !1, x.configurable = !0, "value" in x && (x.writable = !0), Object.defineProperty(p, x.key, x);
        }
      }
      var u = function() {
        function p(y) {
          var T = this, k = y.editor, M = y.config, O = M === void 0 ? {} : M, Y = y.onUpdate, I = y.maxLength;
          (function(R, V) {
            if (!(R instanceof V))
              throw new TypeError("Cannot call a class as a function");
          })(this, p);
          var F = { maxLength: 30, onUpdate: function() {
          }, config: { shortcuts: { undo: "CMD+Z", redo: "CMD+Y" } } }, Q = k.configuration, U = Q.holder, z = F.config.shortcuts, d = O.shortcuts, j = d === void 0 ? z : d;
          this.holder = typeof U == "string" ? document.getElementById(U) : U, this.editor = k, this.shouldSaveHistory = !0, this.readOnly = Q.readOnly, this.maxLength = I || F.maxLength, this.onUpdate = Y || F.onUpdate, this.config = { shortcuts: j }, new a(function() {
            return T.registerChange();
          }, this.holder).setMutationObserver(), this.setEventListeners(), this.initialItem = null, this.clear();
        }
        var g, v, x;
        return g = p, x = [{ key: "isReadOnlySupported", get: function() {
          return !0;
        } }], (v = [{ key: "truncate", value: function(y, T) {
          for (; y.length > T; )
            y.shift();
        } }, { key: "initialize", value: function(y) {
          var T = "blocks" in y ? y.blocks : y, k = { index: T.length - 1, state: T };
          this.stack[0] = k, this.initialItem = k;
        } }, { key: "clear", value: function() {
          this.stack = this.initialItem ? [this.initialItem] : [{ index: 0, state: [{ type: "paragraph", data: { text: "" } }] }], this.position = 0, this.onUpdate();
        } }, { key: "registerChange", value: function() {
          var y = this;
          this.readOnly || (this.editor && this.editor.save && this.shouldSaveHistory && this.editor.save().then(function(T) {
            y.editorDidUpdate(T.blocks) && y.save(T.blocks);
          }), this.shouldSaveHistory = !0);
        } }, { key: "editorDidUpdate", value: function(y) {
          var T = this.stack[this.position].state;
          return !!y.length && (y.length !== T.length || JSON.stringify(T) !== JSON.stringify(y));
        } }, { key: "save", value: function(y) {
          this.position >= this.maxLength && this.truncate(this.stack, this.maxLength), this.position = Math.min(this.position, this.stack.length - 1), this.stack = this.stack.slice(0, this.position + 1);
          var T = this.editor.blocks.getCurrentBlockIndex();
          this.stack.push({ index: T, state: y }), this.position += 1, this.onUpdate();
        } }, { key: "undo", value: function() {
          var y = this;
          if (this.canUndo()) {
            this.shouldSaveHistory = !1;
            var T = this.stack[this.position -= 1], k = T.index, M = T.state;
            this.onUpdate(), this.editor.blocks.render({ blocks: M }).then(function() {
              return y.editor.caret.setToBlock(k, "end");
            });
          }
        } }, { key: "redo", value: function() {
          var y = this;
          if (this.canRedo()) {
            this.shouldSaveHistory = !1;
            var T = this.stack[this.position += 1], k = T.index, M = T.state;
            this.onUpdate(), this.editor.blocks.render({ blocks: M }).then(function() {
              return y.editor.caret.setToBlock(k, "end");
            });
          }
        } }, { key: "canUndo", value: function() {
          return !this.readOnly && this.position > 0;
        } }, { key: "canRedo", value: function() {
          return !this.readOnly && this.position < this.count();
        } }, { key: "count", value: function() {
          return this.stack.length - 1;
        } }, { key: "parseKeys", value: function(y) {
          var T = { CMD: /(Mac)/i.test(navigator.platform) ? "metaKey" : "ctrlKey", ALT: "altKey", SHIFT: "shiftKey" }, k = y.slice(0, -1).map(function(O) {
            return T[O];
          }), M = k.includes("shiftKey") ? y[y.length - 1].toUpperCase() : y[y.length - 1].toLowerCase();
          return k.push(M), k;
        } }, { key: "setEventListeners", value: function() {
          var y = this, T = this.holder, k = this.config.shortcuts, M = k.undo, O = k.redo, Y = M.replace(/ /g, "").split("+"), I = O.replace(/ /g, "").split("+"), F = this.parseKeys(Y), Q = this.parseKeys(I), U = function(j, R) {
            return !(R.length !== 2 || !j[R[0]] || j.key !== R[1]) || !(R.length !== 3 || !j[R[0]] || !j[R[1]] || j.key !== R[2]);
          }, z = function(j) {
            U(j, F) && (j.preventDefault(), y.undo());
          }, d = function(j) {
            U(j, Q) && (j.preventDefault(), y.redo());
          };
          T.addEventListener("keydown", z), T.addEventListener("keydown", d), T.addEventListener("destroy", function() {
            T.removeEventListener("keydown", z), T.removeEventListener("keydown", d);
          });
        } }]) && c(g.prototype, v), x && c(g, x), p;
      }();
      return n.default;
    })();
  });
})(ku);
var Yg = ku.exports;
const Fg = /* @__PURE__ */ An(Yg);
var xu = { exports: {} };
/*! For license information please see bundle.js.LICENSE.txt */
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(self, () => (() => {
    var t = { 800: (c, u, p) => {
      p.d(u, { Z: () => T });
      var g = p(81), v = p.n(g), x = p(645), y = p.n(x)()(v());
      y.push([c.id, ".cdx-alert{position:relative;padding:10px;border-radius:5px;margin-bottom:10px}.cdx-alert-primary{background-color:#ebf8ff;border:1px solid #4299e1;color:#2b6cb0}.cdx-alert-secondary{background-color:#f7fafc;border:1px solid #cbd5e0;color:#222731}.cdx-alert-info{background-color:#e6fdff;border:1px solid #4cd4ce;color:#00727c}.cdx-alert-success{background-color:#f0fff4;border:1px solid #68d391;color:#2f855a}.cdx-alert-warning{background-color:#fffaf0;border:1px solid #ed8936;color:#c05621}.cdx-alert-danger{background-color:#fff5f5;border:1px solid #fc8181;color:#c53030}.cdx-alert-light{background-color:#fff;border:1px solid #edf2f7;color:#1a202c}.cdx-alert-dark{background-color:#2d3748;border:1px solid #1a202c;color:#d3d3d3}.cdx-alert-align-left{text-align:left}.cdx-alert-align-center{text-align:center}.cdx-alert-align-right{text-align:right}.cdx-alert__message{outline:none}.cdx-alert [contentEditable=true][data-placeholder]::before{position:absolute;content:attr(data-placeholder);color:#707684;font-weight:normal;opacity:0}.cdx-alert [contentEditable=true][data-placeholder]:empty::before{opacity:1}.cdx-alert [contentEditable=true][data-placeholder]:empty:focus::before{opacity:0}.ce-popover__item[data-item-name=alert-primary] .ce-popover__item-icon svg #background{fill:#ebf8ff;stroke:#4299e1}.ce-popover__item[data-item-name=alert-primary] .ce-popover__item-icon svg #content{fill:#2b6cb0}.ce-popover__item[data-item-name=alert-secondary] .ce-popover__item-icon svg #background{fill:#f7fafc;stroke:#cbd5e0}.ce-popover__item[data-item-name=alert-secondary] .ce-popover__item-icon svg #content{fill:#222731}.ce-popover__item[data-item-name=alert-info] .ce-popover__item-icon svg #background{fill:#e6fdff;stroke:#4cd4ce}.ce-popover__item[data-item-name=alert-info] .ce-popover__item-icon svg #content{fill:#00727c}.ce-popover__item[data-item-name=alert-success] .ce-popover__item-icon svg #background{fill:#f0fff4;stroke:#68d391}.ce-popover__item[data-item-name=alert-success] .ce-popover__item-icon svg #content{fill:#2f855a}.ce-popover__item[data-item-name=alert-warning] .ce-popover__item-icon svg #background{fill:#fffaf0;stroke:#ed8936}.ce-popover__item[data-item-name=alert-warning] .ce-popover__item-icon svg #content{fill:#c05621}.ce-popover__item[data-item-name=alert-danger] .ce-popover__item-icon svg #background{fill:#fff5f5;stroke:#fc8181}.ce-popover__item[data-item-name=alert-danger] .ce-popover__item-icon svg #content{fill:#c53030}.ce-popover__item[data-item-name=alert-light] .ce-popover__item-icon svg #background{fill:#fff;stroke:#edf2f7}.ce-popover__item[data-item-name=alert-light] .ce-popover__item-icon svg #content{fill:#1a202c}.ce-popover__item[data-item-name=alert-dark] .ce-popover__item-icon svg #background{fill:#2d3748;stroke:#1a202c}.ce-popover__item[data-item-name=alert-dark] .ce-popover__item-icon svg #content{fill:#d3d3d3}", ""]);
      const T = y;
    }, 645: (c) => {
      c.exports = function(u) {
        var p = [];
        return p.toString = function() {
          return this.map(function(g) {
            var v = "", x = g[5] !== void 0;
            return g[4] && (v += "@supports (".concat(g[4], ") {")), g[2] && (v += "@media ".concat(g[2], " {")), x && (v += "@layer".concat(g[5].length > 0 ? " ".concat(g[5]) : "", " {")), v += u(g), x && (v += "}"), g[2] && (v += "}"), g[4] && (v += "}"), v;
          }).join("");
        }, p.i = function(g, v, x, y, T) {
          typeof g == "string" && (g = [[null, g, void 0]]);
          var k = {};
          if (x)
            for (var M = 0; M < this.length; M++) {
              var O = this[M][0];
              O != null && (k[O] = !0);
            }
          for (var Y = 0; Y < g.length; Y++) {
            var I = [].concat(g[Y]);
            x && k[I[0]] || (T !== void 0 && (I[5] === void 0 || (I[1] = "@layer".concat(I[5].length > 0 ? " ".concat(I[5]) : "", " {").concat(I[1], "}")), I[5] = T), v && (I[2] && (I[1] = "@media ".concat(I[2], " {").concat(I[1], "}")), I[2] = v), y && (I[4] ? (I[1] = "@supports (".concat(I[4], ") {").concat(I[1], "}"), I[4] = y) : I[4] = "".concat(y)), p.push(I));
          }
        }, p;
      };
    }, 81: (c) => {
      c.exports = function(u) {
        return u[1];
      };
    }, 620: (c, u, p) => {
      var g = p(379), v = p.n(g), x = p(795), y = p.n(x), T = p(569), k = p.n(T), M = p(565), O = p.n(M), Y = p(216), I = p.n(Y), F = p(589), Q = p.n(F), U = p(800), z = {};
      z.styleTagTransform = Q(), z.setAttributes = O(), z.insert = k().bind(null, "head"), z.domAPI = y(), z.insertStyleElement = I(), v()(U.Z, z), U.Z && U.Z.locals && U.Z.locals;
    }, 379: (c) => {
      var u = [];
      function p(x) {
        for (var y = -1, T = 0; T < u.length; T++)
          if (u[T].identifier === x) {
            y = T;
            break;
          }
        return y;
      }
      function g(x, y) {
        for (var T = {}, k = [], M = 0; M < x.length; M++) {
          var O = x[M], Y = y.base ? O[0] + y.base : O[0], I = T[Y] || 0, F = "".concat(Y, " ").concat(I);
          T[Y] = I + 1;
          var Q = p(F), U = { css: O[1], media: O[2], sourceMap: O[3], supports: O[4], layer: O[5] };
          if (Q !== -1)
            u[Q].references++, u[Q].updater(U);
          else {
            var z = v(U, y);
            y.byIndex = M, u.splice(M, 0, { identifier: F, updater: z, references: 1 });
          }
          k.push(F);
        }
        return k;
      }
      function v(x, y) {
        var T = y.domAPI(y);
        return T.update(x), function(k) {
          if (k) {
            if (k.css === x.css && k.media === x.media && k.sourceMap === x.sourceMap && k.supports === x.supports && k.layer === x.layer)
              return;
            T.update(x = k);
          } else
            T.remove();
        };
      }
      c.exports = function(x, y) {
        var T = g(x = x || [], y = y || {});
        return function(k) {
          k = k || [];
          for (var M = 0; M < T.length; M++) {
            var O = p(T[M]);
            u[O].references--;
          }
          for (var Y = g(k, y), I = 0; I < T.length; I++) {
            var F = p(T[I]);
            u[F].references === 0 && (u[F].updater(), u.splice(F, 1));
          }
          T = Y;
        };
      };
    }, 569: (c) => {
      var u = {};
      c.exports = function(p, g) {
        var v = function(x) {
          if (u[x] === void 0) {
            var y = document.querySelector(x);
            if (window.HTMLIFrameElement && y instanceof window.HTMLIFrameElement)
              try {
                y = y.contentDocument.head;
              } catch {
                y = null;
              }
            u[x] = y;
          }
          return u[x];
        }(p);
        if (!v)
          throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
        v.appendChild(g);
      };
    }, 216: (c) => {
      c.exports = function(u) {
        var p = document.createElement("style");
        return u.setAttributes(p, u.attributes), u.insert(p, u.options), p;
      };
    }, 565: (c, u, p) => {
      c.exports = function(g) {
        var v = p.nc;
        v && g.setAttribute("nonce", v);
      };
    }, 795: (c) => {
      c.exports = function(u) {
        if (typeof document > "u")
          return { update: function() {
          }, remove: function() {
          } };
        var p = u.insertStyleElement(u);
        return { update: function(g) {
          (function(v, x, y) {
            var T = "";
            y.supports && (T += "@supports (".concat(y.supports, ") {")), y.media && (T += "@media ".concat(y.media, " {"));
            var k = y.layer !== void 0;
            k && (T += "@layer".concat(y.layer.length > 0 ? " ".concat(y.layer) : "", " {")), T += y.css, k && (T += "}"), y.media && (T += "}"), y.supports && (T += "}");
            var M = y.sourceMap;
            M && typeof btoa < "u" && (T += `
/*# sourceMappingURL=data:application/json;base64,`.concat(btoa(unescape(encodeURIComponent(JSON.stringify(M)))), " */")), x.styleTagTransform(T, v, x.options);
          })(p, u, g);
        }, remove: function() {
          (function(g) {
            if (g.parentNode === null)
              return !1;
            g.parentNode.removeChild(g);
          })(p);
        } };
      };
    }, 589: (c) => {
      c.exports = function(u, p) {
        if (p.styleSheet)
          p.styleSheet.cssText = u;
        else {
          for (; p.firstChild; )
            p.removeChild(p.firstChild);
          p.appendChild(document.createTextNode(u));
        }
      };
    }, 749: (c) => {
      c.exports = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M18 7L6 7"></path><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M18 17H6"></path><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 12L8 12"></path></svg>';
    }, 454: (c) => {
      c.exports = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M17 7L5 7"></path><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M17 17H5"></path><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M13 12L5 12"></path></svg>';
    }, 431: (c) => {
      c.exports = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M19 7L7 7"></path><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M19 17H7"></path><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M19 12L11 12"></path></svg>';
    }, 654: (c) => {
      c.exports = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M5 12a7 7 90 0 1 14 0 7 7 90 0 1-14 0zM12 9.02v-.01M12 12v3"></path></svg>';
    }, 338: (c) => {
      c.exports = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><rect id="background" width="18" height="18" x="3" y="3" fill="none" stroke="currentColor" stroke-width="1" rx="4"></rect><path id="content" fill="currentColor" stroke-width="0" d="m15.579 16.9-1.042-2.25H10.15L9.11 16.9H7.113L11.697 7h1.266l4.612 9.9h-1.998Zm-4.613-4.05h2.755l-1.377-2.953-1.379 2.953Z"></path></svg>';
    } }, n = {};
    function r(c) {
      var u = n[c];
      if (u !== void 0)
        return u.exports;
      var p = n[c] = { id: c, exports: {} };
      return t[c](p, p.exports, r), p.exports;
    }
    r.n = (c) => {
      var u = c && c.__esModule ? () => c.default : () => c;
      return r.d(u, { a: u }), u;
    }, r.d = (c, u) => {
      for (var p in u)
        r.o(u, p) && !r.o(c, p) && Object.defineProperty(c, p, { enumerable: !0, get: u[p] });
    }, r.o = (c, u) => Object.prototype.hasOwnProperty.call(c, u), r.nc = void 0;
    var a = {};
    return (() => {
      r.d(a, { default: () => j });
      var c = r(654), u = r.n(c), p = r(338), g = r.n(p), v = r(454), x = r.n(v), y = r(749), T = r.n(y), k = r(431), M = r.n(k);
      function O(R) {
        return O = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(V) {
          return typeof V;
        } : function(V) {
          return V && typeof Symbol == "function" && V.constructor === Symbol && V !== Symbol.prototype ? "symbol" : typeof V;
        }, O(R);
      }
      function Y(R, V) {
        var K = Object.keys(R);
        if (Object.getOwnPropertySymbols) {
          var J = Object.getOwnPropertySymbols(R);
          V && (J = J.filter(function(B) {
            return Object.getOwnPropertyDescriptor(R, B).enumerable;
          })), K.push.apply(K, J);
        }
        return K;
      }
      function I(R) {
        for (var V = 1; V < arguments.length; V++) {
          var K = arguments[V] != null ? arguments[V] : {};
          V % 2 ? Y(Object(K), !0).forEach(function(J) {
            F(R, J, K[J]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(R, Object.getOwnPropertyDescriptors(K)) : Y(Object(K)).forEach(function(J) {
            Object.defineProperty(R, J, Object.getOwnPropertyDescriptor(K, J));
          });
        }
        return R;
      }
      function F(R, V, K) {
        return (V = d(V)) in R ? Object.defineProperty(R, V, { value: K, enumerable: !0, configurable: !0, writable: !0 }) : R[V] = K, R;
      }
      function Q(R) {
        return function(V) {
          if (Array.isArray(V))
            return U(V);
        }(R) || function(V) {
          if (typeof Symbol < "u" && V[Symbol.iterator] != null || V["@@iterator"] != null)
            return Array.from(V);
        }(R) || function(V, K) {
          if (V) {
            if (typeof V == "string")
              return U(V, K);
            var J = Object.prototype.toString.call(V).slice(8, -1);
            return J === "Object" && V.constructor && (J = V.constructor.name), J === "Map" || J === "Set" ? Array.from(V) : J === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(J) ? U(V, K) : void 0;
          }
        }(R) || function() {
          throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        }();
      }
      function U(R, V) {
        (V == null || V > R.length) && (V = R.length);
        for (var K = 0, J = new Array(V); K < V; K++)
          J[K] = R[K];
        return J;
      }
      function z(R, V) {
        for (var K = 0; K < V.length; K++) {
          var J = V[K];
          J.enumerable = J.enumerable || !1, J.configurable = !0, "value" in J && (J.writable = !0), Object.defineProperty(R, d(J.key), J);
        }
      }
      function d(R) {
        var V = function(K, J) {
          if (O(K) !== "object" || K === null)
            return K;
          var B = K[Symbol.toPrimitive];
          if (B !== void 0) {
            var se = B.call(K, "string");
            if (O(se) !== "object")
              return se;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(K);
        }(R);
        return O(V) === "symbol" ? V : String(V);
      }
      r(620).toString();
      var j = function() {
        function R(B) {
          var se = B.data, Z = B.config, ne = B.api, le = B.readOnly;
          (function(oe, fe) {
            if (!(oe instanceof fe))
              throw new TypeError("Cannot call a class as a function");
          })(this, R), this.api = ne, this.defaultType = Z.defaultType || R.DEFAULT_TYPE, this.defaultAlign = Z.defaultAlign || R.DEFAULT_ALIGN_TYPE, this.messagePlaceholder = Z.messagePlaceholder || R.DEFAULT_MESSAGE_PLACEHOLDER, this.data = { type: R.ALERT_TYPES.includes(se.type) ? se.type : this.defaultType, align: R.ALIGN_TYPES.includes(se.align) ? se.align : this.defaultAlign, message: se.message || "" }, this.container = void 0, this.readOnly = le;
        }
        var V, K, J;
        return V = R, K = [{ key: "CSS", get: function() {
          return { wrapper: "cdx-alert", wrapperForType: function(B) {
            return "cdx-alert-".concat(B);
          }, wrapperForAlignType: function(B) {
            return "cdx-alert-align-".concat(B);
          }, message: "cdx-alert__message" };
        } }, { key: "render", value: function() {
          var B = [this.CSS.wrapper, this.CSS.wrapperForType(this.data.type), this.CSS.wrapperForAlignType(this.data.align)];
          this.container = this._make("div", B);
          var se = this._make("div", [this.CSS.message], { contentEditable: !this.readOnly, innerHTML: this.data.message });
          return se.dataset.placeholder = this.messagePlaceholder, this.container.appendChild(se), this.container;
        } }, { key: "renderSettings", value: function() {
          var B = this, se = R.ALERT_TYPES.map(function(ne) {
            return { icon: g(), name: "alert-".concat(ne), label: B._getFormattedName(ne), toggle: "alert", isActive: B.data.type === ne, onActivate: function() {
              B._changeAlertType(ne);
            } };
          }), Z = R.ALIGN_TYPES.map(function(ne) {
            return { icon: ne == "left" ? x() : ne == "center" ? T() : ne == "right" ? M() : IconAlign_left, name: "align-".concat(ne), label: B._getFormattedName(ne), toggle: "align", isActive: B.data.align === ne, onActivate: function() {
              B._changeAlignType(ne);
            } };
          });
          return [].concat(Q(se), Q(Z));
        } }, { key: "_getFormattedName", value: function(B) {
          return this.api.i18n.t(B.charAt(0).toUpperCase() + B.slice(1));
        } }, { key: "_changeAlertType", value: function(B) {
          var se = this;
          this.data.type = B, R.ALERT_TYPES.forEach(function(Z) {
            var ne = se.CSS.wrapperForType(Z);
            se.container.classList.remove(ne), B === Z && se.container.classList.add(ne);
          });
        } }, { key: "_changeAlignType", value: function(B) {
          var se = this;
          this.data.align = B, R.ALIGN_TYPES.forEach(function(Z) {
            var ne = se.CSS.wrapperForAlignType(Z);
            se.container.classList.remove(ne), B === Z && se.container.classList.add(ne);
          });
        } }, { key: "save", value: function(B) {
          var se = B.querySelector(".".concat(this.CSS.message));
          return I(I({}, this.data), {}, { message: se.innerHTML });
        } }, { key: "_make", value: function(B) {
          var se, Z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, ne = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, le = document.createElement(B);
          for (var oe in Array.isArray(Z) ? (se = le.classList).add.apply(se, Q(Z)) : Z && le.classList.add(Z), ne)
            le[oe] = ne[oe];
          return le;
        } }, { key: "onPaste", value: function(B) {
          var se = B.detail.data;
          this.data = { type: this.defaultType, message: se.innerHTML || "" };
        } }], J = [{ key: "toolbox", get: function() {
          return { icon: u(), title: "Alert" };
        } }, { key: "enableLineBreaks", get: function() {
          return !0;
        } }, { key: "DEFAULT_TYPE", get: function() {
          return "info";
        } }, { key: "DEFAULT_ALIGN_TYPE", get: function() {
          return "left";
        } }, { key: "DEFAULT_MESSAGE_PLACEHOLDER", get: function() {
          return "Type here...";
        } }, { key: "ALERT_TYPES", get: function() {
          return ["primary", "secondary", "info", "success", "warning", "danger", "light", "dark"];
        } }, { key: "ALIGN_TYPES", get: function() {
          return ["left", "center", "right"];
        } }, { key: "isReadOnlySupported", get: function() {
          return !0;
        } }, { key: "conversionConfig", get: function() {
          var B = this;
          return { export: function(se) {
            return se.message;
          }, import: function(se) {
            return { message: se, type: B.DEFAULT_TYPE, alignType: B.DEFAULT_ALIGN_TYPE };
          } };
        } }, { key: "sanitize", get: function() {
          return { message: !0, type: !1, alignType: !1 };
        } }], K && z(V.prototype, K), J && z(V, J), Object.defineProperty(V, "prototype", { writable: !1 }), R;
      }();
    })(), a.default;
  })());
})(xu);
var zg = xu.exports;
const Id = /* @__PURE__ */ An(zg);
var Cu = { exports: {} };
/*! For license information please see editorjs-columns.bundle.js.LICENSE.txt */
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(self, () => (() => {
    var t = { 745: (c, u, p) => {
      p.d(u, { Z: () => T });
      var g = p(81), v = p.n(g), x = p(645), y = p.n(x)()(v());
      y.push([c.id, ".ce-editorjsColumns_col{flex:50%}.ce-editorjsColumns_wrapper{display:flex;width:100%;gap:10px;margin-bottom:10px;flex-direction:row}.ce-editorjsColumns_wrapper .ce-toolbar__actions{z-index:0}.ce-editorjsColumns_wrapper .ce-toolbar{z-index:4}.ce-editorjsColumns_wrapper .ce-popover{z-index:4000}@media(max-width: 800px){.ce-editorjsColumns_wrapper{flex-direction:column;padding:10px;border:1px solid #ccc;border-radius:4px}}.ce-inline-toolbar{z-index:1000}.ce-block__content,.ce-toolbar__content{max-width:calc(100% - 50px)}.ce-toolbar__actions{right:calc(100% + 30px);background-color:rgba(255,255,255,.5);border-radius:4px}.codex-editor--narrow .codex-editor__redactor{margin:0}.ce-toolbar{z-index:4}.codex-editor{z-index:auto !important}", ""]);
      const T = y;
    }, 645: (c) => {
      c.exports = function(u) {
        var p = [];
        return p.toString = function() {
          return this.map(function(g) {
            var v = "", x = g[5] !== void 0;
            return g[4] && (v += "@supports (".concat(g[4], ") {")), g[2] && (v += "@media ".concat(g[2], " {")), x && (v += "@layer".concat(g[5].length > 0 ? " ".concat(g[5]) : "", " {")), v += u(g), x && (v += "}"), g[2] && (v += "}"), g[4] && (v += "}"), v;
          }).join("");
        }, p.i = function(g, v, x, y, T) {
          typeof g == "string" && (g = [[null, g, void 0]]);
          var k = {};
          if (x)
            for (var M = 0; M < this.length; M++) {
              var O = this[M][0];
              O != null && (k[O] = !0);
            }
          for (var Y = 0; Y < g.length; Y++) {
            var I = [].concat(g[Y]);
            x && k[I[0]] || (T !== void 0 && (I[5] === void 0 || (I[1] = "@layer".concat(I[5].length > 0 ? " ".concat(I[5]) : "", " {").concat(I[1], "}")), I[5] = T), v && (I[2] && (I[1] = "@media ".concat(I[2], " {").concat(I[1], "}")), I[2] = v), y && (I[4] ? (I[1] = "@supports (".concat(I[4], ") {").concat(I[1], "}"), I[4] = y) : I[4] = "".concat(y)), p.push(I));
          }
        }, p;
      };
    }, 81: (c) => {
      c.exports = function(u) {
        return u[1];
      };
    }, 379: (c) => {
      var u = [];
      function p(x) {
        for (var y = -1, T = 0; T < u.length; T++)
          if (u[T].identifier === x) {
            y = T;
            break;
          }
        return y;
      }
      function g(x, y) {
        for (var T = {}, k = [], M = 0; M < x.length; M++) {
          var O = x[M], Y = y.base ? O[0] + y.base : O[0], I = T[Y] || 0, F = "".concat(Y, " ").concat(I);
          T[Y] = I + 1;
          var Q = p(F), U = { css: O[1], media: O[2], sourceMap: O[3], supports: O[4], layer: O[5] };
          if (Q !== -1)
            u[Q].references++, u[Q].updater(U);
          else {
            var z = v(U, y);
            y.byIndex = M, u.splice(M, 0, { identifier: F, updater: z, references: 1 });
          }
          k.push(F);
        }
        return k;
      }
      function v(x, y) {
        var T = y.domAPI(y);
        return T.update(x), function(k) {
          if (k) {
            if (k.css === x.css && k.media === x.media && k.sourceMap === x.sourceMap && k.supports === x.supports && k.layer === x.layer)
              return;
            T.update(x = k);
          } else
            T.remove();
        };
      }
      c.exports = function(x, y) {
        var T = g(x = x || [], y = y || {});
        return function(k) {
          k = k || [];
          for (var M = 0; M < T.length; M++) {
            var O = p(T[M]);
            u[O].references--;
          }
          for (var Y = g(k, y), I = 0; I < T.length; I++) {
            var F = p(T[I]);
            u[F].references === 0 && (u[F].updater(), u.splice(F, 1));
          }
          T = Y;
        };
      };
    }, 569: (c) => {
      var u = {};
      c.exports = function(p, g) {
        var v = function(x) {
          if (u[x] === void 0) {
            var y = document.querySelector(x);
            if (window.HTMLIFrameElement && y instanceof window.HTMLIFrameElement)
              try {
                y = y.contentDocument.head;
              } catch {
                y = null;
              }
            u[x] = y;
          }
          return u[x];
        }(p);
        if (!v)
          throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
        v.appendChild(g);
      };
    }, 216: (c) => {
      c.exports = function(u) {
        var p = document.createElement("style");
        return u.setAttributes(p, u.attributes), u.insert(p, u.options), p;
      };
    }, 565: (c, u, p) => {
      c.exports = function(g) {
        var v = p.nc;
        v && g.setAttribute("nonce", v);
      };
    }, 795: (c) => {
      c.exports = function(u) {
        var p = u.insertStyleElement(u);
        return { update: function(g) {
          (function(v, x, y) {
            var T = "";
            y.supports && (T += "@supports (".concat(y.supports, ") {")), y.media && (T += "@media ".concat(y.media, " {"));
            var k = y.layer !== void 0;
            k && (T += "@layer".concat(y.layer.length > 0 ? " ".concat(y.layer) : "", " {")), T += y.css, k && (T += "}"), y.media && (T += "}"), y.supports && (T += "}");
            var M = y.sourceMap;
            M && typeof btoa < "u" && (T += `
/*# sourceMappingURL=data:application/json;base64,`.concat(btoa(unescape(encodeURIComponent(JSON.stringify(M)))), " */")), x.styleTagTransform(T, v, x.options);
          })(p, u, g);
        }, remove: function() {
          (function(g) {
            if (g.parentNode === null)
              return !1;
            g.parentNode.removeChild(g);
          })(p);
        } };
      };
    }, 589: (c) => {
      c.exports = function(u, p) {
        if (p.styleSheet)
          p.styleSheet.cssText = u;
        else {
          for (; p.firstChild; )
            p.removeChild(p.firstChild);
          p.appendChild(document.createTextNode(u));
        }
      };
    }, 40: (c) => {
      c.exports = '<svg width="14" height="14" viewBox="0 -1 14 14" xmlns="http://www.w3.org/2000/svg"><defs></defs><rect x="1.194" y="-0.041" width="11.601" height="12.11" rx="1" ry="1" style="fill: rgb(255, 255, 255); stroke: rgb(0, 0, 0); stroke-width: 1.5px;"></rect><path style="stroke: rgb(0, 0, 0); stroke-width:1.5px" d="M 7.032 -0.034 L 6.948 11.842"></path></svg>';
    }, 455: function(c) {
      c.exports = function() {
        const u = "SweetAlert2:", p = (w) => w.charAt(0).toUpperCase() + w.slice(1), g = (w) => Array.prototype.slice.call(w), v = (w) => {
          console.warn("".concat(u, " ").concat(typeof w == "object" ? w.join(" ") : w));
        }, x = (w) => {
          console.error("".concat(u, " ").concat(w));
        }, y = [], T = (w, S) => {
          var A;
          A = '"'.concat(w, '" is deprecated and will be removed in the next major release. Please use "').concat(S, '" instead.'), y.includes(A) || (y.push(A), v(A));
        }, k = (w) => typeof w == "function" ? w() : w, M = (w) => w && typeof w.toPromise == "function", O = (w) => M(w) ? w.toPromise() : Promise.resolve(w), Y = (w) => w && Promise.resolve(w) === w, I = { title: "", titleText: "", text: "", html: "", footer: "", icon: void 0, iconColor: void 0, iconHtml: void 0, template: void 0, toast: !1, showClass: { popup: "swal2-show", backdrop: "swal2-backdrop-show", icon: "swal2-icon-show" }, hideClass: { popup: "swal2-hide", backdrop: "swal2-backdrop-hide", icon: "swal2-icon-hide" }, customClass: {}, target: "body", color: void 0, backdrop: !0, heightAuto: !0, allowOutsideClick: !0, allowEscapeKey: !0, allowEnterKey: !0, stopKeydownPropagation: !0, keydownListenerCapture: !1, showConfirmButton: !0, showDenyButton: !1, showCancelButton: !1, preConfirm: void 0, preDeny: void 0, confirmButtonText: "OK", confirmButtonAriaLabel: "", confirmButtonColor: void 0, denyButtonText: "No", denyButtonAriaLabel: "", denyButtonColor: void 0, cancelButtonText: "Cancel", cancelButtonAriaLabel: "", cancelButtonColor: void 0, buttonsStyling: !0, reverseButtons: !1, focusConfirm: !0, focusDeny: !1, focusCancel: !1, returnFocus: !0, showCloseButton: !1, closeButtonHtml: "&times;", closeButtonAriaLabel: "Close this dialog", loaderHtml: "", showLoaderOnConfirm: !1, showLoaderOnDeny: !1, imageUrl: void 0, imageWidth: void 0, imageHeight: void 0, imageAlt: "", timer: void 0, timerProgressBar: !1, width: void 0, padding: void 0, background: void 0, input: void 0, inputPlaceholder: "", inputLabel: "", inputValue: "", inputOptions: {}, inputAutoTrim: !0, inputAttributes: {}, inputValidator: void 0, returnInputValueOnDeny: !1, validationMessage: void 0, grow: !1, position: "center", progressSteps: [], currentProgressStep: void 0, progressStepsDistance: void 0, willOpen: void 0, didOpen: void 0, didRender: void 0, willClose: void 0, didClose: void 0, didDestroy: void 0, scrollbarPadding: !0 }, F = ["allowEscapeKey", "allowOutsideClick", "background", "buttonsStyling", "cancelButtonAriaLabel", "cancelButtonColor", "cancelButtonText", "closeButtonAriaLabel", "closeButtonHtml", "color", "confirmButtonAriaLabel", "confirmButtonColor", "confirmButtonText", "currentProgressStep", "customClass", "denyButtonAriaLabel", "denyButtonColor", "denyButtonText", "didClose", "didDestroy", "footer", "hideClass", "html", "icon", "iconColor", "iconHtml", "imageAlt", "imageHeight", "imageUrl", "imageWidth", "preConfirm", "preDeny", "progressSteps", "returnFocus", "reverseButtons", "showCancelButton", "showCloseButton", "showConfirmButton", "showDenyButton", "text", "title", "titleText", "willClose"], Q = {}, U = ["allowOutsideClick", "allowEnterKey", "backdrop", "focusConfirm", "focusDeny", "focusCancel", "returnFocus", "heightAuto", "keydownListenerCapture"], z = (w) => Object.prototype.hasOwnProperty.call(I, w), d = (w) => F.indexOf(w) !== -1, j = (w) => Q[w], R = (w) => {
          z(w) || v('Unknown parameter "'.concat(w, '"'));
        }, V = (w) => {
          U.includes(w) && v('The parameter "'.concat(w, '" is incompatible with toasts'));
        }, K = (w) => {
          j(w) && T(w, j(w));
        }, J = (w) => {
          const S = {};
          for (const A in w)
            S[w[A]] = "swal2-" + w[A];
          return S;
        }, B = J(["container", "shown", "height-auto", "iosfix", "popup", "modal", "no-backdrop", "no-transition", "toast", "toast-shown", "show", "hide", "close", "title", "html-container", "actions", "confirm", "deny", "cancel", "default-outline", "footer", "icon", "icon-content", "image", "input", "file", "range", "select", "radio", "checkbox", "label", "textarea", "inputerror", "input-label", "validation-message", "progress-steps", "active-progress-step", "progress-step", "progress-step-line", "loader", "loading", "styled", "top", "top-start", "top-end", "top-left", "top-right", "center", "center-start", "center-end", "center-left", "center-right", "bottom", "bottom-start", "bottom-end", "bottom-left", "bottom-right", "grow-row", "grow-column", "grow-fullscreen", "rtl", "timer-progress-bar", "timer-progress-bar-container", "scrollbar-measure", "icon-success", "icon-warning", "icon-info", "icon-question", "icon-error", "no-war"]), se = J(["success", "warning", "info", "question", "error"]), Z = () => document.body.querySelector(".".concat(B.container)), ne = (w) => {
          const S = Z();
          return S ? S.querySelector(w) : null;
        }, le = (w) => ne(".".concat(w)), oe = () => le(B.popup), fe = () => le(B.icon), Me = () => le(B.title), je = () => le(B["html-container"]), Be = () => le(B.image), Ke = () => le(B["progress-steps"]), io = () => le(B["validation-message"]), ko = () => ne(".".concat(B.actions, " .").concat(B.confirm)), on = () => ne(".".concat(B.actions, " .").concat(B.deny)), In = () => ne(".".concat(B.loader)), fn = () => ne(".".concat(B.actions, " .").concat(B.cancel)), mn = () => le(B.actions), Nt = () => le(B.footer), Bi = () => le(B["timer-progress-bar"]), ro = () => le(B.close), $o = () => {
          const w = g(oe().querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])')).sort((A, H) => {
            const ee = parseInt(A.getAttribute("tabindex")), he = parseInt(H.getAttribute("tabindex"));
            return ee > he ? 1 : ee < he ? -1 : 0;
          }), S = g(oe().querySelectorAll(`
  a[href],
  area[href],
  input:not([disabled]),
  select:not([disabled]),
  textarea:not([disabled]),
  button:not([disabled]),
  iframe,
  object,
  embed,
  [tabindex="0"],
  [contenteditable],
  audio[controls],
  video[controls],
  summary
`)).filter((A) => A.getAttribute("tabindex") !== "-1");
          return ((A) => {
            const H = [];
            for (let ee = 0; ee < A.length; ee++)
              H.indexOf(A[ee]) === -1 && H.push(A[ee]);
            return H;
          })(w.concat(S)).filter((A) => Jt(A));
        }, Gn = () => bt(document.body, B.shown) && !bt(document.body, B["toast-shown"]) && !bt(document.body, B["no-backdrop"]), Ri = () => oe() && bt(oe(), B.toast), Oo = { previousBodyPadding: null }, xt = (w, S) => {
          if (w.textContent = "", S) {
            const A = new DOMParser().parseFromString(S, "text/html");
            g(A.querySelector("head").childNodes).forEach((H) => {
              w.appendChild(H);
            }), g(A.querySelector("body").childNodes).forEach((H) => {
              w.appendChild(H);
            });
          }
        }, bt = (w, S) => {
          if (!S)
            return !1;
          const A = S.split(/\s+/);
          for (let H = 0; H < A.length; H++)
            if (!w.classList.contains(A[H]))
              return !1;
          return !0;
        }, po = (w, S, A) => {
          if (((H, ee) => {
            g(H.classList).forEach((he) => {
              Object.values(B).includes(he) || Object.values(se).includes(he) || Object.values(ee.showClass).includes(he) || H.classList.remove(he);
            });
          })(w, S), S.customClass && S.customClass[A]) {
            if (typeof S.customClass[A] != "string" && !S.customClass[A].forEach)
              return v("Invalid type of customClass.".concat(A, '! Expected string or iterable object, got "').concat(typeof S.customClass[A], '"'));
            ze(w, S.customClass[A]);
          }
        }, ir = (w, S) => {
          if (!S)
            return null;
          switch (S) {
            case "select":
            case "textarea":
            case "file":
              return w.querySelector(".".concat(B.popup, " > .").concat(B[S]));
            case "checkbox":
              return w.querySelector(".".concat(B.popup, " > .").concat(B.checkbox, " input"));
            case "radio":
              return w.querySelector(".".concat(B.popup, " > .").concat(B.radio, " input:checked")) || w.querySelector(".".concat(B.popup, " > .").concat(B.radio, " input:first-child"));
            case "range":
              return w.querySelector(".".concat(B.popup, " > .").concat(B.range, " input"));
            default:
              return w.querySelector(".".concat(B.popup, " > .").concat(B.input));
          }
        }, Yr = (w) => {
          if (w.focus(), w.type !== "file") {
            const S = w.value;
            w.value = "", w.value = S;
          }
        }, Pt = (w, S, A) => {
          w && S && (typeof S == "string" && (S = S.split(/\s+/).filter(Boolean)), S.forEach((H) => {
            Array.isArray(w) ? w.forEach((ee) => {
              A ? ee.classList.add(H) : ee.classList.remove(H);
            }) : A ? w.classList.add(H) : w.classList.remove(H);
          }));
        }, ze = (w, S) => {
          Pt(w, S, !0);
        }, Wt = (w, S) => {
          Pt(w, S, !1);
        }, ce = (w, S) => {
          const A = g(w.childNodes);
          for (let H = 0; H < A.length; H++)
            if (bt(A[H], S))
              return A[H];
        }, ot = (w, S, A) => {
          A === "".concat(parseInt(A)) && (A = parseInt(A)), A || parseInt(A) === 0 ? w.style[S] = typeof A == "number" ? "".concat(A, "px") : A : w.style.removeProperty(S);
        }, qt = function(w) {
          let S = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "flex";
          w.style.display = S;
        }, Xt = (w) => {
          w.style.display = "none";
        }, Fr = (w, S, A, H) => {
          const ee = w.querySelector(S);
          ee && (ee.style[A] = H);
        }, Nn = (w, S, A) => {
          S ? qt(w, A) : Xt(w);
        }, Jt = (w) => !(!w || !(w.offsetWidth || w.offsetHeight || w.getClientRects().length)), Lo = (w) => w.scrollHeight > w.clientHeight, Ut = (w) => {
          const S = window.getComputedStyle(w), A = parseFloat(S.getPropertyValue("animation-duration") || "0"), H = parseFloat(S.getPropertyValue("transition-duration") || "0");
          return A > 0 || H > 0;
        }, Qt = function(w) {
          let S = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
          const A = Bi();
          Jt(A) && (S && (A.style.transition = "none", A.style.width = "100%"), setTimeout(() => {
            A.style.transition = "width ".concat(w / 1e3, "s linear"), A.style.width = "0%";
          }, 10));
        }, fo = () => typeof window > "u" || typeof document > "u", We = {}, gn = (w) => new Promise((S) => {
          if (!w)
            return S();
          const A = window.scrollX, H = window.scrollY;
          We.restoreFocusTimeout = setTimeout(() => {
            We.previousActiveElement && We.previousActiveElement.focus ? (We.previousActiveElement.focus(), We.previousActiveElement = null) : document.body && document.body.focus(), S();
          }, 100), window.scrollTo(A, H);
        }), rr = `
 <div aria-labelledby="`.concat(B.title, '" aria-describedby="').concat(B["html-container"], '" class="').concat(B.popup, `" tabindex="-1">
   <button type="button" class="`).concat(B.close, `"></button>
   <ul class="`).concat(B["progress-steps"], `"></ul>
   <div class="`).concat(B.icon, `"></div>
   <img class="`).concat(B.image, `" />
   <h2 class="`).concat(B.title, '" id="').concat(B.title, `"></h2>
   <div class="`).concat(B["html-container"], '" id="').concat(B["html-container"], `"></div>
   <input class="`).concat(B.input, `" />
   <input type="file" class="`).concat(B.file, `" />
   <div class="`).concat(B.range, `">
     <input type="range" />
     <output></output>
   </div>
   <select class="`).concat(B.select, `"></select>
   <div class="`).concat(B.radio, `"></div>
   <label for="`).concat(B.checkbox, '" class="').concat(B.checkbox, `">
     <input type="checkbox" />
     <span class="`).concat(B.label, `"></span>
   </label>
   <textarea class="`).concat(B.textarea, `"></textarea>
   <div class="`).concat(B["validation-message"], '" id="').concat(B["validation-message"], `"></div>
   <div class="`).concat(B.actions, `">
     <div class="`).concat(B.loader, `"></div>
     <button type="button" class="`).concat(B.confirm, `"></button>
     <button type="button" class="`).concat(B.deny, `"></button>
     <button type="button" class="`).concat(B.cancel, `"></button>
   </div>
   <div class="`).concat(B.footer, `"></div>
   <div class="`).concat(B["timer-progress-bar-container"], `">
     <div class="`).concat(B["timer-progress-bar"], `"></div>
   </div>
 </div>
`).replace(/(^|\n)\s*/g, ""), Yo = () => {
          We.currentInstance.resetValidationMessage();
        }, Os = (w) => {
          const S = (() => {
            const he = Z();
            return !!he && (he.remove(), Wt([document.documentElement, document.body], [B["no-backdrop"], B["toast-shown"], B["has-column"]]), !0);
          })();
          if (fo())
            return void x("SweetAlert2 requires document to initialize");
          const A = document.createElement("div");
          A.className = B.container, S && ze(A, B["no-transition"]), xt(A, rr);
          const H = typeof (ee = w.target) == "string" ? document.querySelector(ee) : ee;
          var ee;
          H.appendChild(A), ((he) => {
            const ke = oe();
            ke.setAttribute("role", he.toast ? "alert" : "dialog"), ke.setAttribute("aria-live", he.toast ? "polite" : "assertive"), he.toast || ke.setAttribute("aria-modal", "true");
          })(w), ((he) => {
            window.getComputedStyle(he).direction === "rtl" && ze(Z(), B.rtl);
          })(H), (() => {
            const he = oe(), ke = ce(he, B.input), Ee = ce(he, B.file), Ae = he.querySelector(".".concat(B.range, " input")), St = he.querySelector(".".concat(B.range, " output")), nt = ce(he, B.select), Tt = he.querySelector(".".concat(B.checkbox, " input")), jn = ce(he, B.textarea);
            ke.oninput = Yo, Ee.onchange = Yo, nt.onchange = Yo, Tt.onchange = Yo, jn.oninput = Yo, Ae.oninput = () => {
              Yo(), St.value = Ae.value;
            }, Ae.onchange = () => {
              Yo(), Ae.nextSibling.value = Ae.value;
            };
          })(), xo(A, w);
        }, xo = (w, S) => {
          if (S.toast)
            return;
          const A = (H = [{ text: "ШВАРЦЕНЕГГЕР обратился <br> к РУССКОМУ НАРОДУ о войне", youtubeId: "fWClXZd9c78" }, { text: "РУССКИЙ ПАТРИОТ <br> открыл главную тайну спецоперации", youtubeId: "_RjBNkn88yA" }, { text: "ГЕРОЙ НОВОРОССИИ СТРЕЛКОВ <br> дал оценку ходу спецоперации", youtubeId: "yUmzQT4C8JY" }, { text: "ФИНСКИЙ ДРУГ РОССИИ <br> говорит ПО-РУССКИ о спецоперации", youtubeId: "hkCYb6edUrQ" }])[Math.floor(Math.random() * H.length)];
          var H;
          if (navigator.language === "ru" && location.host.match(/\.(ru|su|xn--p1ai)$/)) {
            const ee = document.createElement("div");
            ee.className = B["no-war"], xt(ee, '<a href="https://www.youtube.com/watch?v='.concat(A.youtubeId, '" target="_blank">').concat(A.text, "</a>")), w.appendChild(ee), w.style.paddingTop = "4em";
          }
        }, Co = (w, S) => {
          w instanceof HTMLElement ? S.appendChild(w) : typeof w == "object" ? sr(w, S) : w && xt(S, w);
        }, sr = (w, S) => {
          w.jquery ? ar(S, w) : xt(S, w.toString());
        }, ar = (w, S) => {
          if (w.textContent = "", 0 in S)
            for (let A = 0; A in S; A++)
              w.appendChild(S[A].cloneNode(!0));
          else
            w.appendChild(S.cloneNode(!0));
        }, ut = (() => {
          if (fo())
            return !1;
          const w = document.createElement("div"), S = { WebkitAnimation: "webkitAnimationEnd", animation: "animationend" };
          for (const A in S)
            if (Object.prototype.hasOwnProperty.call(S, A) && w.style[A] !== void 0)
              return S[A];
          return !1;
        })(), pt = (w, S) => {
          const A = mn(), H = In();
          S.showConfirmButton || S.showDenyButton || S.showCancelButton ? qt(A) : Xt(A), po(A, S, "actions"), function(ee, he, ke) {
            const Ee = ko(), Ae = on(), St = fn();
            bn(Ee, "confirm", ke), bn(Ae, "deny", ke), bn(St, "cancel", ke), function(nt, Tt, jn, xn) {
              if (!xn.buttonsStyling)
                return Wt([nt, Tt, jn], B.styled);
              ze([nt, Tt, jn], B.styled), xn.confirmButtonColor && (nt.style.backgroundColor = xn.confirmButtonColor, ze(nt, B["default-outline"])), xn.denyButtonColor && (Tt.style.backgroundColor = xn.denyButtonColor, ze(Tt, B["default-outline"])), xn.cancelButtonColor && (jn.style.backgroundColor = xn.cancelButtonColor, ze(jn, B["default-outline"]));
            }(Ee, Ae, St, ke), ke.reverseButtons && (ke.toast ? (ee.insertBefore(St, Ee), ee.insertBefore(Ae, Ee)) : (ee.insertBefore(St, he), ee.insertBefore(Ae, he), ee.insertBefore(Ee, he)));
          }(A, H, S), xt(H, S.loaderHtml), po(H, S, "loader");
        };
        function bn(w, S, A) {
          Nn(w, A["show".concat(p(S), "Button")], "inline-block"), xt(w, A["".concat(S, "ButtonText")]), w.setAttribute("aria-label", A["".concat(S, "ButtonAriaLabel")]), w.className = B[S], po(w, A, "".concat(S, "Button")), ze(w, A["".concat(S, "ButtonClass")]);
        }
        const Ls = (w, S) => {
          const A = Z();
          A && (function(H, ee) {
            typeof ee == "string" ? H.style.background = ee : ee || ze([document.documentElement, document.body], B["no-backdrop"]);
          }(A, S.backdrop), function(H, ee) {
            ee in B ? ze(H, B[ee]) : (v('The "position" parameter is not valid, defaulting to "center"'), ze(H, B.center));
          }(A, S.position), function(H, ee) {
            if (ee && typeof ee == "string") {
              const he = "grow-".concat(ee);
              he in B && ze(H, B[he]);
            }
          }(A, S.grow), po(A, S, "container"));
        };
        var Ue = { awaitingPromise: /* @__PURE__ */ new WeakMap(), promise: /* @__PURE__ */ new WeakMap(), innerParams: /* @__PURE__ */ new WeakMap(), domCache: /* @__PURE__ */ new WeakMap() };
        const lr = ["input", "file", "range", "select", "radio", "checkbox", "textarea"], So = (w) => {
          if (!no[w.input])
            return x('Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(w.input, '"'));
          const S = zr(w.input), A = no[w.input](S, w);
          qt(A), setTimeout(() => {
            Yr(A);
          });
        }, To = (w, S) => {
          const A = ir(oe(), w);
          if (A) {
            ((H) => {
              for (let ee = 0; ee < H.attributes.length; ee++) {
                const he = H.attributes[ee].name;
                ["type", "value", "style"].includes(he) || H.removeAttribute(he);
              }
            })(A);
            for (const H in S)
              A.setAttribute(H, S[H]);
          }
        }, Zn = (w) => {
          const S = zr(w.input);
          w.customClass && ze(S, w.customClass.input);
        }, Fo = (w, S) => {
          w.placeholder && !S.inputPlaceholder || (w.placeholder = S.inputPlaceholder);
        }, Kn = (w, S, A) => {
          if (A.inputLabel) {
            w.id = B.input;
            const H = document.createElement("label"), ee = B["input-label"];
            H.setAttribute("for", w.id), H.className = ee, ze(H, A.customClass.inputLabel), H.innerText = A.inputLabel, S.insertAdjacentElement("beforebegin", H);
          }
        }, zr = (w) => {
          const S = B[w] ? B[w] : B.input;
          return ce(oe(), S);
        }, no = {}, Ii = (w, S) => {
          ["string", "number"].includes(typeof S.inputValue) ? w.value = "".concat(S.inputValue) : Y(S.inputValue) || v('Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(typeof S.inputValue, '"'));
        };
        no.text = no.email = no.password = no.number = no.tel = no.url = (w, S) => (Ii(w, S), Kn(w, w, S), Fo(w, S), w.type = S.input, w), no.file = (w, S) => (Kn(w, w, S), Fo(w, S), w), no.range = (w, S) => {
          const A = w.querySelector("input"), H = w.querySelector("output");
          return A.value = S.inputValue, A.type = S.input, H.value = S.inputValue, Kn(A, w, S), w;
        }, no.select = (w, S) => {
          if (w.textContent = "", S.inputPlaceholder) {
            const A = document.createElement("option");
            xt(A, S.inputPlaceholder), A.value = "", A.disabled = !0, A.selected = !0, w.appendChild(A);
          }
          return Kn(w, w, S), w;
        }, no.radio = (w) => (w.textContent = "", w), no.checkbox = (w, S) => {
          const A = ir(oe(), "checkbox");
          A.value = "1", A.id = B.checkbox, A.checked = !!S.inputValue;
          const H = w.querySelector("span");
          return xt(H, S.inputPlaceholder), w;
        }, no.textarea = (w, S) => (Ii(w, S), Fo(w, S), Kn(w, w, S), setTimeout(() => {
          if ("MutationObserver" in window) {
            const A = parseInt(window.getComputedStyle(oe()).width);
            new MutationObserver(() => {
              const H = w.offsetWidth + (ee = w, parseInt(window.getComputedStyle(ee).marginLeft) + parseInt(window.getComputedStyle(ee).marginRight));
              var ee;
              oe().style.width = H > A ? "".concat(H, "px") : null;
            }).observe(w, { attributes: !0, attributeFilter: ["style"] });
          }
        }), w);
        const As = (w, S) => {
          const A = je();
          po(A, S, "htmlContainer"), S.html ? (Co(S.html, A), qt(A, "block")) : S.text ? (A.textContent = S.text, qt(A, "block")) : Xt(A), ((H, ee) => {
            const he = oe(), ke = Ue.innerParams.get(H), Ee = !ke || ee.input !== ke.input;
            lr.forEach((Ae) => {
              const St = B[Ae], nt = ce(he, St);
              To(Ae, ee.inputAttributes), nt.className = St, Ee && Xt(nt);
            }), ee.input && (Ee && So(ee), Zn(ee));
          })(w, S);
        }, Wr = (w, S) => {
          for (const A in se)
            S.icon !== A && Wt(w, se[A]);
          ze(w, se[S.icon]), _o(w, S), cr(), po(w, S, "icon");
        }, cr = () => {
          const w = oe(), S = window.getComputedStyle(w).getPropertyValue("background-color"), A = w.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix");
          for (let H = 0; H < A.length; H++)
            A[H].style.backgroundColor = S;
        }, Ur = (w, S) => {
          w.textContent = "", S.iconHtml ? xt(w, Ni(S.iconHtml)) : S.icon === "success" ? xt(w, `
  <div class="swal2-success-circular-line-left"></div>
  <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>
  <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>
  <div class="swal2-success-circular-line-right"></div>
`) : S.icon === "error" ? xt(w, `
  <span class="swal2-x-mark">
    <span class="swal2-x-mark-line-left"></span>
    <span class="swal2-x-mark-line-right"></span>
  </span>
`) : xt(w, Ni({ question: "?", warning: "!", info: "i" }[S.icon]));
        }, _o = (w, S) => {
          if (S.iconColor) {
            w.style.color = S.iconColor, w.style.borderColor = S.iconColor;
            for (const A of [".swal2-success-line-tip", ".swal2-success-line-long", ".swal2-x-mark-line-left", ".swal2-x-mark-line-right"])
              Fr(w, A, "backgroundColor", S.iconColor);
            Fr(w, ".swal2-success-ring", "borderColor", S.iconColor);
          }
        }, Ni = (w) => '<div class="'.concat(B["icon-content"], '">').concat(w, "</div>"), Xn = (w, S) => {
          const A = Ke();
          if (!S.progressSteps || S.progressSteps.length === 0)
            return Xt(A);
          qt(A), A.textContent = "", S.currentProgressStep >= S.progressSteps.length && v("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"), S.progressSteps.forEach((H, ee) => {
            const he = ((ke) => {
              const Ee = document.createElement("li");
              return ze(Ee, B["progress-step"]), xt(Ee, ke), Ee;
            })(H);
            if (A.appendChild(he), ee === S.currentProgressStep && ze(he, B["active-progress-step"]), ee !== S.progressSteps.length - 1) {
              const ke = ((Ee) => {
                const Ae = document.createElement("li");
                return ze(Ae, B["progress-step-line"]), Ee.progressStepsDistance && (Ae.style.width = Ee.progressStepsDistance), Ae;
              })(S);
              A.appendChild(ke);
            }
          });
        }, Jn = (w, S) => {
          w.className = "".concat(B.popup, " ").concat(Jt(w) ? S.showClass.popup : ""), S.toast ? (ze([document.documentElement, document.body], B["toast-shown"]), ze(w, B.toast)) : ze(w, B.modal), po(w, S, "popup"), typeof S.customClass == "string" && ze(w, S.customClass), S.icon && ze(w, B["icon-".concat(S.icon)]);
        }, nn = (w, S) => {
          ((A, H) => {
            const ee = Z(), he = oe();
            H.toast ? (ot(ee, "width", H.width), he.style.width = "100%", he.insertBefore(In(), fe())) : ot(he, "width", H.width), ot(he, "padding", H.padding), H.color && (he.style.color = H.color), H.background && (he.style.background = H.background), Xt(io()), Jn(he, H);
          })(0, S), Ls(0, S), Xn(0, S), ((A, H) => {
            const ee = Ue.innerParams.get(A), he = fe();
            ee && H.icon === ee.icon ? (Ur(he, H), Wr(he, H)) : H.icon || H.iconHtml ? H.icon && Object.keys(se).indexOf(H.icon) === -1 ? (x('Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(H.icon, '"')), Xt(he)) : (qt(he), Ur(he, H), Wr(he, H), ze(he, H.showClass.icon)) : Xt(he);
          })(w, S), ((A, H) => {
            const ee = Be();
            if (!H.imageUrl)
              return Xt(ee);
            qt(ee, ""), ee.setAttribute("src", H.imageUrl), ee.setAttribute("alt", H.imageAlt), ot(ee, "width", H.imageWidth), ot(ee, "height", H.imageHeight), ee.className = B.image, po(ee, H, "image");
          })(0, S), ((A, H) => {
            const ee = Me();
            Nn(ee, H.title || H.titleText, "block"), H.title && Co(H.title, ee), H.titleText && (ee.innerText = H.titleText), po(ee, H, "title");
          })(0, S), ((A, H) => {
            const ee = ro();
            xt(ee, H.closeButtonHtml), po(ee, H, "closeButton"), Nn(ee, H.showCloseButton), ee.setAttribute("aria-label", H.closeButtonAriaLabel);
          })(0, S), As(w, S), pt(0, S), ((A, H) => {
            const ee = Nt();
            Nn(ee, H.footer), H.footer && Co(H.footer, ee), po(ee, H, "footer");
          })(0, S), typeof S.didRender == "function" && S.didRender(oe());
        }, rn = Object.freeze({ cancel: "cancel", backdrop: "backdrop", close: "close", esc: "esc", timer: "timer" }), qr = () => {
          g(document.body.children).forEach((w) => {
            w.hasAttribute("data-previous-aria-hidden") ? (w.setAttribute("aria-hidden", w.getAttribute("data-previous-aria-hidden")), w.removeAttribute("data-previous-aria-hidden")) : w.removeAttribute("aria-hidden");
          });
        }, Ao = ["swal-title", "swal-html", "swal-footer"], dr = (w) => {
          const S = {};
          return g(w.querySelectorAll("swal-param")).forEach((A) => {
            vn(A, ["name", "value"]);
            const H = A.getAttribute("name"), ee = A.getAttribute("value");
            typeof I[H] == "boolean" && ee === "false" && (S[H] = !1), typeof I[H] == "object" && (S[H] = JSON.parse(ee));
          }), S;
        }, hr = (w) => {
          const S = {};
          return g(w.querySelectorAll("swal-button")).forEach((A) => {
            vn(A, ["type", "color", "aria-label"]);
            const H = A.getAttribute("type");
            S["".concat(H, "ButtonText")] = A.innerHTML, S["show".concat(p(H), "Button")] = !0, A.hasAttribute("color") && (S["".concat(H, "ButtonColor")] = A.getAttribute("color")), A.hasAttribute("aria-label") && (S["".concat(H, "ButtonAriaLabel")] = A.getAttribute("aria-label"));
          }), S;
        }, ur = (w) => {
          const S = {}, A = w.querySelector("swal-image");
          return A && (vn(A, ["src", "width", "height", "alt"]), A.hasAttribute("src") && (S.imageUrl = A.getAttribute("src")), A.hasAttribute("width") && (S.imageWidth = A.getAttribute("width")), A.hasAttribute("height") && (S.imageHeight = A.getAttribute("height")), A.hasAttribute("alt") && (S.imageAlt = A.getAttribute("alt"))), S;
        }, pr = (w) => {
          const S = {}, A = w.querySelector("swal-icon");
          return A && (vn(A, ["type", "color"]), A.hasAttribute("type") && (S.icon = A.getAttribute("type")), A.hasAttribute("color") && (S.iconColor = A.getAttribute("color")), S.iconHtml = A.innerHTML), S;
        }, Bs = (w) => {
          const S = {}, A = w.querySelector("swal-input");
          A && (vn(A, ["type", "label", "placeholder", "value"]), S.input = A.getAttribute("type") || "text", A.hasAttribute("label") && (S.inputLabel = A.getAttribute("label")), A.hasAttribute("placeholder") && (S.inputPlaceholder = A.getAttribute("placeholder")), A.hasAttribute("value") && (S.inputValue = A.getAttribute("value")));
          const H = w.querySelectorAll("swal-input-option");
          return H.length && (S.inputOptions = {}, g(H).forEach((ee) => {
            vn(ee, ["value"]);
            const he = ee.getAttribute("value"), ke = ee.innerHTML;
            S.inputOptions[he] = ke;
          })), S;
        }, Qn = (w, S) => {
          const A = {};
          for (const H in S) {
            const ee = S[H], he = w.querySelector(ee);
            he && (vn(he, []), A[ee.replace(/^swal-/, "")] = he.innerHTML.trim());
          }
          return A;
        }, Rs = (w) => {
          const S = Ao.concat(["swal-param", "swal-button", "swal-image", "swal-icon", "swal-input", "swal-input-option"]);
          g(w.children).forEach((A) => {
            const H = A.tagName.toLowerCase();
            S.indexOf(H) === -1 && v("Unrecognized element <".concat(H, ">"));
          });
        }, vn = (w, S) => {
          g(w.attributes).forEach((A) => {
            S.indexOf(A.name) === -1 && v(['Unrecognized attribute "'.concat(A.name, '" on <').concat(w.tagName.toLowerCase(), ">."), "".concat(S.length ? "Allowed attributes are: ".concat(S.join(", ")) : "To set the value, use HTML within the element.")]);
          });
        };
        var Pi = { email: (w, S) => /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(w) ? Promise.resolve() : Promise.resolve(S || "Invalid email address"), url: (w, S) => /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(w) ? Promise.resolve() : Promise.resolve(S || "Invalid URL") };
        function fr(w) {
          (function(S) {
            S.inputValidator || Object.keys(Pi).forEach((A) => {
              S.input === A && (S.inputValidator = Pi[A]);
            });
          })(w), w.showLoaderOnConfirm && !w.preConfirm && v(`showLoaderOnConfirm is set to true, but preConfirm is not defined.
showLoaderOnConfirm should be used together with preConfirm, see usage example:
https://sweetalert2.github.io/#ajax-request`), function(S) {
            (!S.target || typeof S.target == "string" && !document.querySelector(S.target) || typeof S.target != "string" && !S.target.appendChild) && (v('Target parameter is not valid, defaulting to "body"'), S.target = "body");
          }(w), typeof w.title == "string" && (w.title = w.title.split(`
`).join("<br />")), Os(w);
        }
        class ei {
          constructor(S, A) {
            this.callback = S, this.remaining = A, this.running = !1, this.start();
          }
          start() {
            return this.running || (this.running = !0, this.started = /* @__PURE__ */ new Date(), this.id = setTimeout(this.callback, this.remaining)), this.remaining;
          }
          stop() {
            return this.running && (this.running = !1, clearTimeout(this.id), this.remaining -= (/* @__PURE__ */ new Date()).getTime() - this.started.getTime()), this.remaining;
          }
          increase(S) {
            const A = this.running;
            return A && this.stop(), this.remaining += S, A && this.start(), this.remaining;
          }
          getTimerLeft() {
            return this.running && (this.stop(), this.start()), this.remaining;
          }
          isRunning() {
            return this.running;
          }
        }
        const mr = () => {
          Oo.previousBodyPadding === null && document.body.scrollHeight > window.innerHeight && (Oo.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right")), document.body.style.paddingRight = "".concat(Oo.previousBodyPadding + (() => {
            const w = document.createElement("div");
            w.className = B["scrollbar-measure"], document.body.appendChild(w);
            const S = w.getBoundingClientRect().width - w.clientWidth;
            return document.body.removeChild(w), S;
          })(), "px"));
        }, ft = () => {
          const w = navigator.userAgent, S = !!w.match(/iPad/i) || !!w.match(/iPhone/i), A = !!w.match(/WebKit/i);
          S && A && !w.match(/CriOS/i) && oe().scrollHeight > window.innerHeight - 44 && (Z().style.paddingBottom = "".concat(44, "px"));
        }, Eo = () => {
          const w = Z();
          let S;
          w.ontouchstart = (A) => {
            S = yn(A);
          }, w.ontouchmove = (A) => {
            S && (A.preventDefault(), A.stopPropagation());
          };
        }, yn = (w) => {
          const S = w.target, A = Z();
          return !(Is(w) || Ns(w) || S !== A && (Lo(A) || S.tagName === "INPUT" || S.tagName === "TEXTAREA" || Lo(je()) && je().contains(S)));
        }, Is = (w) => w.touches && w.touches.length && w.touches[0].touchType === "stylus", Ns = (w) => w.touches && w.touches.length > 1, ti = (w) => {
          const S = Z(), A = oe();
          typeof w.willOpen == "function" && w.willOpen(A);
          const H = window.getComputedStyle(document.body).overflowY;
          Ps(S, A, w), setTimeout(() => {
            wn(S, A);
          }, 10), Gn() && (gr(S, w.scrollbarPadding, H), g(document.body.children).forEach((ee) => {
            ee === Z() || ee.contains(Z()) || (ee.hasAttribute("aria-hidden") && ee.setAttribute("data-previous-aria-hidden", ee.getAttribute("aria-hidden")), ee.setAttribute("aria-hidden", "true"));
          })), Ri() || We.previousActiveElement || (We.previousActiveElement = document.activeElement), typeof w.didOpen == "function" && setTimeout(() => w.didOpen(A)), Wt(S, B["no-transition"]);
        }, Hi = (w) => {
          const S = oe();
          if (w.target !== S)
            return;
          const A = Z();
          S.removeEventListener(ut, Hi), A.style.overflowY = "auto";
        }, wn = (w, S) => {
          ut && Ut(S) ? (w.style.overflowY = "hidden", S.addEventListener(ut, Hi)) : w.style.overflowY = "auto";
        }, gr = (w, S, A) => {
          (() => {
            if ((/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1) && !bt(document.body, B.iosfix)) {
              const H = document.body.scrollTop;
              document.body.style.top = "".concat(-1 * H, "px"), ze(document.body, B.iosfix), Eo(), ft();
            }
          })(), S && A !== "hidden" && mr(), setTimeout(() => {
            w.scrollTop = 0;
          });
        }, Ps = (w, S, A) => {
          ze(w, A.showClass.backdrop), S.style.setProperty("opacity", "0", "important"), qt(S, "grid"), setTimeout(() => {
            ze(S, A.showClass.popup), S.style.removeProperty("opacity");
          }, 10), ze([document.documentElement, document.body], B.shown), A.heightAuto && A.backdrop && !A.toast && ze([document.documentElement, document.body], B["height-auto"]);
        }, Pn = (w) => {
          let S = oe();
          S || new De(), S = oe();
          const A = In();
          Ri() ? Xt(fe()) : _t(S, w), qt(A), S.setAttribute("data-loading", !0), S.setAttribute("aria-busy", !0), S.focus();
        }, _t = (w, S) => {
          const A = mn(), H = In();
          !S && Jt(ko()) && (S = ko()), qt(A), S && (Xt(S), H.setAttribute("data-button-to-replace", S.className)), H.parentNode.insertBefore(H, S), ze([w, A], B.loading);
        }, br = (w) => w.checked ? 1 : 0, zo = (w) => w.checked ? w.value : null, Hs = (w) => w.files.length ? w.getAttribute("multiple") !== null ? w.files : w.files[0] : null, js = (w, S) => {
          const A = oe(), H = (ee) => ao[S.input](A, kn(ee), S);
          M(S.inputOptions) || Y(S.inputOptions) ? (Pn(ko()), O(S.inputOptions).then((ee) => {
            w.hideLoading(), H(ee);
          })) : typeof S.inputOptions == "object" ? H(S.inputOptions) : x("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(typeof S.inputOptions));
        }, so = (w, S) => {
          const A = w.getInput();
          Xt(A), O(S.inputValue).then((H) => {
            A.value = S.input === "number" ? parseFloat(H) || 0 : "".concat(H), qt(A), A.focus(), w.hideLoading();
          }).catch((H) => {
            x("Error in inputValue promise: ".concat(H)), A.value = "", qt(A), A.focus(), w.hideLoading();
          });
        }, ao = { select: (w, S, A) => {
          const H = ce(w, B.select), ee = (he, ke, Ee) => {
            const Ae = document.createElement("option");
            Ae.value = Ee, xt(Ae, ke), Ae.selected = Vr(Ee, A.inputValue), he.appendChild(Ae);
          };
          S.forEach((he) => {
            const ke = he[0], Ee = he[1];
            if (Array.isArray(Ee)) {
              const Ae = document.createElement("optgroup");
              Ae.label = ke, Ae.disabled = !1, H.appendChild(Ae), Ee.forEach((St) => ee(Ae, St[1], St[0]));
            } else
              ee(H, Ee, ke);
          }), H.focus();
        }, radio: (w, S, A) => {
          const H = ce(w, B.radio);
          S.forEach((he) => {
            const ke = he[0], Ee = he[1], Ae = document.createElement("input"), St = document.createElement("label");
            Ae.type = "radio", Ae.name = B.radio, Ae.value = ke, Vr(ke, A.inputValue) && (Ae.checked = !0);
            const nt = document.createElement("span");
            xt(nt, Ee), nt.className = B.label, St.appendChild(Ae), St.appendChild(nt), H.appendChild(St);
          });
          const ee = H.querySelectorAll("input");
          ee.length && ee[0].focus();
        } }, kn = (w) => {
          const S = [];
          return typeof Map < "u" && w instanceof Map ? w.forEach((A, H) => {
            let ee = A;
            typeof ee == "object" && (ee = kn(ee)), S.push([H, ee]);
          }) : Object.keys(w).forEach((A) => {
            let H = w[A];
            typeof H == "object" && (H = kn(H)), S.push([A, H]);
          }), S;
        }, Vr = (w, S) => S && S.toString() === w.toString();
        function Bo() {
          const w = Ue.innerParams.get(this);
          if (!w)
            return;
          const S = Ue.domCache.get(this);
          Xt(S.loader), Ri() ? w.icon && qt(fe()) : vr(S), Wt([S.popup, S.actions], B.loading), S.popup.removeAttribute("aria-busy"), S.popup.removeAttribute("data-loading"), S.confirmButton.disabled = !1, S.denyButton.disabled = !1, S.cancelButton.disabled = !1;
        }
        const vr = (w) => {
          const S = w.popup.getElementsByClassName(w.loader.getAttribute("data-button-to-replace"));
          S.length ? qt(S[0], "inline-block") : !Jt(ko()) && !Jt(on()) && !Jt(fn()) && Xt(w.actions);
        };
        var Wo = { swalPromiseResolve: /* @__PURE__ */ new WeakMap(), swalPromiseReject: /* @__PURE__ */ new WeakMap() };
        const ji = () => ko() && ko().click(), $i = (w) => {
          w.keydownTarget && w.keydownHandlerAdded && (w.keydownTarget.removeEventListener("keydown", w.keydownHandler, { capture: w.keydownListenerCapture }), w.keydownHandlerAdded = !1);
        }, yr = (w, S, A) => {
          const H = $o();
          if (H.length)
            return (S += A) === H.length ? S = 0 : S === -1 && (S = H.length - 1), H[S].focus();
          oe().focus();
        }, Yi = ["ArrowRight", "ArrowDown"], $s = ["ArrowLeft", "ArrowUp"], Ys = (w, S, A) => {
          const H = Ue.innerParams.get(w);
          H && (S.isComposing || S.keyCode === 229 || (H.stopKeydownPropagation && S.stopPropagation(), S.key === "Enter" ? oi(w, S, H) : S.key === "Tab" ? Fs(S) : [...Yi, ...$s].includes(S.key) ? zs(S.key) : S.key === "Escape" && Ws(S, H, A)));
        }, oi = (w, S, A) => {
          if (k(A.allowEnterKey) && S.target && w.getInput() && S.target.outerHTML === w.getInput().outerHTML) {
            if (["textarea", "file"].includes(A.input))
              return;
            ji(), S.preventDefault();
          }
        }, Fs = (w, S) => {
          const A = w.target, H = $o();
          let ee = -1;
          for (let he = 0; he < H.length; he++)
            if (A === H[he]) {
              ee = he;
              break;
            }
          w.shiftKey ? yr(0, ee, -1) : yr(0, ee, 1), w.stopPropagation(), w.preventDefault();
        }, zs = (w) => {
          if (![ko(), on(), fn()].includes(document.activeElement))
            return;
          const S = Yi.includes(w) ? "nextElementSibling" : "previousElementSibling";
          let A = document.activeElement;
          for (let H = 0; H < mn().children.length; H++) {
            if (A = A[S], !A)
              return;
            if (Jt(A) && A instanceof HTMLButtonElement)
              break;
          }
          A instanceof HTMLButtonElement && A.focus();
        }, Ws = (w, S, A) => {
          k(S.allowEscapeKey) && (w.preventDefault(), A(rn.esc));
        };
        function Gr(w, S, A, H) {
          Ri() ? Hn(w, H) : (gn(A).then(() => Hn(w, H)), $i(We)), /^((?!chrome|android).)*safari/i.test(navigator.userAgent) ? (S.setAttribute("style", "display:none !important"), S.removeAttribute("class"), S.innerHTML = "") : S.remove(), Gn() && (Oo.previousBodyPadding !== null && (document.body.style.paddingRight = "".concat(Oo.previousBodyPadding, "px"), Oo.previousBodyPadding = null), (() => {
            if (bt(document.body, B.iosfix)) {
              const ee = parseInt(document.body.style.top, 10);
              Wt(document.body, B.iosfix), document.body.style.top = "", document.body.scrollTop = -1 * ee;
            }
          })(), qr()), Wt([document.documentElement, document.body], [B.shown, B["height-auto"], B["no-backdrop"], B["toast-shown"]]);
        }
        function Fi(w) {
          w = wr(w);
          const S = Wo.swalPromiseResolve.get(this), A = Us(this);
          this.isAwaitingPromise() ? w.isDismissed || (ni(this), S(w)) : A && S(w);
        }
        const Us = (w) => {
          const S = oe();
          if (!S)
            return !1;
          const A = Ue.innerParams.get(w);
          if (!A || bt(S, A.hideClass.popup))
            return !1;
          Wt(S, A.showClass.popup), ze(S, A.hideClass.popup);
          const H = Z();
          return Wt(H, A.showClass.backdrop), ze(H, A.hideClass.backdrop), ii(w, S, A), !0;
        }, ni = (w) => {
          w.isAwaitingPromise() && (Ue.awaitingPromise.delete(w), Ue.innerParams.get(w) || w._destroy());
        }, wr = (w) => w === void 0 ? { isConfirmed: !1, isDenied: !1, isDismissed: !0 } : Object.assign({ isConfirmed: !1, isDenied: !1, isDismissed: !1 }, w), ii = (w, S, A) => {
          const H = Z(), ee = ut && Ut(S);
          typeof A.willClose == "function" && A.willClose(S), ee ? kr(w, S, H, A.returnFocus, A.didClose) : Gr(w, H, A.returnFocus, A.didClose);
        }, kr = (w, S, A, H, ee) => {
          We.swalCloseEventFinishedCallback = Gr.bind(null, w, A, H, ee), S.addEventListener(ut, function(he) {
            he.target === S && (We.swalCloseEventFinishedCallback(), delete We.swalCloseEventFinishedCallback);
          });
        }, Hn = (w, S) => {
          setTimeout(() => {
            typeof S == "function" && S.bind(w.params)(), w._destroy();
          });
        };
        function zi(w, S, A) {
          const H = Ue.domCache.get(w);
          S.forEach((ee) => {
            H[ee].disabled = A;
          });
        }
        function Wi(w, S) {
          if (!w)
            return !1;
          if (w.type === "radio") {
            const A = w.parentNode.parentNode.querySelectorAll("input");
            for (let H = 0; H < A.length; H++)
              A[H].disabled = S;
          } else
            w.disabled = S;
        }
        const ri = (w) => {
          const S = {};
          return Object.keys(w).forEach((A) => {
            d(A) ? S[A] = w[A] : v("Invalid parameter to update: ".concat(A));
          }), S;
        }, qs = (w) => {
          Zr(w), delete w.params, delete We.keydownHandler, delete We.keydownTarget, delete We.currentInstance;
        }, Zr = (w) => {
          w.isAwaitingPromise() ? (xr(Ue, w), Ue.awaitingPromise.set(w, !0)) : (xr(Wo, w), xr(Ue, w));
        }, xr = (w, S) => {
          for (const A in w)
            w[A].delete(S);
        };
        var Ro = Object.freeze({ hideLoading: Bo, disableLoading: Bo, getInput: function(w) {
          const S = Ue.innerParams.get(w || this), A = Ue.domCache.get(w || this);
          return A ? ir(A.popup, S.input) : null;
        }, close: Fi, isAwaitingPromise: function() {
          return !!Ue.awaitingPromise.get(this);
        }, rejectPromise: function(w) {
          const S = Wo.swalPromiseReject.get(this);
          ni(this), S && S(w);
        }, handleAwaitingPromise: ni, closePopup: Fi, closeModal: Fi, closeToast: Fi, enableButtons: function() {
          zi(this, ["confirmButton", "denyButton", "cancelButton"], !1);
        }, disableButtons: function() {
          zi(this, ["confirmButton", "denyButton", "cancelButton"], !0);
        }, enableInput: function() {
          return Wi(this.getInput(), !1);
        }, disableInput: function() {
          return Wi(this.getInput(), !0);
        }, showValidationMessage: function(w) {
          const S = Ue.domCache.get(this), A = Ue.innerParams.get(this);
          xt(S.validationMessage, w), S.validationMessage.className = B["validation-message"], A.customClass && A.customClass.validationMessage && ze(S.validationMessage, A.customClass.validationMessage), qt(S.validationMessage);
          const H = this.getInput();
          H && (H.setAttribute("aria-invalid", !0), H.setAttribute("aria-describedby", B["validation-message"]), Yr(H), ze(H, B.inputerror));
        }, resetValidationMessage: function() {
          const w = Ue.domCache.get(this);
          w.validationMessage && Xt(w.validationMessage);
          const S = this.getInput();
          S && (S.removeAttribute("aria-invalid"), S.removeAttribute("aria-describedby"), Wt(S, B.inputerror));
        }, getProgressSteps: function() {
          return Ue.domCache.get(this).progressSteps;
        }, update: function(w) {
          const S = oe(), A = Ue.innerParams.get(this);
          if (!S || bt(S, A.hideClass.popup))
            return v("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.");
          const H = ri(w), ee = Object.assign({}, A, H);
          nn(this, ee), Ue.innerParams.set(this, ee), Object.defineProperties(this, { params: { value: Object.assign({}, this.params, w), writable: !1, enumerable: !0 } });
        }, _destroy: function() {
          const w = Ue.domCache.get(this), S = Ue.innerParams.get(this);
          S ? (w.popup && We.swalCloseEventFinishedCallback && (We.swalCloseEventFinishedCallback(), delete We.swalCloseEventFinishedCallback), We.deferDisposalTimer && (clearTimeout(We.deferDisposalTimer), delete We.deferDisposalTimer), typeof S.didDestroy == "function" && S.didDestroy(), qs(this)) : Zr(this);
        } });
        const Ui = (w, S) => {
          const A = Ue.innerParams.get(w);
          if (!A.input)
            return x('The "input" parameter is needed to be set when using returnInputValueOn'.concat(p(S)));
          const H = ((ee, he) => {
            const ke = ee.getInput();
            if (!ke)
              return null;
            switch (he.input) {
              case "checkbox":
                return br(ke);
              case "radio":
                return zo(ke);
              case "file":
                return Hs(ke);
              default:
                return he.inputAutoTrim ? ke.value.trim() : ke.value;
            }
          })(w, A);
          A.inputValidator ? si(w, H, S) : w.getInput().checkValidity() ? S === "deny" ? Cr(w, H) : i(w, H) : (w.enableButtons(), w.showValidationMessage(A.validationMessage));
        }, si = (w, S, A) => {
          const H = Ue.innerParams.get(w);
          w.disableInput(), Promise.resolve().then(() => O(H.inputValidator(S, H.validationMessage))).then((ee) => {
            w.enableButtons(), w.enableInput(), ee ? w.showValidationMessage(ee) : A === "deny" ? Cr(w, S) : i(w, S);
          });
        }, Cr = (w, S) => {
          const A = Ue.innerParams.get(w || void 0);
          A.showLoaderOnDeny && Pn(on()), A.preDeny ? (Ue.awaitingPromise.set(w || void 0, !0), Promise.resolve().then(() => O(A.preDeny(S, A.validationMessage))).then((H) => {
            H === !1 ? (w.hideLoading(), ni(w)) : w.closePopup({ isDenied: !0, value: H === void 0 ? S : H });
          }).catch((H) => Xr(w || void 0, H))) : w.closePopup({ isDenied: !0, value: S });
        }, Kr = (w, S) => {
          w.closePopup({ isConfirmed: !0, value: S });
        }, Xr = (w, S) => {
          w.rejectPromise(S);
        }, i = (w, S) => {
          const A = Ue.innerParams.get(w || void 0);
          A.showLoaderOnConfirm && Pn(), A.preConfirm ? (w.resetValidationMessage(), Ue.awaitingPromise.set(w || void 0, !0), Promise.resolve().then(() => O(A.preConfirm(S, A.validationMessage))).then((H) => {
            Jt(io()) || H === !1 ? (w.hideLoading(), ni(w)) : Kr(w, H === void 0 ? S : H);
          }).catch((H) => Xr(w || void 0, H))) : Kr(w, S);
        }, s = (w, S, A) => {
          S.popup.onclick = () => {
            const H = Ue.innerParams.get(w);
            H && (l(H) || H.timer || H.input) || A(rn.close);
          };
        }, l = (w) => w.showConfirmButton || w.showDenyButton || w.showCancelButton || w.showCloseButton;
        let h = !1;
        const f = (w) => {
          w.popup.onmousedown = () => {
            w.container.onmouseup = function(S) {
              w.container.onmouseup = void 0, S.target === w.container && (h = !0);
            };
          };
        }, m = (w) => {
          w.container.onmousedown = () => {
            w.popup.onmouseup = function(S) {
              w.popup.onmouseup = void 0, (S.target === w.popup || w.popup.contains(S.target)) && (h = !0);
            };
          };
        }, b = (w, S, A) => {
          S.container.onclick = (H) => {
            const ee = Ue.innerParams.get(w);
            h ? h = !1 : H.target === S.container && k(ee.allowOutsideClick) && A(rn.backdrop);
          };
        }, E = (w) => w instanceof Element || ((S) => typeof S == "object" && S.jquery)(w), _ = () => {
          if (We.timeout)
            return (() => {
              const w = Bi(), S = parseInt(window.getComputedStyle(w).width);
              w.style.removeProperty("transition"), w.style.width = "100%";
              const A = S / parseInt(window.getComputedStyle(w).width) * 100;
              w.style.removeProperty("transition"), w.style.width = "".concat(A, "%");
            })(), We.timeout.stop();
        }, L = () => {
          if (We.timeout) {
            const w = We.timeout.start();
            return Qt(w), w;
          }
        };
        let W = !1;
        const q = {}, N = (w) => {
          for (let S = w.target; S && S !== document; S = S.parentNode)
            for (const A in q) {
              const H = S.getAttribute(A);
              if (H)
                return void q[A].fire({ template: H });
            }
        };
        var X = Object.freeze({ isValidParameter: z, isUpdatableParameter: d, isDeprecatedParameter: j, argsToParams: (w) => {
          const S = {};
          return typeof w[0] != "object" || E(w[0]) ? ["title", "html", "icon"].forEach((A, H) => {
            const ee = w[H];
            typeof ee == "string" || E(ee) ? S[A] = ee : ee !== void 0 && x("Unexpected type of ".concat(A, '! Expected "string" or "Element", got ').concat(typeof ee));
          }) : Object.assign(S, w[0]), S;
        }, isVisible: () => Jt(oe()), clickConfirm: ji, clickDeny: () => on() && on().click(), clickCancel: () => fn() && fn().click(), getContainer: Z, getPopup: oe, getTitle: Me, getHtmlContainer: je, getImage: Be, getIcon: fe, getInputLabel: () => le(B["input-label"]), getCloseButton: ro, getActions: mn, getConfirmButton: ko, getDenyButton: on, getCancelButton: fn, getLoader: In, getFooter: Nt, getTimerProgressBar: Bi, getFocusableElements: $o, getValidationMessage: io, isLoading: () => oe().hasAttribute("data-loading"), fire: function() {
          const w = this;
          for (var S = arguments.length, A = new Array(S), H = 0; H < S; H++)
            A[H] = arguments[H];
          return new w(...A);
        }, mixin: function(w) {
          return class extends this {
            _main(S, A) {
              return super._main(S, Object.assign({}, w, A));
            }
          };
        }, showLoading: Pn, enableLoading: Pn, getTimerLeft: () => We.timeout && We.timeout.getTimerLeft(), stopTimer: _, resumeTimer: L, toggleTimer: () => {
          const w = We.timeout;
          return w && (w.running ? _() : L());
        }, increaseTimer: (w) => {
          if (We.timeout) {
            const S = We.timeout.increase(w);
            return Qt(S, !0), S;
          }
        }, isTimerRunning: () => We.timeout && We.timeout.isRunning(), bindClickHandler: function() {
          q[arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "data-swal-template"] = this, W || (document.body.addEventListener("click", N), W = !0);
        } });
        let ge;
        class Ce {
          constructor() {
            if (typeof window > "u")
              return;
            ge = this;
            for (var S = arguments.length, A = new Array(S), H = 0; H < S; H++)
              A[H] = arguments[H];
            const ee = Object.freeze(this.constructor.argsToParams(A));
            Object.defineProperties(this, { params: { value: ee, writable: !1, enumerable: !0, configurable: !0 } });
            const he = this._main(this.params);
            Ue.promise.set(this, he);
          }
          _main(S) {
            let A = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            ((he) => {
              !he.backdrop && he.allowOutsideClick && v('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`');
              for (const ke in he)
                R(ke), he.toast && V(ke), K(ke);
            })(Object.assign({}, A, S)), We.currentInstance && (We.currentInstance._destroy(), Gn() && qr()), We.currentInstance = this;
            const H = Xe(S, A);
            fr(H), Object.freeze(H), We.timeout && (We.timeout.stop(), delete We.timeout), clearTimeout(We.restoreFocusTimeout);
            const ee = qe(this);
            return nn(this, H), Ue.innerParams.set(this, H), xe(this, ee, H);
          }
          then(S) {
            return Ue.promise.get(this).then(S);
          }
          finally(S) {
            return Ue.promise.get(this).finally(S);
          }
        }
        const xe = (w, S, A) => new Promise((H, ee) => {
          const he = (ke) => {
            w.closePopup({ isDismissed: !0, dismiss: ke });
          };
          Wo.swalPromiseResolve.set(w, H), Wo.swalPromiseReject.set(w, ee), S.confirmButton.onclick = () => ((ke) => {
            const Ee = Ue.innerParams.get(ke);
            ke.disableButtons(), Ee.input ? Ui(ke, "confirm") : i(ke, !0);
          })(w), S.denyButton.onclick = () => ((ke) => {
            const Ee = Ue.innerParams.get(ke);
            ke.disableButtons(), Ee.returnInputValueOnDeny ? Ui(ke, "deny") : Cr(ke, !1);
          })(w), S.cancelButton.onclick = () => ((ke, Ee) => {
            ke.disableButtons(), Ee(rn.cancel);
          })(w, he), S.closeButton.onclick = () => he(rn.close), ((ke, Ee, Ae) => {
            Ue.innerParams.get(ke).toast ? s(ke, Ee, Ae) : (f(Ee), m(Ee), b(ke, Ee, Ae));
          })(w, S, he), ((ke, Ee, Ae, St) => {
            $i(Ee), Ae.toast || (Ee.keydownHandler = (nt) => Ys(ke, nt, St), Ee.keydownTarget = Ae.keydownListenerCapture ? window : oe(), Ee.keydownListenerCapture = Ae.keydownListenerCapture, Ee.keydownTarget.addEventListener("keydown", Ee.keydownHandler, { capture: Ee.keydownListenerCapture }), Ee.keydownHandlerAdded = !0);
          })(w, We, A, he), ((ke, Ee) => {
            Ee.input === "select" || Ee.input === "radio" ? js(ke, Ee) : ["text", "email", "number", "tel", "textarea"].includes(Ee.input) && (M(Ee.inputValue) || Y(Ee.inputValue)) && (Pn(ko()), so(ke, Ee));
          })(w, A), ti(A), $t(We, A, he), Yt(S, A), setTimeout(() => {
            S.container.scrollTop = 0;
          });
        }), Xe = (w, S) => {
          const A = ((ee) => {
            const he = typeof ee.template == "string" ? document.querySelector(ee.template) : ee.template;
            if (!he)
              return {};
            const ke = he.content;
            return Rs(ke), Object.assign(dr(ke), hr(ke), ur(ke), pr(ke), Bs(ke), Qn(ke, Ao));
          })(w), H = Object.assign({}, I, S, A, w);
          return H.showClass = Object.assign({}, I.showClass, H.showClass), H.hideClass = Object.assign({}, I.hideClass, H.hideClass), H;
        }, qe = (w) => {
          const S = { popup: oe(), container: Z(), actions: mn(), confirmButton: ko(), denyButton: on(), cancelButton: fn(), loader: In(), closeButton: ro(), validationMessage: io(), progressSteps: Ke() };
          return Ue.domCache.set(w, S), S;
        }, $t = (w, S, A) => {
          const H = Bi();
          Xt(H), S.timer && (w.timeout = new ei(() => {
            A("timer"), delete w.timeout;
          }, S.timer), S.timerProgressBar && (qt(H), po(H, S, "timerProgressBar"), setTimeout(() => {
            w.timeout && w.timeout.running && Qt(S.timer);
          })));
        }, Yt = (w, S) => {
          if (!S.toast)
            return k(S.allowEnterKey) ? void (Se(w, S) || yr(0, -1, 1)) : lo();
        }, Se = (w, S) => S.focusDeny && Jt(w.denyButton) ? (w.denyButton.focus(), !0) : S.focusCancel && Jt(w.cancelButton) ? (w.cancelButton.focus(), !0) : !(!S.focusConfirm || !Jt(w.confirmButton) || (w.confirmButton.focus(), 0)), lo = () => {
          document.activeElement instanceof HTMLElement && typeof document.activeElement.blur == "function" && document.activeElement.blur();
        };
        Object.assign(Ce.prototype, Ro), Object.assign(Ce, X), Object.keys(Ro).forEach((w) => {
          Ce[w] = function() {
            if (ge)
              return ge[w](...arguments);
          };
        }), Ce.DismissReason = rn, Ce.version = "11.4.10";
        const De = Ce;
        return De.default = De, De;
      }(), this !== void 0 && this.Sweetalert2 && (this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2), typeof document < "u" && function(u, p) {
        var g = u.createElement("style");
        if (u.getElementsByTagName("head")[0].appendChild(g), g.styleSheet)
          g.styleSheet.disabled || (g.styleSheet.cssText = p);
        else
          try {
            g.innerHTML = p;
          } catch {
            g.innerText = p;
          }
      }(document, '.swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4!important;grid-row:1/4!important;grid-template-columns:1fr 99fr 1fr;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px hsla(0deg,0%,0%,.075),0 1px 2px hsla(0deg,0%,0%,.075),1px 2px 4px hsla(0deg,0%,0%,.075),1px 3px 8px hsla(0deg,0%,0%,.075),2px 4px 16px hsla(0deg,0%,0%,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:700}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-container{display:grid;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;box-sizing:border-box;grid-template-areas:"top-start     top            top-end" "center-start  center         center-end" "bottom-start  bottom-center  bottom-end";grid-template-rows:minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto);grid-template-rows:minmax(min-content,auto) minmax(min-content,auto) minmax(min-content,auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:0 0!important}.swal2-container.swal2-bottom-start,.swal2-container.swal2-center-start,.swal2-container.swal2-top-start{grid-template-columns:minmax(0,1fr) auto auto}.swal2-container.swal2-bottom,.swal2-container.swal2-center,.swal2-container.swal2-top{grid-template-columns:auto minmax(0,1fr) auto}.swal2-container.swal2-bottom-end,.swal2-container.swal2-center-end,.swal2-container.swal2-top-end{grid-template-columns:auto auto minmax(0,1fr)}.swal2-container.swal2-top-start>.swal2-popup{align-self:start}.swal2-container.swal2-top>.swal2-popup{grid-column:2;align-self:start;justify-self:center}.swal2-container.swal2-top-end>.swal2-popup,.swal2-container.swal2-top-right>.swal2-popup{grid-column:3;align-self:start;justify-self:end}.swal2-container.swal2-center-left>.swal2-popup,.swal2-container.swal2-center-start>.swal2-popup{grid-row:2;align-self:center}.swal2-container.swal2-center>.swal2-popup{grid-column:2;grid-row:2;align-self:center;justify-self:center}.swal2-container.swal2-center-end>.swal2-popup,.swal2-container.swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;align-self:center;justify-self:end}.swal2-container.swal2-bottom-left>.swal2-popup,.swal2-container.swal2-bottom-start>.swal2-popup{grid-column:1;grid-row:3;align-self:end}.swal2-container.swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;justify-self:center;align-self:end}.swal2-container.swal2-bottom-end>.swal2-popup,.swal2-container.swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;align-self:end;justify-self:end}.swal2-container.swal2-grow-fullscreen>.swal2-popup,.swal2-container.swal2-grow-row>.swal2-popup{grid-column:1/4;width:100%}.swal2-container.swal2-grow-column>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}.swal2-container.swal2-no-transition{transition:none!important}.swal2-popup{display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0,100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-title{position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 transparent #2778c4 transparent}.swal2-styled{margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px transparent;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}.swal2-styled.swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}.swal2-styled.swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}.swal2-styled.swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}.swal2-styled.swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled:focus{outline:0}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto!important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:2em auto 1em}.swal2-close{z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:0 0;color:#ccc;font-family:serif;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}.swal2-close:hover{transform:none;background:0 0;color:#f27474}.swal2-close:focus{outline:0;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:400;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em 2em 3px}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:inherit;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px transparent;color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file:-ms-input-placeholder,.swal2-input:-ms-input-placeholder,.swal2-textarea:-ms-input-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em 2em 3px;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-file{width:75%;margin-right:auto;margin-left:auto;background:inherit;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:inherit;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto 0}.swal2-validation-message{align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:"!";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:.25em solid transparent;border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-warning.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-warning.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .5s;animation:swal2-animate-i-mark .5s}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-info.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-info.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .8s;animation:swal2-animate-i-mark .8s}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-question.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-question.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-question-mark .8s;animation:swal2-animate-question-mark .8s}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:inherit;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}.swal2-no-war{display:flex;position:fixed;z-index:1061;top:0;left:0;align-items:center;justify-content:center;width:100%;height:3.375em;background:#20232a;color:#fff;text-align:center}.swal2-no-war a{color:#61dafb;text-decoration:none}.swal2-no-war a:hover{text-decoration:underline}@-webkit-keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@-webkit-keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@-webkit-keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@-webkit-keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@-webkit-keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-container{background-color:transparent!important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:transparent;pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}');
    } }, n = {};
    function r(c) {
      var u = n[c];
      if (u !== void 0)
        return u.exports;
      var p = n[c] = { id: c, exports: {} };
      return t[c].call(p.exports, p, p.exports, r), p.exports;
    }
    r.n = (c) => {
      var u = c && c.__esModule ? () => c.default : () => c;
      return r.d(u, { a: u }), u;
    }, r.d = (c, u) => {
      for (var p in u)
        r.o(u, p) && !r.o(c, p) && Object.defineProperty(c, p, { enumerable: !0, get: u[p] });
    }, r.o = (c, u) => Object.prototype.hasOwnProperty.call(c, u), r.nc = void 0;
    var a = {};
    return (() => {
      var c;
      r.d(a, { default: () => ne });
      var u = new Uint8Array(16);
      function p() {
        if (!c && !(c = typeof crypto < "u" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto < "u" && typeof msCrypto.getRandomValues == "function" && msCrypto.getRandomValues.bind(msCrypto)))
          throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
        return c(u);
      }
      const g = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i, v = function(le) {
        return typeof le == "string" && g.test(le);
      };
      for (var x = [], y = 0; y < 256; ++y)
        x.push((y + 256).toString(16).substr(1));
      const T = function(le, oe, fe) {
        var Me = (le = le || {}).random || (le.rng || p)();
        if (Me[6] = 15 & Me[6] | 64, Me[8] = 63 & Me[8] | 128, oe) {
          fe = fe || 0;
          for (var je = 0; je < 16; ++je)
            oe[fe + je] = Me[je];
          return oe;
        }
        return function(Be) {
          var Ke = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, io = (x[Be[Ke + 0]] + x[Be[Ke + 1]] + x[Be[Ke + 2]] + x[Be[Ke + 3]] + "-" + x[Be[Ke + 4]] + x[Be[Ke + 5]] + "-" + x[Be[Ke + 6]] + x[Be[Ke + 7]] + "-" + x[Be[Ke + 8]] + x[Be[Ke + 9]] + "-" + x[Be[Ke + 10]] + x[Be[Ke + 11]] + x[Be[Ke + 12]] + x[Be[Ke + 13]] + x[Be[Ke + 14]] + x[Be[Ke + 15]]).toLowerCase();
          if (!v(io))
            throw TypeError("Stringified UUID is invalid");
          return io;
        }(Me);
      };
      var k = r(455), M = r.n(k), O = r(40), Y = r.n(O), I = r(379), F = r.n(I), Q = r(795), U = r.n(Q), z = r(569), d = r.n(z), j = r(565), R = r.n(j), V = r(216), K = r.n(V), J = r(589), B = r.n(J), se = r(745), Z = {};
      Z.styleTagTransform = B(), Z.setAttributes = R(), Z.insert = d().bind(null, "head"), Z.domAPI = U(), Z.insertStyleElement = K(), F()(se.Z, Z), se.Z && se.Z.locals && se.Z.locals;
      class ne {
        static get enableLineBreaks() {
          return !0;
        }
        constructor({ data: oe, config: fe, api: Me, readOnly: je }) {
          this.api = Me, this.readOnly = je, this.config = fe || {}, console.log(this.config), console.log(this.config.EditorJsLibrary), this._CSS = { block: this.api.styles.block, wrapper: "ce-EditorJsColumns" }, this.readOnly || (this.onKeyUp = this.onKeyUp.bind(this)), this._data = {}, this.editors = {}, this.colWrapper = void 0, this.editors.cols = [], this.data = oe, Array.isArray(this.data.cols) ? this.editors.numberOfColumns = this.data.cols.length : (this.data.cols = [], this.editors.numberOfColumns = 2);
        }
        static get isReadOnlySupported() {
          return !0;
        }
        onKeyUp(oe) {
          console.log(oe), console.log("heyup"), oe.code === "Backspace" || oe.code;
        }
        get CSS() {
          return { settingsButton: this.api.styles.settingsButton, settingsButtonActive: this.api.styles.settingsButtonActive };
        }
        renderSettings() {
          return [{ icon: "2", label: "2 Columns", onActivate: () => {
            this._updateCols(2);
          } }, { icon: "3", label: "3 Columns", onActivate: () => {
            this._updateCols(3);
          } }, { icon: "R", label: "Roll Colls", onActivate: () => {
            this._rollCols();
          } }];
        }
        _rollCols() {
          this.data.cols.unshift(this.data.cols.pop()), this.editors.cols.unshift(this.editors.cols.pop()), this._rerender();
        }
        async _updateCols(oe) {
          oe == 2 && this.editors.numberOfColumns == 3 && (await M().fire({ title: "Are you sure?", text: "This will delete Column 3!", icon: "warning", showCancelButton: !0, confirmButtonColor: "#3085d6", cancelButtonColor: "#d33", confirmButtonText: "Yes, delete it!" })).isConfirmed && (this.editors.numberOfColumns = 2, this.data.cols.pop(), this.editors.cols.pop(), this._rerender()), oe == 3 && (this.editors.numberOfColumns = 3, this._rerender());
        }
        async _rerender() {
          await this.save();
          for (let oe = 0; oe < this.editors.cols.length; oe++)
            this.editors.cols[oe].destroy();
          this.editors.cols = [], this.colWrapper.innerHTML = "";
          for (let oe = 0; oe < this.editors.numberOfColumns; oe++) {
            let fe = document.createElement("div");
            fe.classList.add("ce-editorjsColumns_col"), fe.classList.add("editorjs_col_" + oe);
            let Me = T();
            fe.id = Me, this.colWrapper.appendChild(fe);
            let je = new this.config.EditorJsLibrary({ defaultBlock: "paragraph", holder: Me, tools: this.config.tools, data: this.data.cols[oe], readOnly: this.readOnly, minHeight: 50 });
            this.editors.cols.push(je);
          }
        }
        render() {
          this.colWrapper = document.createElement("div"), this.colWrapper.classList.add("ce-editorjsColumns_wrapper"), this.colWrapper.addEventListener("paste", (oe) => {
            oe.stopPropagation();
          }, !0), this.colWrapper.addEventListener("keydown", (oe) => {
            oe.key === "Enter" && (oe.preventDefault(), oe.stopImmediatePropagation(), oe.stopPropagation()), oe.key === "Tab" && (oe.preventDefault(), oe.stopImmediatePropagation(), oe.stopPropagation());
          });
          for (let oe = 0; oe < this.editors.cols.length; oe++)
            this.editors.cols[oe].destroy();
          this.editors.cols = [];
          for (let oe = 0; oe < this.editors.numberOfColumns; oe++) {
            let fe = document.createElement("div");
            fe.classList.add("ce-editorjsColumns_col"), fe.classList.add("editorjs_col_" + oe);
            let Me = T();
            fe.id = Me, this.colWrapper.appendChild(fe);
            let je = new this.config.EditorJsLibrary({ defaultBlock: "paragraph", holder: Me, tools: this.config.tools, data: this.data.cols[oe], readOnly: this.readOnly, minHeight: 50 });
            this.editors.cols.push(je);
          }
          return this.colWrapper;
        }
        async save() {
          if (!this.readOnly)
            for (let oe = 0; oe < this.editors.cols.length; oe++) {
              let fe = await this.editors.cols[oe].save();
              this.data.cols[oe] = fe;
            }
          return this.data;
        }
        static get toolbox() {
          return { icon: Y(), title: "Columns" };
        }
      }
    })(), a.default;
  })());
})(Cu);
var Wg = Cu.exports;
const Ug = /* @__PURE__ */ An(Wg);
var Su = { exports: {} };
/*! For license information please see editorjs-paragraph-linebreakable.bundle.js.LICENSE.txt */
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(self, () => (() => {
    var t = { 674: (c, u, p) => {
      p.d(u, { Z: () => T });
      var g = p(81), v = p.n(g), x = p(645), y = p.n(x)()(v());
      y.push([c.id, `.ce-paragraphLineBreakable {
  line-height: 1.6em;
  outline: none;
  /* background-color: #0091DB; */
  /* color:#fff; */
  /* padding: 10px; */
  /* margin : 15px; */
}
/* .ce-paragraphLineBreakable::before {
  content: "DSLE:";
  color: #fff;
  font-weight: bold;
  width:100%;
  display: inline-block;
}

.ce-paragraphLineBreakable[data-placeholder]:empty::before{
  content: attr(data-placeholder);
  color: #707684;
  font-weight: normal;
  opacity: 0;
} */
`, ""]);
      const T = y;
    }, 645: (c) => {
      c.exports = function(u) {
        var p = [];
        return p.toString = function() {
          return this.map(function(g) {
            var v = "", x = g[5] !== void 0;
            return g[4] && (v += "@supports (".concat(g[4], ") {")), g[2] && (v += "@media ".concat(g[2], " {")), x && (v += "@layer".concat(g[5].length > 0 ? " ".concat(g[5]) : "", " {")), v += u(g), x && (v += "}"), g[2] && (v += "}"), g[4] && (v += "}"), v;
          }).join("");
        }, p.i = function(g, v, x, y, T) {
          typeof g == "string" && (g = [[null, g, void 0]]);
          var k = {};
          if (x)
            for (var M = 0; M < this.length; M++) {
              var O = this[M][0];
              O != null && (k[O] = !0);
            }
          for (var Y = 0; Y < g.length; Y++) {
            var I = [].concat(g[Y]);
            x && k[I[0]] || (T !== void 0 && (I[5] === void 0 || (I[1] = "@layer".concat(I[5].length > 0 ? " ".concat(I[5]) : "", " {").concat(I[1], "}")), I[5] = T), v && (I[2] && (I[1] = "@media ".concat(I[2], " {").concat(I[1], "}")), I[2] = v), y && (I[4] ? (I[1] = "@supports (".concat(I[4], ") {").concat(I[1], "}"), I[4] = y) : I[4] = "".concat(y)), p.push(I));
          }
        }, p;
      };
    }, 81: (c) => {
      c.exports = function(u) {
        return u[1];
      };
    }, 379: (c) => {
      var u = [];
      function p(x) {
        for (var y = -1, T = 0; T < u.length; T++)
          if (u[T].identifier === x) {
            y = T;
            break;
          }
        return y;
      }
      function g(x, y) {
        for (var T = {}, k = [], M = 0; M < x.length; M++) {
          var O = x[M], Y = y.base ? O[0] + y.base : O[0], I = T[Y] || 0, F = "".concat(Y, " ").concat(I);
          T[Y] = I + 1;
          var Q = p(F), U = { css: O[1], media: O[2], sourceMap: O[3], supports: O[4], layer: O[5] };
          if (Q !== -1)
            u[Q].references++, u[Q].updater(U);
          else {
            var z = v(U, y);
            y.byIndex = M, u.splice(M, 0, { identifier: F, updater: z, references: 1 });
          }
          k.push(F);
        }
        return k;
      }
      function v(x, y) {
        var T = y.domAPI(y);
        return T.update(x), function(k) {
          if (k) {
            if (k.css === x.css && k.media === x.media && k.sourceMap === x.sourceMap && k.supports === x.supports && k.layer === x.layer)
              return;
            T.update(x = k);
          } else
            T.remove();
        };
      }
      c.exports = function(x, y) {
        var T = g(x = x || [], y = y || {});
        return function(k) {
          k = k || [];
          for (var M = 0; M < T.length; M++) {
            var O = p(T[M]);
            u[O].references--;
          }
          for (var Y = g(k, y), I = 0; I < T.length; I++) {
            var F = p(T[I]);
            u[F].references === 0 && (u[F].updater(), u.splice(F, 1));
          }
          T = Y;
        };
      };
    }, 569: (c) => {
      var u = {};
      c.exports = function(p, g) {
        var v = function(x) {
          if (u[x] === void 0) {
            var y = document.querySelector(x);
            if (window.HTMLIFrameElement && y instanceof window.HTMLIFrameElement)
              try {
                y = y.contentDocument.head;
              } catch {
                y = null;
              }
            u[x] = y;
          }
          return u[x];
        }(p);
        if (!v)
          throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
        v.appendChild(g);
      };
    }, 216: (c) => {
      c.exports = function(u) {
        var p = document.createElement("style");
        return u.setAttributes(p, u.attributes), u.insert(p, u.options), p;
      };
    }, 565: (c, u, p) => {
      c.exports = function(g) {
        var v = p.nc;
        v && g.setAttribute("nonce", v);
      };
    }, 795: (c) => {
      c.exports = function(u) {
        var p = u.insertStyleElement(u);
        return { update: function(g) {
          (function(v, x, y) {
            var T = "";
            y.supports && (T += "@supports (".concat(y.supports, ") {")), y.media && (T += "@media ".concat(y.media, " {"));
            var k = y.layer !== void 0;
            k && (T += "@layer".concat(y.layer.length > 0 ? " ".concat(y.layer) : "", " {")), T += y.css, k && (T += "}"), y.media && (T += "}"), y.supports && (T += "}");
            var M = y.sourceMap;
            M && typeof btoa < "u" && (T += `
/*# sourceMappingURL=data:application/json;base64,`.concat(btoa(unescape(encodeURIComponent(JSON.stringify(M)))), " */")), x.styleTagTransform(T, v, x.options);
          })(p, u, g);
        }, remove: function() {
          (function(g) {
            if (g.parentNode === null)
              return !1;
            g.parentNode.removeChild(g);
          })(p);
        } };
      };
    }, 589: (c) => {
      c.exports = function(u, p) {
        if (p.styleSheet)
          p.styleSheet.cssText = u;
        else {
          for (; p.firstChild; )
            p.removeChild(p.firstChild);
          p.appendChild(document.createTextNode(u));
        }
      };
    }, 0: (c) => {
      c.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0.2 -0.3 9 11.4" width="12" height="14"><path d="M0 2.77V.92A1 1 0 01.2.28C.35.1.56 0 .83 0h7.66c.28.01.48.1.63.28.14.17.21.38.21.64v1.85c0 .26-.08.48-.23.66-.15.17-.37.26-.66.26-.28 0-.5-.09-.64-.26a1 1 0 01-.21-.66V1.69H5.6v7.58h.5c.25 0 .45.08.6.23.17.16.25.35.25.6s-.08.45-.24.6a.87.87 0 01-.62.22H3.21a.87.87 0 01-.61-.22.78.78 0 01-.24-.6c0-.25.08-.44.24-.6a.85.85 0 01.61-.23h.5V1.7H1.73v1.08c0 .26-.08.48-.23.66-.15.17-.37.26-.66.26-.28 0-.5-.09-.64-.26A1 1 0 010 2.77z"></path></svg>';
    } }, n = {};
    function r(c) {
      var u = n[c];
      if (u !== void 0)
        return u.exports;
      var p = n[c] = { id: c, exports: {} };
      return t[c](p, p.exports, r), p.exports;
    }
    r.n = (c) => {
      var u = c && c.__esModule ? () => c.default : () => c;
      return r.d(u, { a: u }), u;
    }, r.d = (c, u) => {
      for (var p in u)
        r.o(u, p) && !r.o(c, p) && Object.defineProperty(c, p, { enumerable: !0, get: u[p] });
    }, r.o = (c, u) => Object.prototype.hasOwnProperty.call(c, u);
    var a = {};
    return (() => {
      r.d(a, { default: () => z });
      var c = r(379), u = r.n(c), p = r(795), g = r.n(p), v = r(569), x = r.n(v), y = r(565), T = r.n(y), k = r(216), M = r.n(k), O = r(589), Y = r.n(O), I = r(674), F = {};
      F.styleTagTransform = Y(), F.setAttributes = T(), F.insert = x().bind(null, "head"), F.domAPI = g(), F.insertStyleElement = M(), u()(I.Z, F), I.Z && I.Z.locals && I.Z.locals;
      var Q = r(0), U = r.n(Q);
      class z {
        static get DEFAULT_PLACEHOLDER() {
          return "Hello :)";
        }
        static get enableLineBreaks() {
          return !0;
        }
        constructor({ data: j, config: R, api: V, readOnly: K }) {
          this.api = V, this.readOnly = K, this._CSS = { block: this.api.styles.block, wrapper: "ce-paragraphLineBreakable" }, this.readOnly || (this.onKeyUp = this.onKeyUp.bind(this)), this._placeholder = R.placeholder ? R.placeholder : z.DEFAULT_PLACEHOLDER, this._data = {}, this._element = this.drawView(), this._preserveBlank = R.preserveBlank !== void 0 && R.preserveBlank, this.data = j;
        }
        onKeyUp(j) {
          if (j.code !== "Backspace" && j.code !== "Delete")
            return;
          const { textContent: R } = this._element;
          R === "" && (this._element.innerHTML = "");
        }
        drawView() {
          let j = document.createElement("DIV");
          return j.classList.add(this._CSS.wrapper, this._CSS.block), j.contentEditable = !1, j.dataset.placeholder = this.api.i18n.t(this._placeholder), this.readOnly || (j.contentEditable = !0, j.addEventListener("keyup", this.onKeyUp)), j;
        }
        render() {
          return this._element;
        }
        merge(j) {
          let R = { text: this.data.text + j.text };
          this.data = R;
        }
        validate(j) {
          return !(j.text.trim() === "" && !this._preserveBlank);
        }
        save(j) {
          return { text: j.innerHTML };
        }
        onPaste(j) {
          const R = { text: j.detail.data.innerHTML };
          this.data = R;
        }
        static get conversionConfig() {
          return { export: "text", import: "text" };
        }
        static get sanitize() {
          return { text: { br: !0, div: !0 } };
        }
        static get isReadOnlySupported() {
          return !0;
        }
        get data() {
          let j = this._element.innerHTML;
          return this._data.text = j, this._data;
        }
        set data(j) {
          this._data = j || {}, this._element.innerHTML = this._data.text || "";
        }
        static get pasteConfig() {
          return { tags: ["P"] };
        }
        static get toolbox() {
          return { icon: U(), title: "Paragraph" };
        }
      }
    })(), a.default;
  })());
})(Su);
var qg = Su.exports;
const Vg = /* @__PURE__ */ An(qg);
var Gg = { exports: {} };
(function(o, e) {
  (function(t, n) {
    o.exports = n();
  })(window, function() {
    return function(t) {
      var n = {};
      function r(a) {
        if (n[a])
          return n[a].exports;
        var c = n[a] = { i: a, l: !1, exports: {} };
        return t[a].call(c.exports, c, c.exports, r), c.l = !0, c.exports;
      }
      return r.m = t, r.c = n, r.d = function(a, c, u) {
        r.o(a, c) || Object.defineProperty(a, c, { enumerable: !0, get: u });
      }, r.r = function(a) {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(a, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(a, "__esModule", { value: !0 });
      }, r.t = function(a, c) {
        if (1 & c && (a = r(a)), 8 & c || 4 & c && typeof a == "object" && a && a.__esModule)
          return a;
        var u = /* @__PURE__ */ Object.create(null);
        if (r.r(u), Object.defineProperty(u, "default", { enumerable: !0, value: a }), 2 & c && typeof a != "string")
          for (var p in a)
            r.d(u, p, (function(g) {
              return a[g];
            }).bind(null, p));
        return u;
      }, r.n = function(a) {
        var c = a && a.__esModule ? function() {
          return a.default;
        } : function() {
          return a;
        };
        return r.d(c, "a", c), c;
      }, r.o = function(a, c) {
        return Object.prototype.hasOwnProperty.call(a, c);
      }, r.p = "/", r(r.s = 5);
    }([function(t, n, r) {
      var a = r(1);
      typeof a == "string" && (a = [[t.i, a, ""]]);
      var c = { hmr: !0, transform: void 0, insertInto: void 0 };
      r(3)(a, c), a.locals && (t.exports = a.locals);
    }, function(t, n, r) {
      (t.exports = r(2)(!1)).push([t.i, `.change-case-action {
    z-index: 90;
    user-select: none;
    -moz-user-select: none;
    -khtml-user-select: none;
    -webkit-user-select: none;
    -o-user-select: none;    
}

.change-case-tool {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    padding: 5px 10px;
    font-size: 14px;
    line-height: 20px;
    font-weight: 500;
    cursor: pointer;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
}

.change-case-tool:hover {
    background: #eff2f5;
}

.change-case-toolbar__label {
    color: #707684;
    font-size: 11px;
    font-weight: 500;
    letter-spacing: .33px;
    padding: 10px 10px 5px;
    text-transform: uppercase;
    cursor: pointer;
}`, ""]);
    }, function(t, n) {
      t.exports = function(r) {
        var a = [];
        return a.toString = function() {
          return this.map(function(c) {
            var u = function(p, g) {
              var v = p[1] || "", x = p[3];
              if (!x)
                return v;
              if (g && typeof btoa == "function") {
                var y = (k = x, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(k)))) + " */"), T = x.sources.map(function(M) {
                  return "/*# sourceURL=" + x.sourceRoot + M + " */";
                });
                return [v].concat(T).concat([y]).join(`
`);
              }
              var k;
              return [v].join(`
`);
            }(c, r);
            return c[2] ? "@media " + c[2] + "{" + u + "}" : u;
          }).join("");
        }, a.i = function(c, u) {
          typeof c == "string" && (c = [[null, c, ""]]);
          for (var p = {}, g = 0; g < this.length; g++) {
            var v = this[g][0];
            typeof v == "number" && (p[v] = !0);
          }
          for (g = 0; g < c.length; g++) {
            var x = c[g];
            typeof x[0] == "number" && p[x[0]] || (u && !x[2] ? x[2] = u : u && (x[2] = "(" + x[2] + ") and (" + u + ")"), a.push(x));
          }
        }, a;
      };
    }, function(t, n, r) {
      var a, c, u = {}, p = (a = function() {
        return window && document && document.all && !window.atob;
      }, function() {
        return c === void 0 && (c = a.apply(this, arguments)), c;
      }), g = function(j) {
        var R = {};
        return function(V) {
          if (typeof V == "function")
            return V();
          if (R[V] === void 0) {
            var K = (function(J) {
              return document.querySelector(J);
            }).call(this, V);
            if (window.HTMLIFrameElement && K instanceof window.HTMLIFrameElement)
              try {
                K = K.contentDocument.head;
              } catch {
                K = null;
              }
            R[V] = K;
          }
          return R[V];
        };
      }(), v = null, x = 0, y = [], T = r(4);
      function k(j, R) {
        for (var V = 0; V < j.length; V++) {
          var K = j[V], J = u[K.id];
          if (J) {
            J.refs++;
            for (var B = 0; B < J.parts.length; B++)
              J.parts[B](K.parts[B]);
            for (; B < K.parts.length; B++)
              J.parts.push(Q(K.parts[B], R));
          } else {
            var se = [];
            for (B = 0; B < K.parts.length; B++)
              se.push(Q(K.parts[B], R));
            u[K.id] = { id: K.id, refs: 1, parts: se };
          }
        }
      }
      function M(j, R) {
        for (var V = [], K = {}, J = 0; J < j.length; J++) {
          var B = j[J], se = R.base ? B[0] + R.base : B[0], Z = { css: B[1], media: B[2], sourceMap: B[3] };
          K[se] ? K[se].parts.push(Z) : V.push(K[se] = { id: se, parts: [Z] });
        }
        return V;
      }
      function O(j, R) {
        var V = g(j.insertInto);
        if (!V)
          throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
        var K = y[y.length - 1];
        if (j.insertAt === "top")
          K ? K.nextSibling ? V.insertBefore(R, K.nextSibling) : V.appendChild(R) : V.insertBefore(R, V.firstChild), y.push(R);
        else if (j.insertAt === "bottom")
          V.appendChild(R);
        else {
          if (typeof j.insertAt != "object" || !j.insertAt.before)
            throw new Error(`[Style Loader]

 Invalid value for parameter 'insertAt' ('options.insertAt') found.
 Must be 'top', 'bottom', or Object.
 (https://github.com/webpack-contrib/style-loader#insertat)
`);
          var J = g(j.insertInto + " " + j.insertAt.before);
          V.insertBefore(R, J);
        }
      }
      function Y(j) {
        if (j.parentNode === null)
          return !1;
        j.parentNode.removeChild(j);
        var R = y.indexOf(j);
        R >= 0 && y.splice(R, 1);
      }
      function I(j) {
        var R = document.createElement("style");
        return j.attrs.type === void 0 && (j.attrs.type = "text/css"), F(R, j.attrs), O(j, R), R;
      }
      function F(j, R) {
        Object.keys(R).forEach(function(V) {
          j.setAttribute(V, R[V]);
        });
      }
      function Q(j, R) {
        var V, K, J, B;
        if (R.transform && j.css) {
          if (!(B = R.transform(j.css)))
            return function() {
            };
          j.css = B;
        }
        if (R.singleton) {
          var se = x++;
          V = v || (v = I(R)), K = d.bind(null, V, se, !1), J = d.bind(null, V, se, !0);
        } else
          j.sourceMap && typeof URL == "function" && typeof URL.createObjectURL == "function" && typeof URL.revokeObjectURL == "function" && typeof Blob == "function" && typeof btoa == "function" ? (V = function(Z) {
            var ne = document.createElement("link");
            return Z.attrs.type === void 0 && (Z.attrs.type = "text/css"), Z.attrs.rel = "stylesheet", F(ne, Z.attrs), O(Z, ne), ne;
          }(R), K = (function(Z, ne, le) {
            var oe = le.css, fe = le.sourceMap, Me = ne.convertToAbsoluteUrls === void 0 && fe;
            (ne.convertToAbsoluteUrls || Me) && (oe = T(oe)), fe && (oe += `
/*# sourceMappingURL=data:application/json;base64,` + btoa(unescape(encodeURIComponent(JSON.stringify(fe)))) + " */");
            var je = new Blob([oe], { type: "text/css" }), Be = Z.href;
            Z.href = URL.createObjectURL(je), Be && URL.revokeObjectURL(Be);
          }).bind(null, V, R), J = function() {
            Y(V), V.href && URL.revokeObjectURL(V.href);
          }) : (V = I(R), K = (function(Z, ne) {
            var le = ne.css, oe = ne.media;
            if (oe && Z.setAttribute("media", oe), Z.styleSheet)
              Z.styleSheet.cssText = le;
            else {
              for (; Z.firstChild; )
                Z.removeChild(Z.firstChild);
              Z.appendChild(document.createTextNode(le));
            }
          }).bind(null, V), J = function() {
            Y(V);
          });
        return K(j), function(Z) {
          if (Z) {
            if (Z.css === j.css && Z.media === j.media && Z.sourceMap === j.sourceMap)
              return;
            K(j = Z);
          } else
            J();
        };
      }
      t.exports = function(j, R) {
        if (typeof DEBUG < "u" && DEBUG && typeof document != "object")
          throw new Error("The style-loader cannot be used in a non-browser environment");
        (R = R || {}).attrs = typeof R.attrs == "object" ? R.attrs : {}, R.singleton || typeof R.singleton == "boolean" || (R.singleton = p()), R.insertInto || (R.insertInto = "head"), R.insertAt || (R.insertAt = "bottom");
        var V = M(j, R);
        return k(V, R), function(K) {
          for (var J = [], B = 0; B < V.length; B++) {
            var se = V[B];
            (Z = u[se.id]).refs--, J.push(Z);
          }
          for (K && k(M(K, R), R), B = 0; B < J.length; B++) {
            var Z;
            if ((Z = J[B]).refs === 0) {
              for (var ne = 0; ne < Z.parts.length; ne++)
                Z.parts[ne]();
              delete u[Z.id];
            }
          }
        };
      };
      var U, z = (U = [], function(j, R) {
        return U[j] = R, U.filter(Boolean).join(`
`);
      });
      function d(j, R, V, K) {
        var J = V ? "" : K.css;
        if (j.styleSheet)
          j.styleSheet.cssText = z(R, J);
        else {
          var B = document.createTextNode(J), se = j.childNodes;
          se[R] && j.removeChild(se[R]), se.length ? j.insertBefore(B, se[R]) : j.appendChild(B);
        }
      }
    }, function(t, n) {
      t.exports = function(r) {
        var a = typeof window < "u" && window.location;
        if (!a)
          throw new Error("fixUrls requires window.location");
        if (!r || typeof r != "string")
          return r;
        var c = a.protocol + "//" + a.host, u = c + a.pathname.replace(/\/[^\/]*$/, "/");
        return r.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(p, g) {
          var v, x = g.trim().replace(/^"(.*)"$/, function(y, T) {
            return T;
          }).replace(/^'(.*)'$/, function(y, T) {
            return T;
          });
          return /^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(x) ? p : (v = x.indexOf("//") === 0 ? x : x.indexOf("/") === 0 ? c + x : u + x.replace(/^\.\//, ""), "url(" + JSON.stringify(v) + ")");
        });
      };
    }, function(t, n, r) {
      r.r(n), r(0);
      function a(p, g) {
        for (var v = 0; v < g.length; v++) {
          var x = g[v];
          x.enumerable = x.enumerable || !1, x.configurable = !0, "value" in x && (x.writable = !0), Object.defineProperty(p, x.key, x);
        }
      }
      function c(p, g, v) {
        return g && a(p.prototype, g), v && a(p, v), p;
      }
      r.d(n, "default", function() {
        return u;
      });
      var u = function() {
        function p(g) {
          var v = g.config, x = g.api;
          (function(y, T) {
            if (!(y instanceof T))
              throw new TypeError("Cannot call a class as a function");
          })(this, p), this.api = x, this.button = null, this.optionButtons = [], this._state = !0, this.selectedText = null, this.range = null, this._settings = v, this.CSS = { actions: "change-case-action", toolbarLabel: "change-case-toolbar__label", tool: "change-case-tool", toolbarBtnActive: this.api.styles.settingsButtonActive, inlineButton: this.api.styles.inlineToolButton }, this.caseOptions = { titleCase: "Title Case", lowerCase: "lower case", upperCase: "UPPER CASE", localeLowerCase: "localé lower casé", localeUpperCase: "LöCALE UPPER CASE", sentenceCase: "Sentence case", toggleCase: "tOOGLE cASE" };
        }
        return c(p, [{ key: "state", get: function() {
          return this._state;
        } }], [{ key: "isInline", get: function() {
          return !0;
        } }]), c(p, [{ key: "render", value: function() {
          return this.button = document.createElement("button"), this.button.type = "button", this.button.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 100 100" stroke="currentColor">
            <path d="m46.099 74.271-3.6868-13.686h-18.523l-3.6868 13.686h-11.605l17.934-57.653h13.17l18.001 57.653zm-6.2632-23.813q-5.0972-18.612-5.7524-21.056c-0.42199-1.6168-0.73293-2.9077-0.91061-3.8477q-1.1105 5.0133-6.5741 24.828z" stroke-width="1.1797"/>
            <path d="m87.355 74.271-2.4938-8.4556h-12.529l-2.4938 8.4556h-7.8496l12.131-35.619h8.9087l12.176 35.619zm-4.2365-14.712q-3.4478-11.499-3.891-13.009c-0.28544-0.99887-0.49576-1.7964-0.61595-2.3772q-0.75116 3.0973-4.4469 15.339z" stroke-width=".76265"/>
            </svg>`, this.button.classList.add(this.CSS.inlineButton), this.button;
        } }, { key: "checkState", value: function(g) {
          g.anchorNode;
        } }, { key: "convertCase", value: function(g, v) {
          var x = this;
          if (g) {
            var y = g.cloneContents();
            y && (y.childNodes.forEach(function(T) {
              if (T.nodeName === "#text")
                switch (v) {
                  case "titleCase":
                    T.textContent = T.textContent.replace(/\w\S*/g, function(k) {
                      return k.charAt(0).toUpperCase() + k.slice(1, k.length).toLowerCase();
                    });
                    break;
                  case "lowerCase":
                    T.textContent = function(k) {
                      return k.toLowerCase();
                    }(T.textContent);
                    break;
                  case "upperCase":
                    T.textContent = function(k) {
                      return k.toUpperCase();
                    }(T.textContent);
                    break;
                  case "localeLowerCase":
                    T.textContent = function(k, M) {
                      return k.toLocaleLowerCase(M);
                    }(T.textContent, x._settings.locale);
                    break;
                  case "localeUpperCase":
                    T.textContent = function(k, M) {
                      return k.toLocaleUpperCase(M);
                    }(T.textContent, x._settings.locale);
                    break;
                  case "sentenceCase":
                    T.textContent = function(k) {
                      return k.charAt(0).toUpperCase() + k.slice(1, k.length).toLowerCase();
                    }(T.textContent);
                    break;
                  case "toggleCase":
                    T.textContent = function(k) {
                      return k.replace(/\w\S*/g, function(M) {
                        return M.charAt(0).toLowerCase() + M.slice(1, M.length).toUpperCase();
                      });
                    }(T.textContent);
                }
            }), g.extractContents(), g.insertNode(y), this.api.inlineToolbar.close());
          }
        } }, { key: "surround", value: function(g) {
          this.selectedText = g.cloneContents(), this.actions.hidden = !this.actions.hidden, this.range = this.actions.hidden ? null : g, this.state = !this.actions.hidden;
        } }, { key: "renderActions", value: function() {
          var g = this;
          this.actions = document.createElement("div"), this.actions.classList.add(this.CSS.actions);
          var v = document.createElement("div");
          v.classList.add(this.CSS.toolbarLabel), v.innerHTML = "Change Case", this.actions.appendChild(v), this.optionButtons = Object.keys(this.caseOptions).map(function(Y) {
            var I = document.createElement("div");
            return I.classList.add(g.CSS.tool), I.dataset.mode = Y, I.innerHTML = g.caseOptions[Y], I;
          });
          var x = !0, y = !1, T = void 0;
          try {
            for (var k, M = function() {
              var Y = k.value;
              g.actions.appendChild(Y), g.api.listeners.on(Y, "click", function() {
                g.convertCase(g.range, Y.dataset.mode);
              });
            }, O = this.optionButtons[Symbol.iterator](); !(x = (k = O.next()).done); x = !0)
              M();
          } catch (Y) {
            y = !0, T = Y;
          } finally {
            try {
              x || O.return == null || O.return();
            } finally {
              if (y)
                throw T;
            }
          }
          return this.actions.hidden = !0, this.actions;
        } }, { key: "destroy", value: function() {
          var g = !0, v = !1, x = void 0;
          try {
            for (var y, T = this.optionButtons[Symbol.iterator](); !(g = (y = T.next()).done); g = !0) {
              var k = y.value;
              this.api.listeners.off(k, "click");
            }
          } catch (M) {
            v = !0, x = M;
          } finally {
            try {
              g || T.return == null || T.return();
            } finally {
              if (v)
                throw x;
            }
          }
        } }, { key: "state", set: function(g) {
          this._state = g, this.button.classList.toggle(this.CSS.toolbarBtnActive, g);
        } }, { key: "title", get: function() {
          return "Change Case";
        } }]), p;
      }();
    }]);
  });
})(Gg);
(function() {
  try {
    if (typeof document < "u") {
      var o = document.createElement("style");
      o.appendChild(document.createTextNode('.cdx-nested-list{margin:0;padding:0;outline:none;counter-reset:item;list-style:none}.cdx-nested-list__item{line-height:1.6em;display:flex;margin:2px 0}.cdx-nested-list__item [contenteditable]{outline:none}.cdx-nested-list__item-body{flex-grow:2}.cdx-nested-list__item-content,.cdx-nested-list__item-children{flex-basis:100%}.cdx-nested-list__item-content{word-break:break-word;white-space:pre-wrap}.cdx-nested-list__item:before{counter-increment:item;margin-right:5px;white-space:nowrap}.cdx-nested-list--ordered>.cdx-nested-list__item:before{content:counters(item,".") ". "}.cdx-nested-list--unordered>.cdx-nested-list__item:before{content:"•"}.cdx-nested-list__settings{display:flex}.cdx-nested-list__settings .cdx-settings-button{width:50%}')), document.head.appendChild(o);
    }
  } catch (e) {
    console.error("vite-plugin-css-injected-by-js", e);
  }
})();
function hs(o, e = null, t = {}) {
  const n = document.createElement(o);
  Array.isArray(e) ? n.classList.add(...e) : e && n.classList.add(e);
  for (const r in t)
    n[r] = t[r];
  return n;
}
function Nd(o) {
  const e = hs("div");
  return e.appendChild(o), e.innerHTML;
}
function Tu(o) {
  let e;
  return o.nodeType !== Node.ELEMENT_NODE ? e = o.textContent : (e = o.innerHTML, e = e.replaceAll("<br>", "")), e.trim().length === 0;
}
let Jr = class Kl {
  /**
   * Store internal properties
   */
  constructor() {
    this.savedFakeCaret = void 0;
  }
  /**
   * Saves caret position using hidden <span>
   *
   * @returns {void}
   */
  save() {
    const e = Kl.range, t = hs("span");
    t.hidden = !0, e.insertNode(t), this.savedFakeCaret = t;
  }
  /**
   * Restores the caret position saved by the save() method
   *
   * @returns {void}
   */
  restore() {
    if (!this.savedFakeCaret)
      return;
    const e = window.getSelection(), t = new Range();
    t.setStartAfter(this.savedFakeCaret), t.setEndAfter(this.savedFakeCaret), e.removeAllRanges(), e.addRange(t), setTimeout(() => {
      this.savedFakeCaret.remove();
    }, 150);
  }
  /**
   * Returns the first range
   *
   * @returns {Range|null}
   */
  static get range() {
    const e = window.getSelection();
    return e && e.rangeCount ? e.getRangeAt(0) : null;
  }
  /**
   * Extract content fragment from Caret position to the end of contenteditable element
   *
   * @returns {DocumentFragment|void}
   */
  static extractFragmentFromCaretPositionTillTheEnd() {
    const e = window.getSelection();
    if (!e.rangeCount)
      return;
    const t = e.getRangeAt(0);
    let n = t.startContainer;
    n.nodeType !== Node.ELEMENT_NODE && (n = n.parentNode);
    const r = n.closest("[contenteditable]");
    t.deleteContents();
    const a = t.cloneRange();
    return a.selectNodeContents(r), a.setStart(t.endContainer, t.endOffset), a.extractContents();
  }
  /**
   * Set focus to contenteditable or native input element
   *
   * @param {HTMLElement} element - element where to set focus
   * @param {boolean} atStart - where to set focus: at the start or at the end
   * @returns {void}
   */
  static focus(e, t = !0) {
    const n = document.createRange(), r = window.getSelection();
    n.selectNodeContents(e), n.collapse(t), r.removeAllRanges(), r.addRange(n);
  }
  /**
   * Check if the caret placed at the start of the contenteditable element
   *
   * @returns {void}
   */
  static isAtStart() {
    const e = window.getSelection();
    if (e.focusOffset > 0)
      return !1;
    const t = e.focusNode;
    return Kl.getHigherLevelSiblings(t, "left").every((n) => Tu(n));
  }
  /**
   * Get all first-level (first child of [contenteditabel]) siblings from passed node
   * Then you can check it for emptiness
   *
   * @example
   * <div contenteditable>
   * <p></p>                            |
   * <p></p>                            | left first-level siblings
   * <p></p>                            |
   * <blockquote><a><b>adaddad</b><a><blockquote>       <-- passed node for example <b>
   * <p></p>                            |
   * <p></p>                            | right first-level siblings
   * <p></p>                            |
   * </div>
   * @param {HTMLElement} from - element from which siblings should be searched
   * @param {'left' | 'right'} direction - direction of search
   * @returns {HTMLElement[]}
   */
  static getHigherLevelSiblings(e, t = "left") {
    let n = e;
    const r = [];
    for (; n.parentNode && n.parentNode.contentEditable !== "true"; )
      n = n.parentNode;
    const a = t === "left" ? "previousSibling" : "nextSibling";
    for (; n[a]; )
      n = n[a], r.push(n);
    return r;
  }
};
const Zg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><line x1="9" x2="19" y1="7" y2="7" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="9" x2="19" y1="12" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="9" x2="19" y1="17" y2="17" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M5.00001 17H4.99002"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M5.00001 12H4.99002"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M5.00001 7H4.99002"/></svg>', Pd = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><line x1="12" x2="19" y1="7" y2="7" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="12" x2="19" y1="12" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="12" x2="19" y1="17" y2="17" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7.79999 14L7.79999 7.2135C7.79999 7.12872 7.7011 7.0824 7.63597 7.13668L4.79999 9.5"/></svg>';
let Kg = class Xl {
  /**
   * Notify core that read-only mode is supported
   *
   * @returns {boolean}
   */
  static get isReadOnlySupported() {
    return !0;
  }
  /**
   * Allow to use native Enter behaviour
   *
   * @returns {boolean}
   * @public
   */
  static get enableLineBreaks() {
    return !0;
  }
  /**
   * Get Tool toolbox settings
   * icon - Tool icon's SVG
   * title - title to show in toolbox
   *
   * @returns {{icon: string, title: string}}
   */
  static get toolbox() {
    return {
      icon: Pd,
      title: "List"
    };
  }
  /**
   * Render plugin`s main Element and fill it with saved data
   *
   * @param {object} params - tool constructor options
   * @param {ListData} params.data - previously saved data
   * @param {object} params.config - user config for Tool
   * @param {object} params.api - Editor.js API
   * @param {boolean} params.readOnly - read-only mode flag
   */
  constructor({ data: e, config: t, api: n, readOnly: r }) {
    this.nodes = {
      wrapper: null
    }, this.api = n, this.readOnly = r, this.config = t, this.defaultListStyle = this.config.defaultStyle === "ordered" ? "ordered" : "unordered";
    const a = {
      style: this.defaultListStyle,
      items: []
    };
    this.data = e && Object.keys(e).length ? e : a, this.caret = new Jr();
  }
  /**
   * Returns list tag with items
   *
   * @returns {Element}
   * @public
   */
  render() {
    return this.nodes.wrapper = this.makeListWrapper(this.data.style, [this.CSS.baseBlock]), this.data.items.length ? this.appendItems(this.data.items, this.nodes.wrapper) : this.appendItems([{
      content: "",
      items: []
    }], this.nodes.wrapper), this.readOnly || this.nodes.wrapper.addEventListener("keydown", (e) => {
      switch (e.key) {
        case "Enter":
          this.enterPressed(e);
          break;
        case "Backspace":
          this.backspace(e);
          break;
        case "Tab":
          e.shiftKey ? this.shiftTab(e) : this.addTab(e);
          break;
      }
    }, !1), this.nodes.wrapper;
  }
  /**
   * Creates Block Tune allowing to change the list style
   *
   * @public
   * @returns {Array}
   */
  renderSettings() {
    return [
      {
        name: "unordered",
        label: this.api.i18n.t("Unordered"),
        icon: Zg
      },
      {
        name: "ordered",
        label: this.api.i18n.t("Ordered"),
        icon: Pd
      }
    ].map((e) => ({
      name: e.name,
      icon: e.icon,
      label: e.label,
      isActive: this.data.style === e.name,
      closeOnActivate: !0,
      onActivate: () => {
        this.listStyle = e.name;
      }
    }));
  }
  /**
   * On paste sanitzation config. Allow only tags that are allowed in the Tool.
   *
   * @returns {PasteConfig} - paste config.
   */
  static get pasteConfig() {
    return {
      tags: ["OL", "UL", "LI"]
    };
  }
  /**
   * On paste callback that is fired from Editor.
   *
   * @param {PasteEvent} event - event with pasted data
   */
  onPaste(e) {
    const t = e.detail.data;
    this.data = this.pasteHandler(t);
    const n = this.nodes.wrapper;
    n && n.parentNode.replaceChild(this.render(), n);
  }
  /**
   * Handle UL, OL and LI tags paste and returns List data
   *
   * @param {HTMLUListElement|HTMLOListElement|HTMLLIElement} element
   * @returns {ListData}
   */
  pasteHandler(e) {
    const { tagName: t } = e;
    let n, r;
    switch (t) {
      case "OL":
        n = "ordered", r = "ol";
        break;
      case "UL":
      case "LI":
        n = "unordered", r = "ul";
    }
    const a = {
      style: n,
      items: []
    }, c = (u) => Array.from(u.querySelectorAll(":scope > li")).map((p) => {
      var g;
      const v = p.querySelector(`:scope > ${r}`), x = v ? c(v) : [];
      return {
        content: ((g = p == null ? void 0 : p.firstChild) == null ? void 0 : g.textContent) || "",
        items: x
      };
    });
    return a.items = c(e), a;
  }
  /**
   * Renders children list
   *
   * @param {ListItem[]} items - items data to append
   * @param {Element} parentItem - where to append
   * @returns {void}
   */
  appendItems(e, t) {
    e.forEach((n) => {
      const r = this.createItem(n.content, n.items);
      t.appendChild(r);
    });
  }
  /**
   * Renders the single item
   *
   * @param {string} content - item content to render
   * @param {ListItem[]} [items] - children
   * @returns {Element}
   */
  createItem(e, t = []) {
    const n = hs("li", this.CSS.item), r = hs("div", this.CSS.itemBody), a = hs("div", this.CSS.itemContent, {
      innerHTML: e,
      contentEditable: !this.readOnly
    });
    return r.appendChild(a), n.appendChild(r), t && t.length > 0 && this.addChildrenList(n, t), n;
  }
  /**
   * Extracts tool's data from the DOM
   *
   * @returns {ListData}
   */
  save() {
    const e = (t) => Array.from(t.querySelectorAll(`:scope > .${this.CSS.item}`)).map((n) => {
      const r = n.querySelector(`.${this.CSS.itemChildren}`), a = this.getItemContent(n), c = r ? e(r) : [];
      return {
        content: a,
        items: c
      };
    });
    return {
      style: this.data.style,
      items: e(this.nodes.wrapper)
    };
  }
  /**
   * Append children list to passed item
   *
   * @param {Element} parentItem - item that should contain passed sub-items
   * @param {ListItem[]} items - sub items to append
   */
  addChildrenList(e, t) {
    const n = e.querySelector(`.${this.CSS.itemBody}`), r = this.makeListWrapper(void 0, [this.CSS.itemChildren]);
    this.appendItems(t, r), n.appendChild(r);
  }
  /**
   * Creates main <ul> or <ol> tag depended on style
   *
   * @param {string} [style] - 'ordered' or 'unordered'
   * @param {string[]} [classes] - additional classes to append
   * @returns {HTMLOListElement|HTMLUListElement}
   */
  makeListWrapper(e = this.listStyle, t = []) {
    const n = e === "ordered" ? "ol" : "ul", r = e === "ordered" ? this.CSS.wrapperOrdered : this.CSS.wrapperUnordered;
    return t.push(r), hs(n, [this.CSS.wrapper, ...t]);
  }
  /**
   * Styles
   *
   * @returns {object} - CSS classes names by keys
   * @private
   */
  get CSS() {
    return {
      baseBlock: this.api.styles.block,
      wrapper: "cdx-nested-list",
      wrapperOrdered: "cdx-nested-list--ordered",
      wrapperUnordered: "cdx-nested-list--unordered",
      item: "cdx-nested-list__item",
      itemBody: "cdx-nested-list__item-body",
      itemContent: "cdx-nested-list__item-content",
      itemChildren: "cdx-nested-list__item-children",
      settingsWrapper: "cdx-nested-list__settings",
      settingsButton: this.api.styles.settingsButton,
      settingsButtonActive: this.api.styles.settingsButtonActive
    };
  }
  /**
   * Get list style name
   *
   * @returns {string}
   */
  get listStyle() {
    return this.data.style || this.defaultListStyle;
  }
  /**
   * Set list style
   *
   * @param {string} style - new style to set
   */
  set listStyle(e) {
    const t = Array.from(this.nodes.wrapper.querySelectorAll(`.${this.CSS.wrapper}`));
    t.push(this.nodes.wrapper), t.forEach((n) => {
      n.classList.toggle(this.CSS.wrapperUnordered, e === "unordered"), n.classList.toggle(this.CSS.wrapperOrdered, e === "ordered");
    }), this.data.style = e;
  }
  /**
   * Returns current List item by the caret position
   *
   * @returns {Element}
   */
  get currentItem() {
    let e = window.getSelection().anchorNode;
    return e.nodeType !== Node.ELEMENT_NODE && (e = e.parentNode), e.closest(`.${this.CSS.item}`);
  }
  /**
   * Handles Enter keypress
   *
   * @param {KeyboardEvent} event - keydown
   * @returns {void}
   */
  enterPressed(e) {
    const t = this.currentItem;
    if (e.stopPropagation(), e.preventDefault(), e.isComposing)
      return;
    const n = this.getItemContent(t).trim().length === 0, r = t.parentNode === this.nodes.wrapper, a = t.nextElementSibling === null;
    if (r && a && n) {
      this.getOutOfList();
      return;
    } else if (a && n) {
      this.unshiftItem();
      return;
    }
    const c = Jr.extractFragmentFromCaretPositionTillTheEnd(), u = Nd(c), p = t.querySelector(`.${this.CSS.itemChildren}`), g = this.createItem(u, void 0);
    p && Array.from(p.querySelectorAll(`.${this.CSS.item}`)).length > 0 ? p.prepend(g) : t.after(g), this.focusItem(g);
  }
  /**
   * Decrease indentation of the current item
   *
   * @returns {void}
   */
  unshiftItem() {
    const e = this.currentItem, t = e.parentNode.closest(`.${this.CSS.item}`);
    if (!t)
      return;
    this.caret.save(), t.after(e), this.caret.restore();
    const n = t.querySelector(`.${this.CSS.itemChildren}`);
    n.children.length === 0 && n.remove();
  }
  /**
   * Return the item content
   *
   * @param {Element} item - item wrapper (<li>)
   * @returns {string}
   */
  getItemContent(e) {
    const t = e.querySelector(`.${this.CSS.itemContent}`);
    return Tu(t) ? "" : t.innerHTML;
  }
  /**
   * Sets focus to the item's content
   *
   * @param {Element} item - item (<li>) to select
   * @param {boolean} atStart - where to set focus: at the start or at the end
   * @returns {void}
   */
  focusItem(e, t = !0) {
    const n = e.querySelector(`.${this.CSS.itemContent}`);
    Jr.focus(n, t);
  }
  /**
   * Get out from List Tool by Enter on the empty last item
   *
   * @returns {void}
   */
  getOutOfList() {
    this.currentItem.remove(), this.api.blocks.insert(), this.api.caret.setToBlock(this.api.blocks.getCurrentBlockIndex());
  }
  /**
   * Handle backspace
   *
   * @param {KeyboardEvent} event - keydown
   */
  backspace(e) {
    if (!Jr.isAtStart())
      return;
    e.preventDefault();
    const t = this.currentItem, n = t.previousSibling, r = t.parentNode.closest(`.${this.CSS.item}`);
    if (!n && !r)
      return;
    e.stopPropagation();
    let a;
    if (n) {
      const v = n.querySelectorAll(`.${this.CSS.item}`);
      a = Array.from(v).pop() || n;
    } else
      a = r;
    const c = Jr.extractFragmentFromCaretPositionTillTheEnd(), u = Nd(c), p = a.querySelector(`.${this.CSS.itemContent}`);
    Jr.focus(p, !1), this.caret.save(), p.insertAdjacentHTML("beforeend", u);
    let g = t.querySelectorAll(`.${this.CSS.itemChildren} > .${this.CSS.item}`);
    g = Array.from(g), g = g.filter((v) => v.parentNode.closest(`.${this.CSS.item}`) === t), g.reverse().forEach((v) => {
      n ? a.after(v) : t.after(v);
    }), t.remove(), this.caret.restore();
  }
  /**
   * Add indentation to current item
   *
   * @param {KeyboardEvent} event - keydown
   */
  addTab(e) {
    e.stopPropagation(), e.preventDefault();
    const t = this.currentItem, n = t.previousSibling;
    if (!n)
      return;
    const r = n.querySelector(`.${this.CSS.itemChildren}`);
    if (this.caret.save(), r)
      r.appendChild(t);
    else {
      const a = this.makeListWrapper(void 0, [this.CSS.itemChildren]), c = n.querySelector(`.${this.CSS.itemBody}`);
      a.appendChild(t), c.appendChild(a);
    }
    this.caret.restore();
  }
  /**
   * Reduce indentation for current item
   *
   * @param {KeyboardEvent} event - keydown
   * @returns {void}
   */
  shiftTab(e) {
    e.stopPropagation(), e.preventDefault(), this.unshiftItem();
  }
  /**
   * Convert from list to text for conversionConfig
   *
   * @param {ListData} data
   * @returns {string}
   */
  static joinRecursive(e) {
    return e.items.map((t) => `${t.content} ${Xl.joinRecursive(t)}`).join("");
  }
  /**
   * Convert from text to list with import and export list to text
   */
  static get conversionConfig() {
    return {
      export: (e) => Xl.joinRecursive(e),
      import: (e) => ({
        items: [{
          content: e,
          items: []
        }],
        style: "unordered"
      })
    };
  }
};
(function() {
  try {
    if (typeof document < "u") {
      var o = document.createElement("style");
      o.appendChild(document.createTextNode('.cdx-checklist{gap:6px;display:flex;flex-direction:column}.cdx-checklist__item{display:flex;box-sizing:content-box;align-items:flex-start}.cdx-checklist__item-text{outline:none;flex-grow:1;line-height:1.57em}.cdx-checklist__item-checkbox{width:22px;height:22px;display:flex;align-items:center;margin-right:8px;margin-top:calc(.785em - 11px);cursor:pointer}.cdx-checklist__item-checkbox svg{opacity:0;height:20px;width:20px;position:absolute;left:-1px;top:-1px;max-height:20px}@media (hover: hover){.cdx-checklist__item-checkbox:not(.cdx-checklist__item-checkbox--no-hover):hover .cdx-checklist__item-checkbox-check svg{opacity:1}}.cdx-checklist__item-checkbox-check{cursor:pointer;display:inline-block;flex-shrink:0;position:relative;width:20px;height:20px;box-sizing:border-box;margin-left:0;border-radius:5px;border:1px solid #C9C9C9;background:#fff}.cdx-checklist__item-checkbox-check:before{content:"";position:absolute;top:0;right:0;bottom:0;left:0;border-radius:100%;background-color:#369fff;visibility:hidden;pointer-events:none;transform:scale(1);transition:transform .4s ease-out,opacity .4s}@media (hover: hover){.cdx-checklist__item--checked .cdx-checklist__item-checkbox:not(.cdx-checklist__item--checked .cdx-checklist__item-checkbox--no-hover):hover .cdx-checklist__item-checkbox-check{background:#0059AB;border-color:#0059ab}}.cdx-checklist__item--checked .cdx-checklist__item-checkbox-check{background:#369FFF;border-color:#369fff}.cdx-checklist__item--checked .cdx-checklist__item-checkbox-check svg{opacity:1}.cdx-checklist__item--checked .cdx-checklist__item-checkbox-check svg path{stroke:#fff}.cdx-checklist__item--checked .cdx-checklist__item-checkbox-check:before{opacity:0;visibility:visible;transform:scale(2.5)}')), document.head.appendChild(o);
    }
  } catch (e) {
    console.error("vite-plugin-css-injected-by-js", e);
  }
})();
const Xg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7 12L10.4884 15.8372C10.5677 15.9245 10.705 15.9245 10.7844 15.8372L17 9"/></svg>', Jg = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M9.2 12L11.0586 13.8586C11.1367 13.9367 11.2633 13.9367 11.3414 13.8586L14.7 10.5"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>';
function Hd() {
  const o = document.activeElement, e = window.getSelection().getRangeAt(0), t = e.cloneRange();
  return t.selectNodeContents(o), t.setStart(e.endContainer, e.endOffset), t.extractContents();
}
function Qg(o) {
  const e = document.createElement("div");
  return e.appendChild(o), e.innerHTML;
}
function Xs(o, e = null, t = {}) {
  const n = document.createElement(o);
  Array.isArray(e) ? n.classList.add(...e) : e && n.classList.add(e);
  for (const r in t)
    n[r] = t[r];
  return n;
}
function jd(o) {
  return o.innerHTML.replace("<br>", " ").trim();
}
function $d(o, e = !1, t = void 0) {
  const n = document.createRange(), r = window.getSelection();
  n.selectNodeContents(o), t !== void 0 && (n.setStart(o, t), n.setEnd(o, t)), n.collapse(e), r.removeAllRanges(), r.addRange(n);
}
Element.prototype.matches || (Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector);
Element.prototype.closest || (Element.prototype.closest = function(o) {
  let e = this;
  if (!document.documentElement.contains(e))
    return null;
  do {
    if (e.matches(o))
      return e;
    e = e.parentElement || e.parentNode;
  } while (e !== null && e.nodeType === 1);
  return null;
});
let eb = class {
  /**
   * Notify core that read-only mode is supported
   *
   * @returns {boolean}
   */
  static get isReadOnlySupported() {
    return !0;
  }
  /**
   * Allow to use native Enter behaviour
   *
   * @returns {boolean}
   * @public
   */
  static get enableLineBreaks() {
    return !0;
  }
  /**
   * Get Tool toolbox settings
   * icon - Tool icon's SVG
   * title - title to show in toolbox
   *
   * @returns {{icon: string, title: string}}
   */
  static get toolbox() {
    return {
      icon: Jg,
      title: "Checklist"
    };
  }
  /**
   * Allow Checkbox Tool to be converted to/from other block
   *
   * @returns {{export: Function, import: Function}}
   */
  static get conversionConfig() {
    return {
      /**
       * To create exported string from the checkbox, concatenate items by dot-symbol.
       *
       * @param {ChecklistData} data - checklist data to create a string from that
       * @returns {string}
       */
      export: (e) => e.items.map(({ text: t }) => t).join(". "),
      /**
       * To create a checklist from other block's string, just put it at the first item
       *
       * @param {string} string - string to create list tool data from that
       * @returns {ChecklistData}
       */
      import: (e) => ({
        items: [
          {
            text: e,
            checked: !1
          }
        ]
      })
    };
  }
  /**
   * Render plugin`s main Element and fill it with saved data
   *
   * @param {object} options - block constructor options
   * @param {ChecklistData} options.data - previously saved data
   * @param {object} options.config - user config for Tool
   * @param {object} options.api - Editor.js API
   * @param {boolean} options.readOnly - read only mode flag
   */
  constructor({ data: e, config: t, api: n, readOnly: r }) {
    this._elements = {
      wrapper: null,
      items: []
    }, this.readOnly = r, this.api = n, this.data = e || {};
  }
  /**
   * Returns checklist tag with items
   *
   * @returns {Element}
   */
  render() {
    return this._elements.wrapper = Xs("div", [this.CSS.baseBlock, this.CSS.wrapper]), this.data.items || (this.data.items = [
      {
        text: "",
        checked: !1
      }
    ]), this.data.items.forEach((e) => {
      const t = this.createChecklistItem(e);
      this._elements.wrapper.appendChild(t);
    }), this.readOnly ? this._elements.wrapper : (this._elements.wrapper.addEventListener("keydown", (e) => {
      const [t, n] = [13, 8];
      switch (e.keyCode) {
        case t:
          this.enterPressed(e);
          break;
        case n:
          this.backspace(e);
          break;
      }
    }, !1), this._elements.wrapper.addEventListener("click", (e) => {
      this.toggleCheckbox(e);
    }), this._elements.wrapper);
  }
  /**
   * Return Checklist data
   *
   * @returns {ChecklistData}
   */
  save() {
    let e = this.items.map((t) => {
      const n = this.getItemInput(t);
      return {
        text: jd(n),
        checked: t.classList.contains(this.CSS.itemChecked)
      };
    });
    return e = e.filter((t) => t.text.trim().length !== 0), {
      items: e
    };
  }
  /**
   * Validate data: check if Checklist has items
   *
   * @param {ChecklistData} savedData — data received after saving
   * @returns {boolean} false if saved data is not correct, otherwise true
   * @public
   */
  validate(e) {
    return !!e.items.length;
  }
  /**
   * Toggle checklist item state
   *
   * @param {MouseEvent} event - click
   * @returns {void}
   */
  toggleCheckbox(e) {
    const t = e.target.closest(`.${this.CSS.item}`), n = t.querySelector(`.${this.CSS.checkboxContainer}`);
    n.contains(e.target) && (t.classList.toggle(this.CSS.itemChecked), n.classList.add(this.CSS.noHover), n.addEventListener("mouseleave", () => this.removeSpecialHoverBehavior(n), { once: !0 }));
  }
  /**
   * Create Checklist items
   *
   * @param {ChecklistItem} item - data.item
   * @returns {Element} checkListItem - new element of checklist
   */
  createChecklistItem(e = {}) {
    const t = Xs("div", this.CSS.item), n = Xs("span", this.CSS.checkbox), r = Xs("div", this.CSS.checkboxContainer), a = Xs("div", this.CSS.textField, {
      innerHTML: e.text ? e.text : "",
      contentEditable: !this.readOnly
    });
    return e.checked && t.classList.add(this.CSS.itemChecked), n.innerHTML = Xg, r.appendChild(n), t.appendChild(r), t.appendChild(a), t;
  }
  /**
   * Append new elements to the list by pressing Enter
   *
   * @param {KeyboardEvent} event - keyboard event
   */
  enterPressed(e) {
    e.preventDefault();
    const t = this.items, n = document.activeElement.closest(`.${this.CSS.item}`);
    if (t.indexOf(n) === t.length - 1 && jd(this.getItemInput(n)).length === 0) {
      const u = this.api.blocks.getCurrentBlockIndex();
      n.remove(), this.api.blocks.insert(), this.api.caret.setToBlock(u + 1);
      return;
    }
    const r = Hd(), a = Qg(r), c = this.createChecklistItem({
      text: a,
      checked: !1
    });
    this._elements.wrapper.insertBefore(c, n.nextSibling), $d(this.getItemInput(c), !0);
  }
  /**
   * Handle backspace
   *
   * @param {KeyboardEvent} event - keyboard event
   */
  backspace(e) {
    const t = e.target.closest(`.${this.CSS.item}`), n = this.items.indexOf(t), r = this.items[n - 1];
    if (!r || window.getSelection().focusOffset !== 0)
      return;
    e.preventDefault();
    const a = Hd(), c = this.getItemInput(r), u = c.childNodes.length;
    c.appendChild(a), $d(c, void 0, u), t.remove();
  }
  /**
   * Styles
   *
   * @private
   * @returns {object<string>}
   */
  get CSS() {
    return {
      baseBlock: this.api.styles.block,
      wrapper: "cdx-checklist",
      item: "cdx-checklist__item",
      itemChecked: "cdx-checklist__item--checked",
      noHover: "cdx-checklist__item-checkbox--no-hover",
      checkbox: "cdx-checklist__item-checkbox-check",
      textField: "cdx-checklist__item-text",
      checkboxContainer: "cdx-checklist__item-checkbox"
    };
  }
  /**
   * Return all items elements
   *
   * @returns {Element[]}
   */
  get items() {
    return Array.from(this._elements.wrapper.querySelectorAll(`.${this.CSS.item}`));
  }
  /**
   * Removes class responsible for special hover behavior on an item
   * 
   * @private
   * @param {Element} el - item wrapper
   * @returns {Element}
   */
  removeSpecialHoverBehavior(e) {
    e.classList.remove(this.CSS.noHover);
  }
  /**
   * Find and return item's content editable element
   *
   * @private
   * @param {Element} el - item wrapper
   * @returns {Element}
   */
  getItemInput(e) {
    return e.querySelector(`.${this.CSS.textField}`);
  }
};
function Qo(o, e, t = {}) {
  const n = document.createElement(o);
  Array.isArray(e) ? n.classList.add(...e) : e && n.classList.add(e);
  for (const r in t)
    Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]);
  return n;
}
function Yd(o) {
  const e = o.getBoundingClientRect();
  return {
    y1: Math.floor(e.top + window.pageYOffset),
    x1: Math.floor(e.left + window.pageXOffset),
    x2: Math.floor(e.right + window.pageXOffset),
    y2: Math.floor(e.bottom + window.pageYOffset)
  };
}
function Fd(o, e) {
  const t = Yd(o), n = Yd(e);
  return {
    fromTopBorder: n.y1 - t.y1,
    fromLeftBorder: n.x1 - t.x1,
    fromRightBorder: t.x2 - n.x2,
    fromBottomBorder: t.y2 - n.y2
  };
}
function tb(o, e) {
  const t = o.getBoundingClientRect(), { width: n, height: r, x: a, y: c } = t, { clientX: u, clientY: p } = e;
  return {
    width: n,
    height: r,
    x: u - a,
    y: p - c
  };
}
function zd(o, e) {
  return e.parentNode.insertBefore(o, e);
}
function Wd(o, e = !0) {
  const t = document.createRange(), n = window.getSelection();
  t.selectNodeContents(o), t.collapse(e), n.removeAllRanges(), n.addRange(t);
}
let ob = class Go {
  /**
   * @param {object} options - constructor options
   * @param {PopoverItem[]} options.items - constructor options
   */
  constructor({ items: e }) {
    this.items = e, this.wrapper = void 0, this.itemEls = [];
  }
  /**
   * Set of CSS classnames used in popover
   *
   * @returns {object}
   */
  static get CSS() {
    return {
      popover: "tc-popover",
      popoverOpened: "tc-popover--opened",
      item: "tc-popover__item",
      itemHidden: "tc-popover__item--hidden",
      itemConfirmState: "tc-popover__item--confirm",
      itemIcon: "tc-popover__item-icon",
      itemLabel: "tc-popover__item-label"
    };
  }
  /**
   * Returns the popover element
   *
   * @returns {Element}
   */
  render() {
    return this.wrapper = Qo("div", Go.CSS.popover), this.items.forEach((e, t) => {
      const n = Qo("div", Go.CSS.item), r = Qo("div", Go.CSS.itemIcon, {
        innerHTML: e.icon
      }), a = Qo("div", Go.CSS.itemLabel, {
        textContent: e.label
      });
      e.onClick && n.addEventListener("click", e.onClick), n.dataset.index = t, n.appendChild(r), n.appendChild(a), this.wrapper.appendChild(n), this.itemEls.push(n);
    }), this.wrapper.addEventListener("click", (e) => {
      this.popoverClicked(e);
    }), this.wrapper;
  }
  /**
   * Popover wrapper click listener
   * Used to delegate clicks in items
   *
   * @returns {void}
   */
  popoverClicked(e) {
    e == null || e.stopPropagation();
    const t = e.target.closest(`.${Go.CSS.item}`);
    if (!t)
      return;
    const n = t.dataset.index, r = this.items[n];
    if (r.confirmationRequired && !this.hasConfirmationState(t)) {
      this.setConfirmationState(t);
      return;
    }
    r.onClick();
  }
  /**
   * Enable the confirmation state on passed item
   *
   * @returns {void}
   */
  setConfirmationState(e) {
    e.classList.add(Go.CSS.itemConfirmState);
  }
  /**
   * Disable the confirmation state on passed item
   *
   * @returns {void}
   */
  clearConfirmationState(e) {
    e.classList.remove(Go.CSS.itemConfirmState);
  }
  /**
   * Check if passed item has the confirmation state
   *
   * @returns {boolean}
   */
  hasConfirmationState(e) {
    return e.classList.contains(Go.CSS.itemConfirmState);
  }
  /**
   * Return an opening state
   *
   * @returns {boolean}
   */
  get opened() {
    return this.wrapper.classList.contains(Go.CSS.popoverOpened);
  }
  /**
   * Opens the popover
   *
   * @returns {void}
   */
  open() {
    this.items.forEach((e, t) => {
      typeof e.hideIf == "function" && this.itemEls[t].classList.toggle(Go.CSS.itemHidden, e.hideIf());
    }), this.wrapper.classList.add(Go.CSS.popoverOpened);
  }
  /**
   * Closes the popover
   *
   * @returns {void}
   */
  close() {
    this.wrapper.classList.remove(Go.CSS.popoverOpened), this.itemEls.forEach((e) => {
      this.clearConfirmationState(e);
    });
  }
};
const Ud = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 8L12 12M12 12L16 16M12 12L16 8M12 12L8 16"/></svg>', Qr = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.9167 14.9167L11.5833 18.25M11.5833 18.25L8.25 14.9167M11.5833 18.25L11.5833 10.0833C11.5833 9.19928 11.9345 8.35143 12.5596 7.72631C13.1848 7.10119 14.0326 6.75 14.9167 6.75"/></svg>', nb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.13333 14.9167L12.4667 18.25M12.4667 18.25L15.8 14.9167M12.4667 18.25L12.4667 10.0833C12.4667 9.19928 12.1155 8.35143 11.4904 7.72631C10.8652 7.10119 10.0174 6.75 9.13333 6.75"/></svg>', ib = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.41 9.66H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 9.66H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.31 14.36H9.3"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 14.36H14.59"/></svg>', rb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', sb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M14 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><path stroke="currentColor" stroke-width="2" d="M5 14H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', ab = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>';
let Dr = class as {
  /**
   * Creates toolbox buttons and toolbox menus
   *
   * @param {object} api - Editor.js api
   * @param {PopoverItem[]} items - Editor.js api
   * @param {function} onOpen - callback fired when the Popover is opening
   * @param {function} onClose - callback fired when the Popover is closing
   * @param {string} [cssModifier] - the modifier for the Toolbox. Allows to add some specific styles.
   */
  constructor({ api: e, items: t, onOpen: n, onClose: r, cssModifier: a = "" }) {
    this.api = e, this.items = t, this.onOpen = n, this.onClose = r, this.cssModifier = a, this.popover = null, this.wrapper = this.createToolbox();
  }
  /**
   * Style classes
   */
  static get CSS() {
    return {
      toolbox: "tc-toolbox",
      toolboxShowed: "tc-toolbox--showed",
      toggler: "tc-toolbox__toggler"
    };
  }
  /**
   * Returns rendered Toolbox element
   */
  get element() {
    return this.wrapper;
  }
  /**
   * Creating a toolbox to open menu for a manipulating columns
   *
   * @returns {Element}
   */
  createToolbox() {
    const e = Qo("div", [
      as.CSS.toolbox,
      this.cssModifier ? `${as.CSS.toolbox}--${this.cssModifier}` : ""
    ]);
    e.dataset.mutationFree = "true";
    const t = this.createPopover(), n = this.createToggler();
    return e.appendChild(n), e.appendChild(t), e;
  }
  /**
   * Creates the Toggler
   *
   * @returns {Element}
   */
  createToggler() {
    const e = Qo("div", as.CSS.toggler, {
      innerHTML: ib
    });
    return e.addEventListener("click", () => {
      this.togglerClicked();
    }), e;
  }
  /**
   * Creates the Popover instance and render it
   *
   * @returns {Element}
   */
  createPopover() {
    return this.popover = new ob({
      items: this.items
    }), this.popover.render();
  }
  /**
   * Toggler click handler. Opens/Closes the popover
   *
   * @returns {void}
   */
  togglerClicked() {
    this.popover.opened ? (this.popover.close(), this.onClose()) : (this.popover.open(), this.onOpen());
  }
  /**
   * Shows the Toolbox
   *
   * @param {function} computePositionMethod - method that returns the position coordinate
   * @returns {void}
   */
  show(e) {
    const t = e();
    Object.entries(t).forEach(([n, r]) => {
      this.wrapper.style[n] = r;
    }), this.wrapper.classList.add(as.CSS.toolboxShowed);
  }
  /**
   * Hides the Toolbox
   *
   * @returns {void}
   */
  hide() {
    this.popover.close(), this.wrapper.classList.remove(as.CSS.toolboxShowed);
  }
};
function lb(o, e) {
  let t = 0;
  return function(...n) {
    const r = (/* @__PURE__ */ new Date()).getTime();
    if (!(r - t < o))
      return t = r, e(...n);
  };
}
const Mt = {
  wrapper: "tc-wrap",
  wrapperReadOnly: "tc-wrap--readonly",
  table: "tc-table",
  row: "tc-row",
  withHeadings: "tc-table--heading",
  rowSelected: "tc-row--selected",
  cell: "tc-cell",
  cellSelected: "tc-cell--selected",
  addRow: "tc-add-row",
  addColumn: "tc-add-column"
};
let qd = class {
  /**
   * Creates
   *
   * @constructor
   * @param {boolean} readOnly - read-only mode flag
   * @param {object} api - Editor.js API
   * @param {TableData} data - Editor.js API
   * @param {TableConfig} config - Editor.js API
   */
  constructor(e, t, n, r) {
    this.readOnly = e, this.api = t, (!("content" in n) || n.content.length <= 0) && (n.content = [["Medicine", "Form", "Dosage (by body weight)", "Dosage", "Frequency", "Duration", "Total Amount", "Remarks"], []]), this.data = n, this.config = { cols: 6, rows: 2, ...r }, this.formItem = ["Tablet", "Capsel", "Box", "A", "V", "Pouch", "Plastic Bottle", "Can", "Bag", "Glass Bottle", "Grain"].map((a) => ({
      label: a,
      icon: Qr,
      confirmationRequired: !1,
      onClick: (c) => {
        var u;
        c.stopPropagation(), this.data.content = this.getData(), ((u = this.data.content[this.hoveredRow - 1]) == null ? void 0 : u.length) > 0 || (this.data.content[this.hoveredRow - 1] = new Array(8).fill("")), this.data.content[this.hoveredRow - 1][this.hoveredColumn - 1] = a, this.fill(), this.hideToolboxes(), this.wrapper.querySelectorAll(`.${Dr.CSS.toolbox}`).forEach((p) => {
          this.wrapper.removeChild(p);
        }), this.unselectColumn(), this.unselectRow();
      }
    })), this.dosageItem = ["1/8", "1/6", "1/4", "1/3", "1/2", "2/3", "3/4", "7/8", "1", "1 1/4", "1 1/2", "2", "3", "4", "5", "6", "7", "8", "9", "10"].map((a) => ({
      label: a,
      icon: Qr,
      confirmationRequired: !1,
      onClick: (c) => {
        var u;
        c.stopPropagation(), this.data.content = this.getData(), ((u = this.data.content[this.hoveredRow - 1]) == null ? void 0 : u.length) > 0 || (this.data.content[this.hoveredRow - 1] = new Array(8).fill("")), this.data.content[this.hoveredRow - 1][this.hoveredColumn - 1] = a, this.fill(), this.hideToolboxes(), this.wrapper.querySelectorAll(`.${Dr.CSS.toolbox}`).forEach((p) => {
          this.wrapper.removeChild(p);
        }), this.unselectColumn(), this.unselectRow();
      }
    })), this.frequencyItem = ["SID", "SID Morning", "SID Night", "BID", "TID", "QID", "EOD", "Monthly", "Weekly", "3 times/week", "as needed", "other"].map((a) => ({
      label: a,
      icon: Qr,
      confirmationRequired: !1,
      onClick: (c) => {
        var u;
        c.stopPropagation(), this.data.content = this.getData(), ((u = this.data.content[this.hoveredRow - 1]) == null ? void 0 : u.length) > 0 || (this.data.content[this.hoveredRow - 1] = new Array(8).fill("")), this.data.content[this.hoveredRow - 1][this.hoveredColumn - 1] = a, this.fill(), this.hideToolboxes(), this.wrapper.querySelectorAll(`.${Dr.CSS.toolbox}`).forEach((p) => {
          this.wrapper.removeChild(p);
        }), this.unselectColumn(), this.unselectRow();
      }
    })), this.durationItem = ["Day(s)", "Week(s)", "Month(s)"].map((a) => ({
      label: a,
      icon: Qr,
      confirmationRequired: !1,
      onClick: (c) => {
        var u;
        c.stopPropagation(), this.data.content = this.getData(), ((u = this.data.content[this.hoveredRow - 1]) == null ? void 0 : u.length) > 0 || (this.data.content[this.hoveredRow - 1] = new Array(8).fill("")), this.data.content[this.hoveredRow - 1][this.hoveredColumn - 1] = a, this.fill(), this.hideToolboxes(), this.wrapper.querySelectorAll(`.${Dr.CSS.toolbox}`).forEach((p) => {
          this.wrapper.removeChild(p);
        }), this.unselectColumn(), this.unselectRow();
      }
    })), this.tunes = {
      withHeadings: !0,
      atHospital: (n == null ? void 0 : n.atHospital) || !1
    }, this.init();
  }
  init() {
    this.wrapper = null, this.table = null, this.interval = null, this.createTableWrapper(), this.hoveredRow = 0, this.hoveredColumn = 0, this.selectedRow = 0, this.selectedColumn = 0, this.resize(), this.fill(), this.focusedCell = {
      row: 0,
      column: 0
    }, this.documentClicked = (e) => {
      console.log("event", e), e.stopPropagation();
      const t = e.target.closest(`.${Mt.table}`) !== null, n = e.target.closest(`.${Mt.wrapper}`) === null;
      (t || n) && this.hideToolboxes(), console.log("CLICKED", this.hoveredRow, this.hoveredColumn), this.hoveredRow > 1 && this.tunes.atHospital == !1 ? this.hoveredColumn == 2 ? this.renderToolBox(this.formItem) : this.hoveredColumn == 4 ? this.renderToolBox(this.dosageItem) : this.hoveredColumn == 5 ? this.renderToolBox(this.frequencyItem) : this.hoveredColumn == 6 && this.renderToolBox(this.durationItem) : this.hoveredRow > 1 && this.tunes.atHospital == !0 && (this.hoveredColumn == 2 ? this.renderToolBox(this.formItem) : this.hoveredColumn == 4 && this.renderToolBox(this.dosageItem));
    }, this.readOnly || this.bindEvents();
  }
  getUpdateLocation() {
    const e = this.hoveredRow, t = this.hoveredColumn, n = this.getRow(e), { fromTopBorder: r } = Fd(this.table, n), { height: a } = n.getBoundingClientRect();
    return {
      top: `${Math.ceil(r + a / 0.8)}px`,
      left: `calc((100% - var(--cell-size)) / (${this.numberOfColumns} * 2) * ( (${t} - 1) * 2))`
    };
  }
  /**
   * Returns the rendered table wrapper
   *
   * @returns {Element}
   */
  getWrapper() {
    return this.wrapper;
  }
  /**
   * Hangs the necessary handlers to events
   */
  bindEvents() {
    this.table.addEventListener("click", this.documentClicked), this.table.addEventListener("mousemove", lb(150, (e) => this.onMouseMoveInTable(e)), { passive: !0 }), this.table.onkeypress = (e) => this.onKeyPressListener(e), this.table.addEventListener("keydown", (e) => this.onKeyDownListener(e)), this.table.addEventListener("keyup", (e) => this.onKeyUpListener(e)), this.table.addEventListener("focusin", (e) => this.focusInTableListener(e));
  }
  /**
   * Configures and creates the toolbox for manipulating with columns
   *
   * @returns {Toolbox}
   */
  createColumnToolbox() {
    return new Dr({
      table: this,
      api: this.api,
      cssModifier: "column",
      items: [
        {
          label: this.api.i18n.t("Add column to left"),
          icon: Qr,
          onClick: () => {
            this.addColumn(this.selectedColumn, !0), this.hideToolboxes();
          }
        },
        {
          label: this.api.i18n.t("Add column to right"),
          icon: nb,
          onClick: () => {
            this.addColumn(this.selectedColumn + 1, !0), this.hideToolboxes();
          }
        },
        {
          label: this.api.i18n.t("Delete column"),
          icon: Ud,
          hideIf: () => this.numberOfColumns === 1,
          confirmationRequired: !0,
          onClick: () => {
            this.deleteColumn(this.selectedColumn), this.hideToolboxes();
          }
        }
      ],
      onOpen: () => {
        this.selectColumn(this.hoveredColumn), this.hideRowToolbox();
      },
      onClose: () => {
        this.unselectColumn();
      }
    });
  }
  /**
   * Configures and creates the toolbox for manipulating with rows
   *
   * @returns {Toolbox}
   */
  createRowToolbox(e = []) {
    return new Dr({
      table: this,
      api: this.api,
      cssModifier: "row",
      items: e,
      onOpen: () => {
        this.selectRow(this.hoveredRow), this.hideColumnToolbox();
      },
      onClose: () => {
        this.unselectRow();
      }
    });
  }
  /**
   * When you press enter it moves the cursor down to the next row
   * or creates it if the click occurred on the last one
   */
  moveCursorToNextRow() {
    this.focusedCell.row !== this.numberOfRows ? (this.focusedCell.row += 1, this.focusCell(this.focusedCell)) : (this.addRow(), this.focusedCell.row += 1, this.focusCell(this.focusedCell), this.updateToolboxesPosition(0, 0));
  }
  /**
   * Get table cell by row and col index
   *
   * @param {number} row - cell row coordinate
   * @param {number} column - cell column coordinate
   * @returns {HTMLElement}
   */
  getCell(e, t) {
    return this.table.querySelectorAll(`.${Mt.row}:nth-child(${e}) .${Mt.cell}`)[t - 1];
  }
  /**
   * Get table row by index
   *
   * @param {number} row - row coordinate
   * @returns {HTMLElement}
   */
  getRow(e) {
    return this.table.querySelector(`.${Mt.row}:nth-child(${e})`);
  }
  /**
   * The parent of the cell which is the row
   *
   * @param {HTMLElement} cell - cell element
   * @returns {HTMLElement}
   */
  getRowByCell(e) {
    return e.parentElement;
  }
  /**
   * Ger row's first cell
   *
   * @param {Element} row - row to find its first cell
   * @returns {Element}
   */
  getRowFirstCell(e) {
    return e.querySelector(`.${Mt.cell}:first-child`);
  }
  /**
   * Set the sell's content by row and column numbers
   *
   * @param {number} row - cell row coordinate
   * @param {number} column - cell column coordinate
   * @param {string} content - cell HTML content
   */
  setCellContent(e, t, n) {
    const r = this.getCell(e, t);
    r.innerHTML = n;
  }
  /**
   * Add column in table on index place
   * Add cells in each row
   *
   * @param {number} columnIndex - number in the array of columns, where new column to insert, -1 if insert at the end
   * @param {boolean} [setFocus] - pass true to focus the first cell
   */
  addColumn(e = -1, t = !1) {
    let n = this.numberOfColumns;
    for (let r = 1; r <= this.numberOfRows; r++) {
      let a;
      const c = this.createCell();
      if (e > 0 && e <= n ? (a = this.getCell(r, e), zd(c, a)) : a = this.getRow(r).appendChild(c), r === 1) {
        const u = this.getCell(r, e > 0 ? e : n + 1);
        u && t && Wd(u);
      }
    }
    this.addHeadingAttrToFirstRow();
  }
  /**
   * Add row in table on index place
   *
   * @param {number} index - number in the array of rows, where new column to insert, -1 if insert at the end
   * @param {boolean} [setFocus] - pass true to focus the inserted row
   * @returns {HTMLElement} row
   */
  addRow(e = -1, t = !1) {
    let n, r = Qo("div", Mt.row);
    this.tunes.withHeadings && this.removeHeadingAttrFromFirstRow();
    let a = this.numberOfColumns;
    if (e > 0 && e <= this.numberOfRows) {
      let u = this.getRow(e);
      n = zd(r, u);
    } else
      n = this.table.appendChild(r);
    this.fillRow(n, a), this.tunes.withHeadings && this.addHeadingAttrToFirstRow();
    const c = this.getRowFirstCell(n);
    return c && t && Wd(c), n;
  }
  /**
   * Delete a column by index
   *
   * @param {number} index
   */
  deleteColumn(e) {
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.getCell(t, e);
      if (!n)
        return;
      n.remove();
    }
  }
  /**
   * Delete a row by index
   *
   * @param {number} index
   */
  deleteRow(e) {
    this.getRow(e).remove(), this.addHeadingAttrToFirstRow();
  }
  /**
   * Create a wrapper containing a table, toolboxes
   * and buttons for adding rows and columns
   *
   * @returns {HTMLElement} wrapper - where all buttons for a table and the table itself will be
   */
  createTableWrapper() {
    this.wrapper = Qo("div", Mt.wrapper), this.table = Qo("div", Mt.table), this.readOnly && this.wrapper.classList.add(Mt.wrapperReadOnly), this.wrapper.appendChild(this.table), this.readOnly;
  }
  /**
   * Returns the size of the table based on initial data or config "size" property
   *
   * @return {{rows: number, cols: number}} - number of cols and rows
   */
  computeInitialSize() {
    const e = this.data && this.data.content, t = Array.isArray(e), n = t ? e.length : !1, r = t ? e.length : void 0, a = n ? e[0].length : void 0, c = Number.parseInt(this.config && this.config.rows), u = Number.parseInt(this.config && this.config.cols), p = !isNaN(c) && c > 0 ? c : void 0, g = !isNaN(u) && u > 0 ? u : void 0;
    return {
      rows: r || p || 2,
      cols: a || g || 2
    };
  }
  /**
   * Resize table to match config size or transmitted data size
   *
   * @return {{rows: number, cols: number}} - number of cols and rows
   */
  resize() {
    const { rows: e, cols: t } = this.computeInitialSize();
    for (let n = 0; n < e; n++)
      this.addRow();
    for (let n = 0; n < t; n++)
      this.addColumn();
  }
  /**
   * Fills the table with data passed to the constructor
   *
   * @returns {void}
   */
  fill() {
    const e = this.data;
    if (e && e.content)
      for (let t = 0; t < e.content.length; t++)
        for (let n = 0; n < e.content[t].length; n++)
          this.setCellContent(t + 1, n + 1, e.content[t][n]);
  }
  /**
   * Fills a row with cells
   *
   * @param {HTMLElement} row - row to fill
   * @param {number} numberOfColumns - how many cells should be in a row
   */
  fillRow(e, t) {
    for (let n = 1; n <= t; n++) {
      const r = this.createCell();
      e.appendChild(r);
    }
  }
  /**
   * Creating a cell element
   *
   * @return {Element}
   */
  createCell() {
    return Qo("div", Mt.cell, {
      contentEditable: !this.readOnly
    });
  }
  /**
   * Get number of rows in the table
   */
  get numberOfRows() {
    return this.table.childElementCount;
  }
  /**
   * Get number of columns in the table
   */
  get numberOfColumns() {
    return this.numberOfRows ? this.table.querySelectorAll(`.${Mt.row}:first-child .${Mt.cell}`).length : 0;
  }
  /**
   * Is the column toolbox menu displayed or not
   *
   * @returns {boolean}
   */
  get isColumnMenuShowing() {
    return this.selectedColumn !== 0;
  }
  /**
   * Is the row toolbox menu displayed or not
   *
   * @returns {boolean}
   */
  get isRowMenuShowing() {
    return this.selectedRow !== 0;
  }
  /**
   * Recalculate position of toolbox icons
   *
   * @param {Event} event - mouse move event
   */
  onMouseMoveInTable(e) {
    const { row: t, column: n } = this.getHoveredCell(e);
    this.hoveredColumn = n, this.hoveredRow = t, this.updateToolboxesPosition();
  }
  async fetchData(e = "") {
    const t = new Headers();
    t.append("Content-Type", "application/json");
    const n = JSON.stringify({
      search: e
    }), a = await fetch("http://localhost/api/medicine", {
      method: "POST",
      headers: t,
      body: n
    }).then((u) => u.json()).catch((u) => console.log("error", u)), c = [{
      label: this.api.i18n.t("Delete row"),
      icon: Ud,
      hideIf: () => this.numberOfRows === 1,
      confirmationRequired: !0,
      onClick: () => {
        this.deleteRow(this.selectedRow), this.hideToolboxes();
      }
    }];
    a.data.map((u) => {
      c.push({
        label: u.medicine,
        icon: Qr,
        confirmationRequired: !1,
        onClick: (p) => {
          p.stopPropagation(), this.data.content = this.getData(), u.medicine && (this.data.content[this.hoveredRow - 1][0] = u.medicine), u.form && (this.data.content[this.hoveredRow - 1][1] = u.form), this.fill(), this.hideToolboxes(), this.bindEvents();
        }
      });
    }), this.renderToolBox(c);
  }
  renderToolBox(e = []) {
    this.toolboxRow = this.createRowToolbox(e), this.wrapper.querySelectorAll(`.${Dr.CSS.toolbox}`).forEach((t) => {
      this.wrapper.removeChild(t);
    }), this.wrapper.appendChild(this.toolboxRow.element), this.toolboxRow.togglerClicked(), this.toolboxRow.show(() => this.getUpdateLocation());
  }
  /**
   * Prevents default Enter behaviors
   * Adds Shift+Enter processing
   *
   * @param {KeyboardEvent} event - keypress event
   */
  onKeyPressListener(e) {
    if (e.key === "Enter") {
      if (e.shiftKey)
        return !0;
      this.moveCursorToNextRow();
    }
    return e.key !== "Enter";
  }
  onKeyUpListener(e) {
    if (this.hoveredColumn == 1) {
      const n = e.target.textContent.trim().replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
      clearTimeout(this.interval), this.interval = setTimeout(() => {
        this.fetchData(n);
      }, 500);
    }
  }
  /**
   * Prevents tab keydown event from bubbling
   * so that it only works inside the table
   *
   * @param {KeyboardEvent} event - keydown event
   */
  onKeyDownListener(e) {
    e.key === "Tab" && e.stopPropagation();
  }
  /**
   * Set the coordinates of the cell that the focus has moved to
   *
   * @param {FocusEvent} event - focusin event
   */
  focusInTableListener(e) {
    const t = e.target, n = this.getRowByCell(t);
    this.focusedCell = {
      row: Array.from(this.table.querySelectorAll(`.${Mt.row}`)).indexOf(n) + 1,
      column: Array.from(n.querySelectorAll(`.${Mt.cell}`)).indexOf(t) + 1
    };
  }
  /**
   * Unselect row/column
   * Close toolbox menu
   * Hide toolboxes
   *
   * @returns {void}
   */
  hideToolboxes() {
    this.hideRowToolbox(), this.hideColumnToolbox(), this.updateToolboxesPosition();
  }
  /**
   * Unselect row, close toolbox
   *
   * @returns {void}
   */
  hideRowToolbox() {
    var e;
    this.unselectRow(), (e = this.toolboxRow) == null || e.hide();
  }
  /**
   * Unselect column, close toolbox
   *
   * @returns {void}
   */
  hideColumnToolbox() {
    var e;
    this.unselectColumn(), (e = this.toolboxColumn) == null || e.hide();
  }
  /**
   * Set the cursor focus to the focused cell
   *
   * @returns {void}
   */
  focusCell() {
    this.focusedCellElem.focus();
  }
  /**
   * Get current focused element
   *
   * @returns {HTMLElement} - focused cell
   */
  get focusedCellElem() {
    const { row: e, column: t } = this.focusedCell;
    return this.getCell(e, t);
  }
  /**
   * Update toolboxes position
   *
   * @param {number} row - hovered row
   * @param {number} column - hovered column
   */
  updateToolboxesPosition(e = this.hoveredRow, t = this.hoveredColumn) {
    this.isColumnMenuShowing || t > 0 && t <= this.numberOfColumns, this.isRowMenuShowing || e > 0 && e <= this.numberOfRows;
  }
  /**
   * Makes the first row headings
   *
   * @param {boolean} withHeadings - use headings row or not
   */
  setHeadingsSetting(e) {
    this.tunes.withHeadings = e, e ? (this.table.classList.add(Mt.withHeadings), this.addHeadingAttrToFirstRow()) : (this.table.classList.remove(Mt.withHeadings), this.removeHeadingAttrFromFirstRow());
    for (let t = 0; t < this.data.content[0].length; t++)
      this.setCellContent(1, t + 1, this.data.content[0][t]);
  }
  /**
   * Adds an attribute for displaying the placeholder in the cell
   */
  addHeadingAttrToFirstRow() {
    for (let e = 1; e <= this.numberOfColumns; e++) {
      let t = this.getCell(1, e);
      t && t.setAttribute("heading", this.api.i18n.t("Heading"));
    }
  }
  /**
   * Removes an attribute for displaying the placeholder in the cell
   */
  removeHeadingAttrFromFirstRow() {
    for (let e = 1; e <= this.numberOfColumns; e++) {
      let t = this.getCell(1, e);
      t && t.removeAttribute("heading");
    }
  }
  /**
   * Add effect of a selected row
   *
   * @param {number} index
   */
  selectRow(e) {
    const t = this.getRow(e);
    t && (this.selectedRow = e, t.classList.add(Mt.rowSelected));
  }
  /**
   * Remove effect of a selected row
   */
  unselectRow() {
    if (this.selectedRow <= 0)
      return;
    const e = this.table.querySelector(`.${Mt.rowSelected}`);
    e && e.classList.remove(Mt.rowSelected), this.selectedRow = 0;
  }
  /**
   * Add effect of a selected column
   *
   * @param {number} index
   */
  selectColumn(e) {
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.getCell(t, e);
      n && n.classList.add(Mt.cellSelected);
    }
    this.selectedColumn = e;
  }
  /**
   * Remove effect of a selected column
   */
  unselectColumn() {
    if (this.selectedColumn <= 0)
      return;
    let e = this.table.querySelectorAll(`.${Mt.cellSelected}`);
    Array.from(e).forEach((t) => {
      t.classList.remove(Mt.cellSelected);
    }), this.selectedColumn = 0;
  }
  /**
   * Calculates the row and column that the cursor is currently hovering over
   * The search was optimized from O(n) to O (log n) via bin search to reduce the number of calculations
   *
   * @param {Event} event - mousemove event
   * @returns hovered cell coordinates as an integer row and column
   */
  getHoveredCell(e) {
    let t = this.hoveredRow, n = this.hoveredColumn;
    const { width: r, height: a, x: c, y: u } = tb(this.table, e);
    return c >= 0 && (n = this.binSearch(
      this.numberOfColumns,
      (p) => this.getCell(1, p),
      ({ fromLeftBorder: p }) => c < p,
      ({ fromRightBorder: p }) => c > r - p
    )), u >= 0 && (t = this.binSearch(
      this.numberOfRows,
      (p) => this.getCell(p, 1),
      ({ fromTopBorder: p }) => u < p,
      ({ fromBottomBorder: p }) => u > a - p
    )), {
      row: t || this.hoveredRow,
      column: n || this.hoveredColumn
    };
  }
  /**
   * Looks for the index of the cell the mouse is hovering over.
   * Cells can be represented as ordered intervals with left and
   * right (upper and lower for rows) borders inside the table, if the mouse enters it, then this is our index
   *
   * @param {number} numberOfCells - upper bound of binary search
   * @param {function} getCell - function to take the currently viewed cell
   * @param {function} beforeTheLeftBorder - determines the cursor position, to the left of the cell or not
   * @param {function} afterTheRightBorder - determines the cursor position, to the right of the cell or not
   * @returns {number}
   */
  binSearch(e, t, n, r) {
    let a = 0, c = e + 1, u = 0, p;
    for (; a < c - 1 && u < 10; ) {
      p = Math.ceil((a + c) / 2);
      const g = t(p), v = Fd(this.table, g);
      if (n(v))
        c = p;
      else if (r(v))
        a = p;
      else
        break;
      u++;
    }
    return p;
  }
  /**
   * Collects data from cells into a two-dimensional array
   *
   * @returns {string[][]}
   */
  getData() {
    const e = [];
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.table.querySelector(`.${Mt.row}:nth-child(${t})`), r = Array.from(n.querySelectorAll(`.${Mt.cell}`));
      r.every((c) => !c.textContent.trim()) || e.push(r.map((c) => c.innerHTML));
    }
    return e;
  }
  /**
   * Remove listeners on the document
   */
  destroy() {
    document.removeEventListener("click", this.documentClicked);
  }
}, cb = class {
  /**
   * Notify core that read-only mode is supported
   *
   * @returns {boolean}
   */
  static get isReadOnlySupported() {
    return !0;
  }
  /**
   * Allow to press Enter inside the CodeTool textarea
   *
   * @returns {boolean}
   * @public
   */
  static get enableLineBreaks() {
    return !0;
  }
  /**
   * Render plugin`s main Element and fill it with saved data
   *
   * @param {TableData} data — previously saved data
   * @param {TableConfig} config - user config for Tool
   * @param {object} api - Editor.js API
   * @param {boolean} readOnly - read-only mode flag
   */
  constructor({ data: e, config: t, api: n, readOnly: r }) {
    this.api = n, this.readOnly = r, this.config = t, this.data = {
      withHeadings: this.getConfig("withHeadings", !1, e),
      atHospital: this.getConfig("atHospital", !1, e),
      content: e && e.content ? e.content : []
    }, this.table = null;
  }
  /**
   * Get Tool toolbox settings
   * icon - Tool icon's SVG
   * title - title to show in toolbox
   *
   * @returns {{icon: string, title: string}}
   */
  static get toolbox() {
    return {
      icon: ab,
      title: "Medicine-Table"
    };
  }
  /**
   * Return Tool's view
   *
   * @returns {HTMLDivElement}
   */
  render() {
    this.table = new qd(this.readOnly, this.api, this.data, this.config), this.container = Qo("div", this.api.styles.block);
    const e = Qo("h5");
    return e.innerHTML = `Medicine ${this.table.data.content[0].length === 6 ? "At Hospital" : "At Home"}`, this.container.append(e), this.container.appendChild(this.table.getWrapper()), this.table.setHeadingsSetting(this.data.withHeadings), this.container;
  }
  updateColumns(e) {
    this.data.content = this.data.content.map((t) => {
      let n = t.slice(0, e);
      for (; n.length < e; )
        n.push("");
      return n;
    }), this.renderTable();
  }
  renderTable() {
    this.container.innerHTML = "", this.table = new qd(this.readOnly, this.api, this.data, this.config);
    const e = Qo("h5");
    e.innerHTML = `Medicine ${this.table.data.content[0].length === 6 ? "At Hospital" : "At Home"}`, this.container.append(e), this.container.appendChild(this.table.getWrapper());
  }
  /**
   * Returns plugin settings
   *
   * @returns {Array}
   */
  renderSettings() {
    return [
      {
        label: this.api.i18n.t("At Hospital"),
        icon: rb,
        isActive: this.table.tunes.atHospital,
        closeOnActivate: !0,
        toggle: !0,
        onActivate: () => {
          this.table = null, this.config.cols = 6, this.data.content[0] = ["Medicine", "Form", "Dosage (by body weight)", "Dosage", "Quantity", "Remarks"], this.data.withHeadings = !0, this.updateColumns(6), this.table.tunes.atHospital = !0;
        }
      },
      {
        label: this.api.i18n.t("At Home"),
        icon: sb,
        isActive: !this.table.tunes.atHospital,
        closeOnActivate: !0,
        toggle: !0,
        onActivate: () => {
          this.table = null, this.config.cols = 8, this.data.withHeadings = !0, this.data.content[0] = ["Medicine", "Form", "Dosage (by body weight)", "Dosage", "Frequency", "Duration", "Total Amount", "Remarks"], this.updateColumns(8), this.table.tunes.atHospital = !1;
        }
      }
    ];
  }
  /**
   * Extract table data from the view
   *
   * @returns {TableData} - saved data
   */
  save() {
    var n, r;
    const e = this.table.getData();
    return {
      withHeadings: (n = this.table.tunes) == null ? void 0 : n.withHeadings,
      content: e,
      atHospital: (r = this.table.tunes) == null ? void 0 : r.atHospital
    };
  }
  /**
   * Plugin destroyer
   *
   * @returns {void}
   */
  destroy() {
    this.table.destroy();
  }
  /**
   * A helper to get config value.
   * 
   * @param {string} configName - the key to get from the config. 
   * @param {any} defaultValue - default value if config doesn't have passed key
   * @param {object} savedData - previously saved data. If passed, the key will be got from there, otherwise from the config
   * @returns {any} - config value.
   */
  getConfig(e, t = void 0, n = void 0) {
    const r = this.data || n;
    return r ? r[e] ? r[e] : t : this.config && this.config[e] ? this.config[e] : t;
  }
  /**  
   * Table onPaste configuration
   *
   * @public
   */
  static get pasteConfig() {
    return { tags: ["TABLE", "TR", "TH", "TD"] };
  }
  /**
   * On paste callback that is fired from Editor
   *
   * @param {PasteEvent} event - event with pasted data
   */
  onPaste(e) {
    const t = e.detail.data, n = t.querySelector(":scope > thead, tr:first-of-type th"), a = Array.from(t.querySelectorAll("tr")).map((c) => Array.from(c.querySelectorAll("th, td")).map((p) => p.innerHTML));
    this.data = {
      withHeadings: n !== null,
      content: a
    }, this.table.wrapper && this.table.wrapper.replaceWith(this.render());
  }
};
(function() {
  var o;
  try {
    if (typeof document < "u") {
      var e = document.createElement("style");
      e.nonce = (o = document.head.querySelector("meta[property=csp-nonce]")) == null ? void 0 : o.content, e.appendChild(document.createTextNode('.tc-wrap{--color-background:#f9f9fb;--color-text-secondary:#7b7e89;--color-border:#e8e8eb;--cell-size:34px;--toolbox-icon-size:18px;--toolbox-padding:6px;--toolbox-aiming-field-size:calc(var(--toolbox-icon-size) + var(--toolbox-padding)*2);border-left:0;position:relative;height:100%;width:100%;margin-top:var(--toolbox-icon-size);box-sizing:border-box;display:grid;grid-template-columns:calc(100% - var(--cell-size));grid-template-areas:"table"}.tc-wrap--readonly{grid-template-columns:100% var(--cell-size)}.tc-wrap svg{vertical-align:top}@media print{.tc-wrap{border-left-color:var(--color-border);border-left-style:solid;border-left-width:1px;grid-template-columns:100% var(--cell-size)}}@media print{.tc-wrap .tc-row:after{display:none}}.tc-table{position:relative;width:100%;height:100%;display:grid;font-size:14px;border-top:1px solid var(--color-border);line-height:1.4}.tc-table:after{width:calc(var(--cell-size));height:100%;left:calc(var(--cell-size)*-1);top:0}.tc-table:after,.tc-table:before{position:absolute;content:""}.tc-table:before{width:100%;height:var(--toolbox-aiming-field-size);top:calc(var(--toolbox-aiming-field-size)*-1);left:0}.tc-table--heading .tc-row:first-child{font-weight:600;border-bottom:2px solid var(--color-border)}.tc-table--heading .tc-row:first-child [contenteditable]:empty:before{content:attr(heading);color:var(--color-text-secondary)}.tc-table--heading .tc-row:first-child:after{bottom:-2px;border-bottom:2px solid var(--color-border)}.tc-add-column,.tc-add-row{display:flex;color:var(--color-text-secondary)}@media print{.tc-add{display:none}}.tc-add-column{padding:4px 0;justify-content:center;border-top:1px solid var(--color-border)}@media print{.tc-add-column{display:none}}.tc-add-row{height:var(--cell-size);align-items:center;padding-left:4px;position:relative}.tc-add-row:before{content:"";position:absolute;right:calc(var(--cell-size)*-1);width:var(--cell-size);height:100%}@media print{.tc-add-row{display:none}}.tc-add-column,.tc-add-row{transition:0s;cursor:pointer;will-change:background-color}.tc-add-column:hover,.tc-add-row:hover{transition:background-color .1s ease;background-color:var(--color-background)}.tc-add-row{margin-top:1px}.tc-add-row:hover:before{transition:.1s;background-color:var(--color-background)}.tc-row{display:grid;grid-template-columns:repeat(auto-fit,minmax(10px,1fr));position:relative;border-bottom:1px solid var(--color-border)}.tc-row:after{content:"";pointer-events:none;position:absolute;width:var(--cell-size);height:100%;bottom:-1px;right:calc(var(--cell-size)*-1);border-bottom:1px solid var(--color-border)}.tc-row--selected{background:var(--color-background)}.tc-row--selected:after{background:var(--color-background)}.tc-cell{border-right:1px solid var(--color-border);padding:6px 12px;overflow:hidden;outline:none;line-break:normal}.tc-cell--selected{background:var(--color-background)}.tc-wrap--readonly .tc-row:after{display:none}.tc-toolbox{--toolbox-padding:6px;--popover-margin:30px;--toggler-click-zone-size:30px;--toggler-dots-color:#7b7e89;--toggler-dots-color-hovered:#1d202b;position:absolute;cursor:pointer;z-index:1;opacity:0;transition:opacity .1s;will-change:left,opacity}.tc-toolbox--column{top:calc(var(--toggler-click-zone-size)*-1);transform:translate(calc(var(--toggler-click-zone-size)*-1/2));will-change:left,opacity}.tc-toolbox--row{left:calc(var(--popover-margin)*-1);transform:translateY(calc(var(--toggler-click-zone-size)*-1/2));margin-top:-1px;will-change:top,opacity}.tc-toolbox--showed{opacity:1}.tc-toolbox .tc-popover{position:absolute;top:0;left:var(--popover-margin)}.tc-toolbox__toggler{display:flex;align-items:center;justify-content:center;width:var(--toggler-click-zone-size);height:var(--toggler-click-zone-size);color:var(--toggler-dots-color);opacity:0;transition:opacity .15s ease;will-change:opacity}.tc-toolbox__toggler:hover{color:var(--toggler-dots-color-hovered)}.tc-toolbox__toggler svg{fill:currentColor}.tc-wrap:hover .tc-toolbox__toggler{opacity:1}.tc-settings .cdx-settings-button{width:50%;margin:0}.tc-popover{--color-border:#eaeaea;--color-background:#fff;--color-background-hover:rgba(232,232,235,.49);--color-background-confirm:#e24a4a;--color-background-confirm-hover:#d54040;--color-text-confirm:#fff;background:var(--color-background);border:1px solid var(--color-border);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;padding:6px;display:none;will-change:opacity,transform}.tc-popover--opened{display:block;animation:menuShowing .1s cubic-bezier(.215,.61,.355,1) forwards}.tc-popover__item{display:flex;align-items:center;padding:2px 14px 2px 2px;border-radius:5px;cursor:pointer;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;user-select:none}.tc-popover__item:hover{background:var(--color-background-hover)}.tc-popover__item:not(:last-of-type){margin-bottom:2px}.tc-popover__item-icon{display:inline-flex;width:26px;height:26px;align-items:center;justify-content:center;background:var(--color-background);border-radius:5px;border:1px solid var(--color-border);margin-right:8px}.tc-popover__item-label{line-height:22px;font-size:14px;font-weight:500}.tc-popover__item--confirm{background:var(--color-background-confirm);color:var(--color-text-confirm)}.tc-popover__item--confirm:hover{background-color:var(--color-background-confirm-hover)}.tc-popover__item--confirm .tc-popover__item-icon{background:var(--color-background-confirm);border-color:#0000001a}.tc-popover__item--confirm .tc-popover__item-icon svg{transition:transform .2s ease-in;transform:rotate(90deg) scale(1.2)}.tc-popover__item--hidden{display:none}@keyframes menuShowing{0%{opacity:0;transform:translateY(-8px) scale(.9)}70%{opacity:1;transform:translateY(2px)}to{transform:translateY(0)}}')), document.head.appendChild(e);
    }
  } catch (t) {
    console.error("vite-plugin-css-injected-by-js", t);
  }
})();
function bo(o, e, t = {}) {
  const n = document.createElement(o);
  Array.isArray(e) ? n.classList.add(...e) : e && n.classList.add(e);
  for (const r in t)
    Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]);
  return n;
}
function Vd(o) {
  const e = o.getBoundingClientRect();
  return {
    y1: Math.floor(e.top + window.pageYOffset),
    x1: Math.floor(e.left + window.pageXOffset),
    x2: Math.floor(e.right + window.pageXOffset),
    y2: Math.floor(e.bottom + window.pageYOffset)
  };
}
function Ol(o, e) {
  const t = Vd(o), n = Vd(e);
  return {
    fromTopBorder: n.y1 - t.y1,
    fromLeftBorder: n.x1 - t.x1,
    fromRightBorder: t.x2 - n.x2,
    fromBottomBorder: t.y2 - n.y2
  };
}
function db(o, e) {
  const t = o.getBoundingClientRect(), { width: n, height: r, x: a, y: c } = t, { clientX: u, clientY: p } = e;
  return {
    width: n,
    height: r,
    x: u - a,
    y: p - c
  };
}
function Gd(o, e) {
  return e.parentNode.insertBefore(o, e);
}
function Zd(o, e = !0) {
  const t = document.createRange(), n = window.getSelection();
  t.selectNodeContents(o), t.collapse(e), n.removeAllRanges(), n.addRange(t);
}
const Kd = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 8L12 12M12 12L16 16M12 12L16 8M12 12L8 16"/></svg>', Ba = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.9167 14.9167L11.5833 18.25M11.5833 18.25L8.25 14.9167M11.5833 18.25L11.5833 10.0833C11.5833 9.19928 11.9345 8.35143 12.5596 7.72631C13.1848 7.10119 14.0326 6.75 14.9167 6.75"/></svg>', hb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.13333 14.9167L12.4667 18.25M12.4667 18.25L15.8 14.9167M12.4667 18.25L12.4667 10.0833C12.4667 9.19928 12.1155 8.35143 11.4904 7.72631C10.8652 7.10119 10.0174 6.75 9.13333 6.75"/></svg>', ub = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.41 9.66H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 9.66H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.31 14.36H9.3"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 14.36H14.59"/></svg>', Xd = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 7V12M12 17V12M17 12H12M12 12H7"/></svg>', pb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', fb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M14 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><path stroke="currentColor" stroke-width="2" d="M5 14H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', mb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>';
class mo {
  /**
   * @param {object} options - constructor options
   * @param {PopoverItem[]} options.items - constructor options
   */
  constructor({ items: e, table: t }) {
    this.items = e, this.wrapper = void 0, this.itemEls = [], this.interval = null, this.table = t;
  }
  /**
   * Set of CSS classnames used in popover
   *
   * @returns {object}
   */
  static get CSS() {
    return {
      popover: "tc-popover",
      popoverOpened: "tc-popover--opened",
      item: "tc-popover__item",
      itemHidden: "tc-popover__item--hidden",
      itemConfirmState: "tc-popover__item--confirm",
      itemIcon: "tc-popover__item-icon",
      itemLabel: "tc-popover__item-label",
      searchItem: "tc-popover__search"
    };
  }
  async getData() {
    const e = new Headers();
    e.append("Authorization", "ApiKey bDlRVWhvd0JlUGYtTlVUSDloQno6Rld4Z2Rld1dUdDZ4N0k3YWxjeW5wZw=="), e.append("Content-Type", "application/json");
    const t = await fetch("https://dummyjson.com/products").then((r) => r.json()).catch((r) => console.log("error", r)), n = this.items.slice(0, 2);
    return t.products.map((r) => {
      n.push({
        label: r.title,
        icon: Ba,
        confirmationRequired: !1,
        onClick: () => {
          var a, c, u, p, g, v, x, y, T;
          const k = (c = (a = this.table) == null ? void 0 : a.data) == null ? void 0 : c.content.length;
          this.table.data.content = (u = this.table) == null ? void 0 : u.getData(), this.table.dropDown[r.title] = {
            value: r.title,
            options: ["Kg", "Gram", "Ounce", "Pound"],
            cell: "",
            col: 2,
            row: k
          }, (p = this.table) == null || p.data.content.push([r.title, "", r.category]), (v = this.table) == null || v.addRow((g = this.table) == null ? void 0 : g.selectRow, !0), (x = this.table) == null || x.fill(), (y = this.table) == null || y.hideToolboxes(), (T = this.table) == null || T.bindEvents();
        }
      });
    }), n;
  }
  /**
   * Returns the popover element
   *
   * @returns {Element}
   */
  findMatchingItem(e, t) {
    const n = new RegExp(e.split("").join(".*?"), "i");
    return t.filter((r) => {
      const a = r.label.toLowerCase();
      return n.test(a);
    });
  }
  /**
   * Returns the popover element
   *
   * @returns {Element}
   */
  render() {
    this.wrapper = bo("div", mo.CSS.popover);
    const e = bo("input", mo.CSS.searchItem);
    return e.placeHolder = "Search....", e.addEventListener("keydown", (t) => {
      t.stopPropagation(), t.target.value.trim().replace(/[.*+?^${}()|[\]\\]/g, "\\$&"), clearTimeout(this.interval), this.interval = setTimeout(() => {
        this.getData().then((n) => {
          this.renderItems(n);
        });
      }, 500);
    }), this.wrapper.appendChild(e), this.renderItems(this.items), this.wrapper.addEventListener("click", (t) => {
      this.popoverClicked(t);
    }), this.wrapper;
  }
  renderItems(e) {
    this.items = e, this.wrapper.querySelectorAll("." + mo.CSS.item).forEach(function(t) {
      t.parentNode.removeChild(t), t.removeEventListener("click", () => {
      });
    }), e.forEach((t, n) => {
      const r = bo("div", mo.CSS.item), a = bo("div", mo.CSS.itemIcon, {
        innerHTML: t.icon
      }), c = bo("div", mo.CSS.itemLabel, {
        textContent: t.label
      });
      r.dataset.index = n, t.content ? r.appendChild(t.content) : (r.appendChild(a), r.appendChild(c)), this.wrapper.appendChild(r), this.itemEls.push(r);
    });
  }
  /**
   * Popover wrapper click listener
   * Used to delegate clicks in items
   *
   * @returns {void}
   */
  popoverClicked(e) {
    const t = e.target.closest(`.${mo.CSS.item}`);
    if (!t)
      return;
    const n = t.dataset.index, r = this.items[n];
    if (r != null && r.confirmationRequired && !this.hasConfirmationState(t)) {
      this.setConfirmationState(t);
      return;
    }
    r.onClick();
  }
  /**
   * Enable the confirmation state on passed item
   *
   * @returns {void}
   */
  setConfirmationState(e) {
    e.classList.add(mo.CSS.itemConfirmState);
  }
  /**
   * Disable the confirmation state on passed item
   *
   * @returns {void}
   */
  clearConfirmationState(e) {
    e.classList.remove(mo.CSS.itemConfirmState);
  }
  /**
   * Check if passed item has the confirmation state
   *
   * @returns {boolean}
   */
  hasConfirmationState(e) {
    return e.classList.contains(mo.CSS.itemConfirmState);
  }
  /**
   * Return an opening state
   *
   * @returns {boolean}
   */
  get opened() {
    return this.wrapper.classList.contains(mo.CSS.popoverOpened);
  }
  /**
   * Opens the popover
   *
   * @returns {void}
   */
  open() {
    this.items.forEach((e, t) => {
      typeof e.hideIf == "function" && this.itemEls[t].classList.toggle(mo.CSS.itemHidden, e.hideIf());
    }), this.wrapper.classList.add(mo.CSS.popoverOpened);
  }
  /**
   * Closes the popover
   *
   * @returns {void}
   */
  close() {
    this.wrapper.classList.remove(mo.CSS.popoverOpened), this.itemEls.forEach((e) => {
      this.clearConfirmationState(e);
    });
  }
}
class gi {
  /**
   * Creates toolbox buttons and toolbox menus
   *
   * @param {object} api - Editor.js api
   * @param {PopoverItem[]} items - Editor.js api
   * @param {function} onOpen - callback fired when the Popover is opening
   * @param {function} onClose - callback fired when the Popover is closing
   * @param {string} [cssModifier] - the modifier for the Toolbox. Allows to add some specific styles.
   */
  constructor({ api: e, items: t, onOpen: n, onClose: r, cssModifier: a = "", table: c }) {
    this.api = e, this.items = t, this.onOpen = n, this.onClose = r, this.cssModifier = a, this.table = c, this.popover = null, this.wrapper = this.createToolbox();
  }
  /**
   * Style classes
   */
  static get CSS() {
    return {
      toolbox: "tc-toolbox",
      toolboxShowed: "tc-toolbox--showed",
      toggler: "tc-toolbox__toggler"
    };
  }
  /**
   * Returns rendered Toolbox element
   */
  get element() {
    return this.wrapper;
  }
  /**
   * Creating a toolbox to open menu for a manipulating columns
   *
   * @returns {Element}
   */
  createToolbox() {
    const e = bo("div", [
      gi.CSS.toolbox,
      this.cssModifier ? `${gi.CSS.toolbox}--${this.cssModifier}` : ""
    ]);
    e.dataset.mutationFree = "true";
    const t = this.createPopover(), n = this.createToggler();
    return e.appendChild(n), e.appendChild(t), e;
  }
  /**
   * Creates the Toggler
   *
   * @returns {Element}
   */
  createToggler() {
    const e = bo("div", gi.CSS.toggler, {
      innerHTML: ub
    });
    return e.addEventListener("click", () => {
      this.togglerClicked();
    }), e;
  }
  /**
   * Creates the Popover instance and render it
   *
   * @returns {Element}
   */
  createPopover() {
    return this.popover = new mo({
      items: this.items,
      table: this.table
    }), this.popover.render();
  }
  /**
   * Toggler click handler. Opens/Closes the popover
   *
   * @returns {void}
   */
  togglerClicked() {
    this.popover.opened ? (this.popover.close(), this.onClose()) : (this.popover.open(), this.onOpen());
  }
  /**
   * Shows the Toolbox
   *
   * @param {function} computePositionMethod - method that returns the position coordinate
   * @returns {void}
   */
  show(e) {
    const t = e();
    Object.entries(t).forEach(([n, r]) => {
      this.wrapper.style[n] = r;
    }), this.wrapper.classList.add(gi.CSS.toolboxShowed);
  }
  /**
   * Hides the Toolbox
   *
   * @returns {void}
   */
  hide() {
    this.popover.close(), this.wrapper.classList.remove(gi.CSS.toolboxShowed);
  }
}
function gb(o, e) {
  let t = 0;
  return function(...n) {
    const r = (/* @__PURE__ */ new Date()).getTime();
    if (!(r - t < o))
      return t = r, e(...n);
  };
}
const Ct = {
  wrapper: "tc-wrap",
  wrapperReadOnly: "vtc-wrap--readonly",
  table: "tc-table",
  row: "tc-row",
  withHeadings: "tc-table--heading",
  rowSelected: "tc-row--selected",
  cell: "tc-cell",
  cellSelected: "tc-cell--selected",
  addRow: "tc-add-row",
  addColumn: "tc-add-column"
};
let bb = class {
  /**
   * Creates
   *
   * @constructor
   * @param {boolean} readOnly - read-only mode flag
   * @param {object} api - Editor.js API
   * @param {TableData} data - Editor.js API
   * @param {TableConfig} config - Editor.js API
   */
  constructor(e, t, n, r) {
    var a, c, u, p, g, v;
    this.readOnly = e, this.api = t, this.data = n, this.config = r, this.wrapper = null, this.table = null, this.toolboxRow = this.createRowToolbox(), this.createTableWrapper(), this.hoveredRow = 0, this.hoveredColumn = 0, this.selectedRow = 0, this.selectedColumn = 0, this.tunes = {
      withHeadings: !1
    }, this.dropDown = {
      weight: {
        value: ((u = (c = (a = this.data) == null ? void 0 : a.content) == null ? void 0 : c[1]) == null ? void 0 : u[2]) || "kg",
        options: ["Kg", "Gram", "Ounce", "Pound"],
        cell: "",
        row: 1,
        col: 2
      },
      temprature: {
        value: ((v = (g = (p = this.data) == null ? void 0 : p.content) == null ? void 0 : g[2]) == null ? void 0 : v[2]) || "C",
        options: ["C", "F"],
        cell: "",
        row: 2,
        col: 2
      }
    }, this.resize(), this.init();
  }
  init() {
    this.fill(), this.focusedCell = {
      row: 0,
      column: 0
    }, this.documentClicked = (e) => {
      const t = e.target.closest(`.${Ct.table}`) !== null, n = e.target.closest(`.${Ct.wrapper}`) === null;
      (t || n) && this.hideToolboxes();
    }, this.readOnly || this.bindEvents();
  }
  /**
   * Returns the rendered table wrapper
   *
   * @returns {Element}
   */
  getWrapper() {
    return this.wrapper;
  }
  /**
   * Hangs the necessary handlers to events
   */
  bindEvents() {
    document.addEventListener("click", this.documentClicked), this.table.addEventListener("mousemove", gb(150, (e) => this.onMouseMoveInTable(e)), { passive: !0 }), this.table.onkeypress = (e) => this.onKeyPressListener(e), this.table.addEventListener("keydown", (e) => this.onKeyDownListener(e)), this.table.addEventListener("focusin", (e) => this.focusInTableListener(e)), Object.values(this.dropDown).map((e) => {
      var t, n;
      e.cell != "" && ((t = e == null ? void 0 : e.cell) == null || t.addEventListener("click", (r) => {
        r.stopPropagation();
        const a = e == null ? void 0 : e.cell;
        for (; a.firstChild; )
          a.firstChild.removeEventListener("click", () => {
          }), a.firstChild.removeEventListener("change", () => {
          }), a.removeChild(a.firstChild);
        a.appendChild(this.getOptions(e));
      }), (n = e == null ? void 0 : e.cell) == null || n.addEventListener("blur", (r) => {
        const a = this;
        setTimeout(function() {
          const c = e == null ? void 0 : e.cell;
          document.activeElement !== c && c.appendChild(a.getOptions(e));
        }, 100);
      }));
    });
  }
  /**
    * Configures and creates the toolbox for manipulating with columns
    *
    * @returns {Toolbox}
    */
  createCellToolbox() {
    return new gi({
      api: this.api,
      cssModifier: "column",
      items: [
        {
          label: this.api.i18n.t("Select unit"),
          icon: Ba,
          onClick: () => {
            this.hideCellToolBoxes();
          },
          content: this.getKg()
          //this was before now we don't need it.
        }
      ],
      onOpen: () => {
        this.selectColumn(this.hoveredColumn), this.hideRowToolbox();
      },
      onClose: () => {
        this.unselectColumn();
      },
      table: this
    });
  }
  /**
   * Configures and creates the toolbox for manipulating with columns
   *
   * @returns {Toolbox}
   */
  createColumnToolbox() {
    return new gi({
      api: this.api,
      cssModifier: "column",
      items: [
        {
          label: this.api.i18n.t("Add column to left"),
          icon: Ba,
          onClick: () => {
            this.addColumn(this.selectedColumn, !0), this.hideToolboxes();
          }
        },
        {
          label: this.api.i18n.t("Add column to right"),
          icon: hb,
          onClick: () => {
            this.addColumn(this.selectedColumn + 1, !0), this.hideToolboxes();
          }
        },
        {
          label: this.api.i18n.t("Delete column"),
          icon: Kd,
          hideIf: () => this.numberOfColumns === 1,
          confirmationRequired: !0,
          onClick: () => {
            this.deleteColumn(this.selectedColumn), this.hideToolboxes();
          }
        }
      ],
      onOpen: () => {
        this.selectColumn(this.hoveredColumn), this.hideRowToolbox();
      },
      onClose: () => {
        this.unselectColumn();
      },
      table: this
    });
  }
  /**
   * Configures and creates the toolbox for manipulating with rows
   *
   * @returns {Toolbox}
   */
  createRowToolbox() {
    return new gi({
      api: this.api,
      cssModifier: "row",
      table: this,
      items: [
        {
          label: this.api.i18n.t("Add Extra Vitals"),
          icon: Ba,
          onClick: () => {
            this.dropDown.extra = {
              value: "kg",
              options: ["Kg", "Gram", "Ounce", "Pound"],
              cell: "",
              row: this.data.content.length,
              col: 2
            }, this.data.content.push(["Some Extra vital", "", "KG"]), this.addRow(this.selectRow, !0), this.hideToolboxes(), this.fill();
          }
        },
        // {
        //   label: this.api.i18n.t('Add row above'),
        //   icon: IconDirectionUpRight,
        //   onClick: () => {
        //     this.addRow(this.selectedRow, true);
        //     this.hideToolboxes();
        //   }
        // },
        // {
        //   label: this.api.i18n.t('Add row below'),
        //   icon: IconDirectionDownRight,
        //   onClick: () => {
        //     this.addRow(this.selectedRow + 1, true);
        //     this.hideToolboxes();
        //   }
        // },
        {
          label: this.api.i18n.t("Delete row"),
          icon: Kd,
          hideIf: () => this.numberOfRows === 1,
          confirmationRequired: !0,
          onClick: () => {
            this.deleteRow(this.selectedRow), this.hideToolboxes();
          }
        }
      ],
      onOpen: () => {
        this.selectRow(this.hoveredRow), this.hideColumnToolbox();
      },
      onClose: () => {
        this.unselectRow();
      }
    });
  }
  /**
   * When you press enter it moves the cursor down to the next row
   * or creates it if the click occurred on the last one
   */
  moveCursorToNextRow() {
    this.focusedCell.row !== this.numberOfRows ? (this.focusedCell.row += 1, this.focusCell(this.focusedCell)) : (this.addRow(), this.focusedCell.row += 1, this.focusCell(this.focusedCell), this.updateToolboxesPosition(0, 0));
  }
  /**
   * Get table cell by row and col index
   *
   * @param {number} row - cell row coordinate
   * @param {number} column - cell column coordinate
   * @returns {HTMLElement}
   */
  getCell(e, t) {
    return this.table.querySelectorAll(`.${Ct.row}:nth-child(${e}) .${Ct.cell}`)[t - 1];
  }
  /**
   * Get table row by index
   *
   * @param {number} row - row coordinate
   * @returns {HTMLElement}
   */
  getRow(e) {
    return this.table.querySelector(`.${Ct.row}:nth-child(${e})`);
  }
  /**
   * The parent of the cell which is the row
   *
   * @param {HTMLElement} cell - cell element
   * @returns {HTMLElement}
   */
  getRowByCell(e) {
    return e.parentElement;
  }
  /**
   * Ger row's first cell
   *
   * @param {Element} row - row to find its first cell
   * @returns {Element}
   */
  getRowFirstCell(e) {
    return e.querySelector(`.${Ct.cell}:first-child`);
  }
  /**
   * Set the sell's content by row and column numbers
   *
   * @param {number} row - cell row coordinate
   * @param {number} column - cell column coordinate
   * @param {string} content - cell HTML content
   */
  setCellContent(e, t, n, r = !1) {
    const a = this.getCell(e, t);
    a.innerHTML = n, Object.values(this.dropDown).map((c) => {
      e - 1 == c.row && t - 1 == c.col && (a.innerHTML = n, c.cell = a);
    }), r && n !== "" && a.setAttribute("contenteditable", "false");
  }
  getOptions(e) {
    const t = bo("select");
    return e.options.forEach((n) => {
      const r = bo("option");
      r.value = n.toLowerCase(), t.add(r), n.toLowerCase() == e.value.toLocaleLowerCase() && (r.selected = !0), r.text = n;
    }), t.addEventListener("click", (n) => {
      n.stopPropagation();
    }), t.addEventListener("change", (n) => {
      n.stopPropagation(), this.data.content[e == null ? void 0 : e.row][e == null ? void 0 : e.col] = n.target.value, e.value = n.target.value, e.cell.innerHTML = n.target.value;
    }), t;
  }
  /**
   * Add column in table on index place
   * Add cells in each row
   *
   * @param {number} columnIndex - number in the array of columns, where new column to insert, -1 if insert at the end
   * @param {boolean} [setFocus] - pass true to focus the first cell
   */
  addColumn(e = -1, t = !1) {
    let n = this.numberOfColumns;
    for (let r = 1; r <= this.numberOfRows; r++) {
      let a;
      const c = this.createCell();
      if (c.setAttribute("row", r), e > 0 && e <= n ? (a = this.getCell(r, e), Gd(c, a)) : a = this.getRow(r).appendChild(c), a.childNodes.forEach((u, p) => u.setAttribute("col", p)), r === 1) {
        const u = this.getCell(r, e > 0 ? e : n + 1);
        u && t && Zd(u);
      }
    }
    this.addHeadingAttrToFirstRow();
  }
  /**
   * Add row in table on index place
   *
   * @param {number} index - number in the array of rows, where new column to insert, -1 if insert at the end
   * @param {boolean} [setFocus] - pass true to focus the inserted row
   * @returns {HTMLElement} row
   */
  addRow(e = -1, t = !1) {
    let n, r = bo("div", Ct.row);
    this.tunes.withHeadings && this.removeHeadingAttrFromFirstRow();
    let a = this.numberOfColumns;
    if (e > 0 && e <= this.numberOfRows) {
      let u = this.getRow(e);
      n = Gd(r, u);
    } else
      n = this.table.appendChild(r);
    this.fillRow(n, a), this.tunes.withHeadings && this.addHeadingAttrToFirstRow();
    const c = this.getRowFirstCell(n);
    return c && t && Zd(c), n;
  }
  /**
   * Delete a column by index
   *
   * @param {number} index
   */
  deleteColumn(e) {
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.getCell(t, e);
      if (!n)
        return;
      n.remove();
    }
  }
  /**
   * Delete a row by index
   *
   * @param {number} index
   */
  deleteRow(e) {
    this.getRow(e).remove(), this.addHeadingAttrToFirstRow();
  }
  /**
   * Create a wrapper containing a table, toolboxes
   * and buttons for adding rows and columns
   *
   * @returns {HTMLElement} wrapper - where all buttons for a table and the table itself will be
   */
  createTableWrapper() {
    this.wrapper = bo("div", Ct.wrapper), this.table = bo("div", Ct.table), this.readOnly && this.wrapper.classList.add(Ct.wrapperReadOnly), this.wrapper.appendChild(this.toolboxRow.element), this.wrapper.appendChild(this.table), this.readOnly || (bo("div", Ct.addColumn, {
      innerHTML: Xd
    }), bo("div", Ct.addRow, {
      innerHTML: Xd
    }));
  }
  /**
   * Returns the size of the table based on initial data or config "size" property
   *
   * @return {{rows: number, cols: number}} - number of cols and rows
   */
  computeInitialSize() {
    const e = this.data && this.data.content, t = Array.isArray(e), n = t ? e.length : !1, r = t ? e.length : void 0, a = n ? e[0].length : void 0, c = Number.parseInt(this.config && this.config.rows), u = Number.parseInt(this.config && this.config.cols), p = !isNaN(c) && c > 0 ? c : void 0, g = !isNaN(u) && u > 0 ? u : void 0;
    return {
      rows: r || p || 2,
      cols: a || g || 2
    };
  }
  /**
   * Resize table to match config size or transmitted data size
   *
   * @return {{rows: number, cols: number}} - number of cols and rows
   */
  resize() {
    const { rows: e, cols: t } = this.computeInitialSize();
    for (let n = 0; n < e; n++)
      this.addRow();
    for (let n = 0; n < t; n++)
      this.addColumn();
  }
  /**
   * Fills the table with data passed to the constructor
   *
   * @returns {void}
   */
  fill() {
    const e = this.data;
    if (e && e.content)
      for (let t = 0; t < e.content.length; t++)
        for (let n = 0; n < e.content[t].length; n++)
          this.setCellContent(t + 1, n + 1, e.content[t][n], !0);
  }
  /**
   * Fills a row with cells
   *
   * @param {HTMLElement} row - row to fill
   * @param {number} numberOfColumns - how many cells should be in a row
   */
  fillRow(e, t) {
    for (let n = 1; n <= t; n++) {
      const r = this.createCell();
      e.appendChild(r);
    }
  }
  /**
   * Creating a cell element
   *
   * @return {Element}
   */
  createCell() {
    return bo("div", Ct.cell, {
      contentEditable: !this.readOnly
    });
  }
  /**
   * Get number of rows in the table
   */
  get numberOfRows() {
    return this.table.childElementCount;
  }
  /**
   * Get number of columns in the table
   */
  get numberOfColumns() {
    return this.numberOfRows ? this.table.querySelectorAll(`.${Ct.row}:first-child .${Ct.cell}`).length : 0;
  }
  /**
   * Is the column toolbox menu displayed or not
   *
   * @returns {boolean}
   */
  get isColumnMenuShowing() {
    return !1;
  }
  /**
   * Is the row toolbox menu displayed or not
   *
   * @returns {boolean}
   */
  get isRowMenuShowing() {
    return this.selectedRow !== 0;
  }
  /**
   * Recalculate position of toolbox icons
   *
   * @param {Event} event - mouse move event
   */
  onMouseMoveInTable(e) {
    const { row: t, column: n } = this.getHoveredCell(e);
    this.hoveredColumn = n, this.hoveredRow = t, this.updateToolboxesPosition();
  }
  /**
   * Prevents default Enter behaviors
   * Adds Shift+Enter processing
   *
   * @param {KeyboardEvent} event - keypress event
   */
  onKeyPressListener(e) {
    if (e.key === "Enter") {
      if (e.shiftKey)
        return !0;
      this.moveCursorToNextRow();
    }
    return e.key !== "Enter";
  }
  /**
   * Prevents tab keydown event from bubbling
   * so that it only works inside the table
   *
   * @param {KeyboardEvent} event - keydown event
   */
  onKeyDownListener(e) {
    e.key === "Tab" && e.stopPropagation();
  }
  /**
   * Set the coordinates of the cell that the focus has moved to
   *
   * @param {FocusEvent} event - focusin event
   */
  focusInTableListener(e) {
    const t = e.target, n = this.getRowByCell(t);
    this.focusedCell = {
      row: Array.from(this.table.querySelectorAll(`.${Ct.row}`)).indexOf(n) + 1,
      column: Array.from(n.querySelectorAll(`.${Ct.cell}`)).indexOf(t) + 1
    };
  }
  /**
   * Unselect row/column
   * Close toolbox menu
   * Hide toolboxes
   *
   * @returns {void}
   */
  hideToolboxes() {
    this.hideRowToolbox(), this.hideColumnToolbox(), this.updateToolboxesPosition();
  }
  hideCellToolBoxes() {
    this.unselectRow(), this.unselectColumn(), this.toolBoxCell.hide(), this.updateToolboxesPosition();
  }
  /**
   * Unselect row, close toolbox
   *
   * @returns {void}
   */
  hideRowToolbox() {
    this.unselectRow(), this.toolboxRow.hide();
  }
  /**
   * Unselect column, close toolbox
   *
   * @returns {void}
   */
  hideColumnToolbox() {
    this.unselectColumn();
  }
  /**
   * Set the cursor focus to the focused cell
   *
   * @returns {void}
   */
  focusCell() {
    this.focusedCellElem.focus();
  }
  /**
   * Get current focused element
   *
   * @returns {HTMLElement} - focused cell
   */
  get focusedCellElem() {
    const { row: e, column: t } = this.focusedCell;
    return this.getCell(e, t);
  }
  /**
   * Update toolboxes position
   *
   * @param {number} row - hovered row
   * @param {number} column - hovered column
   */
  updateToolboxesPosition(e = this.hoveredRow, t = this.hoveredColumn) {
    this.isColumnMenuShowing || t > 0 && t <= this.numberOfColumns, this.isRowMenuShowing || e > 0 && e <= this.numberOfRows && this.toolboxRow.show(() => {
      const n = this.getRow(e), { fromTopBorder: r } = Ol(this.table, n), { height: a } = n.getBoundingClientRect();
      return {
        top: `${Math.ceil(r + a / 2)}px`
      };
    });
  }
  updateCellToolboxesPosition(e = this.hoveredRow, t = this.hoveredColumn) {
    this.isColumnMenuShowing || t > 0 && t <= this.numberOfColumns && this.toolBoxCell.show(() => ({
      left: `calc((100% - var(--cell-size)) / (${this.numberOfColumns} * 2) * (1 + (${t} - 1) * 2))`
    })), this.isRowMenuShowing || e > 0 && e <= this.numberOfRows && this.toolBoxCell.show(() => {
      const n = this.getRow(e), { fromTopBorder: r } = Ol(this.table, n), { height: a } = n.getBoundingClientRect();
      return {
        top: `${Math.ceil(r + a / 2)}px`
      };
    });
  }
  /**
   * Makes the first row headings
   *
   * @param {boolean} withHeadings - use headings row or not
   */
  setHeadingsSetting(e) {
    this.tunes.withHeadings = e, e ? (this.table.classList.add(Ct.withHeadings), this.addHeadingAttrToFirstRow()) : (this.table.classList.remove(Ct.withHeadings), this.removeHeadingAttrFromFirstRow());
  }
  /**
   * Adds an attribute for displaying the placeholder in the cell
   */
  addHeadingAttrToFirstRow() {
    for (let e = 1; e <= this.numberOfColumns; e++) {
      let t = this.getCell(1, e);
      t && t.setAttribute("heading", this.api.i18n.t("Heading"));
    }
  }
  /**
   * Removes an attribute for displaying the placeholder in the cell
   */
  removeHeadingAttrFromFirstRow() {
    for (let e = 1; e <= this.numberOfColumns; e++) {
      let t = this.getCell(1, e);
      t && t.removeAttribute("heading");
    }
  }
  /**
   * Add effect of a selected row
   *
   * @param {number} index
   */
  selectRow(e) {
    const t = this.getRow(e);
    t && (this.selectedRow = e, t.classList.add(Ct.rowSelected));
  }
  /**
   * Remove effect of a selected row
   */
  unselectRow() {
    if (this.selectedRow <= 0)
      return;
    const e = this.table.querySelector(`.${Ct.rowSelected}`);
    e && e.classList.remove(Ct.rowSelected), this.selectedRow = 0;
  }
  /**
   * Add effect of a selected column
   *
   * @param {number} index
   */
  selectColumn(e) {
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.getCell(t, e);
      n && n.classList.add(Ct.cellSelected);
    }
    this.selectedColumn = e;
  }
  /**
   * Remove effect of a selected column
   */
  unselectColumn() {
    if (this.selectedColumn <= 0)
      return;
    let e = this.table.querySelectorAll(`.${Ct.cellSelected}`);
    Array.from(e).forEach((t) => {
      t.classList.remove(Ct.cellSelected);
    }), this.selectedColumn = 0;
  }
  /**
   * Calculates the row and column that the cursor is currently hovering over
   * The search was optimized from O(n) to O (log n) via bin search to reduce the number of calculations
   *
   * @param {Event} event - mousemove event
   * @returns hovered cell coordinates as an integer row and column
   */
  getHoveredCell(e) {
    let t = this.hoveredRow, n = this.hoveredColumn;
    const { width: r, height: a, x: c, y: u } = db(this.table, e);
    return c >= 0 && (n = this.binSearch(
      this.numberOfColumns,
      (p) => this.getCell(1, p),
      ({ fromLeftBorder: p }) => c < p,
      ({ fromRightBorder: p }) => c > r - p
    )), u >= 0 && (t = this.binSearch(
      this.numberOfRows,
      (p) => this.getCell(p, 1),
      ({ fromTopBorder: p }) => u < p,
      ({ fromBottomBorder: p }) => u > a - p
    )), {
      row: t || this.hoveredRow,
      column: n || this.hoveredColumn
    };
  }
  /**
   * Looks for the index of the cell the mouse is hovering over.
   * Cells can be represented as ordered intervals with left and
   * right (upper and lower for rows) borders inside the table, if the mouse enters it, then this is our index
   *
   * @param {number} numberOfCells - upper bound of binary search
   * @param {function} getCell - function to take the currently viewed cell
   * @param {function} beforeTheLeftBorder - determines the cursor position, to the left of the cell or not
   * @param {function} afterTheRightBorder - determines the cursor position, to the right of the cell or not
   * @returns {number}
   */
  binSearch(e, t, n, r) {
    let a = 0, c = e + 1, u = 0, p;
    for (; a < c - 1 && u < 10; ) {
      p = Math.ceil((a + c) / 2);
      const g = t(p), v = Ol(this.table, g);
      if (n(v))
        c = p;
      else if (r(v))
        a = p;
      else
        break;
      u++;
    }
    return p;
  }
  /**
   * Collects data from cells into a two-dimensional array
   *
   * @returns {string[][]}
   */
  getData() {
    const e = [];
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.table.querySelector(`.${Ct.row}:nth-child(${t})`), r = Array.from(n.querySelectorAll(`.${Ct.cell}`));
      r.every((a) => !a.textContent.trim()) || e.push(r.map((a) => a.innerHTML));
    }
    for (const t in this.dropDown)
      if (Object.hasOwnProperty.call(this.dropDown, t)) {
        const n = this.dropDown[t];
        "row" in n && "col" in n && !isNaN(n.row) && !isNaN(n.col) && (n.row in e || (e[n == null ? void 0 : n.row] = ["", "", ""])), e[n == null ? void 0 : n.row][n == null ? void 0 : n.col] = n == null ? void 0 : n.value;
      }
    return e;
  }
  /**
   * Remove listeners on the document
   */
  destroy() {
    document.removeEventListener("click", this.documentClicked);
  }
}, vb = class {
  /**
   * Notify core that read-only mode is supported
   *
   * @returns {boolean}
   */
  static get isReadOnlySupported() {
    return !0;
  }
  /**
   * Allow to press Enter inside the CodeTool textarea
   *
   * @returns {boolean}
   * @public
   */
  static get enableLineBreaks() {
    return !0;
  }
  async getData() {
    const e = new Headers();
    e.append("Authorization", "ApiKey bDlRVWhvd0JlUGYtTlVUSDloQno6Rld4Z2Rld1dUdDZ4N0k3YWxjeW5wZw=="), e.append("Content-Type", "application/json"), await fetch("https://dummyjson.com/products").then((t) => t.text()).catch((t) => console.log("error", t));
  }
  /**
   * Render plugin`s main Element and fill it with saved data
   *
   * @param {TableData} data — previously saved data
   * @param {TableConfig} config - user config for Tool
   * @param {object} api - Editor.js API
   * @param {boolean} readOnly - read-only mode flag
   */
  constructor({ data: e, config: t, api: n, readOnly: r }) {
    var a, c;
    this.api = n, this.readOnly = r, this.config = t, this.data = {
      withHeadings: this.getConfig("withHeadings", !1, e),
      content: e && e.content ? e.content : []
    }, ((c = (a = this.data) == null ? void 0 : a.content) == null ? void 0 : c.length) == 0 && (this.data = {
      withHeadings: !0,
      content: [
        [
          "Vital",
          "Value",
          "Unit"
        ],
        [
          "Body Weight",
          "",
          "KG"
        ],
        [
          "Temprature",
          "",
          "&#8451;"
        ],
        [
          "Heart Rate",
          "",
          "bpm"
        ],
        [
          "Respiratory Rate",
          "",
          "bpm"
        ]
      ]
    }), this.table = null;
  }
  /**
   * Get Tool toolbox settings
   * icon - Tool icon's SVG
   * title - title to show in toolbox
   *
   * @returns {{icon: string, title: string}}
   */
  static get toolbox() {
    return {
      icon: mb,
      title: "Key-Vitals"
    };
  }
  /**
   * Return Tool's view
   *
   * @returns {HTMLDivElement}
   */
  render() {
    return console.log("KEY VITAL PLUGIN RENDERED"), console.log("|||||||||||||||||||||||||"), console.log("|||||||||||||||||||||||||"), this.table = new bb(this.readOnly, this.api, this.data, this.config), this.container = bo("div", this.api.styles.block), this.container.appendChild(this.table.getWrapper()), this.table.setHeadingsSetting(this.data.withHeadings), this.container;
  }
  /**
   * Returns plugin settings
   *
   * @returns {Array}
   */
  renderSettings() {
    return [
      {
        label: this.api.i18n.t("With headings"),
        icon: pb,
        isActive: this.data.withHeadings,
        closeOnActivate: !0,
        toggle: !0,
        onActivate: () => {
          this.data.withHeadings = !0, this.table.setHeadingsSetting(this.data.withHeadings);
        }
      },
      {
        label: this.api.i18n.t("Without headings"),
        icon: fb,
        isActive: !this.data.withHeadings,
        closeOnActivate: !0,
        toggle: !0,
        onActivate: () => {
          this.data.withHeadings = !1, this.table.setHeadingsSetting(this.data.withHeadings);
        }
      }
    ];
  }
  /**
   * Extract table data from the view
   *
   * @returns {TableData} - saved data
   */
  save() {
    const e = this.table.getData();
    return {
      withHeadings: this.data.withHeadings,
      content: e
    };
  }
  /**
   * Plugin destroyer
   *
   * @returns {void}
   */
  destroy() {
    this.table.destroy();
  }
  /**
   * A helper to get config value.
   * 
   * @param {string} configName - the key to get from the config. 
   * @param {any} defaultValue - default value if config doesn't have passed key
   * @param {object} savedData - previously saved data. If passed, the key will be got from there, otherwise from the config
   * @returns {any} - config value.
   */
  getConfig(e, t = void 0, n = void 0) {
    const r = this.data || n;
    return r ? r[e] ? r[e] : t : this.config && this.config[e] ? this.config[e] : t;
  }
  /**  
   * Table onPaste configuration
   *
   * @public
   */
  static get pasteConfig() {
    return { tags: ["TABLE", "TR", "TH", "TD"] };
  }
  /**
   * On paste callback that is fired from Editor
   *
   * @param {PasteEvent} event - event with pasted data
   */
  onPaste(e) {
    const t = e.detail.data, n = t.querySelector(":scope > thead, tr:first-of-type th"), r = Array.from(t.querySelectorAll("tr")).map((a) => Array.from(a.querySelectorAll("th, td")).map((c) => c.innerHTML));
    this.data = {
      withHeadings: n !== null,
      content: r
    }, this.table.wrapper && this.table.wrapper.replaceWith(this.render());
  }
};
function Dt(o, e, t = {}) {
  const n = document.createElement(o);
  Array.isArray(e) ? n.classList.add(...e) : e && n.classList.add(e);
  for (const r in t)
    Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]);
  return n;
}
function Jd(o) {
  const e = o.getBoundingClientRect();
  return {
    y1: Math.floor(e.top + window.pageYOffset),
    x1: Math.floor(e.left + window.pageXOffset),
    x2: Math.floor(e.right + window.pageXOffset),
    y2: Math.floor(e.bottom + window.pageYOffset)
  };
}
function Ll(o, e) {
  const t = Jd(o), n = Jd(e);
  return {
    fromTopBorder: n.y1 - t.y1,
    fromLeftBorder: n.x1 - t.x1,
    fromRightBorder: t.x2 - n.x2,
    fromBottomBorder: t.y2 - n.y2
  };
}
function yb(o, e) {
  const t = o.getBoundingClientRect(), { width: n, height: r, x: a, y: c } = t, { clientX: u, clientY: p } = e;
  return {
    width: n,
    height: r,
    x: u - a,
    y: p - c
  };
}
function Qd(o, e) {
  return e.parentNode.insertBefore(o, e);
}
function eh(o, e = !0) {
  const t = document.createRange(), n = window.getSelection();
  t.selectNodeContents(o), t.collapse(e), n.removeAllRanges(), n.addRange(t);
}
class Io {
  /**
   * @param {object} options - constructor options
   * @param {PopoverItem[]} options.items - constructor options
   */
  constructor({ items: e }) {
    this.items = e, this.wrapper = void 0, this.itemEls = [];
  }
  /**
   * Set of CSS classnames used in popover
   *
   * @returns {object}
   */
  static get CSS() {
    return {
      popover: "tc-popover",
      popoverOpened: "tc-popover--opened",
      item: "tc-popover__item",
      itemHidden: "tc-popover__item--hidden",
      itemConfirmState: "tc-popover__item--confirm",
      itemIcon: "tc-popover__item-icon",
      itemLabel: "tc-popover__item-label"
    };
  }
  /**
   * Returns the popover element
   *
   * @returns {Element}
   */
  render() {
    return this.wrapper = Dt("div", Io.CSS.popover), this.items.forEach((e, t) => {
      const n = Dt("div", Io.CSS.item), r = Dt("div", Io.CSS.itemIcon, {
        innerHTML: e.icon
      }), a = Dt("div", Io.CSS.itemLabel, {
        textContent: e.label
      });
      n.dataset.index = t, n.appendChild(r), n.appendChild(a), this.wrapper.appendChild(n), this.itemEls.push(n);
    }), this.wrapper.addEventListener("click", (e) => {
      this.popoverClicked(e);
    }), this.wrapper;
  }
  /**
   * Popover wrapper click listener
   * Used to delegate clicks in items
   *
   * @returns {void}
   */
  popoverClicked(e) {
    const t = e.target.closest(`.${Io.CSS.item}`);
    if (!t)
      return;
    const n = t.dataset.index, r = this.items[n];
    if (r.confirmationRequired && !this.hasConfirmationState(t)) {
      this.setConfirmationState(t);
      return;
    }
    r.onClick();
  }
  /**
   * Enable the confirmation state on passed item
   *
   * @returns {void}
   */
  setConfirmationState(e) {
    e.classList.add(Io.CSS.itemConfirmState);
  }
  /**
   * Disable the confirmation state on passed item
   *
   * @returns {void}
   */
  clearConfirmationState(e) {
    e.classList.remove(Io.CSS.itemConfirmState);
  }
  /**
   * Check if passed item has the confirmation state
   *
   * @returns {boolean}
   */
  hasConfirmationState(e) {
    return e.classList.contains(Io.CSS.itemConfirmState);
  }
  /**
   * Return an opening state
   *
   * @returns {boolean}
   */
  get opened() {
    return this.wrapper.classList.contains(Io.CSS.popoverOpened);
  }
  /**
   * Opens the popover
   *
   * @returns {void}
   */
  open() {
    this.items.forEach((e, t) => {
      typeof e.hideIf == "function" && this.itemEls[t].classList.toggle(Io.CSS.itemHidden, e.hideIf());
    }), this.wrapper.classList.add(Io.CSS.popoverOpened);
  }
  /**
   * Closes the popover
   *
   * @returns {void}
   */
  close() {
    this.wrapper.classList.remove(Io.CSS.popoverOpened), this.itemEls.forEach((e) => {
      this.clearConfirmationState(e);
    });
  }
}
const th = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 8L12 12M12 12L16 16M12 12L16 8M12 12L8 16"/></svg>', wb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 9.16666L18.2167 12.5M18.2167 12.5L14.8833 15.8333M18.2167 12.5H10.05C9.16594 12.5 8.31809 12.1488 7.69297 11.5237C7.06785 10.8986 6.71666 10.0507 6.71666 9.16666"/></svg>', kb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.9167 14.9167L11.5833 18.25M11.5833 18.25L8.25 14.9167M11.5833 18.25L11.5833 10.0833C11.5833 9.19928 11.9345 8.35143 12.5596 7.72631C13.1848 7.10119 14.0326 6.75 14.9167 6.75"/></svg>', xb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 15.8333L18.2167 12.5M18.2167 12.5L14.8833 9.16667M18.2167 12.5L10.05 12.5C9.16595 12.5 8.31811 12.8512 7.69299 13.4763C7.06787 14.1014 6.71667 14.9493 6.71667 15.8333"/></svg>', Cb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.41 9.66H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 9.66H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.31 14.36H9.3"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 14.36H14.59"/></svg>', oh = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 7V12M12 17V12M17 12H12M12 12H7"/></svg>', Sb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', Tb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>';
class Gi {
  /**
   * Creates toolbox buttons and toolbox menus
   *
   * @param {object} api - Editor.js api
   * @param {PopoverItem[]} items - Editor.js api
   * @param {function} onOpen - callback fired when the Popover is opening
   * @param {function} onClose - callback fired when the Popover is closing
   * @param {string} [cssModifier] - the modifier for the Toolbox. Allows to add some specific styles.
   */
  constructor({ api: e, items: t, onOpen: n, onClose: r, cssModifier: a = "" }) {
    this.api = e, this.items = t, this.onOpen = n, this.onClose = r, this.cssModifier = a, this.popover = null, this.wrapper = this.createToolbox();
  }
  /**
   * Style classes
   */
  static get CSS() {
    return {
      toolbox: "tc-toolbox",
      toolboxShowed: "tc-toolbox--showed",
      toggler: "tc-toolbox__toggler"
    };
  }
  /**
   * Returns rendered Toolbox element
   */
  get element() {
    return this.wrapper;
  }
  /**
   * Creating a toolbox to open menu for a manipulating columns
   *
   * @returns {Element}
   */
  createToolbox() {
    const e = Dt("div", [
      Gi.CSS.toolbox,
      this.cssModifier ? `${Gi.CSS.toolbox}--${this.cssModifier}` : ""
    ]);
    e.dataset.mutationFree = "true";
    const t = this.createPopover(), n = this.createToggler();
    return e.appendChild(n), e.appendChild(t), e;
  }
  /**
   * Creates the Toggler
   *
   * @returns {Element}
   */
  createToggler() {
    const e = Dt("div", Gi.CSS.toggler, {
      innerHTML: Cb
    });
    return e.addEventListener("click", () => {
      this.togglerClicked();
    }), e;
  }
  /**
   * Creates the Popover instance and render it
   *
   * @returns {Element}
   */
  createPopover() {
    return this.popover = new Io({
      items: this.items
    }), this.popover.render();
  }
  /**
   * Toggler click handler. Opens/Closes the popover
   *
   * @returns {void}
   */
  togglerClicked() {
    this.popover.opened ? (this.popover.close(), this.onClose()) : (this.popover.open(), this.onOpen());
  }
  /**
   * Shows the Toolbox
   *
   * @param {function} computePositionMethod - method that returns the position coordinate
   * @returns {void}
   */
  show(e) {
    const t = e();
    Object.entries(t).forEach(([n, r]) => {
      this.wrapper.style[n] = r;
    }), this.wrapper.classList.add(Gi.CSS.toolboxShowed);
  }
  /**
   * Hides the Toolbox
   *
   * @returns {void}
   */
  hide() {
    this.popover.close(), this.wrapper.classList.remove(Gi.CSS.toolboxShowed);
  }
}
function _b(o, e) {
  let t = 0;
  return function(...n) {
    const r = (/* @__PURE__ */ new Date()).getTime();
    if (!(r - t < o))
      return t = r, e(...n);
  };
}
const Qe = {
  wrapper: "tc-wrap",
  wrapperReadOnly: "tc-wrap--readonly",
  table: "tc-table",
  row: "tc-row",
  withHeadings: "tc-table--heading",
  rowSelected: "tc-row--selected",
  cell: "tc-cell",
  cellSelected: "tc-cell--selected",
  addRow: "tc-add-row",
  addColumn: "tc-add-column",
  formInput: "tr-form-input"
};
class Eb {
  /**
   * Creates
   *
   * @constructor
   * @param {boolean} readOnly - read-only mode flag
   * @param {object} api - Editor.js API
   * @param {TableData} data - Editor.js API
   * @param {TableConfig} config - Editor.js API
   */
  constructor(e, t, n, r, a) {
    var c;
    if (this.readOnly = e, this.api = t, this.block = a, this.config = r, this.isJapan = ((c = this.config) == null ? void 0 : c.locale) == "jp", n.content.length > 1) {
      const u = r.data.data.length;
      n.content.map((p, g) => p.splice(u));
    }
    n.heading = r.data.data.map((u) => this.isJapan ? u.heading_jp : u.heading), this.data = n, this.wrapper = null, this.table = null, this.interval = null, this.toolboxRow = this.createRowToolbox(), this.toolBoxDue = null, this.createTableWrapper(), this.hoveredRow = 0, this.hoveredColumn = 0, this.selectedRow = 0, this.selectedColumn = 0, this.tunes = {
      withHeadings: !1
    }, this.resize(), this.fill(), setTimeout(() => {
      this.checkInput();
    }, 0), this.focusedCell = {
      row: 0,
      column: 0
    }, this.documentClicked = (u) => {
      const p = u.target.closest(`.${Qe.table}`) !== null, g = u.target.closest(`.${Qe.wrapper}`) === null;
      (p || g) && this.hideToolboxes();
      const x = u.target.closest(`.${Qe.addRow}`), y = u.target.closest(`.${Qe.addColumn}`);
      x && x.parentNode === this.wrapper ? (this.addRow(void 0, !0), this.hideToolboxes()) : y && y.parentNode === this.wrapper && this.hideToolboxes();
    }, this.readOnly || this.bindEvents();
  }
  createModal() {
    let e = Dt("div", "myModal"), t = Dt("button", "myBtn"), n = Dt("close")[0];
    t.onclick = function() {
      e.style.display = "block";
    }, n.onclick = function() {
      e.style.display = "none";
    }, window.onclick = function(r) {
      r.target == e && (e.style.display = "none");
    };
  }
  checkInput() {
    this.table.querySelectorAll(`.${Qe.row}`).forEach((e, t) => {
      var n;
      t != 0 && ((n = e == null ? void 0 : e.firstChild) == null ? void 0 : n.childElementCount) == 0 && this.createColumnInput(t);
    });
  }
  createColumnInput(e) {
    var t, n, r, a;
    this.isJapan = ((t = this.config) == null ? void 0 : t.locale) == "jp";
    for (let c = 0; c < this.config.data.data.length; c++) {
      const u = this.config.data.data[c], p = this.getCell(e + 1, c + 1);
      if (!p)
        return;
      const g = ((a = (r = (n = this.data) == null ? void 0 : n.content) == null ? void 0 : r[e - 1]) == null ? void 0 : a[c]) || (u == null ? void 0 : u.default) || "";
      if (u.type == "search") {
        const v = Dt("input", Qe.formInput, {
          value: g,
          disabled: this.readOnly
        });
        this.api.listeners.on(v, "keyup", (x) => {
          const T = x.target.value.trim().replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
          clearTimeout(this.interval), this.interval = setTimeout(() => {
            this.fetchData(T, v);
          }, 500);
        }), p.appendChild(v);
      } else if (u.type == "select") {
        const v = Dt("select", Qe.formInput, {
          value: g,
          disabled: this.readOnly
        });
        let x = !1;
        u.options.map((y) => {
          y.label == g && (x = !0);
          const T = Dt("option", "", {
            label: this.isJapan ? y.label_jp : y.label,
            value: y.label,
            selected: g == y.label
          });
          v.appendChild(T);
        }), x || v.prepend(Dt("option", "", {
          label: g,
          value: g,
          selected: !0
        })), this.api.listeners.on(v, "change", (y) => {
          var T, k;
          if (y.target.value == "Others") {
            const M = y.target.parentElement, O = Dt("input", Qe.formInput, {
              placeholder: this.api.i18n.t("Enter text")
            });
            this.api.listeners.on(O, "focusout", () => {
              this.block.dispatchChange();
            }), (k = (T = M.children) == null ? void 0 : T[0]) == null || k.remove(), M.appendChild(O);
          }
          this.block.dispatchChange();
        }), p.appendChild(v);
      } else if (u.type == "text") {
        const v = Dt("input", Qe.formInput, {
          value: g,
          disabled: this.readOnly
        });
        p.appendChild(v);
      } else if (u.type == "checkbox") {
        const v = Dt("input", Qe.formInput, {
          checked: g,
          type: "checkbox",
          disabled: this.readOnly
        });
        this.api.listeners.on(v, "change", () => {
          this.block.dispatchChange();
        }), p.appendChild(v);
      } else if (u.type == "number") {
        const v = Dt("input", Qe.formInput, {
          value: g,
          type: "number",
          disabled: this.readOnly
        });
        this.api.listeners.on(v, "keyup", () => {
          clearTimeout(this.interval), this.interval = setTimeout(() => {
            this.block.dispatchChange();
          }, 500);
        }), p.appendChild(v);
      }
    }
  }
  async fetchData(e = "", t) {
    const n = new Headers();
    n.append("Content-Type", "application/json");
    const r = JSON.stringify({
      search: e
    }), a = {
      method: "POST",
      headers: n,
      body: r
    }, c = await fetch(this.config.apiUrl, a).then((p) => p.json()).catch((p) => console.log("error", p)), u = [{
      label: this.api.i18n.t("Delete row"),
      icon: th,
      hideIf: () => this.numberOfRows === 1,
      confirmationRequired: !0,
      onClick: () => {
        this.deleteRow(this.focusedCell.row), this.hideToolboxes();
      }
    }];
    this.focusedCell.row - 1, c.data.map((p) => {
      u.push({
        label: p.medicine,
        icon: kb,
        confirmationRequired: !1,
        onClick: (g) => {
          p.medicine && (t.value = p.medicine), this.hideToolboxes(), this.block.dispatchChange();
        }
      });
    }), this.renderToolBox(u);
  }
  /**
   * Returns the rendered table wrapper
   *
   * @returns {Element}
   */
  getWrapper() {
    return this.wrapper;
  }
  /**
   * Hangs the necessary handlers to events
   */
  bindEvents() {
    this.wrapper.addEventListener("click", this.documentClicked), this.table.addEventListener("mousemove", _b(150, (e) => this.onMouseMoveInTable(e)), { passive: !0 }), this.table.onkeypress = (e) => this.onKeyPressListener(e), this.table.addEventListener("keydown", (e) => this.onKeyDownListener(e)), this.table.addEventListener("keyup", (e) => this.onKeyUpListener(e)), this.table.addEventListener("focusin", (e) => this.focusInTableListener(e));
  }
  /**
  * Configures and creates the toolbox for manipulating with rows
  *
  * @returns {Toolbox}
  */
  createRowToolbox() {
    return new Gi({
      api: this.api,
      cssModifier: "row",
      items: [
        {
          label: this.api.i18n.t("Add row above"),
          icon: xb,
          onClick: () => {
            this.selectedRow != 1 && (this.addRow(this.selectedRow, !0), this.hideToolboxes());
          }
        },
        {
          label: this.api.i18n.t("Add row below"),
          icon: wb,
          onClick: () => {
            this.addRow(this.selectedRow + 1, !0), this.hideToolboxes();
          }
        },
        {
          label: this.api.i18n.t("Delete row"),
          icon: th,
          hideIf: () => this.numberOfRows === 1,
          confirmationRequired: !0,
          onClick: () => {
            this.deleteRow(this.selectedRow), this.hideToolboxes();
          }
        }
      ],
      onOpen: () => {
        this.selectRow(this.hoveredRow), this.hideColumnToolbox();
      },
      onClose: () => {
        this.unselectRow();
      }
    });
  }
  createCustomToolbox(e = []) {
    return new Gi({
      table: this,
      api: this.api,
      cssModifier: "row",
      items: e,
      onOpen: () => {
        this.selectRow(this.hoveredRow), this.hideColumnToolbox();
      },
      onClose: () => {
        this.unselectRow();
      }
    });
  }
  renderToolBox(e = []) {
    this.toolBoxDue && this.toolBoxDue.element.remove(), this.toolBoxDue = this.createCustomToolbox(e), this.wrapper.appendChild(this.toolBoxDue.element), this.toolBoxDue.togglerClicked(), this.toolBoxDue.show(() => this.getUpdateLocation());
  }
  getUpdateLocation() {
    const e = this.hoveredRow, t = this.hoveredColumn, n = this.getRow(e), { fromTopBorder: r } = Ll(this.table, n), { height: a } = n.getBoundingClientRect();
    return {
      top: `${Math.ceil(r + a / 0.8)}px`,
      left: `calc((100% - var(--cell-size)) / (${this.numberOfColumns} * 2) * ( (${t} - 1) * 2))`
    };
  }
  /**
   * When you press enter it moves the cursor down to the next row
   * or creates it if the click occurred on the last one
   */
  moveCursorToNextRow() {
    this.focusedCell.row !== this.numberOfRows ? (this.focusedCell.row += 1, this.focusCell(this.focusedCell)) : (this.addRow(), this.focusedCell.row += 1, this.focusCell(this.focusedCell), this.updateToolboxesPosition(0, 0));
  }
  /**
   * Get table cell by row and col index
   *
   * @param {number} row - cell row coordinate
   * @param {number} column - cell column coordinate
   * @returns {HTMLElement}
   */
  getCell(e, t) {
    return this.table.querySelectorAll(`.${Qe.row}:nth-child(${e}) .${Qe.cell}`)[t - 1];
  }
  /**
   * Get table row by index
   *
   * @param {number} row - row coordinate
   * @returns {HTMLElement}
   */
  getRow(e) {
    return this.table.querySelector(`.${Qe.row}:nth-child(${e})`);
  }
  /**
   * The parent of the cell which is the row
   *
   * @param {HTMLElement} cell - cell element
   * @returns {HTMLElement}
   */
  getRowByCell(e) {
    return e.parentElement;
  }
  /**
   * Ger row's first cell
   *
   * @param {Element} row - row to find its first cell
   * @returns {Element}
   */
  getRowFirstCell(e) {
    return e.querySelector(`.${Qe.cell}:first-child`);
  }
  /**
   * Set the sell's content by row and column numbers
   *
   * @param {number} row - cell row coordinate
   * @param {number} column - cell column coordinate
   * @param {string} content - cell HTML content
   */
  setCellContent(e, t, n) {
    const r = this.getCell(e, t);
    "innerHTML" in r && (r.innerHTML = n);
  }
  /**
   * Add column in table on index place
   * Add cells in each row
   *
   * @param {number} columnIndex - number in the array of columns, where new column to insert, -1 if insert at the end
   * @param {boolean} [setFocus] - pass true to focus the first cell
   */
  addColumn(e = -1, t = !1) {
    let n = this.numberOfColumns;
    for (let r = 1; r <= this.numberOfRows; r++) {
      let a;
      const c = this.createCell();
      if (e > 0 && e <= n ? (a = this.getCell(r, e), Qd(c, a)) : a = this.getRow(r).appendChild(c), r === 1) {
        const u = this.getCell(r, e > 0 ? e : n + 1);
        u && t && eh(u);
      }
    }
    this.addHeadingAttrToFirstRow();
  }
  /**
   * Add row in table on index place
   *
   * @param {number} index - number in the array of rows, where new column to insert, -1 if insert at the end
   * @param {boolean} [setFocus] - pass true to focus the inserted row
   * @returns {HTMLElement} row
   */
  addRow(e = -1, t = !1) {
    let n, r = Dt("div", Qe.row);
    this.tunes.withHeadings && this.removeHeadingAttrFromFirstRow();
    let a = this.numberOfColumns;
    if (e > 0 && e <= this.numberOfRows) {
      let u = this.getRow(e);
      n = Qd(r, u);
    } else
      n = this.table.appendChild(r);
    this.fillRow(n, a), this.tunes.withHeadings && this.addHeadingAttrToFirstRow();
    const c = this.getRowFirstCell(n);
    return c && t && eh(c), this.checkInput(), n;
  }
  /**
   * Delete a column by index
   *
   * @param {number} index
   */
  deleteColumn(e) {
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.getCell(t, e);
      if (!n)
        return;
      n.remove();
    }
  }
  /**
   * Delete a row by index
   *
   * @param {number} index
   */
  deleteRow(e) {
    this.getRow(e).remove(), this.addHeadingAttrToFirstRow();
  }
  /**
   * Create a wrapper containing a table, toolboxes
   * and buttons for adding rows and columns
   *
   * @returns {HTMLElement} wrapper - where all buttons for a table and the table itself will be
   */
  createTableWrapper() {
    if (this.wrapper ? this.table.remove() : this.wrapper = Dt("div", Qe.wrapper), this.table = Dt("div", Qe.table), this.wrapper.classList.add(Qe.wrapperReadOnly), this.wrapper.appendChild(this.toolboxRow.element), this.wrapper.appendChild(this.table), !this.readOnly) {
      const e = Dt("div", Qe.addColumn, {
        innerHTML: oh
      }), t = Dt("div", Qe.addRow, {
        innerHTML: oh
      });
      this.wrapper.appendChild(e), this.wrapper.appendChild(t);
    }
  }
  /**
   * Returns the size of the table based on initial data or config "size" property
   *
   * @return {{rows: number, cols: number}} - number of cols and rows
   */
  computeInitialSize() {
    const e = this.data && this.data.content, t = Array.isArray(e), n = t ? e.length : !1, r = t ? e.length : void 0, a = n ? e[0].length : void 0, c = Number.parseInt(this.config && this.config.rows), u = Number.parseInt(this.config && this.config.cols), p = !isNaN(c) && c > 0 ? c : void 0, g = !isNaN(u) && u > 0 ? u : void 0;
    return {
      rows: r || p || 2,
      cols: a || g || 2
    };
  }
  /**
   * Resize table to match config size or transmitted data size
   *
   * @return {{rows: number, cols: number}} - number of cols and rows
   */
  resize() {
    const e = (this.data.content.length || 1) + 1, t = this.data.heading.length;
    for (let n = 0; n < e; n++)
      this.addRow();
    for (let n = 0; n < t; n++)
      this.addColumn();
  }
  /**
   * Fills the table with data passed to the constructor
   *
   * @returns {void}
   */
  fill() {
    const e = this.data;
    if (e && e.heading)
      for (let t = 0; t < e.heading.length; t++)
        this.setCellContent(1, t + 1, e.heading[t]);
  }
  /**
   * Fills a row with cells
   *
   * @param {HTMLElement} row - row to fill
   * @param {number} numberOfColumns - how many cells should be in a row
   */
  fillRow(e, t) {
    for (let n = 1; n <= t; n++) {
      const r = this.createCell();
      e.appendChild(r);
    }
  }
  /**
   * Creating a cell element
   *
   * @return {Element}
   */
  createCell() {
    return Dt("div", Qe.cell, {
      contentEditable: !1
    });
  }
  /**
   * Get number of rows in the table
   */
  get numberOfRows() {
    return this.table.childElementCount;
  }
  /**
   * Get number of columns in the table
   */
  get numberOfColumns() {
    return this.numberOfRows ? this.table.querySelectorAll(`.${Qe.row}:first-child .${Qe.cell}`).length : 0;
  }
  /**
   * Is the column toolbox menu displayed or not
   *
   * @returns {boolean}
   */
  get isColumnMenuShowing() {
    return this.selectedColumn !== 0;
  }
  /**
   * Is the row toolbox menu displayed or not
   *
   * @returns {boolean}
   */
  get isRowMenuShowing() {
    return this.selectedRow !== 0;
  }
  /**
   * Recalculate position of toolbox icons
   *
   * @param {Event} event - mouse move event
   */
  onMouseMoveInTable(e) {
    const { row: t, column: n } = this.getHoveredCell(e);
    this.hoveredColumn = n, this.hoveredRow = t, this.updateToolboxesPosition();
  }
  /**
   * Prevents default Enter behaviors
   * Adds Shift+Enter processing
   *
   * @param {KeyboardEvent} event - keypress event
   */
  onKeyPressListener(e) {
    return e.key === "Enter" && e.shiftKey ? !0 : e.key !== "Enter";
  }
  /**
   * Prevents tab keydown event from bubbling
   * so that it only works inside the table
   *
   * @param {KeyboardEvent} event - keydown event
   */
  onKeyDownListener(e) {
    e.key === "Tab" && e.stopPropagation();
  }
  /**
   * Prevents tab keyup event from bubbling
   * so that it only works inside the table
   *
   * @param {KeyboardEvent} event - keydown event
   */
  onKeyUpListener(e) {
    if (e.key === "Tab") {
      e.stopPropagation();
      return;
    }
    if (e.key === "Enter") {
      e.stopPropagation();
      return;
    }
  }
  /**
   * Set the coordinates of the cell that the focus has moved to
   *
   * @param {FocusEvent} event - focusin event
   */
  focusInTableListener(e) {
    const t = e.target, n = this.getRowByCell(t);
    this.focusedCell = {
      row: Array.from(this.table.querySelectorAll(`.${Qe.row}`)).indexOf(n) + 1,
      column: Array.from(n.querySelectorAll(`.${Qe.cell}`)).indexOf(t) + 1
    };
  }
  /**
   * Unselect row/column
   * Close toolbox menu
   * Hide toolboxes
   *
   * @returns {void}
   */
  hideToolboxes() {
    this.hideRowToolbox(), this.updateToolboxesPosition();
  }
  /**
   * Unselect row, close toolbox
   *
   * @returns {void}
   */
  hideRowToolbox() {
    var e;
    this.unselectRow(), this.toolboxRow.hide(), (e = this.toolBoxDue) == null || e.hide();
  }
  /**
   * Unselect column, close toolbox
   *
   * @returns {void}
   */
  hideColumnToolbox() {
    this.unselectColumn();
  }
  /**
   * Set the cursor focus to the focused cell
   *
   * @returns {void}
   */
  focusCell() {
    var e;
    (e = this.focusedCellElem) == null || e.focus();
  }
  /**
   * Get current focused element
   *
   * @returns {HTMLElement} - focused cell
   */
  get focusedCellElem() {
    const { row: e, column: t } = this.focusedCell;
    return this.getCell(e, t);
  }
  /**
   * Update toolboxes position
   *
   * @param {number} row - hovered row
   * @param {number} column - hovered column
   */
  updateToolboxesPosition(e = this.hoveredRow, t = this.hoveredColumn) {
    this.isRowMenuShowing || e > 0 && e <= this.numberOfRows && this.toolboxRow.show(() => {
      const n = this.getRow(e), { fromTopBorder: r } = Ll(this.table, n), { height: a } = n.getBoundingClientRect();
      return {
        top: `${Math.ceil(r + a / 2)}px`
      };
    });
  }
  /**
   * Makes the first row headings
   *
   * @param {boolean} withHeadings - use headings row or not
   */
  setHeadingsSetting(e) {
    this.tunes.withHeadings = e, e ? (this.table.classList.add(Qe.withHeadings), this.addHeadingAttrToFirstRow()) : (this.table.classList.remove(Qe.withHeadings), this.removeHeadingAttrFromFirstRow());
  }
  /**
   * Adds an attribute for displaying the placeholder in the cell
   */
  addHeadingAttrToFirstRow() {
    for (let e = 1; e <= this.numberOfColumns; e++) {
      let t = this.getCell(1, e);
      t && t.setAttribute("heading", this.api.i18n.t("Heading"));
    }
  }
  /**
   * Removes an attribute for displaying the placeholder in the cell
   */
  removeHeadingAttrFromFirstRow() {
    for (let e = 1; e <= this.numberOfColumns; e++) {
      let t = this.getCell(1, e);
      t && t.removeAttribute("heading");
    }
  }
  /**
   * Add effect of a selected row
   *
   * @param {number} index
   */
  selectRow(e) {
    const t = this.getRow(e);
    t && (this.selectedRow = e, t.classList.add(Qe.rowSelected));
  }
  /**
   * Remove effect of a selected row
   */
  unselectRow() {
    if (this.selectedRow <= 0)
      return;
    const e = this.table.querySelector(`.${Qe.rowSelected}`);
    e && e.classList.remove(Qe.rowSelected), this.selectedRow = 0;
  }
  /**
   * Add effect of a selected column
   *
   * @param {number} index
   */
  selectColumn(e) {
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.getCell(t, e);
      n && n.classList.add(Qe.cellSelected);
    }
    this.selectedColumn = e;
  }
  /**
   * Remove effect of a selected column
   */
  unselectColumn() {
    if (this.selectedColumn <= 0)
      return;
    let e = this.table.querySelectorAll(`.${Qe.cellSelected}`);
    Array.from(e).forEach((t) => {
      t.classList.remove(Qe.cellSelected);
    }), this.selectedColumn = 0;
  }
  /**
   * Calculates the row and column that the cursor is currently hovering over
   * The search was optimized from O(n) to O (log n) via bin search to reduce the number of calculations
   *
   * @param {Event} event - mousemove event
   * @returns hovered cell coordinates as an integer row and column
   */
  getHoveredCell(e) {
    let t = this.hoveredRow, n = this.hoveredColumn;
    const { width: r, height: a, x: c, y: u } = yb(this.table, e);
    return c >= 0 && (n = this.binSearch(
      this.numberOfColumns,
      (p) => this.getCell(1, p),
      ({ fromLeftBorder: p }) => c < p,
      ({ fromRightBorder: p }) => c > r - p
    )), u >= 0 && (t = this.binSearch(
      this.numberOfRows,
      (p) => this.getCell(p, 1),
      ({ fromTopBorder: p }) => u < p,
      ({ fromBottomBorder: p }) => u > a - p
    )), {
      row: t || this.hoveredRow,
      column: n || this.hoveredColumn
    };
  }
  /**
   * Looks for the index of the cell the mouse is hovering over.
   * Cells can be represented as ordered intervals with left and
   * right (upper and lower for rows) borders inside the table, if the mouse enters it, then this is our index
   *
   * @param {number} numberOfCells - upper bound of binary search
   * @param {function} getCell - function to take the currently viewed cell
   * @param {function} beforeTheLeftBorder - determines the cursor position, to the left of the cell or not
   * @param {function} afterTheRightBorder - determines the cursor position, to the right of the cell or not
   * @returns {number}
   */
  binSearch(e, t, n, r) {
    let a = 0, c = e + 1, u = 0, p;
    for (; a < c - 1 && u < 10; ) {
      p = Math.ceil((a + c) / 2);
      const g = t(p), v = Ll(this.table, g);
      if (n(v))
        c = p;
      else if (r(v))
        a = p;
      else
        break;
      u++;
    }
    return p;
  }
  /**
   * Collects data from cells into a two-dimensional array
   *
   * @returns {string[][]}
   */
  getData() {
    const e = [];
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.table.querySelector(`.${Qe.row}:nth-child(${t})`), r = Array.from(n.querySelectorAll(`.${Qe.formInput}`));
      t != 1 && e.push(r.map((a) => {
        if (["text", "select-one", "number"].includes(a == null ? void 0 : a.type))
          return a == null ? void 0 : a.value;
        if ((a == null ? void 0 : a.type) === "checkbox")
          return a == null ? void 0 : a.checked;
      }));
    }
    return e;
  }
  /**
   * Remove listeners on the document
   */
  destroy() {
    document.removeEventListener("click", this.documentClicked);
  }
}
const Mb = {
  default: {
    title: "Test & Report",
    title_jp: "混合ワクチン",
    data: [
      {
        heading: "Report",
        heading_jp: "予防接種医学",
        type: "search",
        key: "report"
      },
      {
        heading: "Quantity",
        heading_jp: "投与日",
        type: "number",
        key: "quantity",
        default: 1
      },
      {
        heading: "Remarks",
        heading_jp: "備考",
        type: "text",
        key: "remarks"
      },
      {
        heading: "Upload File",
        heading_jp: "備考",
        type: "file",
        key: "files"
      }
    ]
  },
  internal: {
    title: "Internal Documents",
    title_jp: "狂犬病ワクチン",
    data: [
      {
        heading: "Report",
        heading_jp: "予防接種医学",
        type: "search",
        key: "report"
      },
      {
        heading: "Remarks",
        heading_jp: "備考",
        type: "text",
        key: "remarks"
      },
      {
        heading: "Upload File",
        heading_jp: "備考",
        type: "file",
        key: "files"
      }
    ]
  }
}, es = {
  default: "default",
  data: Mb
};
class Db {
  /**
   * Notify core that read-only mode is supported
   *
   * @returns {boolean}
   */
  static get isReadOnlySupported() {
    return !0;
  }
  /**
   * Allow to press Enter inside the CodeTool textarea
   *
   * @returns {boolean}
   * @public
   */
  static get enableLineBreaks() {
    return !0;
  }
  /**
   * Render plugin`s main Element and fill it with saved data
   *
   * @param {TableData} data — previously saved data
   * @param {TableConfig} config - user config for Tool
   * @param {object} api - Editor.js API
   * @param {boolean} readOnly - read-only mode flag
   */
  constructor({ data: e, config: t, api: n, readOnly: r, block: a }) {
    if (this.api = n, this.block = a, this.title = n.i18n.t("Vaccination"), this.readOnly = r, this.config = t, !t.apiUrl)
      throw new Error("Please provide API url for Vacination Search");
    this.data = {
      current: e && e.current ? e.current : es.default,
      content: e && e.content ? e.content : []
    }, setTimeout(() => {
      if (e != null && e.content)
        return;
      const c = this.block.id;
      this.api.toolbar.toggleBlockSettingsById(c);
    }, 500), this.table = null;
  }
  /**
   * Get Tool toolbox settings
   * icon - Tool icon's SVG
   * title - title to show in toolbox
   *
   * @returns {{icon: string, title: string}}
   */
  static get toolbox() {
    return {
      icon: Tb,
      title: this.title
    };
  }
  /**
   * Return Tool's view
   *
   * @returns {HTMLDivElement}
   */
  render() {
    var t;
    this.config.data = es.data[this.data.current], this.container ? (this.table.getWrapper().remove(), this.container.innerHTML = "") : this.container = Dt("div", this.api.styles.block), this.table = new Eb(this.readOnly, this.api, this.data, this.config, this.block);
    const e = Dt("h5", "tc-header");
    return e.innerHTML = ((t = this.config) == null ? void 0 : t.locale) == "jp" ? this.config.data.title_jp : this.config.data.title, this.container.appendChild(e), this.container.appendChild(this.table.getWrapper()), this.table.setHeadingsSetting(!0), this.container;
  }
  /**
   * Returns plugin settings
   *
   * @returns {Array}
   */
  renderSettings() {
    var n;
    const e = [], t = ((n = this.config) == null ? void 0 : n.locale) === "jp";
    for (const r in es.data)
      if (Object.hasOwnProperty.call(es.data, r)) {
        const a = es.data[r];
        e.push({
          label: t ? a.title_jp : a.title,
          icon: Sb,
          isActive: this.data.current == r,
          closeOnActivate: !0,
          toggle: !0,
          onActivate: () => {
            this.data.current = r, this.data.content = [], this.render();
          }
        });
      }
    return e;
  }
  /**
   * Extract table data from the view
   *
   * @returns {TableData} - saved data
   */
  save() {
    var n;
    const e = this.table.getData();
    return {
      current: ((n = this.data) == null ? void 0 : n.current) || es.default,
      content: e
    };
  }
  /**
   * Plugin destroyer
   *
   * @returns {void}
   */
  destroy() {
    this.table.destroy();
  }
  /**
   * A helper to get config value.
   * 
   * @param {string} configName - the key to get from the config. 
   * @param {any} defaultValue - default value if config doesn't have passed key
   * @param {object} savedData - previously saved data. If passed, the key will be got from there, otherwise from the config
   * @returns {any} - config value.
   */
  getConfig(e, t = void 0, n = void 0) {
    const r = this.data || n;
    return r ? r[e] ? r[e] : t : this.config && this.config[e] ? this.config[e] : t;
  }
  /**  
   * Table onPaste configuration
   *
   * @public
   */
  static get pasteConfig() {
    return { tags: ["TABLE", "TR", "TH", "TD"] };
  }
  /**
   * On paste callback that is fired from Editor
   *
   * @param {PasteEvent} event - event with pasted data
   */
  onPaste(e) {
    const t = e.detail.data, n = t.querySelector(":scope > thead, tr:first-of-type th"), a = Array.from(t.querySelectorAll("tr")).map((c) => Array.from(c.querySelectorAll("th, td")).map((p) => p.innerHTML));
    this.data = {
      withHeadings: n !== null,
      content: a
    }, this.table.wrapper && this.table.wrapper.replaceWith(this.render());
  }
}
(function() {
  try {
    if (typeof document < "u") {
      var o = document.createElement("style");
      o.appendChild(document.createTextNode("hr{display:block;margin:.5em auto;border-style:inset;border-width:1px}")), document.head.appendChild(o);
    }
  } catch (e) {
    console.error("vite-plugin-css-injected-by-js", e);
  }
})();
const Ob = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><line x1="6" x2="10" y1="12" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="14" x2="18" y1="12" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/></svg>';
/**
 * Delimiter Block for the Editor.js.
 *
 * @author Vishal Pradhan
 * @copyright Vishal Pradhan 2023
 * @license The MIT License (MIT)
 * @version 2.0.0
 */
class nh {
  /**
   * Notify core that read-only mode is supported
   * @return {boolean}
   */
  static get isReadOnlySupported() {
    return !0;
  }
  /**
   * Allow Tool to have no content
   * @return {boolean}
   */
  static get contentless() {
    return !0;
  }
  /**
   * Render plugin`s main Element and fill it with saved data
   *
   * @param {{data: DelimiterData, config: object, api: object}}
   *   data — previously saved data
   *   config - user config for Tool
   *   api - Editor.js API
   */
  constructor({ data: e, config: t, api: n }) {
    this.api = n, this._CSS = {
      // block: this.api.styles.block,
      // wrapper: 'ce-delimiter'
    }, this._data = {}, this._element = this.drawView(), this.data = e;
  }
  /**
   * Create Tool's view
   * @return {HTMLElement}
   * @private
   */
  drawView() {
    return document.createElement("HR");
  }
  /**
   * Return Tool's view
   * @returns {HTMLDivElement}
   * @public
   */
  render() {
    return this._element;
  }
  /**
   * Extract Tool's data from the view
   * @param {HTMLDivElement} toolsContent - Paragraph tools rendered view
   * @returns {DelimiterData} - saved data
   * @public
   */
  save(e) {
    return {};
  }
  /**
   * Get Tool toolbox settings
   * icon - Tool icon's SVG
   * title - title to show in toolbox
   *
   * @return {{icon: string, title: string}}
   */
  static get toolbox() {
    return {
      icon: Ob,
      title: "Delimiter"
    };
  }
}
(function() {
  var o;
  try {
    if (typeof document < "u") {
      var e = document.createElement("style");
      e.nonce = (o = document.head.querySelector("meta[property=csp-nonce]")) == null ? void 0 : o.content, e.appendChild(document.createTextNode('.tc-header{margin:0;padding:0;position:relative;bottom:-1rem;text-align:left}.tc-wrap{--color-background:#f9f9fb;--color-text-secondary:#7b7e89;--color-border:#e8e8eb;--cell-size:34px;--toolbox-icon-size:18px;--toolbox-padding:6px;--toolbox-aiming-field-size:calc(var(--toolbox-icon-size) + var(--toolbox-padding)*2);border-left:0;margin-top:var(--toolbox-icon-size);box-sizing:border-box;grid-template-columns:calc(100% - var(--cell-size)) var(--cell-size)}.tc-wrap--readonly{grid-template-columns:100% var(--cell-size)}.tc-wrap svg{vertical-align:top}@media print{.tc-wrap{border-left-color:var(--color-border);border-left-style:solid;border-left-width:1px;grid-template-columns:100% var(--cell-size)}}@media print{.tc-wrap .tc-row:after{display:none}}.tc-table,.tc-wrap{position:relative;height:100%;width:100%;display:grid}.tc-table{font-size:14px;border-top:1px solid var(--color-border);border-left:1px solid var(--color-border);line-height:1.4}.tc-table:after{width:calc(var(--cell-size));left:calc(var(--cell-size)*-1);top:0}.tc-table:after,.tc-table:before{position:absolute;content:""}.tc-table:before{height:var(--toolbox-aiming-field-size);top:calc(var(--toolbox-aiming-field-size)*-1);left:0}.tc-table .tc-row:first-child{background:linear-gradient(0deg,rgba(0,0,0,.06),rgba(0,0,0,.06)),linear-gradient(0deg,#b9b9b9,#b9b9b9);font-weight:600;border-bottom:2px solid var(--color-border)}.tc-table .tc-row:first-child [contenteditable]:empty:before{content:attr(heading);color:var(--color-text-secondary)}.tc-table .tc-row:first-child:after{bottom:-2px;border-bottom:2px solid var(--color-border)}.tc-add-column,.tc-add-row{display:flex;color:var(--color-text-secondary)}@media print{.tc-add{display:none}}.tc-add-column{padding:4px 0;justify-content:center;border-top:1px solid var(--color-border)}@media print{.tc-add-column{display:none}}.tc-add-row{height:var(--cell-size);align-items:center;padding-left:4px;position:relative}.tc-add-row:before{content:"";position:absolute;right:calc(var(--cell-size)*-1);width:var(--cell-size);height:100%}@media print{.tc-add-row{display:none}}.tc-add-column,.tc-add-row{transition:0s;cursor:pointer;will-change:background-color}.tc-add-column:hover,.tc-add-row:hover{transition:background-color .1s ease;background-color:var(--color-background)}.tc-add-row{margin-top:1px}.tc-add-row:hover:before{transition:.1s;background-color:var(--color-background)}.tc-row{display:grid;grid-template-columns:repeat(auto-fit,minmax(10px,1fr));position:relative;border-bottom:1px solid var(--color-border)}.tc-row:after{content:"";pointer-events:none;position:absolute;width:var(--cell-size);height:100%;bottom:-1px;right:calc(var(--cell-size)*-1);border-bottom:1px solid var(--color-border)}.tc-row--selected{background:var(--color-background)}.tc-row--selected:after{background:var(--color-background)}.tc-cell{text-align:left;border-right:1px solid var(--color-border);padding:6px 12px;overflow:hidden;outline:none;line-break:normal}.tc-cell>input,.tc-cell select{outline:none;border:none;width:100%;background:transparent}.tc-cell--selected{background:var(--color-background)}.tc-wrap--readonly .tc-row:after{display:none}.tc-cell>select,input{background-color:transparent}.tc-toolbox{--toolbox-padding:6px;--popover-margin:30px;--toggler-click-zone-size:30px;--toggler-dots-color:#7b7e89;--toggler-dots-color-hovered:#1d202b;position:absolute;cursor:pointer;z-index:1;opacity:0;transition:opacity .1s;will-change:left,opacity}.tc-toolbox--column{top:calc(var(--toggler-click-zone-size)*-1);transform:translate(calc(var(--toggler-click-zone-size)*-1/2));will-change:left,opacity}.tc-toolbox--row{left:calc(var(--popover-margin)*-1);transform:translateY(calc(var(--toggler-click-zone-size)*-1/2));margin-top:-1px;will-change:top,opacity}.tc-toolbox--showed{opacity:1}.tc-toolbox .tc-popover{position:absolute;top:0;left:var(--popover-margin)}.tc-toolbox__toggler{display:flex;align-items:center;justify-content:center;width:var(--toggler-click-zone-size);height:var(--toggler-click-zone-size);color:var(--toggler-dots-color);opacity:0;transition:opacity .15s ease;will-change:opacity}.tc-toolbox__toggler:hover{color:var(--toggler-dots-color-hovered)}.tc-toolbox__toggler svg{fill:currentColor}.tc-wrap:hover .tc-toolbox__toggler{opacity:1}.tc-settings .cdx-settings-button{width:50%;margin:0}.tc-popover{--color-border:#eaeaea;--color-background:#fff;--color-background-hover:rgba(232,232,235,.49);--color-background-confirm:#e24a4a;--color-background-confirm-hover:#d54040;--color-text-confirm:#fff;background:var(--color-background);border:1px solid var(--color-border);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;padding:6px;display:none;will-change:opacity,transform}.tc-popover--opened{display:block;animation:menuShowing .1s cubic-bezier(.215,.61,.355,1) forwards}.tc-popover__item{display:flex;align-items:center;padding:2px 14px 2px 2px;border-radius:5px;cursor:pointer;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;user-select:none}.tc-popover__item:hover{background:var(--color-background-hover)}.tc-popover__item:not(:last-of-type){margin-bottom:2px}.tc-popover__item-icon{display:inline-flex;width:26px;height:26px;align-items:center;justify-content:center;background:var(--color-background);border-radius:5px;border:1px solid var(--color-border);margin-right:8px}.tc-popover__item-label{line-height:22px;font-size:14px;font-weight:500}.tc-popover__item--confirm{background:var(--color-background-confirm);color:var(--color-text-confirm)}.tc-popover__item--confirm:hover{background-color:var(--color-background-confirm-hover)}.tc-popover__item--confirm .tc-popover__item-icon{background:var(--color-background-confirm);border-color:#0000001a}.tc-popover__item--confirm .tc-popover__item-icon svg{transition:transform .2s ease-in;transform:rotate(90deg) scale(1.2)}.tc-popover__item--hidden{display:none}@keyframes menuShowing{0%{opacity:0;transform:translateY(-8px) scale(.9)}70%{opacity:1;transform:translateY(2px)}to{transform:translateY(0)}}')), document.head.appendChild(e);
    }
  } catch (t) {
    console.error("vite-plugin-css-injected-by-js", t);
  }
})();
function vo(o, e, t = {}) {
  const n = document.createElement(o);
  Array.isArray(e) ? n.classList.add(...e) : e && n.classList.add(e);
  for (const r in t)
    Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]);
  return n;
}
function ih(o) {
  const e = o.getBoundingClientRect();
  return {
    y1: Math.floor(e.top + window.pageYOffset),
    x1: Math.floor(e.left + window.pageXOffset),
    x2: Math.floor(e.right + window.pageXOffset),
    y2: Math.floor(e.bottom + window.pageYOffset)
  };
}
function Lb(o, e) {
  const t = ih(o), n = ih(e);
  return {
    fromTopBorder: n.y1 - t.y1,
    fromLeftBorder: n.x1 - t.x1,
    fromRightBorder: t.x2 - n.x2,
    fromBottomBorder: t.y2 - n.y2
  };
}
function Ab(o, e) {
  const t = o.getBoundingClientRect(), { width: n, height: r, x: a, y: c } = t, { clientX: u, clientY: p } = e;
  return {
    width: n,
    height: r,
    x: u - a,
    y: p - c
  };
}
function rh(o, e) {
  return e.parentNode.insertBefore(o, e);
}
function sh(o, e = !0) {
  const t = document.createRange(), n = window.getSelection();
  t.selectNodeContents(o), t.collapse(e), n.removeAllRanges(), n.addRange(t);
}
class No {
  /**
   * @param {object} options - constructor options
   * @param {PopoverItem[]} options.items - constructor options
   */
  constructor({ items: e }) {
    this.items = e, this.wrapper = void 0, this.itemEls = [];
  }
  /**
   * Set of CSS classnames used in popover
   *
   * @returns {object}
   */
  static get CSS() {
    return {
      popover: "tc-popover",
      popoverOpened: "tc-popover--opened",
      item: "tc-popover__item",
      itemHidden: "tc-popover__item--hidden",
      itemConfirmState: "tc-popover__item--confirm",
      itemIcon: "tc-popover__item-icon",
      itemLabel: "tc-popover__item-label"
    };
  }
  /**
   * Returns the popover element
   *
   * @returns {Element}
   */
  render() {
    return this.wrapper = vo("div", No.CSS.popover), this.items.forEach((e, t) => {
      const n = vo("div", No.CSS.item), r = vo("div", No.CSS.itemIcon, {
        innerHTML: e.icon
      }), a = vo("div", No.CSS.itemLabel, {
        textContent: e.label
      });
      n.dataset.index = t, n.appendChild(r), n.appendChild(a), this.wrapper.appendChild(n), this.itemEls.push(n);
    }), this.wrapper.addEventListener("click", (e) => {
      this.popoverClicked(e);
    }), this.wrapper;
  }
  /**
   * Popover wrapper click listener
   * Used to delegate clicks in items
   *
   * @returns {void}
   */
  popoverClicked(e) {
    const t = e.target.closest(`.${No.CSS.item}`);
    if (!t)
      return;
    const n = t.dataset.index, r = this.items[n];
    if (r.confirmationRequired && !this.hasConfirmationState(t)) {
      this.setConfirmationState(t);
      return;
    }
    r.onClick();
  }
  /**
   * Enable the confirmation state on passed item
   *
   * @returns {void}
   */
  setConfirmationState(e) {
    e.classList.add(No.CSS.itemConfirmState);
  }
  /**
   * Disable the confirmation state on passed item
   *
   * @returns {void}
   */
  clearConfirmationState(e) {
    e.classList.remove(No.CSS.itemConfirmState);
  }
  /**
   * Check if passed item has the confirmation state
   *
   * @returns {boolean}
   */
  hasConfirmationState(e) {
    return e.classList.contains(No.CSS.itemConfirmState);
  }
  /**
   * Return an opening state
   *
   * @returns {boolean}
   */
  get opened() {
    return this.wrapper.classList.contains(No.CSS.popoverOpened);
  }
  /**
   * Opens the popover
   *
   * @returns {void}
   */
  open() {
    this.items.forEach((e, t) => {
      typeof e.hideIf == "function" && this.itemEls[t].classList.toggle(No.CSS.itemHidden, e.hideIf());
    }), this.wrapper.classList.add(No.CSS.popoverOpened);
  }
  /**
   * Closes the popover
   *
   * @returns {void}
   */
  close() {
    this.wrapper.classList.remove(No.CSS.popoverOpened), this.itemEls.forEach((e) => {
      this.clearConfirmationState(e);
    });
  }
}
const ah = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 8L12 12M12 12L16 16M12 12L16 8M12 12L8 16"/></svg>', Bb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 9.16666L18.2167 12.5M18.2167 12.5L14.8833 15.8333M18.2167 12.5H10.05C9.16594 12.5 8.31809 12.1488 7.69297 11.5237C7.06785 10.8986 6.71666 10.0507 6.71666 9.16666"/></svg>', Rb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.9167 14.9167L11.5833 18.25M11.5833 18.25L8.25 14.9167M11.5833 18.25L11.5833 10.0833C11.5833 9.19928 11.9345 8.35143 12.5596 7.72631C13.1848 7.10119 14.0326 6.75 14.9167 6.75"/></svg>', Ib = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.13333 14.9167L12.4667 18.25M12.4667 18.25L15.8 14.9167M12.4667 18.25L12.4667 10.0833C12.4667 9.19928 12.1155 8.35143 11.4904 7.72631C10.8652 7.10119 10.0174 6.75 9.13333 6.75"/></svg>', Nb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 15.8333L18.2167 12.5M18.2167 12.5L14.8833 9.16667M18.2167 12.5L10.05 12.5C9.16595 12.5 8.31811 12.8512 7.69299 13.4763C7.06787 14.1014 6.71667 14.9493 6.71667 15.8333"/></svg>', Pb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.41 9.66H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 9.66H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.31 14.36H9.3"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 14.36H14.59"/></svg>', Hb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', jb = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>';
class Zi {
  /**
   * Creates toolbox buttons and toolbox menus
   *
   * @param {object} api - Editor.js api
   * @param {PopoverItem[]} items - Editor.js api
   * @param {function} onOpen - callback fired when the Popover is opening
   * @param {function} onClose - callback fired when the Popover is closing
   * @param {string} [cssModifier] - the modifier for the Toolbox. Allows to add some specific styles.
   */
  constructor({ api: e, items: t, onOpen: n, onClose: r, cssModifier: a = "" }) {
    this.api = e, this.items = t, this.onOpen = n, this.onClose = r, this.cssModifier = a, this.popover = null, this.wrapper = this.createToolbox();
  }
  /**
   * Style classes
   */
  static get CSS() {
    return {
      toolbox: "tc-toolbox",
      toolboxShowed: "tc-toolbox--showed",
      toggler: "tc-toolbox__toggler"
    };
  }
  /**
   * Returns rendered Toolbox element
   */
  get element() {
    return this.wrapper;
  }
  /**
   * Creating a toolbox to open menu for a manipulating columns
   *
   * @returns {Element}
   */
  createToolbox() {
    const e = vo("div", [
      Zi.CSS.toolbox,
      this.cssModifier ? `${Zi.CSS.toolbox}--${this.cssModifier}` : ""
    ]);
    e.dataset.mutationFree = "true";
    const t = this.createPopover(), n = this.createToggler();
    return e.appendChild(n), e.appendChild(t), e;
  }
  /**
   * Creates the Toggler
   *
   * @returns {Element}
   */
  createToggler() {
    const e = vo("div", Zi.CSS.toggler, {
      innerHTML: Pb
    });
    return e.addEventListener("click", () => {
      this.togglerClicked();
    }), e;
  }
  /**
   * Creates the Popover instance and render it
   *
   * @returns {Element}
   */
  createPopover() {
    return this.popover = new No({
      items: this.items
    }), this.popover.render();
  }
  /**
   * Toggler click handler. Opens/Closes the popover
   *
   * @returns {void}
   */
  togglerClicked() {
    this.popover.opened ? (this.popover.close(), this.onClose()) : (this.popover.open(), this.onOpen());
  }
  /**
   * Shows the Toolbox
   *
   * @param {function} computePositionMethod - method that returns the position coordinate
   * @returns {void}
   */
  show(e) {
    const t = e();
    Object.entries(t).forEach(([n, r]) => {
      this.wrapper.style[n] = r;
    }), this.wrapper.classList.add(Zi.CSS.toolboxShowed);
  }
  /**
   * Hides the Toolbox
   *
   * @returns {void}
   */
  hide() {
    this.popover.close(), this.wrapper.classList.remove(Zi.CSS.toolboxShowed);
  }
}
function $b(o, e) {
  let t = 0;
  return function(...n) {
    const r = (/* @__PURE__ */ new Date()).getTime();
    if (!(r - t < o))
      return t = r, e(...n);
  };
}
const Gt = {
  wrapper: "tc-wrap",
  wrapperReadOnly: "tc-wrap--readonly",
  table: "tc-table",
  row: "tc-row",
  withHeadings: "tc-table--heading",
  rowSelected: "tc-row--selected",
  cell: "tc-cell",
  cellSelected: "tc-cell--selected",
  addRow: "tc-add-row",
  addColumn: "tc-add-column"
};
let Yb = class {
  /**
   * Creates
   *
   * @constructor
   * @param {boolean} readOnly - read-only mode flag
   * @param {object} api - Editor.js API
   * @param {TableData} data - Editor.js API
   * @param {TableConfig} config - Editor.js API
   */
  constructor(e, t, n, r, a, c) {
    this.readOnly = !1, this.api = t, "data" in n && typeof n.data == "object" || (n.data = {}), this.data = JSON.parse(JSON.stringify(n)), this.config = r, this.options = a, this.block = c, this.currentData = JSON.parse(JSON.stringify(n.data)), this.wrapper = null, this.table = null, this.hoveredRow = 0, this.hoveredColumn = 0, this.selectedRow = 0, this.selectedColumn = 0, this.tunes = {
      withHeadings: !0
    }, this.fillInput(), this.focusedCell = {
      row: 0,
      column: 0
    }, this.documentClicked = (u) => {
    }, this.readOnly || this.bindEvents();
  }
  remove(e) {
    return e in this.currentData ? (delete this.currentData[e], !0) : !1;
  }
  fillInput() {
    var e, t, n, r, a, c, u;
    this.createTableWrapper(), this.resize();
    const p = ((e = this.config) == null ? void 0 : e.locale) === "jp";
    this.setCellContent(1, 1, this.api.i18n.t("Observation")), this.setCellContent(1, 2, this.api.i18n.t("Result")), this.setCellContent(1, 3, this.api.i18n.t("Remarks"));
    let g = 2;
    for (let v in this.currentData)
      if (Object.hasOwnProperty.call(this.currentData, v)) {
        const x = this.options[v];
        let y = this.getCell(g, 1);
        y.innerHTML = x == null ? void 0 : x.label, y = this.getCell(g, 3), y.innerHTML = "";
        const T = vo("input", "", {
          placeHolder: this.api.i18n.t("Enter remarks"),
          name: v + "_remarks",
          type: "text",
          value: ((n = (t = this.currentData) == null ? void 0 : t[v]) == null ? void 0 : n.remarks) || ""
        });
        this.api.listeners.on(T, "keyup", (M) => {
          this.setRemarks(v, M.target.value);
        }), y.appendChild(T), y = this.getCell(g, 2);
        let k = "";
        if (["radio", "select"].includes(x.type)) {
          k = vo("select", "", {
            placeHolder: this.api.i18n.t("Select Value"),
            name: v + "_remarks"
          }), this.api.listeners.on(k, "change", (M) => {
            this.setValue(v, M.target.value);
          });
          for (const M of x.options) {
            const O = ((a = (r = this.currentData) == null ? void 0 : r[v]) == null ? void 0 : a.value) || (M != null && M.default ? M.value : "");
            k.appendChild(vo("option", "", {
              value: M == null ? void 0 : M.value,
              label: p ? M == null ? void 0 : M.label_jp : M == null ? void 0 : M.label,
              selected: M.value == O
            }));
          }
        } else
          x.type == "text" && (k = vo("input", "", {
            value: ((u = (c = this.currentData) == null ? void 0 : c[v]) == null ? void 0 : u.value) || "",
            placeHolder: this.api.i18n.t("Input value"),
            name: v + "_value",
            type: "text"
          }), this.api.listeners.on(k, "keyup", (M) => {
            this.setValue(v, M.target.value);
          }));
        k !== "" && (y.innerHTML = "", y.appendChild(k)), g++;
      }
  }
  setValue(e, t) {
    let n = this.currentData[e];
    n && typeof n == "object" && "value" in n || (this.currentData[e] = { value: "", remarks: "" }), this.currentData[e] = { ...this.currentData[e], value: t }, this.block.dispatchChange();
  }
  setData(e) {
    e.map((t) => {
      const n = t.key;
      if (this.currentData[n]) {
        delete this.currentData[n];
        return;
      } else
        this.currentData[n] = { value: "", remarks: "" };
    }), this.block.dispatchChange();
  }
  setRemarks(e, t) {
    let n = this.currentData[e];
    n && typeof n == "object" && "value" in n || (this.currentData[e] = { value: "", remarks: "" }), this.currentData[e] = { ...this.currentData[e], remarks: t }, this.block.dispatchChange();
  }
  /**
   * Returns the rendered table wrapper
   *
   * @returns {Element}
   */
  getWrapper() {
    return this.wrapper;
  }
  /**
   * Hangs the necessary handlers to events
   */
  bindEvents() {
    document.addEventListener("click", this.documentClicked), this.table.addEventListener("mousemove", $b(150, (e) => this.onMouseMoveInTable(e)), { passive: !0 }), this.table.onkeypress = (e) => this.onKeyPressListener(e), this.table.addEventListener("keydown", (e) => this.onKeyDownListener(e)), this.table.addEventListener("focusin", (e) => this.focusInTableListener(e));
  }
  /**
   * Configures and creates the toolbox for manipulating with columns
   *
   * @returns {Toolbox}
   */
  createColumnToolbox() {
    return new Zi({
      api: this.api,
      cssModifier: "column",
      items: [
        {
          label: this.api.i18n.t("Add column to left"),
          icon: Rb,
          onClick: () => {
            this.addColumn(this.selectedColumn, !0), this.hideToolboxes();
          }
        },
        {
          label: this.api.i18n.t("Add column to right"),
          icon: Ib,
          onClick: () => {
            this.addColumn(this.selectedColumn + 1, !0), this.hideToolboxes();
          }
        },
        {
          label: this.api.i18n.t("Delete column"),
          icon: ah,
          hideIf: () => this.numberOfColumns === 1,
          confirmationRequired: !0,
          onClick: () => {
            this.deleteColumn(this.selectedColumn), this.hideToolboxes();
          }
        }
      ],
      onOpen: () => {
        this.selectColumn(this.hoveredColumn);
      },
      onClose: () => {
        this.unselectColumn();
      }
    });
  }
  /**
   * Configures and creates the toolbox for manipulating with rows
   *
   * @returns {Toolbox}
   */
  createRowToolbox() {
    return new Zi({
      api: this.api,
      cssModifier: "row",
      items: [
        {
          label: this.api.i18n.t("Add row above"),
          icon: Nb,
          onClick: () => {
            this.addRow(this.selectedRow, !0), this.hideToolboxes();
          }
        },
        {
          label: this.api.i18n.t("Add row below"),
          icon: Bb,
          onClick: () => {
            this.addRow(this.selectedRow + 1, !0), this.hideToolboxes();
          }
        },
        {
          label: this.api.i18n.t("Delete row"),
          icon: ah,
          hideIf: () => this.numberOfRows === 1,
          confirmationRequired: !0,
          onClick: () => {
            this.deleteRow(this.selectedRow), this.hideToolboxes();
          }
        }
      ],
      onOpen: () => {
        this.selectRow(this.hoveredRow), this.hideColumnToolbox();
      },
      onClose: () => {
        this.unselectRow();
      }
    });
  }
  /**
   * When you press enter it moves the cursor down to the next row
   * or creates it if the click occurred on the last one
   */
  moveCursorToNextRow() {
    this.focusedCell.row !== this.numberOfRows ? (this.focusedCell.row += 1, this.focusCell(this.focusedCell)) : (this.addRow(), this.focusedCell.row += 1, this.focusCell(this.focusedCell), this.updateToolboxesPosition(0, 0));
  }
  /**
   * Get table cell by row and col index
   *
   * @param {number} row - cell row coordinate
   * @param {number} column - cell column coordinate
   * @returns {HTMLElement}
   */
  getCell(e, t) {
    return this.table.querySelectorAll(`.${Gt.row}:nth-child(${e}) .${Gt.cell}`)[t - 1];
  }
  /**
   * Get table row by index
   *
   * @param {number} row - row coordinate
   * @returns {HTMLElement}
   */
  getRow(e) {
    return this.table.querySelector(`.${Gt.row}:nth-child(${e})`);
  }
  /**
   * The parent of the cell which is the row
   *
   * @param {HTMLElement} cell - cell element
   * @returns {HTMLElement}
   */
  getRowByCell(e) {
    return e.parentElement;
  }
  /**
   * Ger row's first cell
   *
   * @param {Element} row - row to find its first cell
   * @returns {Element}
   */
  getRowFirstCell(e) {
    return e.querySelector(`.${Gt.cell}:first-child`);
  }
  /**
   * Set the sell's content by row and column numbers
   *
   * @param {number} row - cell row coordinate
   * @param {number} column - cell column coordinate
   * @param {string} content - cell HTML content
   */
  setCellContent(e, t, n) {
    const r = this.getCell(e, t);
    r.innerHTML = n;
  }
  /**
   * Add column in table on index place
   * Add cells in each row
   *
   * @param {number} columnIndex - number in the array of columns, where new column to insert, -1 if insert at the end
   * @param {boolean} [setFocus] - pass true to focus the first cell
   */
  addColumn(e = -1, t = !1) {
    let n = this.numberOfColumns;
    for (let r = 1; r <= this.numberOfRows; r++) {
      let a;
      const c = this.createCell();
      if (e > 0 && e <= n ? (a = this.getCell(r, e), rh(c, a)) : a = this.getRow(r).appendChild(c), r === 1) {
        const u = this.getCell(r, e > 0 ? e : n + 1);
        u && t && sh(u);
      }
    }
    this.addHeadingAttrToFirstRow();
  }
  /**
   * Add row in table on index place
   *
   * @param {number} index - number in the array of rows, where new column to insert, -1 if insert at the end
   * @param {boolean} [setFocus] - pass true to focus the inserted row
   * @returns {HTMLElement} row
   */
  addRow(e = -1, t = !1) {
    let n, r = vo("div", Gt.row);
    this.tunes.withHeadings && this.removeHeadingAttrFromFirstRow();
    let a = this.numberOfColumns;
    if (e > 0 && e <= this.numberOfRows) {
      let u = this.getRow(e);
      n = rh(r, u);
    } else
      n = this.table.appendChild(r);
    this.fillRow(n, a), this.tunes.withHeadings && this.addHeadingAttrToFirstRow();
    const c = this.getRowFirstCell(n);
    return c && t && sh(c), n;
  }
  /**
   * Delete a column by index
   *
   * @param {number} index
   */
  deleteColumn(e) {
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.getCell(t, e);
      if (!n)
        return;
      n.remove();
    }
  }
  /**
   * Delete a row by index
   *
   * @param {number} index
   */
  deleteRow(e) {
    this.getRow(e).remove(), this.addHeadingAttrToFirstRow();
  }
  /**
   * Create a wrapper containing a table, toolboxes
   * and buttons for adding rows and columns
   *
   * @returns {HTMLElement} wrapper - where all buttons for a table and the table itself will be
   */
  createTableWrapper() {
    this.wrapper ? this.table.remove() : this.wrapper = vo("div", Gt.wrapper), this.table = vo("div", Gt.table), this.readOnly, this.wrapper.classList.add(Gt.wrapperReadOnly), this.wrapper.appendChild(this.table);
  }
  /**
   * Returns the size of the table based on initial data or config "size" property
   *
   * @return {{rows: number, cols: number}} - number of cols and rows
   */
  computeInitialSize() {
    let e = this.data && this.currentData;
    const t = Array.isArray(e), n = t ? e.length : !1, r = t ? e.length : void 0, a = n ? e[0].length : void 0, c = Number.parseInt(this.config && this.config.rows), u = Number.parseInt(this.config && this.config.cols), p = !isNaN(c) && c > 0 ? c : void 0, g = !isNaN(u) && u > 0 ? u : void 0;
    return {
      rows: r || p || 2,
      cols: a || g || 2
    };
  }
  /**
   * Resize table to match config size or transmitted data size
   *
   * @return {{rows: number, cols: number}} - number of cols and rows
   */
  resize() {
    const e = Object.keys(this.currentData).length + 1;
    for (let t = 0; t < e; t++)
      this.addRow();
    for (let t = 0; t < 3; t++)
      this.addColumn();
  }
  /**
   * Fills the table with data passed to the constructor
   *
   * @returns {void}
   */
  fill() {
    const e = this.data;
    if (e && e.data)
      for (let t = 0; t < e.data.length; t++)
        for (let n = 0; n < e.data[t].length; n++)
          this.setCellContent(t + 1, n + 1, e.data[t][n]);
  }
  /**
   * Fills a row with cells
   *
   * @param {HTMLElement} row - row to fill
   * @param {number} numberOfColumns - how many cells should be in a row
   */
  fillRow(e, t) {
    for (let n = 1; n <= t; n++) {
      const r = this.createCell();
      e.appendChild(r);
    }
  }
  /**
   * Creating a cell element
   *
   * @return {Element}
   */
  createCell() {
    return vo("div", Gt.cell, {
      // contentEditable: !this.readOnly
    });
  }
  /**
   * Get number of rows in the table
   */
  get numberOfRows() {
    return this.table.childElementCount;
  }
  /**
   * Get number of columns in the table
   */
  get numberOfColumns() {
    return this.numberOfRows ? this.table.querySelectorAll(`.${Gt.row}:first-child .${Gt.cell}`).length : 0;
  }
  /**
   * Is the column toolbox menu displayed or not
   *
   * @returns {boolean}
   */
  get isColumnMenuShowing() {
    return this.selectedColumn !== 0;
  }
  /**
   * Is the row toolbox menu displayed or not
   *
   * @returns {boolean}
   */
  get isRowMenuShowing() {
    return this.selectedRow !== 0;
  }
  /**
   * Recalculate position of toolbox icons
   *
   * @param {Event} event - mouse move event
   */
  onMouseMoveInTable(e) {
    const { row: t, column: n } = this.getHoveredCell(e);
    this.hoveredColumn = n, this.hoveredRow = t, this.updateToolboxesPosition();
  }
  /**
   * Prevents default Enter behaviors
   * Adds Shift+Enter processing
   *
   * @param {KeyboardEvent} event - keypress event
   */
  onKeyPressListener(e) {
    if (e.key === "Enter") {
      if (e.shiftKey)
        return !0;
      this.moveCursorToNextRow();
    }
    return e.key !== "Enter";
  }
  /**
   * Prevents tab keydown event from bubbling
   * so that it only works inside the table
   *
   * @param {KeyboardEvent} event - keydown event
   */
  onKeyDownListener(e) {
    e.key === "Tab" && e.stopPropagation();
  }
  /**
   * Set the coordinates of the cell that the focus has moved to
   *
   * @param {FocusEvent} event - focusin event
   */
  focusInTableListener(e) {
    const t = e.target, n = this.getRowByCell(t);
    this.focusedCell = {
      row: Array.from(this.table.querySelectorAll(`.${Gt.row}`)).indexOf(n) + 1,
      column: Array.from(n.querySelectorAll(`.${Gt.cell}`)).indexOf(t) + 1
    };
  }
  /**
   * Unselect row/column
   * Close toolbox menu
   * Hide toolboxes
   *
   * @returns {void}
   */
  hideToolboxes() {
    this.hideRowToolbox(), this.hideColumnToolbox(), this.updateToolboxesPosition();
  }
  /**
   * Unselect row, close toolbox
   *
   * @returns {void}
   */
  hideRowToolbox() {
    this.unselectRow(), this.toolboxRow.hide();
  }
  /**
   * Unselect column, close toolbox
   *
   * @returns {void}
   */
  hideColumnToolbox() {
    this.unselectColumn(), this.toolboxColumn.hide();
  }
  /**
   * Set the cursor focus to the focused cell
   *
   * @returns {void}
   */
  focusCell() {
    this.focusedCellElem.focus();
  }
  /**
   * Get current focused element
   *
   * @returns {HTMLElement} - focused cell
   */
  get focusedCellElem() {
    const { row: e, column: t } = this.focusedCell;
    return this.getCell(e, t);
  }
  /**
   * Update toolboxes position
   *
   * @param {number} row - hovered row
   * @param {number} column - hovered column
   */
  updateToolboxesPosition(e = this.hoveredRow, t = this.hoveredColumn) {
  }
  /**
   * Makes the first row headings
   *
   * @param {boolean} withHeadings - use headings row or not
   */
  setHeadingsSetting(e) {
    this.tunes.withHeadings = e, e ? (this.table.classList.add(Gt.withHeadings), this.addHeadingAttrToFirstRow()) : (this.table.classList.remove(Gt.withHeadings), this.removeHeadingAttrFromFirstRow());
  }
  /**
   * Adds an attribute for displaying the placeholder in the cell
   */
  addHeadingAttrToFirstRow() {
    for (let e = 1; e <= this.numberOfColumns; e++) {
      let t = this.getCell(1, e);
      t && t.setAttribute("heading", this.api.i18n.t("Heading"));
    }
  }
  /**
   * Removes an attribute for displaying the placeholder in the cell
   */
  removeHeadingAttrFromFirstRow() {
    for (let e = 1; e <= this.numberOfColumns; e++) {
      let t = this.getCell(1, e);
      t && t.removeAttribute("heading");
    }
  }
  /**
   * Add effect of a selected row
   *
   * @param {number} index
   */
  selectRow(e) {
    const t = this.getRow(e);
    t && (this.selectedRow = e, t.classList.add(Gt.rowSelected));
  }
  /**
   * Remove effect of a selected row
   */
  unselectRow() {
    if (this.selectedRow <= 0)
      return;
    const e = this.table.querySelector(`.${Gt.rowSelected}`);
    e && e.classList.remove(Gt.rowSelected), this.selectedRow = 0;
  }
  /**
   * Add effect of a selected column
   *
   * @param {number} index
   */
  selectColumn(e) {
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.getCell(t, e);
      n && n.classList.add(Gt.cellSelected);
    }
    this.selectedColumn = e;
  }
  /**
   * Remove effect of a selected column
   */
  unselectColumn() {
    if (this.selectedColumn <= 0)
      return;
    let e = this.table.querySelectorAll(`.${Gt.cellSelected}`);
    Array.from(e).forEach((t) => {
      t.classList.remove(Gt.cellSelected);
    }), this.selectedColumn = 0;
  }
  /**
   * Calculates the row and column that the cursor is currently hovering over
   * The search was optimized from O(n) to O (log n) via bin search to reduce the number of calculations
   *
   * @param {Event} event - mousemove event
   * @returns hovered cell coordinates as an integer row and column
   */
  getHoveredCell(e) {
    let t = this.hoveredRow, n = this.hoveredColumn;
    const { width: r, height: a, x: c, y: u } = Ab(this.table, e);
    return c >= 0 && (n = this.binSearch(
      this.numberOfColumns,
      (p) => this.getCell(1, p),
      ({ fromLeftBorder: p }) => c < p,
      ({ fromRightBorder: p }) => c > r - p
    )), u >= 0 && (t = this.binSearch(
      this.numberOfRows,
      (p) => this.getCell(p, 1),
      ({ fromTopBorder: p }) => u < p,
      ({ fromBottomBorder: p }) => u > a - p
    )), {
      row: t || this.hoveredRow,
      column: n || this.hoveredColumn
    };
  }
  /**
   * Looks for the index of the cell the mouse is hovering over.
   * Cells can be represented as ordered intervals with left and
   * right (upper and lower for rows) borders inside the table, if the mouse enters it, then this is our index
   *
   * @param {number} numberOfCells - upper bound of binary search
   * @param {function} getCell - function to take the currently viewed cell
   * @param {function} beforeTheLeftBorder - determines the cursor position, to the left of the cell or not
   * @param {function} afterTheRightBorder - determines the cursor position, to the right of the cell or not
   * @returns {number}
   */
  binSearch(e, t, n, r) {
    let a = 0, c = e + 1, u = 0, p;
    for (; a < c - 1 && u < 10; ) {
      p = Math.ceil((a + c) / 2);
      const g = t(p), v = Lb(this.table, g);
      if (n(v))
        c = p;
      else if (r(v))
        a = p;
      else
        break;
      u++;
    }
    return p;
  }
  /**
   * Collects data from cells into a two-dimensional array
   *
   * @returns {string[][]}
   */
  getData() {
    return this.currentData || {};
  }
  /**
   * Remove listeners on the document
   */
  destroy() {
    document.removeEventListener("click", this.documentClicked);
  }
};
const lh = [
  {
    level: 1,
    title: "Activity Level",
    title_jp: "活動量",
    data: [
      {
        key: "activityLevel",
        type: "radio",
        options: [
          {
            label: "++",
            label_jp: "++",
            value: 1,
            default: !0
          },
          {
            label: "+",
            label_jp: "+",
            value: 2
          },
          {
            label: "+/-",
            label_jp: "+/-",
            value: 3
          },
          {
            label: "-",
            label_jp: "-",
            value: 4
          }
        ]
      }
    ]
  },
  {
    level: 1,
    title: "Appetite",
    title_jp: "食欲",
    data: [
      {
        key: "appetite",
        type: "radio",
        options: [
          {
            label: "0%",
            label_jp: "0%",
            value: 1,
            default: !0
          },
          {
            label: "30%",
            label_jp: "30%",
            value: 2
          },
          {
            label: "50%",
            label_jp: "50%",
            value: 3
          },
          {
            label: "70%",
            label_jp: "70%",
            value: 4
          },
          {
            label: "100%",
            label_jp: "100%",
            value: 5
          },
          {
            label: ">100%",
            label_jp: ">100%",
            value: 6
          }
        ]
      }
    ]
  },
  {
    level: 1,
    title: "BCS",
    title_jp: "ボディコンディションスコア",
    data: [
      {
        key: "bcs",
        type: "radio",
        options: [
          {
            label: "1",
            label_jp: "1",
            value: 1,
            default: !0
          },
          {
            label: "2",
            label_jp: "2",
            value: 2
          },
          {
            label: "3",
            label_jp: "3",
            value: 3
          },
          {
            label: "4",
            label_jp: "4",
            value: 4
          },
          {
            label: "5",
            label_jp: "5",
            value: 5
          },
          {
            label: "6",
            label_jp: "6",
            value: 6
          },
          {
            label: "7",
            label_jp: "7",
            value: 7
          },
          {
            label: "8",
            label_jp: "8",
            value: 8
          },
          {
            label: "9",
            label_jp: "9",
            value: 9
          }
        ]
      }
    ]
  },
  {
    level: 1,
    title: "Water Intake",
    title_jp: "飲水量",
    data: [
      {
        key: "waterIntake",
        type: "radio",
        options: [
          {
            label: "Drinking more than usual",
            label_jp: "いつもよりたくさん飲んでいる",
            default: !0,
            value: 1
          },
          {
            label: "Drinking as usual",
            label_jp: "普段通り飲んでいる",
            value: 2
          },
          {
            label: "Not drinking as much as usual",
            label_jp: "いつもより飲んでいない",
            value: 3
          },
          {
            label: "Not drinking at all",
            label_jp: "全く飲まない",
            value: 4
          }
        ]
      }
    ]
  },
  {
    title: "Food",
    title_jp: "食事",
    level: 0,
    data: [
      {
        key: "food",
        type: "disabled"
      }
    ]
  },
  {
    title: "Frequency of urination",
    title_jp: "排尿回数",
    level: 0,
    data: [
      {
        key: "urinFrequency",
        type: "text"
      }
    ]
  },
  {
    level: 1,
    title: "Urine color",
    title_jp: "尿色",
    data: [
      {
        key: "urineColor",
        type: "radio",
        options: [
          {
            default: !0,
            label: "Normal",
            label_jp: "正常",
            value: 0
          },
          {
            label: "Abnormal",
            label_jp: "異常",
            value: 1
          },
          {
            label: "Yellow",
            label_jp: "黄色",
            value: 2
          },
          {
            label: "Dark yellow",
            label_jp: "濃い黄色",
            value: 3
          },
          {
            label: "Almost transparent",
            label_jp: "ほぼ透明",
            value: 4
          },
          {
            label: "Orange",
            label_jp: "オレンジ色",
            value: 5
          },
          {
            label: "Brown",
            label_jp: "茶色",
            value: 6
          },
          {
            label: "Red (hematuria)",
            label_jp: "赤 (血尿)",
            value: 7
          }
        ]
      }
    ]
  },
  {
    title: "Frequency of defecation",
    title_jp: "排便回数",
    level: 0,
    data: [
      {
        key: "defecationFrequency",
        type: "text"
      }
    ]
  },
  {
    title: "Defecation",
    title_jp: "排便性状",
    level: 2,
    data: [
      {
        title: "Hardness",
        title_jp: "硬さ",
        key: "defacationHardness",
        type: "radio",
        options: [
          {
            default: !0,
            label: "Normal",
            label_jp: "正常",
            value: "1"
          },
          {
            label: "Abnormal",
            label_jp: "異常",
            value: "2"
          },
          {
            label: "Type1",
            label_jp: "コロコロ便",
            value: "3"
          },
          {
            label: "Type2",
            label_jp: "硬い便",
            value: "4"
          },
          {
            label: "Type3",
            label_jp: "やや硬い便",
            value: "5"
          },
          {
            label: "Type4",
            label_jp: "普通便",
            value: "6"
          },
          {
            label: "Type5",
            label_jp: "やや軟らかい便",
            value: "7"
          },
          {
            label: "Type6",
            label_jp: "泥状便",
            value: "8"
          },
          {
            label: "Type7",
            label_jp: "水様便",
            value: "9"
          }
        ]
      },
      {
        title: "Color",
        title_jp: "色",
        type: "radio",
        key: "defacationColor",
        options: [
          {
            default: !0,
            label: "Normal",
            label_jp: "正常",
            value: "1"
          },
          {
            label: "Abnormal",
            label_jp: "異常",
            value: "2"
          },
          {
            label: "Whitish",
            label_jp: "白色",
            value: "3"
          },
          {
            label: "Black",
            label_jp: "黒色（タール便）",
            value: "4"
          },
          {
            label: "Dark brown",
            label_jp: "黒褐色",
            value: "5"
          },
          {
            label: "Brown",
            label_jp: "茶色",
            value: "6"
          },
          {
            label: "Yellow",
            label_jp: "黄色",
            value: "7"
          },
          {
            label: "Red (bloody stools)",
            label_jp: "赤色 (血液)",
            value: "8"
          }
        ]
      }
    ]
  },
  {
    title: "Vomiting",
    title_jp: "嘔吐",
    level: 0,
    data: [
      {
        key: "vomiting",
        type: "text"
      }
    ]
  },
  {
    level: 1,
    title: "MCS",
    title_jp: "マッスルコンディションスコア",
    data: [
      {
        key: "mcs",
        type: "radio",
        options: [
          {
            default: !0,
            label_jp: "正常",
            label: "Normal muscle mass",
            value: "1"
          },
          {
            label_jp: "軽度筋肉量低下",
            label: "Mild muscle loss",
            value: "2"
          },
          {
            label_jp: "中度筋肉量低下",
            label: "Moderate muscle loss",
            value: "3"
          },
          {
            label_jp: "重度筋肉量低下",
            label: "Severe muscle loss",
            value: "4"
          }
        ]
      }
    ]
  },
  {
    title: "Auscultatory Findings",
    title_jp: "聴診所見",
    level: 2,
    data: [
      {
        title: "Heart",
        key: "ausculatoryHeart",
        title_jp: "心臓",
        type: "radio",
        options: [
          {
            label_jp: "正常",
            label: "Normal",
            value: "1"
          },
          {
            label_jp: "異常",
            label: "Abnormal",
            value: "2"
          }
        ]
      },
      {
        title: "Lung",
        title_jp: "肺",
        key: "ausculatoryLung",
        type: "radio",
        options: [
          {
            label_jp: "正常",
            label: "Normal",
            value: "1"
          },
          {
            label_jp: "異常",
            label: "Abnormal",
            value: "2"
          }
        ]
      }
    ]
  },
  {
    title: "Lymph Node Examination (Dog)",
    title_jp: "聴診所見",
    level: 2,
    data: [
      {
        title: "Mandibular (Left)",
        key: "mandibularLeft",
        title_jp: "下顎リンパ節（左）",
        type: "text",
        options: []
      },
      {
        title: "Mandibular (Right)",
        key: "mandibularRight",
        title_jp: "下顎リンパ節（右）",
        type: "text",
        options: []
      },
      {
        title: "Swollen cervical (Left)",
        key: "cervicalLeft",
        title_jp: "浅頸リンパ節（左）",
        type: "text",
        options: []
      },
      {
        title: "Swollen cervical (Right)",
        key: "cervicalRight",
        title_jp: "浅頸リンパ節（右）",
        type: "text",
        options: []
      },
      {
        title: "Axillary(Left)",
        key: "axillaryLeft",
        title_jp: "腋窩リンパ節（左）",
        type: "text",
        options: []
      },
      {
        title: "Axillary(Right)",
        key: "axillaryRight",
        title_jp: "腋窩リンパ節（右）",
        type: "text",
        options: []
      },
      {
        title: "Collateral axillary (Left)",
        key: "collateralAxillaryLeft",
        title_jp: "副腋窩リンパ節（左）",
        type: "text",
        options: []
      },
      {
        title: "Collateral axillary (Right)",
        key: "collateralAxillaryRight",
        title_jp: "副腋窩リンパ節（右）",
        type: "text",
        options: []
      },
      {
        title: "Inguinal (Left)",
        key: "inguinalLeft",
        title_jp: "鼠径リンパ節（左）",
        type: "text",
        options: []
      },
      {
        title: "Inguinal (Right)",
        key: "inguinalRight",
        title_jp: "鼠径リンパ節（右）",
        type: "text",
        options: []
      }
    ]
  },
  {
    title: "SpO2",
    title_jp: "SpO2",
    level: 0,
    data: [
      {
        key: "spo2",
        type: "text"
      }
    ]
  },
  {
    title: "Blood Pressure",
    title_jp: "血圧",
    level: 2,
    data: [
      {
        key: "bpMin",
        title: "Min",
        title_jp: "最低",
        type: "text"
      },
      {
        key: "bpMax",
        title: "Max",
        title_jp: "最高",
        type: "text"
      },
      {
        key: "bpAve",
        title: "Ave",
        title_jp: "平均",
        type: "text"
      },
      {
        key: "bpHeartRate",
        title: "Heart Rate",
        title_jp: "心拍数",
        type: "text"
      },
      {
        key: "bpMeasurementMode",
        title: "Measurement Mode",
        title_jp: "測定方法",
        type: "radio",
        options: [
          {
            label: "Oscillometric",
            label_jp: "オシロメトリック法",
            value: 1
          },
          {
            label: "Doppler",
            label_jp: "ドップラー法",
            value: 2
          }
        ]
      },
      {
        key: "bpMeasurementArea",
        title: "Measuring Area",
        title_jp: "測定部位",
        type: "radio",
        options: [
          {
            label: "Forelimb",
            label_jp: "前肢",
            value: 1
          },
          {
            label: "Hindlimb",
            label_jp: "後肢",
            value: 2
          },
          {
            label: "Tail",
            label_jp: "尾部",
            value: 3
          }
        ]
      },
      {
        key: "bpPositioning",
        title: "Positioning",
        title_jp: "測定体位",
        type: "radio",
        options: [
          {
            label: "Standing",
            label_jp: "立位",
            value: 1
          },
          {
            label: "Seated",
            label_jp: "座位",
            value: 2
          },
          {
            label: "Transverse position",
            label_jp: "横臥位",
            value: 3
          },
          {
            label: "Prone position",
            label_jp: "伏臥位",
            value: 4
          }
        ]
      }
    ]
  },
  {
    level: 1,
    title: "Visible Mucous Membranes",
    title_jp: "可視粘膜色",
    data: [
      {
        key: "mucousMembrane",
        type: "radio",
        options: [
          {
            default: !0,
            label: "Normal",
            label_jp: "正常",
            value: 1
          },
          {
            label: "Pink",
            label_jp: "ピンク",
            value: 2
          },
          {
            label: "Hyperemia",
            label_jp: "充血",
            value: 3
          },
          {
            label: "Pallor",
            label_jp: "蒼白",
            value: 4
          },
          {
            label: "Jaundice",
            label_jp: "黄疸",
            value: 5
          },
          {
            label: "Cyanosis",
            label_jp: "チアノーゼ",
            value: 6
          }
        ]
      }
    ]
  },
  {
    level: 1,
    title: "CRT",
    title_jp: "毛細血管再充足時間",
    data: [
      {
        key: "crt",
        type: "radio",
        options: [
          {
            default: !0,
            label: "Within 1 second (shortened)",
            label_jp: "1秒以内（短縮）",
            value: "1"
          },
          {
            label: "1-2 seconds (normal)",
            label_jp: "1～2秒（正常）",
            value: "2"
          },
          {
            label: "More than 2 seconds (extended)",
            label_jp: "2秒以上（延長）",
            value: "3"
          }
        ]
      }
    ]
  },
  {
    level: 1,
    title: "Aortic Pulsation Assessment",
    title_jp: "大腿動脈拍動の評価",
    data: [
      {
        key: "aorticPulsation",
        type: "radio",
        options: [
          {
            default: !0,
            label: "Normal",
            label_jp: "正常",
            value: "1"
          },
          {
            label: "Strong",
            label_jp: "強い（バウンディングパルス）",
            value: "2"
          },
          {
            label: "Weak",
            label_jp: "弱い",
            value: "3"
          },
          {
            label: "Not palpable",
            label_jp: "触知不可",
            value: "4"
          },
          {
            label: "Unpalpable only on right",
            label_jp: "右のみ触知不可",
            value: "5"
          },
          {
            label: "Unpalpable only on left",
            label_jp: "左のみ触知不可",
            value: "6"
          }
        ]
      }
    ]
  },
  {
    title: "Hydration Assessment",
    title_jp: "水和評価",
    level: 1,
    data: [
      {
        key: "hydration",
        type: "radio",
        options: [
          {
            default: !0,
            label: "Normal",
            label_jp: "正常",
            value: "1"
          },
          {
            label: "5%",
            label_jp: "5%",
            value: "2"
          },
          {
            label: "6-8%",
            label_jp: "6-8%",
            value: "3"
          },
          {
            label: "10-12%",
            label_jp: "10-12%",
            value: "4"
          },
          {
            label: "15%",
            label_jp: "15%",
            value: "5"
          }
        ]
      }
    ]
  }
];
let Fb = class {
  /**
   * Notify core that read-only mode is supported
   *
   * @returns {boolean}
   */
  static get isReadOnlySupported() {
    return !0;
  }
  /**
   * Allow to press Enter inside the CodeTool textarea
   *
   * @returns {boolean}
   * @public
   */
  static get enableLineBreaks() {
    return !0;
  }
  /**
   * Render plugin`s main Element and fill it with saved data
   *
   * @param {TableData} data — previously saved data
   * @param {TableConfig} config - user config for Tool
   * @param {object} api - Editor.js API
   * @param {boolean} readOnly - read-only mode flag
   */
  constructor(e) {
    var t;
    this.items = [];
    const { data: n, config: r, api: a, readOnly: c, block: u } = e;
    this.title = a.i18n.t("PE/ROS"), this.api = a, this.block = u, this.readOnly = c, this.config = r, this.data = {
      data: n && n.data && ((t = Object.keys(n.data)) == null ? void 0 : t.length) != 0 ? JSON.parse(JSON.stringify(n.data)) : {}
    }, this.options = {}, this.createOptions(), this.createItems(), this.table = null, setTimeout(() => {
      if (n != null && n.data)
        return;
      const p = this.block.id;
      this.api.toolbar.toggleBlockSettingsById(p);
    }, 500);
  }
  onActivate(e) {
    if (this.table.remove(e)) {
      this.table.fillInput();
      return;
    }
    this.table.setValue(e, ""), this.table.fillInput();
  }
  checkIfActive(e) {
    var t;
    let n = ((t = this.table) == null ? void 0 : t.getData()) || {};
    return e in n;
  }
  createOptions() {
    var e;
    const t = ((e = this.config) == null ? void 0 : e.locale) === "jp";
    this.options = {}, lh.map((n) => {
      n.data.map((r) => {
        let a = t ? n.title_jp : n.title;
        r != null && r.title && (a += ` (${t ? r.title_jp : r.title})`), this.options[r.key] = { ...r, label: a };
      });
    });
  }
  createItems() {
    var e;
    const t = ((e = this.config) == null ? void 0 : e.locale) === "jp";
    this.items = [], lh.map((n) => {
      const r = this.checkIfActive(n.data[0].key);
      this.items.push({
        label: t ? `${n.title_jp}` : `${n.title}`,
        icon: Hb,
        isActive: r,
        closeOnActivate: !0,
        toggle: !0,
        onActivate: () => {
          this.table.setData(n.data), this.table.fillInput();
        }
      });
    });
  }
  /**
   * Get Tool toolbox settings
   * icon - Tool icon's SVG
   * title - title to show in toolbox
   *
   * @returns {{icon: string, title: string}}
   */
  static get toolbox() {
    return {
      icon: jb,
      title: this.title
    };
  }
  /**
   * Return Tool's view
   *
   * @returns {HTMLDivElement}
   */
  render() {
    this.table = new Yb(this.readOnly, this.api, this.data, this.config, this.options, this.block), this.container = vo("div", this.api.styles.block);
    const e = vo("h5", "tc-header");
    return e.innerHTML = this.title, this.container.appendChild(e), this.container.appendChild(this.table.getWrapper()), this.table.setHeadingsSetting(!0), this.container;
  }
  /**
   * Returns plugin settings
   *
   * @returns {Array}
   */
  renderSettings() {
    return this.createItems(), this.items;
  }
  /**
   * Extract table data from the view
   *
   * @returns {TableData} - saved data
   */
  save() {
    return {
      data: this.table.getData()
    };
  }
  /**
   * Plugin destroyer
   *
   * @returns {void}
   */
  destroy() {
    this.table.destroy();
  }
  /**
   * A helper to get config value.
   * 
   * @param {string} configName - the key to get from the config. 
   * @param {any} defaultValue - default value if config doesn't have passed key
   * @param {object} savedData - previously saved data. If passed, the key will be got from there, otherwise from the config
   * @returns {any} - config value.
   */
  getConfig(e, t = void 0, n = void 0) {
    const r = this.data || n;
    return r ? r[e] ? r[e] : t : this.config && this.config[e] ? this.config[e] : t;
  }
  // /**  
  //  * Table onPaste configuration
  //  *
  //  * @public
  //  */
  // static get pasteConfig() {
  //   return { tags: ['TABLE', 'TR', 'TH', 'TD'] };
  // }
  // /**
  //  * On paste callback that is fired from Editor
  //  *
  //  * @param {PasteEvent} event - event with pasted data
  //  */
  // onPaste(event) {
  //   const table = event.detail.data;
  //   /** Check if the first row is a header */
  //   const firstRowHeading = table.querySelector(':scope > thead, tr:first-of-type th');
  //   /** Get all rows from the table */
  //   const rows = Array.from(table.querySelectorAll('tr'));
  //   /** Generate a content matrix */
  //   const content = rows.map((row) => {
  //     /** Get cells from row */
  //     const cells = Array.from(row.querySelectorAll('th, td'))
  //     /** Return cells content */
  //     return cells.map((cell) => cell.innerHTML);
  //   });
  //   /** Update Tool's data */
  //   this.data = {
  //     withHeadings: firstRowHeading !== null,
  //     content
  //   };
  //   /** Update table block */
  //   if (this.table.wrapper) {
  //     this.table.wrapper.replaceWith(this.render());
  //   }
  // }
};
(function() {
  var o;
  try {
    if (typeof document < "u") {
      var e = document.createElement("style");
      e.nonce = (o = document.head.querySelector("meta[property=csp-nonce]")) == null ? void 0 : o.content, e.appendChild(document.createTextNode('.daterangepicker{position:absolute;color:inherit;background-color:#fff;border-radius:4px;border:1px solid #ddd;width:278px;max-width:none;padding:0;margin-top:7px;top:100px;left:20px;z-index:3001;display:none;font-family:arial;font-size:15px;line-height:1em}.daterangepicker:after,.daterangepicker:before{position:absolute;display:inline-block;border-bottom-color:#0003;content:""}.daterangepicker:before{top:-7px;border-right:7px solid transparent;border-left:7px solid transparent;border-bottom:7px solid #ccc}.daterangepicker:after{top:-6px;border-right:6px solid transparent;border-bottom:6px solid #fff;border-left:6px solid transparent}.daterangepicker.opensleft:before{right:9px}.daterangepicker.opensleft:after{right:10px}.daterangepicker.openscenter:after,.daterangepicker.openscenter:before{left:0;right:0;width:0;margin-left:auto;margin-right:auto}.daterangepicker.opensright:before{left:9px}.daterangepicker.opensright:after{left:10px}.daterangepicker.drop-up{margin-top:-7px}.daterangepicker.drop-up:before{top:auto;bottom:-7px;border-bottom:initial;border-top:7px solid #ccc}.daterangepicker.drop-up:after{top:auto;bottom:-6px;border-bottom:initial;border-top:6px solid #fff}.daterangepicker.single .daterangepicker .ranges,.daterangepicker.single .drp-calendar{float:none}.daterangepicker.single .drp-selected{display:none}.daterangepicker.show-calendar .drp-buttons,.daterangepicker.show-calendar .drp-calendar{display:block}.daterangepicker.auto-apply .drp-buttons{display:none}.daterangepicker .drp-calendar{display:none;max-width:270px}.daterangepicker .drp-calendar.left{padding:8px 0 8px 8px}.daterangepicker .drp-calendar.right{padding:8px}.daterangepicker .drp-calendar.single .calendar-table{border:none}.daterangepicker .calendar-table .next span,.daterangepicker .calendar-table .prev span{color:#fff;border:solid #000;border-width:0 2px 2px 0;border-radius:0;display:inline-block;padding:3px}.daterangepicker .calendar-table .next span{transform:rotate(-45deg);-webkit-transform:rotate(-45deg)}.daterangepicker .calendar-table .prev span{transform:rotate(135deg);-webkit-transform:rotate(135deg)}.daterangepicker .calendar-table td,.daterangepicker .calendar-table th{text-align:center;vertical-align:middle;min-width:32px;width:32px;height:24px;line-height:24px;font-size:12px;border-radius:4px;border:1px solid transparent;white-space:nowrap;cursor:pointer}.daterangepicker .calendar-table{border:1px solid #fff;border-radius:4px;background-color:#fff}.daterangepicker .calendar-table table{width:100%;margin:0;border-spacing:0;border-collapse:collapse}.daterangepicker td.available:hover,.daterangepicker th.available:hover{background-color:#eee;border-color:transparent;color:inherit}.daterangepicker td.week,.daterangepicker th.week{font-size:80%;color:#ccc}.daterangepicker td.off,.daterangepicker td.off.end-date,.daterangepicker td.off.in-range,.daterangepicker td.off.start-date{background-color:#fff;border-color:transparent;color:#999}.daterangepicker td.in-range{background-color:#ebf4f8;border-color:transparent;color:#000;border-radius:0}.daterangepicker td.start-date{border-radius:4px 0 0 4px}.daterangepicker td.end-date{border-radius:0 4px 4px 0}.daterangepicker td.start-date.end-date{border-radius:4px}.daterangepicker td.active,.daterangepicker td.active:hover{background-color:#357ebd;border-color:transparent;color:#fff}.daterangepicker th.month{width:auto}.daterangepicker option.disabled,.daterangepicker td.disabled{color:#999;cursor:not-allowed;text-decoration:line-through}.daterangepicker select.monthselect,.daterangepicker select.yearselect{font-size:12px;padding:1px;height:auto;margin:0;cursor:default}.daterangepicker select.monthselect{margin-right:2%;width:56%}.daterangepicker select.yearselect{width:40%}.daterangepicker select.ampmselect,.daterangepicker select.hourselect,.daterangepicker select.minuteselect,.daterangepicker select.secondselect{width:50px;margin:0 auto;background:#eee;border:1px solid #eee;padding:2px;outline:0;font-size:12px}.daterangepicker .calendar-time{text-align:center;margin:4px auto 0;line-height:30px;position:relative}.daterangepicker .calendar-time select.disabled{color:#ccc;cursor:not-allowed}.daterangepicker .drp-buttons{clear:both;text-align:right;padding:8px;border-top:1px solid #ddd;display:none;line-height:12px;vertical-align:middle}.daterangepicker .drp-selected{display:inline-block;font-size:12px;padding-right:8px}.daterangepicker .drp-buttons .btn{margin-left:8px;font-size:12px;font-weight:700;padding:4px 8px}.daterangepicker.show-ranges.single.rtl .drp-calendar.left{border-right:1px solid #ddd}.daterangepicker.show-ranges.single.ltr .drp-calendar.left{border-left:1px solid #ddd}.daterangepicker.show-ranges.rtl .drp-calendar.right{border-right:1px solid #ddd}.daterangepicker.show-ranges.ltr .drp-calendar.left{border-left:1px solid #ddd}.daterangepicker .ranges{float:none;text-align:left;margin:0}.daterangepicker.show-calendar .ranges{margin-top:8px}.daterangepicker .ranges ul{list-style:none;margin:0 auto;padding:0;width:100%}.daterangepicker .ranges li{font-size:12px;padding:8px 12px;cursor:pointer}.daterangepicker .ranges li:hover{background-color:#eee}.daterangepicker .ranges li.active{background-color:#08c;color:#fff}@media (min-width:564px){.daterangepicker{width:auto}.daterangepicker .ranges ul{width:140px}.daterangepicker.single .ranges ul{width:100%}.daterangepicker.single .drp-calendar.left{clear:none}.daterangepicker.single .drp-calendar,.daterangepicker.single .ranges{float:left}.daterangepicker{direction:ltr;text-align:left}.daterangepicker .drp-calendar.left{clear:left;margin-right:0}.daterangepicker .drp-calendar.left .calendar-table{border-right:none;border-top-right-radius:0;border-bottom-right-radius:0}.daterangepicker .drp-calendar.right{margin-left:0}.daterangepicker .drp-calendar.right .calendar-table{border-left:none;border-top-left-radius:0;border-bottom-left-radius:0}.daterangepicker .drp-calendar.left .calendar-table{padding-right:8px}.daterangepicker .drp-calendar,.daterangepicker .ranges{float:left}}@media (min-width:730px){.daterangepicker .ranges{width:auto;float:left}.daterangepicker.rtl .ranges{float:right}.daterangepicker .drp-calendar.left{clear:none!important}}.tc-header{margin:0;padding:0;position:relative;bottom:-1rem;text-align:left}.tc-wrap{--color-background:#f9f9fb;--color-text-secondary:#7b7e89;--color-border:#e8e8eb;--cell-size:34px;--toolbox-icon-size:18px;--toolbox-padding:6px;--toolbox-aiming-field-size:calc(var(--toolbox-icon-size) + var(--toolbox-padding)*2);border-left:0;margin-top:var(--toolbox-icon-size);box-sizing:border-box;grid-template-columns:calc(100% - var(--cell-size)) var(--cell-size)}.tc-wrap--readonly{grid-template-columns:100% var(--cell-size)}.tc-wrap svg{vertical-align:top}@media print{.tc-wrap{border-left-color:var(--color-border);border-left-style:solid;border-left-width:1px;grid-template-columns:100% var(--cell-size)}}@media print{.tc-wrap .tc-row:after{display:none}}.tc-table,.tc-wrap{position:relative;height:100%;width:100%;display:grid}.tc-table{font-size:14px;border-top:1px solid var(--color-border);line-height:1.4}.tc-table:after{width:calc(var(--cell-size));left:calc(var(--cell-size)*-1);top:0}.tc-table:after,.tc-table:before{position:absolute;content:""}.tc-table:before{height:var(--toolbox-aiming-field-size);top:calc(var(--toolbox-aiming-field-size)*-1);left:0}.tc-table--heading .tc-row:first-child{font-weight:600;border-bottom:2px solid var(--color-border)}.tc-table--heading .tc-row:first-child [contenteditable]:empty:before{content:attr(heading);color:var(--color-text-secondary)}.tc-table--heading .tc-row:first-child:after{bottom:-2px;border-bottom:2px solid var(--color-border)}.tc-add-column,.tc-add-row{display:flex;color:var(--color-text-secondary)}@media print{.tc-add{display:none}}.tc-add-column{padding:4px 0;justify-content:center;border-top:1px solid var(--color-border);visibility:hidden}@media print{.tc-add-column{display:none}}.tc-add-row{height:var(--cell-size);align-items:center;padding-left:4px;position:relative}.tc-add-row:before{content:"";position:absolute;right:calc(var(--cell-size)*-1);width:var(--cell-size);height:100%}@media print{.tc-add-row{display:none}}.tc-add-column,.tc-add-row{transition:0s;cursor:pointer;will-change:background-color}.tc-add-column:hover,.tc-add-row:hover{transition:background-color .1s ease;background-color:var(--color-background)}.tc-add-row{margin-top:1px}.tc-add-row:hover:before{transition:.1s;background-color:var(--color-background)}.tc-row{display:grid;grid-template-columns:repeat(auto-fit,minmax(10px,1fr));position:relative;border-bottom:1px solid var(--color-border)}.tc-row:after{content:"";pointer-events:none;position:absolute;width:var(--cell-size);height:100%;bottom:-1px;right:calc(var(--cell-size)*-1);border-bottom:1px solid var(--color-border)}.tc-row--selected{background:var(--color-background)}.tc-row--selected:after{background:var(--color-background)}.tc-cell{border-right:1px solid var(--color-border);padding:6px 12px;overflow:hidden;outline:none;line-break:normal}.tc-cell input{outline:none;border:none;width:100%;height:100%;padding:0;margin:0}.tc-cell--selected{background:var(--color-background)}.tc-wrap--readonly .tc-row:after{display:none}.tc-toolbox{--toolbox-padding:6px;--popover-margin:30px;--toggler-click-zone-size:30px;--toggler-dots-color:#7b7e89;--toggler-dots-color-hovered:#1d202b;position:absolute;cursor:pointer;z-index:1;opacity:0;transition:opacity .1s;will-change:left,opacity}.tc-toolbox--column{top:calc(var(--toggler-click-zone-size)*-1);transform:translate(calc(var(--toggler-click-zone-size)*-1/2));will-change:left,opacity}.tc-toolbox--row{left:calc(var(--popover-margin)*-1);transform:translateY(calc(var(--toggler-click-zone-size)*-1/2));margin-top:-1px;will-change:top,opacity}.tc-toolbox--showed{opacity:1}.tc-toolbox .tc-popover{position:absolute;top:0;left:var(--popover-margin)}.tc-toolbox__toggler{display:flex;align-items:center;justify-content:center;width:var(--toggler-click-zone-size);height:var(--toggler-click-zone-size);color:var(--toggler-dots-color);opacity:0;transition:opacity .15s ease;will-change:opacity}.tc-toolbox__toggler:hover{color:var(--toggler-dots-color-hovered)}.tc-toolbox__toggler svg{fill:currentColor}.tc-wrap:hover .tc-toolbox__toggler{opacity:1}.tc-settings .cdx-settings-button{width:50%;margin:0}.tc-popover{--color-border:#eaeaea;--color-background:#fff;--color-background-hover:rgba(232,232,235,.49);--color-background-confirm:#e24a4a;--color-background-confirm-hover:#d54040;--color-text-confirm:#fff;background:var(--color-background);border:1px solid var(--color-border);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;padding:6px;display:none;will-change:opacity,transform}.tc-popover--opened{display:block;animation:menuShowing .1s cubic-bezier(.215,.61,.355,1) forwards}.tc-popover__item{display:flex;align-items:center;padding:2px 14px 2px 2px;border-radius:5px;cursor:pointer;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;user-select:none}.tc-popover__item:hover{background:var(--color-background-hover)}.tc-popover__item:not(:last-of-type){margin-bottom:2px}.tc-popover__item-icon{display:inline-flex;width:26px;height:26px;align-items:center;justify-content:center;background:var(--color-background);border-radius:5px;border:1px solid var(--color-border);margin-right:8px}.tc-popover__item-label{line-height:22px;font-size:14px;font-weight:500}.tc-popover__item--confirm{background:var(--color-background-confirm);color:var(--color-text-confirm)}.tc-popover__item--confirm:hover{background-color:var(--color-background-confirm-hover)}.tc-popover__item--confirm .tc-popover__item-icon{background:var(--color-background-confirm);border-color:#0000001a}.tc-popover__item--confirm .tc-popover__item-icon svg{transition:transform .2s ease-in;transform:rotate(90deg) scale(1.2)}.tc-popover__item--hidden{display:none}@keyframes menuShowing{0%{opacity:0;transform:translateY(-8px) scale(.9)}70%{opacity:1;transform:translateY(2px)}to{transform:translateY(0)}}')), document.head.appendChild(e);
    }
  } catch (t) {
    console.error("vite-plugin-css-injected-by-js", t);
  }
})();
var zb = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Wb(o) {
  return o && o.__esModule && Object.prototype.hasOwnProperty.call(o, "default") ? o.default : o;
}
var _u = { exports: {} };
/*!
 * jQuery JavaScript Library v3.7.1
 * https://jquery.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2023-08-28T13:37Z
 */
(function(o) {
  (function(e, t) {
    o.exports = e.document ? t(e, !0) : function(n) {
      if (!n.document)
        throw new Error("jQuery requires a window with a document");
      return t(n);
    };
  })(typeof window < "u" ? window : zb, function(e, t) {
    var n = [], r = Object.getPrototypeOf, a = n.slice, c = n.flat ? function(i) {
      return n.flat.call(i);
    } : function(i) {
      return n.concat.apply([], i);
    }, u = n.push, p = n.indexOf, g = {}, v = g.toString, x = g.hasOwnProperty, y = x.toString, T = y.call(Object), k = {}, M = function(i) {
      return typeof i == "function" && typeof i.nodeType != "number" && typeof i.item != "function";
    }, O = function(i) {
      return i != null && i === i.window;
    }, Y = e.document, I = {
      type: !0,
      src: !0,
      nonce: !0,
      noModule: !0
    };
    function F(i, s, l) {
      l = l || Y;
      var h, f, m = l.createElement("script");
      if (m.text = i, s)
        for (h in I)
          f = s[h] || s.getAttribute && s.getAttribute(h), f && m.setAttribute(h, f);
      l.head.appendChild(m).parentNode.removeChild(m);
    }
    function Q(i) {
      return i == null ? i + "" : typeof i == "object" || typeof i == "function" ? g[v.call(i)] || "object" : typeof i;
    }
    var U = "3.7.1", z = /HTML$/i, d = function(i, s) {
      return new d.fn.init(i, s);
    };
    d.fn = d.prototype = {
      // The current version of jQuery being used
      jquery: U,
      constructor: d,
      // The default length of a jQuery object is 0
      length: 0,
      toArray: function() {
        return a.call(this);
      },
      // Get the Nth element in the matched element set OR
      // Get the whole matched element set as a clean array
      get: function(i) {
        return i == null ? a.call(this) : i < 0 ? this[i + this.length] : this[i];
      },
      // Take an array of elements and push it onto the stack
      // (returning the new matched element set)
      pushStack: function(i) {
        var s = d.merge(this.constructor(), i);
        return s.prevObject = this, s;
      },
      // Execute a callback for every element in the matched set.
      each: function(i) {
        return d.each(this, i);
      },
      map: function(i) {
        return this.pushStack(d.map(this, function(s, l) {
          return i.call(s, l, s);
        }));
      },
      slice: function() {
        return this.pushStack(a.apply(this, arguments));
      },
      first: function() {
        return this.eq(0);
      },
      last: function() {
        return this.eq(-1);
      },
      even: function() {
        return this.pushStack(d.grep(this, function(i, s) {
          return (s + 1) % 2;
        }));
      },
      odd: function() {
        return this.pushStack(d.grep(this, function(i, s) {
          return s % 2;
        }));
      },
      eq: function(i) {
        var s = this.length, l = +i + (i < 0 ? s : 0);
        return this.pushStack(l >= 0 && l < s ? [this[l]] : []);
      },
      end: function() {
        return this.prevObject || this.constructor();
      },
      // For internal use only.
      // Behaves like an Array's method, not like a jQuery method.
      push: u,
      sort: n.sort,
      splice: n.splice
    }, d.extend = d.fn.extend = function() {
      var i, s, l, h, f, m, b = arguments[0] || {}, E = 1, _ = arguments.length, L = !1;
      for (typeof b == "boolean" && (L = b, b = arguments[E] || {}, E++), typeof b != "object" && !M(b) && (b = {}), E === _ && (b = this, E--); E < _; E++)
        if ((i = arguments[E]) != null)
          for (s in i)
            h = i[s], !(s === "__proto__" || b === h) && (L && h && (d.isPlainObject(h) || (f = Array.isArray(h))) ? (l = b[s], f && !Array.isArray(l) ? m = [] : !f && !d.isPlainObject(l) ? m = {} : m = l, f = !1, b[s] = d.extend(L, m, h)) : h !== void 0 && (b[s] = h));
      return b;
    }, d.extend({
      // Unique for each copy of jQuery on the page
      expando: "jQuery" + (U + Math.random()).replace(/\D/g, ""),
      // Assume jQuery is ready without the ready module
      isReady: !0,
      error: function(i) {
        throw new Error(i);
      },
      noop: function() {
      },
      isPlainObject: function(i) {
        var s, l;
        return !i || v.call(i) !== "[object Object]" ? !1 : (s = r(i), s ? (l = x.call(s, "constructor") && s.constructor, typeof l == "function" && y.call(l) === T) : !0);
      },
      isEmptyObject: function(i) {
        var s;
        for (s in i)
          return !1;
        return !0;
      },
      // Evaluates a script in a provided context; falls back to the global one
      // if not specified.
      globalEval: function(i, s, l) {
        F(i, { nonce: s && s.nonce }, l);
      },
      each: function(i, s) {
        var l, h = 0;
        if (j(i))
          for (l = i.length; h < l && s.call(i[h], h, i[h]) !== !1; h++)
            ;
        else
          for (h in i)
            if (s.call(i[h], h, i[h]) === !1)
              break;
        return i;
      },
      // Retrieve the text value of an array of DOM nodes
      text: function(i) {
        var s, l = "", h = 0, f = i.nodeType;
        if (!f)
          for (; s = i[h++]; )
            l += d.text(s);
        return f === 1 || f === 11 ? i.textContent : f === 9 ? i.documentElement.textContent : f === 3 || f === 4 ? i.nodeValue : l;
      },
      // results is for internal usage only
      makeArray: function(i, s) {
        var l = s || [];
        return i != null && (j(Object(i)) ? d.merge(
          l,
          typeof i == "string" ? [i] : i
        ) : u.call(l, i)), l;
      },
      inArray: function(i, s, l) {
        return s == null ? -1 : p.call(s, i, l);
      },
      isXMLDoc: function(i) {
        var s = i && i.namespaceURI, l = i && (i.ownerDocument || i).documentElement;
        return !z.test(s || l && l.nodeName || "HTML");
      },
      // Support: Android <=4.0 only, PhantomJS 1 only
      // push.apply(_, arraylike) throws on ancient WebKit
      merge: function(i, s) {
        for (var l = +s.length, h = 0, f = i.length; h < l; h++)
          i[f++] = s[h];
        return i.length = f, i;
      },
      grep: function(i, s, l) {
        for (var h, f = [], m = 0, b = i.length, E = !l; m < b; m++)
          h = !s(i[m], m), h !== E && f.push(i[m]);
        return f;
      },
      // arg is for internal usage only
      map: function(i, s, l) {
        var h, f, m = 0, b = [];
        if (j(i))
          for (h = i.length; m < h; m++)
            f = s(i[m], m, l), f != null && b.push(f);
        else
          for (m in i)
            f = s(i[m], m, l), f != null && b.push(f);
        return c(b);
      },
      // A global GUID counter for objects
      guid: 1,
      // jQuery.support is not used in Core but other projects attach their
      // properties to it so it needs to exist.
      support: k
    }), typeof Symbol == "function" && (d.fn[Symbol.iterator] = n[Symbol.iterator]), d.each(
      "Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),
      function(i, s) {
        g["[object " + s + "]"] = s.toLowerCase();
      }
    );
    function j(i) {
      var s = !!i && "length" in i && i.length, l = Q(i);
      return M(i) || O(i) ? !1 : l === "array" || s === 0 || typeof s == "number" && s > 0 && s - 1 in i;
    }
    function R(i, s) {
      return i.nodeName && i.nodeName.toLowerCase() === s.toLowerCase();
    }
    var V = n.pop, K = n.sort, J = n.splice, B = "[\\x20\\t\\r\\n\\f]", se = new RegExp(
      "^" + B + "+|((?:^|[^\\\\])(?:\\\\.)*)" + B + "+$",
      "g"
    );
    d.contains = function(i, s) {
      var l = s && s.parentNode;
      return i === l || !!(l && l.nodeType === 1 && // Support: IE 9 - 11+
      // IE doesn't have `contains` on SVG.
      (i.contains ? i.contains(l) : i.compareDocumentPosition && i.compareDocumentPosition(l) & 16));
    };
    var Z = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
    function ne(i, s) {
      return s ? i === "\0" ? "�" : i.slice(0, -1) + "\\" + i.charCodeAt(i.length - 1).toString(16) + " " : "\\" + i;
    }
    d.escapeSelector = function(i) {
      return (i + "").replace(Z, ne);
    };
    var le = Y, oe = u;
    (function() {
      var i, s, l, h, f, m = oe, b, E, _, L, W, q = d.expando, N = 0, X = 0, ge = ai(), Ce = ai(), xe = ai(), Xe = ai(), qe = function(C, D) {
        return C === D && (f = !0), 0;
      }, $t = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", Yt = "(?:\\\\[\\da-fA-F]{1,6}" + B + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", Se = "\\[" + B + "*(" + Yt + ")(?:" + B + // Operator (capture 2)
      "*([*^$|!~]?=)" + B + // "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
      `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + Yt + "))|)" + B + "*\\]", lo = ":(" + Yt + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + Se + ")*)|.*)\\)|)", De = new RegExp(B + "+", "g"), w = new RegExp("^" + B + "*," + B + "*"), S = new RegExp("^" + B + "*([>+~]|" + B + ")" + B + "*"), A = new RegExp(B + "|>"), H = new RegExp(lo), ee = new RegExp("^" + Yt + "$"), he = {
        ID: new RegExp("^#(" + Yt + ")"),
        CLASS: new RegExp("^\\.(" + Yt + ")"),
        TAG: new RegExp("^(" + Yt + "|[*])"),
        ATTR: new RegExp("^" + Se),
        PSEUDO: new RegExp("^" + lo),
        CHILD: new RegExp(
          "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + B + "*(even|odd|(([+-]|)(\\d*)n|)" + B + "*(?:([+-]|)" + B + "*(\\d+)|))" + B + "*\\)|)",
          "i"
        ),
        bool: new RegExp("^(?:" + $t + ")$", "i"),
        // For use in libraries implementing .is()
        // We use this for POS matching in `select`
        needsContext: new RegExp("^" + B + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + B + "*((?:-\\d)?\\d*)" + B + "*\\)|)(?=[^-]|$)", "i")
      }, ke = /^(?:input|select|textarea|button)$/i, Ee = /^h\d$/i, Ae = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, St = /[+~]/, nt = new RegExp("\\\\[\\da-fA-F]{1,6}" + B + "?|\\\\([^\\r\\n\\f])", "g"), Tt = function(C, D) {
        var P = "0x" + C.slice(1) - 65536;
        return D || (P < 0 ? String.fromCharCode(P + 65536) : String.fromCharCode(P >> 10 | 55296, P & 1023 | 56320));
      }, jn = function() {
        co();
      }, xn = ci(
        function(C) {
          return C.disabled === !0 && R(C, "fieldset");
        },
        { dir: "parentNode", next: "legend" }
      );
      function Cl() {
        try {
          return b.activeElement;
        } catch {
        }
      }
      try {
        m.apply(
          n = a.call(le.childNodes),
          le.childNodes
        ), n[le.childNodes.length].nodeType;
      } catch {
        m = {
          apply: function(C, D) {
            oe.apply(C, a.call(D));
          },
          call: function(C) {
            oe.apply(C, a.call(arguments, 1));
          }
        };
      }
      function Ne(C, D, P, $) {
        var G, te, ie, de, re, Te, be, we = D && D.ownerDocument, _e = D ? D.nodeType : 9;
        if (P = P || [], typeof C != "string" || !C || _e !== 1 && _e !== 9 && _e !== 11)
          return P;
        if (!$ && (co(D), D = D || b, _)) {
          if (_e !== 11 && (re = Ae.exec(C)))
            if (G = re[1]) {
              if (_e === 9)
                if (ie = D.getElementById(G)) {
                  if (ie.id === G)
                    return m.call(P, ie), P;
                } else
                  return P;
              else if (we && (ie = we.getElementById(G)) && Ne.contains(D, ie) && ie.id === G)
                return m.call(P, ie), P;
            } else {
              if (re[2])
                return m.apply(P, D.getElementsByTagName(C)), P;
              if ((G = re[3]) && D.getElementsByClassName)
                return m.apply(P, D.getElementsByClassName(G)), P;
            }
          if (!Xe[C + " "] && (!L || !L.test(C))) {
            if (be = C, we = D, _e === 1 && (A.test(C) || S.test(C))) {
              for (we = St.test(C) && Sr(D.parentNode) || D, (we != D || !k.scope) && ((de = D.getAttribute("id")) ? de = d.escapeSelector(de) : D.setAttribute("id", de = q)), Te = Cn(C), te = Te.length; te--; )
                Te[te] = (de ? "#" + de : ":scope") + " " + li(Te[te]);
              be = Te.join(",");
            }
            try {
              return m.apply(
                P,
                we.querySelectorAll(be)
              ), P;
            } catch {
              Xe(C, !0);
            } finally {
              de === q && D.removeAttribute("id");
            }
          }
        }
        return Zs(C.replace(se, "$1"), D, P, $);
      }
      function ai() {
        var C = [];
        function D(P, $) {
          return C.push(P + " ") > s.cacheLength && delete D[C.shift()], D[P + " "] = $;
        }
        return D;
      }
      function Ft(C) {
        return C[q] = !0, C;
      }
      function Uo(C) {
        var D = b.createElement("fieldset");
        try {
          return !!C(D);
        } catch {
          return !1;
        } finally {
          D.parentNode && D.parentNode.removeChild(D), D = null;
        }
      }
      function Sl(C) {
        return function(D) {
          return R(D, "input") && D.type === C;
        };
      }
      function Tl(C) {
        return function(D) {
          return (R(D, "input") || R(D, "button")) && D.type === C;
        };
      }
      function Vs(C) {
        return function(D) {
          return "form" in D ? D.parentNode && D.disabled === !1 ? "label" in D ? "label" in D.parentNode ? D.parentNode.disabled === C : D.disabled === C : D.isDisabled === C || // Where there is no isDisabled, check manually
          D.isDisabled !== !C && xn(D) === C : D.disabled === C : "label" in D ? D.disabled === C : !1;
        };
      }
      function Mo(C) {
        return Ft(function(D) {
          return D = +D, Ft(function(P, $) {
            for (var G, te = C([], P.length, D), ie = te.length; ie--; )
              P[G = te[ie]] && (P[G] = !($[G] = P[G]));
          });
        });
      }
      function Sr(C) {
        return C && typeof C.getElementsByTagName < "u" && C;
      }
      function co(C) {
        var D, P = C ? C.ownerDocument || C : le;
        return P == b || P.nodeType !== 9 || !P.documentElement || (b = P, E = b.documentElement, _ = !d.isXMLDoc(b), W = E.matches || E.webkitMatchesSelector || E.msMatchesSelector, E.msMatchesSelector && // Support: IE 11+, Edge 17 - 18+
        // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
        // two documents; shallow comparisons work.
        // eslint-disable-next-line eqeqeq
        le != b && (D = b.defaultView) && D.top !== D && D.addEventListener("unload", jn), k.getById = Uo(function($) {
          return E.appendChild($).id = d.expando, !b.getElementsByName || !b.getElementsByName(d.expando).length;
        }), k.disconnectedMatch = Uo(function($) {
          return W.call($, "*");
        }), k.scope = Uo(function() {
          return b.querySelectorAll(":scope");
        }), k.cssHas = Uo(function() {
          try {
            return b.querySelector(":has(*,:jqfake)"), !1;
          } catch {
            return !0;
          }
        }), k.getById ? (s.filter.ID = function($) {
          var G = $.replace(nt, Tt);
          return function(te) {
            return te.getAttribute("id") === G;
          };
        }, s.find.ID = function($, G) {
          if (typeof G.getElementById < "u" && _) {
            var te = G.getElementById($);
            return te ? [te] : [];
          }
        }) : (s.filter.ID = function($) {
          var G = $.replace(nt, Tt);
          return function(te) {
            var ie = typeof te.getAttributeNode < "u" && te.getAttributeNode("id");
            return ie && ie.value === G;
          };
        }, s.find.ID = function($, G) {
          if (typeof G.getElementById < "u" && _) {
            var te, ie, de, re = G.getElementById($);
            if (re) {
              if (te = re.getAttributeNode("id"), te && te.value === $)
                return [re];
              for (de = G.getElementsByName($), ie = 0; re = de[ie++]; )
                if (te = re.getAttributeNode("id"), te && te.value === $)
                  return [re];
            }
            return [];
          }
        }), s.find.TAG = function($, G) {
          return typeof G.getElementsByTagName < "u" ? G.getElementsByTagName($) : G.querySelectorAll($);
        }, s.find.CLASS = function($, G) {
          if (typeof G.getElementsByClassName < "u" && _)
            return G.getElementsByClassName($);
        }, L = [], Uo(function($) {
          var G;
          E.appendChild($).innerHTML = "<a id='" + q + "' href='' disabled='disabled'></a><select id='" + q + "-\r\\' disabled='disabled'><option selected=''></option></select>", $.querySelectorAll("[selected]").length || L.push("\\[" + B + "*(?:value|" + $t + ")"), $.querySelectorAll("[id~=" + q + "-]").length || L.push("~="), $.querySelectorAll("a#" + q + "+*").length || L.push(".#.+[+~]"), $.querySelectorAll(":checked").length || L.push(":checked"), G = b.createElement("input"), G.setAttribute("type", "hidden"), $.appendChild(G).setAttribute("name", "D"), E.appendChild($).disabled = !0, $.querySelectorAll(":disabled").length !== 2 && L.push(":enabled", ":disabled"), G = b.createElement("input"), G.setAttribute("name", ""), $.appendChild(G), $.querySelectorAll("[name='']").length || L.push("\\[" + B + "*name" + B + "*=" + B + `*(?:''|"")`);
        }), k.cssHas || L.push(":has"), L = L.length && new RegExp(L.join("|")), qe = function($, G) {
          if ($ === G)
            return f = !0, 0;
          var te = !$.compareDocumentPosition - !G.compareDocumentPosition;
          return te || (te = ($.ownerDocument || $) == (G.ownerDocument || G) ? $.compareDocumentPosition(G) : (
            // Otherwise we know they are disconnected
            1
          ), te & 1 || !k.sortDetached && G.compareDocumentPosition($) === te ? $ === b || $.ownerDocument == le && Ne.contains(le, $) ? -1 : G === b || G.ownerDocument == le && Ne.contains(le, G) ? 1 : h ? p.call(h, $) - p.call(h, G) : 0 : te & 4 ? -1 : 1);
        }), b;
      }
      Ne.matches = function(C, D) {
        return Ne(C, null, null, D);
      }, Ne.matchesSelector = function(C, D) {
        if (co(C), _ && !Xe[D + " "] && (!L || !L.test(D)))
          try {
            var P = W.call(C, D);
            if (P || k.disconnectedMatch || // As well, disconnected nodes are said to be in a document
            // fragment in IE 9
            C.document && C.document.nodeType !== 11)
              return P;
          } catch {
            Xe(D, !0);
          }
        return Ne(D, b, null, [C]).length > 0;
      }, Ne.contains = function(C, D) {
        return (C.ownerDocument || C) != b && co(C), d.contains(C, D);
      }, Ne.attr = function(C, D) {
        (C.ownerDocument || C) != b && co(C);
        var P = s.attrHandle[D.toLowerCase()], $ = P && x.call(s.attrHandle, D.toLowerCase()) ? P(C, D, !_) : void 0;
        return $ !== void 0 ? $ : C.getAttribute(D);
      }, Ne.error = function(C) {
        throw new Error("Syntax error, unrecognized expression: " + C);
      }, d.uniqueSort = function(C) {
        var D, P = [], $ = 0, G = 0;
        if (f = !k.sortStable, h = !k.sortStable && a.call(C, 0), K.call(C, qe), f) {
          for (; D = C[G++]; )
            D === C[G] && ($ = P.push(G));
          for (; $--; )
            J.call(C, P[$], 1);
        }
        return h = null, C;
      }, d.fn.uniqueSort = function() {
        return this.pushStack(d.uniqueSort(a.apply(this)));
      }, s = d.expr = {
        // Can be adjusted by the user
        cacheLength: 50,
        createPseudo: Ft,
        match: he,
        attrHandle: {},
        find: {},
        relative: {
          ">": { dir: "parentNode", first: !0 },
          " ": { dir: "parentNode" },
          "+": { dir: "previousSibling", first: !0 },
          "~": { dir: "previousSibling" }
        },
        preFilter: {
          ATTR: function(C) {
            return C[1] = C[1].replace(nt, Tt), C[3] = (C[3] || C[4] || C[5] || "").replace(nt, Tt), C[2] === "~=" && (C[3] = " " + C[3] + " "), C.slice(0, 4);
          },
          CHILD: function(C) {
            return C[1] = C[1].toLowerCase(), C[1].slice(0, 3) === "nth" ? (C[3] || Ne.error(C[0]), C[4] = +(C[4] ? C[5] + (C[6] || 1) : 2 * (C[3] === "even" || C[3] === "odd")), C[5] = +(C[7] + C[8] || C[3] === "odd")) : C[3] && Ne.error(C[0]), C;
          },
          PSEUDO: function(C) {
            var D, P = !C[6] && C[2];
            return he.CHILD.test(C[0]) ? null : (C[3] ? C[2] = C[4] || C[5] || "" : P && H.test(P) && // Get excess from tokenize (recursively)
            (D = Cn(P, !0)) && // advance to the next closing parenthesis
            (D = P.indexOf(")", P.length - D) - P.length) && (C[0] = C[0].slice(0, D), C[2] = P.slice(0, D)), C.slice(0, 3));
          }
        },
        filter: {
          TAG: function(C) {
            var D = C.replace(nt, Tt).toLowerCase();
            return C === "*" ? function() {
              return !0;
            } : function(P) {
              return R(P, D);
            };
          },
          CLASS: function(C) {
            var D = ge[C + " "];
            return D || (D = new RegExp("(^|" + B + ")" + C + "(" + B + "|$)")) && ge(C, function(P) {
              return D.test(
                typeof P.className == "string" && P.className || typeof P.getAttribute < "u" && P.getAttribute("class") || ""
              );
            });
          },
          ATTR: function(C, D, P) {
            return function($) {
              var G = Ne.attr($, C);
              return G == null ? D === "!=" : D ? (G += "", D === "=" ? G === P : D === "!=" ? G !== P : D === "^=" ? P && G.indexOf(P) === 0 : D === "*=" ? P && G.indexOf(P) > -1 : D === "$=" ? P && G.slice(-P.length) === P : D === "~=" ? (" " + G.replace(De, " ") + " ").indexOf(P) > -1 : D === "|=" ? G === P || G.slice(0, P.length + 1) === P + "-" : !1) : !0;
            };
          },
          CHILD: function(C, D, P, $, G) {
            var te = C.slice(0, 3) !== "nth", ie = C.slice(-4) !== "last", de = D === "of-type";
            return $ === 1 && G === 0 ? (
              // Shortcut for :nth-*(n)
              function(re) {
                return !!re.parentNode;
              }
            ) : function(re, Te, be) {
              var we, _e, me, $e, vt, at = te !== ie ? "nextSibling" : "previousSibling", Et = re.parentNode, Vt = de && re.nodeName.toLowerCase(), qo = !be && !de, mt = !1;
              if (Et) {
                if (te) {
                  for (; at; ) {
                    for (me = re; me = me[at]; )
                      if (de ? R(me, Vt) : me.nodeType === 1)
                        return !1;
                    vt = at = C === "only" && !vt && "nextSibling";
                  }
                  return !0;
                }
                if (vt = [ie ? Et.firstChild : Et.lastChild], ie && qo) {
                  for (_e = Et[q] || (Et[q] = {}), we = _e[C] || [], $e = we[0] === N && we[1], mt = $e && we[2], me = $e && Et.childNodes[$e]; me = ++$e && me && me[at] || // Fallback to seeking `elem` from the start
                  (mt = $e = 0) || vt.pop(); )
                    if (me.nodeType === 1 && ++mt && me === re) {
                      _e[C] = [N, $e, mt];
                      break;
                    }
                } else if (qo && (_e = re[q] || (re[q] = {}), we = _e[C] || [], $e = we[0] === N && we[1], mt = $e), mt === !1)
                  for (; (me = ++$e && me && me[at] || (mt = $e = 0) || vt.pop()) && !((de ? R(me, Vt) : me.nodeType === 1) && ++mt && (qo && (_e = me[q] || (me[q] = {}), _e[C] = [N, mt]), me === re)); )
                    ;
                return mt -= G, mt === $ || mt % $ === 0 && mt / $ >= 0;
              }
            };
          },
          PSEUDO: function(C, D) {
            var P, $ = s.pseudos[C] || s.setFilters[C.toLowerCase()] || Ne.error("unsupported pseudo: " + C);
            return $[q] ? $(D) : $.length > 1 ? (P = [C, C, "", D], s.setFilters.hasOwnProperty(C.toLowerCase()) ? Ft(function(G, te) {
              for (var ie, de = $(G, D), re = de.length; re--; )
                ie = p.call(G, de[re]), G[ie] = !(te[ie] = de[re]);
            }) : function(G) {
              return $(G, 0, P);
            }) : $;
          }
        },
        pseudos: {
          // Potentially complex pseudos
          not: Ft(function(C) {
            var D = [], P = [], $ = Mr(C.replace(se, "$1"));
            return $[q] ? Ft(function(G, te, ie, de) {
              for (var re, Te = $(G, null, de, []), be = G.length; be--; )
                (re = Te[be]) && (G[be] = !(te[be] = re));
            }) : function(G, te, ie) {
              return D[0] = G, $(D, null, ie, P), D[0] = null, !P.pop();
            };
          }),
          has: Ft(function(C) {
            return function(D) {
              return Ne(C, D).length > 0;
            };
          }),
          contains: Ft(function(C) {
            return C = C.replace(nt, Tt), function(D) {
              return (D.textContent || d.text(D)).indexOf(C) > -1;
            };
          }),
          // "Whether an element is represented by a :lang() selector
          // is based solely on the element's language value
          // being equal to the identifier C,
          // or beginning with the identifier C immediately followed by "-".
          // The matching of C against the element's language value is performed case-insensitively.
          // The identifier C does not have to be a valid language name."
          // https://www.w3.org/TR/selectors/#lang-pseudo
          lang: Ft(function(C) {
            return ee.test(C || "") || Ne.error("unsupported lang: " + C), C = C.replace(nt, Tt).toLowerCase(), function(D) {
              var P;
              do
                if (P = _ ? D.lang : D.getAttribute("xml:lang") || D.getAttribute("lang"))
                  return P = P.toLowerCase(), P === C || P.indexOf(C + "-") === 0;
              while ((D = D.parentNode) && D.nodeType === 1);
              return !1;
            };
          }),
          // Miscellaneous
          target: function(C) {
            var D = e.location && e.location.hash;
            return D && D.slice(1) === C.id;
          },
          root: function(C) {
            return C === E;
          },
          focus: function(C) {
            return C === Cl() && b.hasFocus() && !!(C.type || C.href || ~C.tabIndex);
          },
          // Boolean properties
          enabled: Vs(!1),
          disabled: Vs(!0),
          checked: function(C) {
            return R(C, "input") && !!C.checked || R(C, "option") && !!C.selected;
          },
          selected: function(C) {
            return C.parentNode && C.parentNode.selectedIndex, C.selected === !0;
          },
          // Contents
          empty: function(C) {
            for (C = C.firstChild; C; C = C.nextSibling)
              if (C.nodeType < 6)
                return !1;
            return !0;
          },
          parent: function(C) {
            return !s.pseudos.empty(C);
          },
          // Element/input types
          header: function(C) {
            return Ee.test(C.nodeName);
          },
          input: function(C) {
            return ke.test(C.nodeName);
          },
          button: function(C) {
            return R(C, "input") && C.type === "button" || R(C, "button");
          },
          text: function(C) {
            var D;
            return R(C, "input") && C.type === "text" && // Support: IE <10 only
            // New HTML5 attribute values (e.g., "search") appear
            // with elem.type === "text"
            ((D = C.getAttribute("type")) == null || D.toLowerCase() === "text");
          },
          // Position-in-collection
          first: Mo(function() {
            return [0];
          }),
          last: Mo(function(C, D) {
            return [D - 1];
          }),
          eq: Mo(function(C, D, P) {
            return [P < 0 ? P + D : P];
          }),
          even: Mo(function(C, D) {
            for (var P = 0; P < D; P += 2)
              C.push(P);
            return C;
          }),
          odd: Mo(function(C, D) {
            for (var P = 1; P < D; P += 2)
              C.push(P);
            return C;
          }),
          lt: Mo(function(C, D, P) {
            var $;
            for (P < 0 ? $ = P + D : P > D ? $ = D : $ = P; --$ >= 0; )
              C.push($);
            return C;
          }),
          gt: Mo(function(C, D, P) {
            for (var $ = P < 0 ? P + D : P; ++$ < D; )
              C.push($);
            return C;
          })
        }
      }, s.pseudos.nth = s.pseudos.eq;
      for (i in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 })
        s.pseudos[i] = Sl(i);
      for (i in { submit: !0, reset: !0 })
        s.pseudos[i] = Tl(i);
      function Gs() {
      }
      Gs.prototype = s.filters = s.pseudos, s.setFilters = new Gs();
      function Cn(C, D) {
        var P, $, G, te, ie, de, re, Te = Ce[C + " "];
        if (Te)
          return D ? 0 : Te.slice(0);
        for (ie = C, de = [], re = s.preFilter; ie; ) {
          (!P || ($ = w.exec(ie))) && ($ && (ie = ie.slice($[0].length) || ie), de.push(G = [])), P = !1, ($ = S.exec(ie)) && (P = $.shift(), G.push({
            value: P,
            // Cast descendant combinators to space
            type: $[0].replace(se, " ")
          }), ie = ie.slice(P.length));
          for (te in s.filter)
            ($ = he[te].exec(ie)) && (!re[te] || ($ = re[te]($))) && (P = $.shift(), G.push({
              value: P,
              type: te,
              matches: $
            }), ie = ie.slice(P.length));
          if (!P)
            break;
        }
        return D ? ie.length : ie ? Ne.error(C) : (
          // Cache the tokens
          Ce(C, de).slice(0)
        );
      }
      function li(C) {
        for (var D = 0, P = C.length, $ = ""; D < P; D++)
          $ += C[D].value;
        return $;
      }
      function ci(C, D, P) {
        var $ = D.dir, G = D.next, te = G || $, ie = P && te === "parentNode", de = X++;
        return D.first ? (
          // Check against closest ancestor/preceding element
          function(re, Te, be) {
            for (; re = re[$]; )
              if (re.nodeType === 1 || ie)
                return C(re, Te, be);
            return !1;
          }
        ) : (
          // Check against all ancestor/preceding elements
          function(re, Te, be) {
            var we, _e, me = [N, de];
            if (be) {
              for (; re = re[$]; )
                if ((re.nodeType === 1 || ie) && C(re, Te, be))
                  return !0;
            } else
              for (; re = re[$]; )
                if (re.nodeType === 1 || ie)
                  if (_e = re[q] || (re[q] = {}), G && R(re, G))
                    re = re[$] || re;
                  else {
                    if ((we = _e[te]) && we[0] === N && we[1] === de)
                      return me[2] = we[2];
                    if (_e[te] = me, me[2] = C(re, Te, be))
                      return !0;
                  }
            return !1;
          }
        );
      }
      function Tr(C) {
        return C.length > 1 ? function(D, P, $) {
          for (var G = C.length; G--; )
            if (!C[G](D, P, $))
              return !1;
          return !0;
        } : C[0];
      }
      function _l(C, D, P) {
        for (var $ = 0, G = D.length; $ < G; $++)
          Ne(C, D[$], P);
        return P;
      }
      function di(C, D, P, $, G) {
        for (var te, ie = [], de = 0, re = C.length, Te = D != null; de < re; de++)
          (te = C[de]) && (!P || P(te, $, G)) && (ie.push(te), Te && D.push(de));
        return ie;
      }
      function _r(C, D, P, $, G, te) {
        return $ && !$[q] && ($ = _r($)), G && !G[q] && (G = _r(G, te)), Ft(function(ie, de, re, Te) {
          var be, we, _e, me, $e = [], vt = [], at = de.length, Et = ie || _l(
            D || "*",
            re.nodeType ? [re] : re,
            []
          ), Vt = C && (ie || !D) ? di(Et, $e, C, re, Te) : Et;
          if (P ? (me = G || (ie ? C : at || $) ? (
            // ...intermediate processing is necessary
            []
          ) : (
            // ...otherwise use results directly
            de
          ), P(Vt, me, re, Te)) : me = Vt, $)
            for (be = di(me, vt), $(be, [], re, Te), we = be.length; we--; )
              (_e = be[we]) && (me[vt[we]] = !(Vt[vt[we]] = _e));
          if (ie) {
            if (G || C) {
              if (G) {
                for (be = [], we = me.length; we--; )
                  (_e = me[we]) && be.push(Vt[we] = _e);
                G(null, me = [], be, Te);
              }
              for (we = me.length; we--; )
                (_e = me[we]) && (be = G ? p.call(ie, _e) : $e[we]) > -1 && (ie[be] = !(de[be] = _e));
            }
          } else
            me = di(
              me === de ? me.splice(at, me.length) : me
            ), G ? G(null, de, me, Te) : m.apply(de, me);
        });
      }
      function Er(C) {
        for (var D, P, $, G = C.length, te = s.relative[C[0].type], ie = te || s.relative[" "], de = te ? 1 : 0, re = ci(function(we) {
          return we === D;
        }, ie, !0), Te = ci(function(we) {
          return p.call(D, we) > -1;
        }, ie, !0), be = [function(we, _e, me) {
          var $e = !te && (me || _e != l) || ((D = _e).nodeType ? re(we, _e, me) : Te(we, _e, me));
          return D = null, $e;
        }]; de < G; de++)
          if (P = s.relative[C[de].type])
            be = [ci(Tr(be), P)];
          else {
            if (P = s.filter[C[de].type].apply(null, C[de].matches), P[q]) {
              for ($ = ++de; $ < G && !s.relative[C[$].type]; $++)
                ;
              return _r(
                de > 1 && Tr(be),
                de > 1 && li(
                  // If the preceding token was a descendant combinator, insert an implicit any-element `*`
                  C.slice(0, de - 1).concat({ value: C[de - 2].type === " " ? "*" : "" })
                ).replace(se, "$1"),
                P,
                de < $ && Er(C.slice(de, $)),
                $ < G && Er(C = C.slice($)),
                $ < G && li(C)
              );
            }
            be.push(P);
          }
        return Tr(be);
      }
      function El(C, D) {
        var P = D.length > 0, $ = C.length > 0, G = function(te, ie, de, re, Te) {
          var be, we, _e, me = 0, $e = "0", vt = te && [], at = [], Et = l, Vt = te || $ && s.find.TAG("*", Te), qo = N += Et == null ? 1 : Math.random() || 0.1, mt = Vt.length;
          for (Te && (l = ie == b || ie || Te); $e !== mt && (be = Vt[$e]) != null; $e++) {
            if ($ && be) {
              for (we = 0, !ie && be.ownerDocument != b && (co(be), de = !_); _e = C[we++]; )
                if (_e(be, ie || b, de)) {
                  m.call(re, be);
                  break;
                }
              Te && (N = qo);
            }
            P && ((be = !_e && be) && me--, te && vt.push(be));
          }
          if (me += $e, P && $e !== me) {
            for (we = 0; _e = D[we++]; )
              _e(vt, at, ie, de);
            if (te) {
              if (me > 0)
                for (; $e--; )
                  vt[$e] || at[$e] || (at[$e] = V.call(re));
              at = di(at);
            }
            m.apply(re, at), Te && !te && at.length > 0 && me + D.length > 1 && d.uniqueSort(re);
          }
          return Te && (N = qo, l = Et), vt;
        };
        return P ? Ft(G) : G;
      }
      function Mr(C, D) {
        var P, $ = [], G = [], te = xe[C + " "];
        if (!te) {
          for (D || (D = Cn(C)), P = D.length; P--; )
            te = Er(D[P]), te[q] ? $.push(te) : G.push(te);
          te = xe(
            C,
            El(G, $)
          ), te.selector = C;
        }
        return te;
      }
      function Zs(C, D, P, $) {
        var G, te, ie, de, re, Te = typeof C == "function" && C, be = !$ && Cn(C = Te.selector || C);
        if (P = P || [], be.length === 1) {
          if (te = be[0] = be[0].slice(0), te.length > 2 && (ie = te[0]).type === "ID" && D.nodeType === 9 && _ && s.relative[te[1].type]) {
            if (D = (s.find.ID(
              ie.matches[0].replace(nt, Tt),
              D
            ) || [])[0], D)
              Te && (D = D.parentNode);
            else
              return P;
            C = C.slice(te.shift().value.length);
          }
          for (G = he.needsContext.test(C) ? 0 : te.length; G-- && (ie = te[G], !s.relative[de = ie.type]); )
            if ((re = s.find[de]) && ($ = re(
              ie.matches[0].replace(nt, Tt),
              St.test(te[0].type) && Sr(D.parentNode) || D
            ))) {
              if (te.splice(G, 1), C = $.length && li(te), !C)
                return m.apply(P, $), P;
              break;
            }
        }
        return (Te || Mr(C, be))(
          $,
          D,
          !_,
          P,
          !D || St.test(C) && Sr(D.parentNode) || D
        ), P;
      }
      k.sortStable = q.split("").sort(qe).join("") === q, co(), k.sortDetached = Uo(function(C) {
        return C.compareDocumentPosition(b.createElement("fieldset")) & 1;
      }), d.find = Ne, d.expr[":"] = d.expr.pseudos, d.unique = d.uniqueSort, Ne.compile = Mr, Ne.select = Zs, Ne.setDocument = co, Ne.tokenize = Cn, Ne.escape = d.escapeSelector, Ne.getText = d.text, Ne.isXML = d.isXMLDoc, Ne.selectors = d.expr, Ne.support = d.support, Ne.uniqueSort = d.uniqueSort;
    })();
    var fe = function(i, s, l) {
      for (var h = [], f = l !== void 0; (i = i[s]) && i.nodeType !== 9; )
        if (i.nodeType === 1) {
          if (f && d(i).is(l))
            break;
          h.push(i);
        }
      return h;
    }, Me = function(i, s) {
      for (var l = []; i; i = i.nextSibling)
        i.nodeType === 1 && i !== s && l.push(i);
      return l;
    }, je = d.expr.match.needsContext, Be = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function Ke(i, s, l) {
      return M(s) ? d.grep(i, function(h, f) {
        return !!s.call(h, f, h) !== l;
      }) : s.nodeType ? d.grep(i, function(h) {
        return h === s !== l;
      }) : typeof s != "string" ? d.grep(i, function(h) {
        return p.call(s, h) > -1 !== l;
      }) : d.filter(s, i, l);
    }
    d.filter = function(i, s, l) {
      var h = s[0];
      return l && (i = ":not(" + i + ")"), s.length === 1 && h.nodeType === 1 ? d.find.matchesSelector(h, i) ? [h] : [] : d.find.matches(i, d.grep(s, function(f) {
        return f.nodeType === 1;
      }));
    }, d.fn.extend({
      find: function(i) {
        var s, l, h = this.length, f = this;
        if (typeof i != "string")
          return this.pushStack(d(i).filter(function() {
            for (s = 0; s < h; s++)
              if (d.contains(f[s], this))
                return !0;
          }));
        for (l = this.pushStack([]), s = 0; s < h; s++)
          d.find(i, f[s], l);
        return h > 1 ? d.uniqueSort(l) : l;
      },
      filter: function(i) {
        return this.pushStack(Ke(this, i || [], !1));
      },
      not: function(i) {
        return this.pushStack(Ke(this, i || [], !0));
      },
      is: function(i) {
        return !!Ke(
          this,
          // If this is a positional/relative selector, check membership in the returned set
          // so $("p:first").is("p:last") won't return true for a doc with two "p".
          typeof i == "string" && je.test(i) ? d(i) : i || [],
          !1
        ).length;
      }
    });
    var io, ko = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, on = d.fn.init = function(i, s, l) {
      var h, f;
      if (!i)
        return this;
      if (l = l || io, typeof i == "string")
        if (i[0] === "<" && i[i.length - 1] === ">" && i.length >= 3 ? h = [null, i, null] : h = ko.exec(i), h && (h[1] || !s))
          if (h[1]) {
            if (s = s instanceof d ? s[0] : s, d.merge(this, d.parseHTML(
              h[1],
              s && s.nodeType ? s.ownerDocument || s : Y,
              !0
            )), Be.test(h[1]) && d.isPlainObject(s))
              for (h in s)
                M(this[h]) ? this[h](s[h]) : this.attr(h, s[h]);
            return this;
          } else
            return f = Y.getElementById(h[2]), f && (this[0] = f, this.length = 1), this;
        else
          return !s || s.jquery ? (s || l).find(i) : this.constructor(s).find(i);
      else {
        if (i.nodeType)
          return this[0] = i, this.length = 1, this;
        if (M(i))
          return l.ready !== void 0 ? l.ready(i) : (
            // Execute immediately if ready is not present
            i(d)
          );
      }
      return d.makeArray(i, this);
    };
    on.prototype = d.fn, io = d(Y);
    var In = /^(?:parents|prev(?:Until|All))/, fn = {
      children: !0,
      contents: !0,
      next: !0,
      prev: !0
    };
    d.fn.extend({
      has: function(i) {
        var s = d(i, this), l = s.length;
        return this.filter(function() {
          for (var h = 0; h < l; h++)
            if (d.contains(this, s[h]))
              return !0;
        });
      },
      closest: function(i, s) {
        var l, h = 0, f = this.length, m = [], b = typeof i != "string" && d(i);
        if (!je.test(i)) {
          for (; h < f; h++)
            for (l = this[h]; l && l !== s; l = l.parentNode)
              if (l.nodeType < 11 && (b ? b.index(l) > -1 : (
                // Don't pass non-elements to jQuery#find
                l.nodeType === 1 && d.find.matchesSelector(l, i)
              ))) {
                m.push(l);
                break;
              }
        }
        return this.pushStack(m.length > 1 ? d.uniqueSort(m) : m);
      },
      // Determine the position of an element within the set
      index: function(i) {
        return i ? typeof i == "string" ? p.call(d(i), this[0]) : p.call(
          this,
          // If it receives a jQuery object, the first element is used
          i.jquery ? i[0] : i
        ) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
      },
      add: function(i, s) {
        return this.pushStack(
          d.uniqueSort(
            d.merge(this.get(), d(i, s))
          )
        );
      },
      addBack: function(i) {
        return this.add(
          i == null ? this.prevObject : this.prevObject.filter(i)
        );
      }
    });
    function mn(i, s) {
      for (; (i = i[s]) && i.nodeType !== 1; )
        ;
      return i;
    }
    d.each({
      parent: function(i) {
        var s = i.parentNode;
        return s && s.nodeType !== 11 ? s : null;
      },
      parents: function(i) {
        return fe(i, "parentNode");
      },
      parentsUntil: function(i, s, l) {
        return fe(i, "parentNode", l);
      },
      next: function(i) {
        return mn(i, "nextSibling");
      },
      prev: function(i) {
        return mn(i, "previousSibling");
      },
      nextAll: function(i) {
        return fe(i, "nextSibling");
      },
      prevAll: function(i) {
        return fe(i, "previousSibling");
      },
      nextUntil: function(i, s, l) {
        return fe(i, "nextSibling", l);
      },
      prevUntil: function(i, s, l) {
        return fe(i, "previousSibling", l);
      },
      siblings: function(i) {
        return Me((i.parentNode || {}).firstChild, i);
      },
      children: function(i) {
        return Me(i.firstChild);
      },
      contents: function(i) {
        return i.contentDocument != null && // Support: IE 11+
        // <object> elements with no `data` attribute has an object
        // `contentDocument` with a `null` prototype.
        r(i.contentDocument) ? i.contentDocument : (R(i, "template") && (i = i.content || i), d.merge([], i.childNodes));
      }
    }, function(i, s) {
      d.fn[i] = function(l, h) {
        var f = d.map(this, s, l);
        return i.slice(-5) !== "Until" && (h = l), h && typeof h == "string" && (f = d.filter(h, f)), this.length > 1 && (fn[i] || d.uniqueSort(f), In.test(i) && f.reverse()), this.pushStack(f);
      };
    });
    var Nt = /[^\x20\t\r\n\f]+/g;
    function Bi(i) {
      var s = {};
      return d.each(i.match(Nt) || [], function(l, h) {
        s[h] = !0;
      }), s;
    }
    d.Callbacks = function(i) {
      i = typeof i == "string" ? Bi(i) : d.extend({}, i);
      var s, l, h, f, m = [], b = [], E = -1, _ = function() {
        for (f = f || i.once, h = s = !0; b.length; E = -1)
          for (l = b.shift(); ++E < m.length; )
            m[E].apply(l[0], l[1]) === !1 && i.stopOnFalse && (E = m.length, l = !1);
        i.memory || (l = !1), s = !1, f && (l ? m = [] : m = "");
      }, L = {
        // Add a callback or a collection of callbacks to the list
        add: function() {
          return m && (l && !s && (E = m.length - 1, b.push(l)), function W(q) {
            d.each(q, function(N, X) {
              M(X) ? (!i.unique || !L.has(X)) && m.push(X) : X && X.length && Q(X) !== "string" && W(X);
            });
          }(arguments), l && !s && _()), this;
        },
        // Remove a callback from the list
        remove: function() {
          return d.each(arguments, function(W, q) {
            for (var N; (N = d.inArray(q, m, N)) > -1; )
              m.splice(N, 1), N <= E && E--;
          }), this;
        },
        // Check if a given callback is in the list.
        // If no argument is given, return whether or not list has callbacks attached.
        has: function(W) {
          return W ? d.inArray(W, m) > -1 : m.length > 0;
        },
        // Remove all callbacks from the list
        empty: function() {
          return m && (m = []), this;
        },
        // Disable .fire and .add
        // Abort any current/pending executions
        // Clear all callbacks and values
        disable: function() {
          return f = b = [], m = l = "", this;
        },
        disabled: function() {
          return !m;
        },
        // Disable .fire
        // Also disable .add unless we have memory (since it would have no effect)
        // Abort any pending executions
        lock: function() {
          return f = b = [], !l && !s && (m = l = ""), this;
        },
        locked: function() {
          return !!f;
        },
        // Call all callbacks with the given context and arguments
        fireWith: function(W, q) {
          return f || (q = q || [], q = [W, q.slice ? q.slice() : q], b.push(q), s || _()), this;
        },
        // Call all the callbacks with the given arguments
        fire: function() {
          return L.fireWith(this, arguments), this;
        },
        // To know if the callbacks have already been called at least once
        fired: function() {
          return !!h;
        }
      };
      return L;
    };
    function ro(i) {
      return i;
    }
    function $o(i) {
      throw i;
    }
    function Gn(i, s, l, h) {
      var f;
      try {
        i && M(f = i.promise) ? f.call(i).done(s).fail(l) : i && M(f = i.then) ? f.call(i, s, l) : s.apply(void 0, [i].slice(h));
      } catch (m) {
        l.apply(void 0, [m]);
      }
    }
    d.extend({
      Deferred: function(i) {
        var s = [
          // action, add listener, callbacks,
          // ... .then handlers, argument index, [final state]
          [
            "notify",
            "progress",
            d.Callbacks("memory"),
            d.Callbacks("memory"),
            2
          ],
          [
            "resolve",
            "done",
            d.Callbacks("once memory"),
            d.Callbacks("once memory"),
            0,
            "resolved"
          ],
          [
            "reject",
            "fail",
            d.Callbacks("once memory"),
            d.Callbacks("once memory"),
            1,
            "rejected"
          ]
        ], l = "pending", h = {
          state: function() {
            return l;
          },
          always: function() {
            return f.done(arguments).fail(arguments), this;
          },
          catch: function(m) {
            return h.then(null, m);
          },
          // Keep pipe for back-compat
          pipe: function() {
            var m = arguments;
            return d.Deferred(function(b) {
              d.each(s, function(E, _) {
                var L = M(m[_[4]]) && m[_[4]];
                f[_[1]](function() {
                  var W = L && L.apply(this, arguments);
                  W && M(W.promise) ? W.promise().progress(b.notify).done(b.resolve).fail(b.reject) : b[_[0] + "With"](
                    this,
                    L ? [W] : arguments
                  );
                });
              }), m = null;
            }).promise();
          },
          then: function(m, b, E) {
            var _ = 0;
            function L(W, q, N, X) {
              return function() {
                var ge = this, Ce = arguments, xe = function() {
                  var qe, $t;
                  if (!(W < _)) {
                    if (qe = N.apply(ge, Ce), qe === q.promise())
                      throw new TypeError("Thenable self-resolution");
                    $t = qe && // Support: Promises/A+ section 2.3.4
                    // https://promisesaplus.com/#point-64
                    // Only check objects and functions for thenability
                    (typeof qe == "object" || typeof qe == "function") && qe.then, M($t) ? X ? $t.call(
                      qe,
                      L(_, q, ro, X),
                      L(_, q, $o, X)
                    ) : (_++, $t.call(
                      qe,
                      L(_, q, ro, X),
                      L(_, q, $o, X),
                      L(
                        _,
                        q,
                        ro,
                        q.notifyWith
                      )
                    )) : (N !== ro && (ge = void 0, Ce = [qe]), (X || q.resolveWith)(ge, Ce));
                  }
                }, Xe = X ? xe : function() {
                  try {
                    xe();
                  } catch (qe) {
                    d.Deferred.exceptionHook && d.Deferred.exceptionHook(
                      qe,
                      Xe.error
                    ), W + 1 >= _ && (N !== $o && (ge = void 0, Ce = [qe]), q.rejectWith(ge, Ce));
                  }
                };
                W ? Xe() : (d.Deferred.getErrorHook ? Xe.error = d.Deferred.getErrorHook() : d.Deferred.getStackHook && (Xe.error = d.Deferred.getStackHook()), e.setTimeout(Xe));
              };
            }
            return d.Deferred(function(W) {
              s[0][3].add(
                L(
                  0,
                  W,
                  M(E) ? E : ro,
                  W.notifyWith
                )
              ), s[1][3].add(
                L(
                  0,
                  W,
                  M(m) ? m : ro
                )
              ), s[2][3].add(
                L(
                  0,
                  W,
                  M(b) ? b : $o
                )
              );
            }).promise();
          },
          // Get a promise for this deferred
          // If obj is provided, the promise aspect is added to the object
          promise: function(m) {
            return m != null ? d.extend(m, h) : h;
          }
        }, f = {};
        return d.each(s, function(m, b) {
          var E = b[2], _ = b[5];
          h[b[1]] = E.add, _ && E.add(
            function() {
              l = _;
            },
            // rejected_callbacks.disable
            // fulfilled_callbacks.disable
            s[3 - m][2].disable,
            // rejected_handlers.disable
            // fulfilled_handlers.disable
            s[3 - m][3].disable,
            // progress_callbacks.lock
            s[0][2].lock,
            // progress_handlers.lock
            s[0][3].lock
          ), E.add(b[3].fire), f[b[0]] = function() {
            return f[b[0] + "With"](this === f ? void 0 : this, arguments), this;
          }, f[b[0] + "With"] = E.fireWith;
        }), h.promise(f), i && i.call(f, f), f;
      },
      // Deferred helper
      when: function(i) {
        var s = arguments.length, l = s, h = Array(l), f = a.call(arguments), m = d.Deferred(), b = function(E) {
          return function(_) {
            h[E] = this, f[E] = arguments.length > 1 ? a.call(arguments) : _, --s || m.resolveWith(h, f);
          };
        };
        if (s <= 1 && (Gn(
          i,
          m.done(b(l)).resolve,
          m.reject,
          !s
        ), m.state() === "pending" || M(f[l] && f[l].then)))
          return m.then();
        for (; l--; )
          Gn(f[l], b(l), m.reject);
        return m.promise();
      }
    });
    var Ri = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    d.Deferred.exceptionHook = function(i, s) {
      e.console && e.console.warn && i && Ri.test(i.name) && e.console.warn(
        "jQuery.Deferred exception: " + i.message,
        i.stack,
        s
      );
    }, d.readyException = function(i) {
      e.setTimeout(function() {
        throw i;
      });
    };
    var Oo = d.Deferred();
    d.fn.ready = function(i) {
      return Oo.then(i).catch(function(s) {
        d.readyException(s);
      }), this;
    }, d.extend({
      // Is the DOM ready to be used? Set to true once it occurs.
      isReady: !1,
      // A counter to track how many items to wait for before
      // the ready event fires. See trac-6781
      readyWait: 1,
      // Handle when the DOM is ready
      ready: function(i) {
        (i === !0 ? --d.readyWait : d.isReady) || (d.isReady = !0, !(i !== !0 && --d.readyWait > 0) && Oo.resolveWith(Y, [d]));
      }
    }), d.ready.then = Oo.then;
    function xt() {
      Y.removeEventListener("DOMContentLoaded", xt), e.removeEventListener("load", xt), d.ready();
    }
    Y.readyState === "complete" || Y.readyState !== "loading" && !Y.documentElement.doScroll ? e.setTimeout(d.ready) : (Y.addEventListener("DOMContentLoaded", xt), e.addEventListener("load", xt));
    var bt = function(i, s, l, h, f, m, b) {
      var E = 0, _ = i.length, L = l == null;
      if (Q(l) === "object") {
        f = !0;
        for (E in l)
          bt(i, s, E, l[E], !0, m, b);
      } else if (h !== void 0 && (f = !0, M(h) || (b = !0), L && (b ? (s.call(i, h), s = null) : (L = s, s = function(W, q, N) {
        return L.call(d(W), N);
      })), s))
        for (; E < _; E++)
          s(
            i[E],
            l,
            b ? h : h.call(i[E], E, s(i[E], l))
          );
      return f ? i : L ? s.call(i) : _ ? s(i[0], l) : m;
    }, po = /^-ms-/, ir = /-([a-z])/g;
    function Yr(i, s) {
      return s.toUpperCase();
    }
    function Pt(i) {
      return i.replace(po, "ms-").replace(ir, Yr);
    }
    var ze = function(i) {
      return i.nodeType === 1 || i.nodeType === 9 || !+i.nodeType;
    };
    function Wt() {
      this.expando = d.expando + Wt.uid++;
    }
    Wt.uid = 1, Wt.prototype = {
      cache: function(i) {
        var s = i[this.expando];
        return s || (s = {}, ze(i) && (i.nodeType ? i[this.expando] = s : Object.defineProperty(i, this.expando, {
          value: s,
          configurable: !0
        }))), s;
      },
      set: function(i, s, l) {
        var h, f = this.cache(i);
        if (typeof s == "string")
          f[Pt(s)] = l;
        else
          for (h in s)
            f[Pt(h)] = s[h];
        return f;
      },
      get: function(i, s) {
        return s === void 0 ? this.cache(i) : (
          // Always use camelCase key (gh-2257)
          i[this.expando] && i[this.expando][Pt(s)]
        );
      },
      access: function(i, s, l) {
        return s === void 0 || s && typeof s == "string" && l === void 0 ? this.get(i, s) : (this.set(i, s, l), l !== void 0 ? l : s);
      },
      remove: function(i, s) {
        var l, h = i[this.expando];
        if (h !== void 0) {
          if (s !== void 0)
            for (Array.isArray(s) ? s = s.map(Pt) : (s = Pt(s), s = s in h ? [s] : s.match(Nt) || []), l = s.length; l--; )
              delete h[s[l]];
          (s === void 0 || d.isEmptyObject(h)) && (i.nodeType ? i[this.expando] = void 0 : delete i[this.expando]);
        }
      },
      hasData: function(i) {
        var s = i[this.expando];
        return s !== void 0 && !d.isEmptyObject(s);
      }
    };
    var ce = new Wt(), ot = new Wt(), qt = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, Xt = /[A-Z]/g;
    function Fr(i) {
      return i === "true" ? !0 : i === "false" ? !1 : i === "null" ? null : i === +i + "" ? +i : qt.test(i) ? JSON.parse(i) : i;
    }
    function Nn(i, s, l) {
      var h;
      if (l === void 0 && i.nodeType === 1)
        if (h = "data-" + s.replace(Xt, "-$&").toLowerCase(), l = i.getAttribute(h), typeof l == "string") {
          try {
            l = Fr(l);
          } catch {
          }
          ot.set(i, s, l);
        } else
          l = void 0;
      return l;
    }
    d.extend({
      hasData: function(i) {
        return ot.hasData(i) || ce.hasData(i);
      },
      data: function(i, s, l) {
        return ot.access(i, s, l);
      },
      removeData: function(i, s) {
        ot.remove(i, s);
      },
      // TODO: Now that all calls to _data and _removeData have been replaced
      // with direct calls to dataPriv methods, these can be deprecated.
      _data: function(i, s, l) {
        return ce.access(i, s, l);
      },
      _removeData: function(i, s) {
        ce.remove(i, s);
      }
    }), d.fn.extend({
      data: function(i, s) {
        var l, h, f, m = this[0], b = m && m.attributes;
        if (i === void 0) {
          if (this.length && (f = ot.get(m), m.nodeType === 1 && !ce.get(m, "hasDataAttrs"))) {
            for (l = b.length; l--; )
              b[l] && (h = b[l].name, h.indexOf("data-") === 0 && (h = Pt(h.slice(5)), Nn(m, h, f[h])));
            ce.set(m, "hasDataAttrs", !0);
          }
          return f;
        }
        return typeof i == "object" ? this.each(function() {
          ot.set(this, i);
        }) : bt(this, function(E) {
          var _;
          if (m && E === void 0)
            return _ = ot.get(m, i), _ !== void 0 || (_ = Nn(m, i), _ !== void 0) ? _ : void 0;
          this.each(function() {
            ot.set(this, i, E);
          });
        }, null, s, arguments.length > 1, null, !0);
      },
      removeData: function(i) {
        return this.each(function() {
          ot.remove(this, i);
        });
      }
    }), d.extend({
      queue: function(i, s, l) {
        var h;
        if (i)
          return s = (s || "fx") + "queue", h = ce.get(i, s), l && (!h || Array.isArray(l) ? h = ce.access(i, s, d.makeArray(l)) : h.push(l)), h || [];
      },
      dequeue: function(i, s) {
        s = s || "fx";
        var l = d.queue(i, s), h = l.length, f = l.shift(), m = d._queueHooks(i, s), b = function() {
          d.dequeue(i, s);
        };
        f === "inprogress" && (f = l.shift(), h--), f && (s === "fx" && l.unshift("inprogress"), delete m.stop, f.call(i, b, m)), !h && m && m.empty.fire();
      },
      // Not public - generate a queueHooks object, or return the current one
      _queueHooks: function(i, s) {
        var l = s + "queueHooks";
        return ce.get(i, l) || ce.access(i, l, {
          empty: d.Callbacks("once memory").add(function() {
            ce.remove(i, [s + "queue", l]);
          })
        });
      }
    }), d.fn.extend({
      queue: function(i, s) {
        var l = 2;
        return typeof i != "string" && (s = i, i = "fx", l--), arguments.length < l ? d.queue(this[0], i) : s === void 0 ? this : this.each(function() {
          var h = d.queue(this, i, s);
          d._queueHooks(this, i), i === "fx" && h[0] !== "inprogress" && d.dequeue(this, i);
        });
      },
      dequeue: function(i) {
        return this.each(function() {
          d.dequeue(this, i);
        });
      },
      clearQueue: function(i) {
        return this.queue(i || "fx", []);
      },
      // Get a promise resolved when queues of a certain type
      // are emptied (fx is the type by default)
      promise: function(i, s) {
        var l, h = 1, f = d.Deferred(), m = this, b = this.length, E = function() {
          --h || f.resolveWith(m, [m]);
        };
        for (typeof i != "string" && (s = i, i = void 0), i = i || "fx"; b--; )
          l = ce.get(m[b], i + "queueHooks"), l && l.empty && (h++, l.empty.add(E));
        return E(), f.promise(s);
      }
    });
    var Jt = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, Lo = new RegExp("^(?:([+-])=|)(" + Jt + ")([a-z%]*)$", "i"), Ut = ["Top", "Right", "Bottom", "Left"], Qt = Y.documentElement, fo = function(i) {
      return d.contains(i.ownerDocument, i);
    }, We = { composed: !0 };
    Qt.getRootNode && (fo = function(i) {
      return d.contains(i.ownerDocument, i) || i.getRootNode(We) === i.ownerDocument;
    });
    var gn = function(i, s) {
      return i = s || i, i.style.display === "none" || i.style.display === "" && // Otherwise, check computed style
      // Support: Firefox <=43 - 45
      // Disconnected elements can have computed display: none, so first confirm that elem is
      // in the document.
      fo(i) && d.css(i, "display") === "none";
    };
    function rr(i, s, l, h) {
      var f, m, b = 20, E = h ? function() {
        return h.cur();
      } : function() {
        return d.css(i, s, "");
      }, _ = E(), L = l && l[3] || (d.cssNumber[s] ? "" : "px"), W = i.nodeType && (d.cssNumber[s] || L !== "px" && +_) && Lo.exec(d.css(i, s));
      if (W && W[3] !== L) {
        for (_ = _ / 2, L = L || W[3], W = +_ || 1; b--; )
          d.style(i, s, W + L), (1 - m) * (1 - (m = E() / _ || 0.5)) <= 0 && (b = 0), W = W / m;
        W = W * 2, d.style(i, s, W + L), l = l || [];
      }
      return l && (W = +W || +_ || 0, f = l[1] ? W + (l[1] + 1) * l[2] : +l[2], h && (h.unit = L, h.start = W, h.end = f)), f;
    }
    var Yo = {};
    function Os(i) {
      var s, l = i.ownerDocument, h = i.nodeName, f = Yo[h];
      return f || (s = l.body.appendChild(l.createElement(h)), f = d.css(s, "display"), s.parentNode.removeChild(s), f === "none" && (f = "block"), Yo[h] = f, f);
    }
    function xo(i, s) {
      for (var l, h, f = [], m = 0, b = i.length; m < b; m++)
        h = i[m], h.style && (l = h.style.display, s ? (l === "none" && (f[m] = ce.get(h, "display") || null, f[m] || (h.style.display = "")), h.style.display === "" && gn(h) && (f[m] = Os(h))) : l !== "none" && (f[m] = "none", ce.set(h, "display", l)));
      for (m = 0; m < b; m++)
        f[m] != null && (i[m].style.display = f[m]);
      return i;
    }
    d.fn.extend({
      show: function() {
        return xo(this, !0);
      },
      hide: function() {
        return xo(this);
      },
      toggle: function(i) {
        return typeof i == "boolean" ? i ? this.show() : this.hide() : this.each(function() {
          gn(this) ? d(this).show() : d(this).hide();
        });
      }
    });
    var Co = /^(?:checkbox|radio)$/i, sr = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i, ar = /^$|^module$|\/(?:java|ecma)script/i;
    (function() {
      var i = Y.createDocumentFragment(), s = i.appendChild(Y.createElement("div")), l = Y.createElement("input");
      l.setAttribute("type", "radio"), l.setAttribute("checked", "checked"), l.setAttribute("name", "t"), s.appendChild(l), k.checkClone = s.cloneNode(!0).cloneNode(!0).lastChild.checked, s.innerHTML = "<textarea>x</textarea>", k.noCloneChecked = !!s.cloneNode(!0).lastChild.defaultValue, s.innerHTML = "<option></option>", k.option = !!s.lastChild;
    })();
    var ut = {
      // XHTML parsers do not magically insert elements in the
      // same way that tag soup parsers do. So we cannot shorten
      // this by omitting <tbody> or other required elements.
      thead: [1, "<table>", "</table>"],
      col: [2, "<table><colgroup>", "</colgroup></table>"],
      tr: [2, "<table><tbody>", "</tbody></table>"],
      td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
      _default: [0, "", ""]
    };
    ut.tbody = ut.tfoot = ut.colgroup = ut.caption = ut.thead, ut.th = ut.td, k.option || (ut.optgroup = ut.option = [1, "<select multiple='multiple'>", "</select>"]);
    function pt(i, s) {
      var l;
      return typeof i.getElementsByTagName < "u" ? l = i.getElementsByTagName(s || "*") : typeof i.querySelectorAll < "u" ? l = i.querySelectorAll(s || "*") : l = [], s === void 0 || s && R(i, s) ? d.merge([i], l) : l;
    }
    function bn(i, s) {
      for (var l = 0, h = i.length; l < h; l++)
        ce.set(
          i[l],
          "globalEval",
          !s || ce.get(s[l], "globalEval")
        );
    }
    var Ls = /<|&#?\w+;/;
    function Ue(i, s, l, h, f) {
      for (var m, b, E, _, L, W, q = s.createDocumentFragment(), N = [], X = 0, ge = i.length; X < ge; X++)
        if (m = i[X], m || m === 0)
          if (Q(m) === "object")
            d.merge(N, m.nodeType ? [m] : m);
          else if (!Ls.test(m))
            N.push(s.createTextNode(m));
          else {
            for (b = b || q.appendChild(s.createElement("div")), E = (sr.exec(m) || ["", ""])[1].toLowerCase(), _ = ut[E] || ut._default, b.innerHTML = _[1] + d.htmlPrefilter(m) + _[2], W = _[0]; W--; )
              b = b.lastChild;
            d.merge(N, b.childNodes), b = q.firstChild, b.textContent = "";
          }
      for (q.textContent = "", X = 0; m = N[X++]; ) {
        if (h && d.inArray(m, h) > -1) {
          f && f.push(m);
          continue;
        }
        if (L = fo(m), b = pt(q.appendChild(m), "script"), L && bn(b), l)
          for (W = 0; m = b[W++]; )
            ar.test(m.type || "") && l.push(m);
      }
      return q;
    }
    var lr = /^([^.]*)(?:\.(.+)|)/;
    function So() {
      return !0;
    }
    function To() {
      return !1;
    }
    function Zn(i, s, l, h, f, m) {
      var b, E;
      if (typeof s == "object") {
        typeof l != "string" && (h = h || l, l = void 0);
        for (E in s)
          Zn(i, E, l, h, s[E], m);
        return i;
      }
      if (h == null && f == null ? (f = l, h = l = void 0) : f == null && (typeof l == "string" ? (f = h, h = void 0) : (f = h, h = l, l = void 0)), f === !1)
        f = To;
      else if (!f)
        return i;
      return m === 1 && (b = f, f = function(_) {
        return d().off(_), b.apply(this, arguments);
      }, f.guid = b.guid || (b.guid = d.guid++)), i.each(function() {
        d.event.add(this, s, f, h, l);
      });
    }
    d.event = {
      global: {},
      add: function(i, s, l, h, f) {
        var m, b, E, _, L, W, q, N, X, ge, Ce, xe = ce.get(i);
        if (ze(i))
          for (l.handler && (m = l, l = m.handler, f = m.selector), f && d.find.matchesSelector(Qt, f), l.guid || (l.guid = d.guid++), (_ = xe.events) || (_ = xe.events = /* @__PURE__ */ Object.create(null)), (b = xe.handle) || (b = xe.handle = function(Xe) {
            return typeof d < "u" && d.event.triggered !== Xe.type ? d.event.dispatch.apply(i, arguments) : void 0;
          }), s = (s || "").match(Nt) || [""], L = s.length; L--; )
            E = lr.exec(s[L]) || [], X = Ce = E[1], ge = (E[2] || "").split(".").sort(), X && (q = d.event.special[X] || {}, X = (f ? q.delegateType : q.bindType) || X, q = d.event.special[X] || {}, W = d.extend({
              type: X,
              origType: Ce,
              data: h,
              handler: l,
              guid: l.guid,
              selector: f,
              needsContext: f && d.expr.match.needsContext.test(f),
              namespace: ge.join(".")
            }, m), (N = _[X]) || (N = _[X] = [], N.delegateCount = 0, (!q.setup || q.setup.call(i, h, ge, b) === !1) && i.addEventListener && i.addEventListener(X, b)), q.add && (q.add.call(i, W), W.handler.guid || (W.handler.guid = l.guid)), f ? N.splice(N.delegateCount++, 0, W) : N.push(W), d.event.global[X] = !0);
      },
      // Detach an event or set of events from an element
      remove: function(i, s, l, h, f) {
        var m, b, E, _, L, W, q, N, X, ge, Ce, xe = ce.hasData(i) && ce.get(i);
        if (!(!xe || !(_ = xe.events))) {
          for (s = (s || "").match(Nt) || [""], L = s.length; L--; ) {
            if (E = lr.exec(s[L]) || [], X = Ce = E[1], ge = (E[2] || "").split(".").sort(), !X) {
              for (X in _)
                d.event.remove(i, X + s[L], l, h, !0);
              continue;
            }
            for (q = d.event.special[X] || {}, X = (h ? q.delegateType : q.bindType) || X, N = _[X] || [], E = E[2] && new RegExp("(^|\\.)" + ge.join("\\.(?:.*\\.|)") + "(\\.|$)"), b = m = N.length; m--; )
              W = N[m], (f || Ce === W.origType) && (!l || l.guid === W.guid) && (!E || E.test(W.namespace)) && (!h || h === W.selector || h === "**" && W.selector) && (N.splice(m, 1), W.selector && N.delegateCount--, q.remove && q.remove.call(i, W));
            b && !N.length && ((!q.teardown || q.teardown.call(i, ge, xe.handle) === !1) && d.removeEvent(i, X, xe.handle), delete _[X]);
          }
          d.isEmptyObject(_) && ce.remove(i, "handle events");
        }
      },
      dispatch: function(i) {
        var s, l, h, f, m, b, E = new Array(arguments.length), _ = d.event.fix(i), L = (ce.get(this, "events") || /* @__PURE__ */ Object.create(null))[_.type] || [], W = d.event.special[_.type] || {};
        for (E[0] = _, s = 1; s < arguments.length; s++)
          E[s] = arguments[s];
        if (_.delegateTarget = this, !(W.preDispatch && W.preDispatch.call(this, _) === !1)) {
          for (b = d.event.handlers.call(this, _, L), s = 0; (f = b[s++]) && !_.isPropagationStopped(); )
            for (_.currentTarget = f.elem, l = 0; (m = f.handlers[l++]) && !_.isImmediatePropagationStopped(); )
              (!_.rnamespace || m.namespace === !1 || _.rnamespace.test(m.namespace)) && (_.handleObj = m, _.data = m.data, h = ((d.event.special[m.origType] || {}).handle || m.handler).apply(f.elem, E), h !== void 0 && (_.result = h) === !1 && (_.preventDefault(), _.stopPropagation()));
          return W.postDispatch && W.postDispatch.call(this, _), _.result;
        }
      },
      handlers: function(i, s) {
        var l, h, f, m, b, E = [], _ = s.delegateCount, L = i.target;
        if (_ && // Support: IE <=9
        // Black-hole SVG <use> instance trees (trac-13180)
        L.nodeType && // Support: Firefox <=42
        // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
        // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
        // Support: IE 11 only
        // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
        !(i.type === "click" && i.button >= 1)) {
          for (; L !== this; L = L.parentNode || this)
            if (L.nodeType === 1 && !(i.type === "click" && L.disabled === !0)) {
              for (m = [], b = {}, l = 0; l < _; l++)
                h = s[l], f = h.selector + " ", b[f] === void 0 && (b[f] = h.needsContext ? d(f, this).index(L) > -1 : d.find(f, this, null, [L]).length), b[f] && m.push(h);
              m.length && E.push({ elem: L, handlers: m });
            }
        }
        return L = this, _ < s.length && E.push({ elem: L, handlers: s.slice(_) }), E;
      },
      addProp: function(i, s) {
        Object.defineProperty(d.Event.prototype, i, {
          enumerable: !0,
          configurable: !0,
          get: M(s) ? function() {
            if (this.originalEvent)
              return s(this.originalEvent);
          } : function() {
            if (this.originalEvent)
              return this.originalEvent[i];
          },
          set: function(l) {
            Object.defineProperty(this, i, {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: l
            });
          }
        });
      },
      fix: function(i) {
        return i[d.expando] ? i : new d.Event(i);
      },
      special: {
        load: {
          // Prevent triggered image.load events from bubbling to window.load
          noBubble: !0
        },
        click: {
          // Utilize native event to ensure correct state for checkable inputs
          setup: function(i) {
            var s = this || i;
            return Co.test(s.type) && s.click && R(s, "input") && Fo(s, "click", !0), !1;
          },
          trigger: function(i) {
            var s = this || i;
            return Co.test(s.type) && s.click && R(s, "input") && Fo(s, "click"), !0;
          },
          // For cross-browser consistency, suppress native .click() on links
          // Also prevent it if we're currently inside a leveraged native-event stack
          _default: function(i) {
            var s = i.target;
            return Co.test(s.type) && s.click && R(s, "input") && ce.get(s, "click") || R(s, "a");
          }
        },
        beforeunload: {
          postDispatch: function(i) {
            i.result !== void 0 && i.originalEvent && (i.originalEvent.returnValue = i.result);
          }
        }
      }
    };
    function Fo(i, s, l) {
      if (!l) {
        ce.get(i, s) === void 0 && d.event.add(i, s, So);
        return;
      }
      ce.set(i, s, !1), d.event.add(i, s, {
        namespace: !1,
        handler: function(h) {
          var f, m = ce.get(this, s);
          if (h.isTrigger & 1 && this[s]) {
            if (m)
              (d.event.special[s] || {}).delegateType && h.stopPropagation();
            else if (m = a.call(arguments), ce.set(this, s, m), this[s](), f = ce.get(this, s), ce.set(this, s, !1), m !== f)
              return h.stopImmediatePropagation(), h.preventDefault(), f;
          } else
            m && (ce.set(this, s, d.event.trigger(
              m[0],
              m.slice(1),
              this
            )), h.stopPropagation(), h.isImmediatePropagationStopped = So);
        }
      });
    }
    d.removeEvent = function(i, s, l) {
      i.removeEventListener && i.removeEventListener(s, l);
    }, d.Event = function(i, s) {
      if (!(this instanceof d.Event))
        return new d.Event(i, s);
      i && i.type ? (this.originalEvent = i, this.type = i.type, this.isDefaultPrevented = i.defaultPrevented || i.defaultPrevented === void 0 && // Support: Android <=2.3 only
      i.returnValue === !1 ? So : To, this.target = i.target && i.target.nodeType === 3 ? i.target.parentNode : i.target, this.currentTarget = i.currentTarget, this.relatedTarget = i.relatedTarget) : this.type = i, s && d.extend(this, s), this.timeStamp = i && i.timeStamp || Date.now(), this[d.expando] = !0;
    }, d.Event.prototype = {
      constructor: d.Event,
      isDefaultPrevented: To,
      isPropagationStopped: To,
      isImmediatePropagationStopped: To,
      isSimulated: !1,
      preventDefault: function() {
        var i = this.originalEvent;
        this.isDefaultPrevented = So, i && !this.isSimulated && i.preventDefault();
      },
      stopPropagation: function() {
        var i = this.originalEvent;
        this.isPropagationStopped = So, i && !this.isSimulated && i.stopPropagation();
      },
      stopImmediatePropagation: function() {
        var i = this.originalEvent;
        this.isImmediatePropagationStopped = So, i && !this.isSimulated && i.stopImmediatePropagation(), this.stopPropagation();
      }
    }, d.each({
      altKey: !0,
      bubbles: !0,
      cancelable: !0,
      changedTouches: !0,
      ctrlKey: !0,
      detail: !0,
      eventPhase: !0,
      metaKey: !0,
      pageX: !0,
      pageY: !0,
      shiftKey: !0,
      view: !0,
      char: !0,
      code: !0,
      charCode: !0,
      key: !0,
      keyCode: !0,
      button: !0,
      buttons: !0,
      clientX: !0,
      clientY: !0,
      offsetX: !0,
      offsetY: !0,
      pointerId: !0,
      pointerType: !0,
      screenX: !0,
      screenY: !0,
      targetTouches: !0,
      toElement: !0,
      touches: !0,
      which: !0
    }, d.event.addProp), d.each({ focus: "focusin", blur: "focusout" }, function(i, s) {
      function l(h) {
        if (Y.documentMode) {
          var f = ce.get(this, "handle"), m = d.event.fix(h);
          m.type = h.type === "focusin" ? "focus" : "blur", m.isSimulated = !0, f(h), m.target === m.currentTarget && f(m);
        } else
          d.event.simulate(
            s,
            h.target,
            d.event.fix(h)
          );
      }
      d.event.special[i] = {
        // Utilize native event if possible so blur/focus sequence is correct
        setup: function() {
          var h;
          if (Fo(this, i, !0), Y.documentMode)
            h = ce.get(this, s), h || this.addEventListener(s, l), ce.set(this, s, (h || 0) + 1);
          else
            return !1;
        },
        trigger: function() {
          return Fo(this, i), !0;
        },
        teardown: function() {
          var h;
          if (Y.documentMode)
            h = ce.get(this, s) - 1, h ? ce.set(this, s, h) : (this.removeEventListener(s, l), ce.remove(this, s));
          else
            return !1;
        },
        // Suppress native focus or blur if we're currently inside
        // a leveraged native-event stack
        _default: function(h) {
          return ce.get(h.target, i);
        },
        delegateType: s
      }, d.event.special[s] = {
        setup: function() {
          var h = this.ownerDocument || this.document || this, f = Y.documentMode ? this : h, m = ce.get(f, s);
          m || (Y.documentMode ? this.addEventListener(s, l) : h.addEventListener(i, l, !0)), ce.set(f, s, (m || 0) + 1);
        },
        teardown: function() {
          var h = this.ownerDocument || this.document || this, f = Y.documentMode ? this : h, m = ce.get(f, s) - 1;
          m ? ce.set(f, s, m) : (Y.documentMode ? this.removeEventListener(s, l) : h.removeEventListener(i, l, !0), ce.remove(f, s));
        }
      };
    }), d.each({
      mouseenter: "mouseover",
      mouseleave: "mouseout",
      pointerenter: "pointerover",
      pointerleave: "pointerout"
    }, function(i, s) {
      d.event.special[i] = {
        delegateType: s,
        bindType: s,
        handle: function(l) {
          var h, f = this, m = l.relatedTarget, b = l.handleObj;
          return (!m || m !== f && !d.contains(f, m)) && (l.type = b.origType, h = b.handler.apply(this, arguments), l.type = s), h;
        }
      };
    }), d.fn.extend({
      on: function(i, s, l, h) {
        return Zn(this, i, s, l, h);
      },
      one: function(i, s, l, h) {
        return Zn(this, i, s, l, h, 1);
      },
      off: function(i, s, l) {
        var h, f;
        if (i && i.preventDefault && i.handleObj)
          return h = i.handleObj, d(i.delegateTarget).off(
            h.namespace ? h.origType + "." + h.namespace : h.origType,
            h.selector,
            h.handler
          ), this;
        if (typeof i == "object") {
          for (f in i)
            this.off(f, s, i[f]);
          return this;
        }
        return (s === !1 || typeof s == "function") && (l = s, s = void 0), l === !1 && (l = To), this.each(function() {
          d.event.remove(this, i, l, s);
        });
      }
    });
    var Kn = /<script|<style|<link/i, zr = /checked\s*(?:[^=]|=\s*.checked.)/i, no = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
    function Ii(i, s) {
      return R(i, "table") && R(s.nodeType !== 11 ? s : s.firstChild, "tr") && d(i).children("tbody")[0] || i;
    }
    function As(i) {
      return i.type = (i.getAttribute("type") !== null) + "/" + i.type, i;
    }
    function Wr(i) {
      return (i.type || "").slice(0, 5) === "true/" ? i.type = i.type.slice(5) : i.removeAttribute("type"), i;
    }
    function cr(i, s) {
      var l, h, f, m, b, E, _;
      if (s.nodeType === 1) {
        if (ce.hasData(i) && (m = ce.get(i), _ = m.events, _)) {
          ce.remove(s, "handle events");
          for (f in _)
            for (l = 0, h = _[f].length; l < h; l++)
              d.event.add(s, f, _[f][l]);
        }
        ot.hasData(i) && (b = ot.access(i), E = d.extend({}, b), ot.set(s, E));
      }
    }
    function Ur(i, s) {
      var l = s.nodeName.toLowerCase();
      l === "input" && Co.test(i.type) ? s.checked = i.checked : (l === "input" || l === "textarea") && (s.defaultValue = i.defaultValue);
    }
    function _o(i, s, l, h) {
      s = c(s);
      var f, m, b, E, _, L, W = 0, q = i.length, N = q - 1, X = s[0], ge = M(X);
      if (ge || q > 1 && typeof X == "string" && !k.checkClone && zr.test(X))
        return i.each(function(Ce) {
          var xe = i.eq(Ce);
          ge && (s[0] = X.call(this, Ce, xe.html())), _o(xe, s, l, h);
        });
      if (q && (f = Ue(s, i[0].ownerDocument, !1, i, h), m = f.firstChild, f.childNodes.length === 1 && (f = m), m || h)) {
        for (b = d.map(pt(f, "script"), As), E = b.length; W < q; W++)
          _ = f, W !== N && (_ = d.clone(_, !0, !0), E && d.merge(b, pt(_, "script"))), l.call(i[W], _, W);
        if (E)
          for (L = b[b.length - 1].ownerDocument, d.map(b, Wr), W = 0; W < E; W++)
            _ = b[W], ar.test(_.type || "") && !ce.access(_, "globalEval") && d.contains(L, _) && (_.src && (_.type || "").toLowerCase() !== "module" ? d._evalUrl && !_.noModule && d._evalUrl(_.src, {
              nonce: _.nonce || _.getAttribute("nonce")
            }, L) : F(_.textContent.replace(no, ""), _, L));
      }
      return i;
    }
    function Ni(i, s, l) {
      for (var h, f = s ? d.filter(s, i) : i, m = 0; (h = f[m]) != null; m++)
        !l && h.nodeType === 1 && d.cleanData(pt(h)), h.parentNode && (l && fo(h) && bn(pt(h, "script")), h.parentNode.removeChild(h));
      return i;
    }
    d.extend({
      htmlPrefilter: function(i) {
        return i;
      },
      clone: function(i, s, l) {
        var h, f, m, b, E = i.cloneNode(!0), _ = fo(i);
        if (!k.noCloneChecked && (i.nodeType === 1 || i.nodeType === 11) && !d.isXMLDoc(i))
          for (b = pt(E), m = pt(i), h = 0, f = m.length; h < f; h++)
            Ur(m[h], b[h]);
        if (s)
          if (l)
            for (m = m || pt(i), b = b || pt(E), h = 0, f = m.length; h < f; h++)
              cr(m[h], b[h]);
          else
            cr(i, E);
        return b = pt(E, "script"), b.length > 0 && bn(b, !_ && pt(i, "script")), E;
      },
      cleanData: function(i) {
        for (var s, l, h, f = d.event.special, m = 0; (l = i[m]) !== void 0; m++)
          if (ze(l)) {
            if (s = l[ce.expando]) {
              if (s.events)
                for (h in s.events)
                  f[h] ? d.event.remove(l, h) : d.removeEvent(l, h, s.handle);
              l[ce.expando] = void 0;
            }
            l[ot.expando] && (l[ot.expando] = void 0);
          }
      }
    }), d.fn.extend({
      detach: function(i) {
        return Ni(this, i, !0);
      },
      remove: function(i) {
        return Ni(this, i);
      },
      text: function(i) {
        return bt(this, function(s) {
          return s === void 0 ? d.text(this) : this.empty().each(function() {
            (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) && (this.textContent = s);
          });
        }, null, i, arguments.length);
      },
      append: function() {
        return _o(this, arguments, function(i) {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            var s = Ii(this, i);
            s.appendChild(i);
          }
        });
      },
      prepend: function() {
        return _o(this, arguments, function(i) {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            var s = Ii(this, i);
            s.insertBefore(i, s.firstChild);
          }
        });
      },
      before: function() {
        return _o(this, arguments, function(i) {
          this.parentNode && this.parentNode.insertBefore(i, this);
        });
      },
      after: function() {
        return _o(this, arguments, function(i) {
          this.parentNode && this.parentNode.insertBefore(i, this.nextSibling);
        });
      },
      empty: function() {
        for (var i, s = 0; (i = this[s]) != null; s++)
          i.nodeType === 1 && (d.cleanData(pt(i, !1)), i.textContent = "");
        return this;
      },
      clone: function(i, s) {
        return i = i ?? !1, s = s ?? i, this.map(function() {
          return d.clone(this, i, s);
        });
      },
      html: function(i) {
        return bt(this, function(s) {
          var l = this[0] || {}, h = 0, f = this.length;
          if (s === void 0 && l.nodeType === 1)
            return l.innerHTML;
          if (typeof s == "string" && !Kn.test(s) && !ut[(sr.exec(s) || ["", ""])[1].toLowerCase()]) {
            s = d.htmlPrefilter(s);
            try {
              for (; h < f; h++)
                l = this[h] || {}, l.nodeType === 1 && (d.cleanData(pt(l, !1)), l.innerHTML = s);
              l = 0;
            } catch {
            }
          }
          l && this.empty().append(s);
        }, null, i, arguments.length);
      },
      replaceWith: function() {
        var i = [];
        return _o(this, arguments, function(s) {
          var l = this.parentNode;
          d.inArray(this, i) < 0 && (d.cleanData(pt(this)), l && l.replaceChild(s, this));
        }, i);
      }
    }), d.each({
      appendTo: "append",
      prependTo: "prepend",
      insertBefore: "before",
      insertAfter: "after",
      replaceAll: "replaceWith"
    }, function(i, s) {
      d.fn[i] = function(l) {
        for (var h, f = [], m = d(l), b = m.length - 1, E = 0; E <= b; E++)
          h = E === b ? this : this.clone(!0), d(m[E])[s](h), u.apply(f, h.get());
        return this.pushStack(f);
      };
    });
    var Xn = new RegExp("^(" + Jt + ")(?!px)[a-z%]+$", "i"), Jn = /^--/, nn = function(i) {
      var s = i.ownerDocument.defaultView;
      return (!s || !s.opener) && (s = e), s.getComputedStyle(i);
    }, rn = function(i, s, l) {
      var h, f, m = {};
      for (f in s)
        m[f] = i.style[f], i.style[f] = s[f];
      h = l.call(i);
      for (f in s)
        i.style[f] = m[f];
      return h;
    }, qr = new RegExp(Ut.join("|"), "i");
    (function() {
      function i() {
        if (L) {
          _.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", L.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", Qt.appendChild(_).appendChild(L);
          var W = e.getComputedStyle(L);
          l = W.top !== "1%", E = s(W.marginLeft) === 12, L.style.right = "60%", m = s(W.right) === 36, h = s(W.width) === 36, L.style.position = "absolute", f = s(L.offsetWidth / 3) === 12, Qt.removeChild(_), L = null;
        }
      }
      function s(W) {
        return Math.round(parseFloat(W));
      }
      var l, h, f, m, b, E, _ = Y.createElement("div"), L = Y.createElement("div");
      L.style && (L.style.backgroundClip = "content-box", L.cloneNode(!0).style.backgroundClip = "", k.clearCloneStyle = L.style.backgroundClip === "content-box", d.extend(k, {
        boxSizingReliable: function() {
          return i(), h;
        },
        pixelBoxStyles: function() {
          return i(), m;
        },
        pixelPosition: function() {
          return i(), l;
        },
        reliableMarginLeft: function() {
          return i(), E;
        },
        scrollboxSize: function() {
          return i(), f;
        },
        // Support: IE 9 - 11+, Edge 15 - 18+
        // IE/Edge misreport `getComputedStyle` of table rows with width/height
        // set in CSS while `offset*` properties report correct values.
        // Behavior in IE 9 is more subtle than in newer versions & it passes
        // some versions of this test; make sure not to make it pass there!
        //
        // Support: Firefox 70+
        // Only Firefox includes border widths
        // in computed dimensions. (gh-4529)
        reliableTrDimensions: function() {
          var W, q, N, X;
          return b == null && (W = Y.createElement("table"), q = Y.createElement("tr"), N = Y.createElement("div"), W.style.cssText = "position:absolute;left:-11111px;border-collapse:separate", q.style.cssText = "box-sizing:content-box;border:1px solid", q.style.height = "1px", N.style.height = "9px", N.style.display = "block", Qt.appendChild(W).appendChild(q).appendChild(N), X = e.getComputedStyle(q), b = parseInt(X.height, 10) + parseInt(X.borderTopWidth, 10) + parseInt(X.borderBottomWidth, 10) === q.offsetHeight, Qt.removeChild(W)), b;
        }
      }));
    })();
    function Ao(i, s, l) {
      var h, f, m, b, E = Jn.test(s), _ = i.style;
      return l = l || nn(i), l && (b = l.getPropertyValue(s) || l[s], E && b && (b = b.replace(se, "$1") || void 0), b === "" && !fo(i) && (b = d.style(i, s)), !k.pixelBoxStyles() && Xn.test(b) && qr.test(s) && (h = _.width, f = _.minWidth, m = _.maxWidth, _.minWidth = _.maxWidth = _.width = b, b = l.width, _.width = h, _.minWidth = f, _.maxWidth = m)), b !== void 0 ? (
        // Support: IE <=9 - 11 only
        // IE returns zIndex value as an integer.
        b + ""
      ) : b;
    }
    function dr(i, s) {
      return {
        get: function() {
          if (i()) {
            delete this.get;
            return;
          }
          return (this.get = s).apply(this, arguments);
        }
      };
    }
    var hr = ["Webkit", "Moz", "ms"], ur = Y.createElement("div").style, pr = {};
    function Bs(i) {
      for (var s = i[0].toUpperCase() + i.slice(1), l = hr.length; l--; )
        if (i = hr[l] + s, i in ur)
          return i;
    }
    function Qn(i) {
      var s = d.cssProps[i] || pr[i];
      return s || (i in ur ? i : pr[i] = Bs(i) || i);
    }
    var Rs = /^(none|table(?!-c[ea]).+)/, vn = { position: "absolute", visibility: "hidden", display: "block" }, Pi = {
      letterSpacing: "0",
      fontWeight: "400"
    };
    function fr(i, s, l) {
      var h = Lo.exec(s);
      return h ? (
        // Guard against undefined "subtract", e.g., when used as in cssHooks
        Math.max(0, h[2] - (l || 0)) + (h[3] || "px")
      ) : s;
    }
    function ei(i, s, l, h, f, m) {
      var b = s === "width" ? 1 : 0, E = 0, _ = 0, L = 0;
      if (l === (h ? "border" : "content"))
        return 0;
      for (; b < 4; b += 2)
        l === "margin" && (L += d.css(i, l + Ut[b], !0, f)), h ? (l === "content" && (_ -= d.css(i, "padding" + Ut[b], !0, f)), l !== "margin" && (_ -= d.css(i, "border" + Ut[b] + "Width", !0, f))) : (_ += d.css(i, "padding" + Ut[b], !0, f), l !== "padding" ? _ += d.css(i, "border" + Ut[b] + "Width", !0, f) : E += d.css(i, "border" + Ut[b] + "Width", !0, f));
      return !h && m >= 0 && (_ += Math.max(0, Math.ceil(
        i["offset" + s[0].toUpperCase() + s.slice(1)] - m - _ - E - 0.5
        // If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
        // Use an explicit zero to avoid NaN (gh-3964)
      )) || 0), _ + L;
    }
    function mr(i, s, l) {
      var h = nn(i), f = !k.boxSizingReliable() || l, m = f && d.css(i, "boxSizing", !1, h) === "border-box", b = m, E = Ao(i, s, h), _ = "offset" + s[0].toUpperCase() + s.slice(1);
      if (Xn.test(E)) {
        if (!l)
          return E;
        E = "auto";
      }
      return (!k.boxSizingReliable() && m || // Support: IE 10 - 11+, Edge 15 - 18+
      // IE/Edge misreport `getComputedStyle` of table rows with width/height
      // set in CSS while `offset*` properties report correct values.
      // Interestingly, in some cases IE 9 doesn't suffer from this issue.
      !k.reliableTrDimensions() && R(i, "tr") || // Fall back to offsetWidth/offsetHeight when value is "auto"
      // This happens for inline elements with no explicit setting (gh-3571)
      E === "auto" || // Support: Android <=4.1 - 4.3 only
      // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
      !parseFloat(E) && d.css(i, "display", !1, h) === "inline") && // Make sure the element is visible & connected
      i.getClientRects().length && (m = d.css(i, "boxSizing", !1, h) === "border-box", b = _ in i, b && (E = i[_])), E = parseFloat(E) || 0, E + ei(
        i,
        s,
        l || (m ? "border" : "content"),
        b,
        h,
        // Provide the current computed size to request scroll gutter calculation (gh-3589)
        E
      ) + "px";
    }
    d.extend({
      // Add in style property hooks for overriding the default
      // behavior of getting and setting a style property
      cssHooks: {
        opacity: {
          get: function(i, s) {
            if (s) {
              var l = Ao(i, "opacity");
              return l === "" ? "1" : l;
            }
          }
        }
      },
      // Don't automatically add "px" to these possibly-unitless properties
      cssNumber: {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageSlice: !0,
        columnCount: !0,
        flexGrow: !0,
        flexShrink: !0,
        fontWeight: !0,
        gridArea: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnStart: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowStart: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        scale: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        // SVG-related
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0
      },
      // Add in properties whose names you wish to fix before
      // setting or getting the value
      cssProps: {},
      // Get and set the style property on a DOM Node
      style: function(i, s, l, h) {
        if (!(!i || i.nodeType === 3 || i.nodeType === 8 || !i.style)) {
          var f, m, b, E = Pt(s), _ = Jn.test(s), L = i.style;
          if (_ || (s = Qn(E)), b = d.cssHooks[s] || d.cssHooks[E], l !== void 0) {
            if (m = typeof l, m === "string" && (f = Lo.exec(l)) && f[1] && (l = rr(i, s, f), m = "number"), l == null || l !== l)
              return;
            m === "number" && !_ && (l += f && f[3] || (d.cssNumber[E] ? "" : "px")), !k.clearCloneStyle && l === "" && s.indexOf("background") === 0 && (L[s] = "inherit"), (!b || !("set" in b) || (l = b.set(i, l, h)) !== void 0) && (_ ? L.setProperty(s, l) : L[s] = l);
          } else
            return b && "get" in b && (f = b.get(i, !1, h)) !== void 0 ? f : L[s];
        }
      },
      css: function(i, s, l, h) {
        var f, m, b, E = Pt(s), _ = Jn.test(s);
        return _ || (s = Qn(E)), b = d.cssHooks[s] || d.cssHooks[E], b && "get" in b && (f = b.get(i, !0, l)), f === void 0 && (f = Ao(i, s, h)), f === "normal" && s in Pi && (f = Pi[s]), l === "" || l ? (m = parseFloat(f), l === !0 || isFinite(m) ? m || 0 : f) : f;
      }
    }), d.each(["height", "width"], function(i, s) {
      d.cssHooks[s] = {
        get: function(l, h, f) {
          if (h)
            return Rs.test(d.css(l, "display")) && // Support: Safari 8+
            // Table columns in Safari have non-zero offsetWidth & zero
            // getBoundingClientRect().width unless display is changed.
            // Support: IE <=11 only
            // Running getBoundingClientRect on a disconnected node
            // in IE throws an error.
            (!l.getClientRects().length || !l.getBoundingClientRect().width) ? rn(l, vn, function() {
              return mr(l, s, f);
            }) : mr(l, s, f);
        },
        set: function(l, h, f) {
          var m, b = nn(l), E = !k.scrollboxSize() && b.position === "absolute", _ = E || f, L = _ && d.css(l, "boxSizing", !1, b) === "border-box", W = f ? ei(
            l,
            s,
            f,
            L,
            b
          ) : 0;
          return L && E && (W -= Math.ceil(
            l["offset" + s[0].toUpperCase() + s.slice(1)] - parseFloat(b[s]) - ei(l, s, "border", !1, b) - 0.5
          )), W && (m = Lo.exec(h)) && (m[3] || "px") !== "px" && (l.style[s] = h, h = d.css(l, s)), fr(l, h, W);
        }
      };
    }), d.cssHooks.marginLeft = dr(
      k.reliableMarginLeft,
      function(i, s) {
        if (s)
          return (parseFloat(Ao(i, "marginLeft")) || i.getBoundingClientRect().left - rn(i, { marginLeft: 0 }, function() {
            return i.getBoundingClientRect().left;
          })) + "px";
      }
    ), d.each({
      margin: "",
      padding: "",
      border: "Width"
    }, function(i, s) {
      d.cssHooks[i + s] = {
        expand: function(l) {
          for (var h = 0, f = {}, m = typeof l == "string" ? l.split(" ") : [l]; h < 4; h++)
            f[i + Ut[h] + s] = m[h] || m[h - 2] || m[0];
          return f;
        }
      }, i !== "margin" && (d.cssHooks[i + s].set = fr);
    }), d.fn.extend({
      css: function(i, s) {
        return bt(this, function(l, h, f) {
          var m, b, E = {}, _ = 0;
          if (Array.isArray(h)) {
            for (m = nn(l), b = h.length; _ < b; _++)
              E[h[_]] = d.css(l, h[_], !1, m);
            return E;
          }
          return f !== void 0 ? d.style(l, h, f) : d.css(l, h);
        }, i, s, arguments.length > 1);
      }
    });
    function ft(i, s, l, h, f) {
      return new ft.prototype.init(i, s, l, h, f);
    }
    d.Tween = ft, ft.prototype = {
      constructor: ft,
      init: function(i, s, l, h, f, m) {
        this.elem = i, this.prop = l, this.easing = f || d.easing._default, this.options = s, this.start = this.now = this.cur(), this.end = h, this.unit = m || (d.cssNumber[l] ? "" : "px");
      },
      cur: function() {
        var i = ft.propHooks[this.prop];
        return i && i.get ? i.get(this) : ft.propHooks._default.get(this);
      },
      run: function(i) {
        var s, l = ft.propHooks[this.prop];
        return this.options.duration ? this.pos = s = d.easing[this.easing](
          i,
          this.options.duration * i,
          0,
          1,
          this.options.duration
        ) : this.pos = s = i, this.now = (this.end - this.start) * s + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), l && l.set ? l.set(this) : ft.propHooks._default.set(this), this;
      }
    }, ft.prototype.init.prototype = ft.prototype, ft.propHooks = {
      _default: {
        get: function(i) {
          var s;
          return i.elem.nodeType !== 1 || i.elem[i.prop] != null && i.elem.style[i.prop] == null ? i.elem[i.prop] : (s = d.css(i.elem, i.prop, ""), !s || s === "auto" ? 0 : s);
        },
        set: function(i) {
          d.fx.step[i.prop] ? d.fx.step[i.prop](i) : i.elem.nodeType === 1 && (d.cssHooks[i.prop] || i.elem.style[Qn(i.prop)] != null) ? d.style(i.elem, i.prop, i.now + i.unit) : i.elem[i.prop] = i.now;
        }
      }
    }, ft.propHooks.scrollTop = ft.propHooks.scrollLeft = {
      set: function(i) {
        i.elem.nodeType && i.elem.parentNode && (i.elem[i.prop] = i.now);
      }
    }, d.easing = {
      linear: function(i) {
        return i;
      },
      swing: function(i) {
        return 0.5 - Math.cos(i * Math.PI) / 2;
      },
      _default: "swing"
    }, d.fx = ft.prototype.init, d.fx.step = {};
    var Eo, yn, Is = /^(?:toggle|show|hide)$/, Ns = /queueHooks$/;
    function ti() {
      yn && (Y.hidden === !1 && e.requestAnimationFrame ? e.requestAnimationFrame(ti) : e.setTimeout(ti, d.fx.interval), d.fx.tick());
    }
    function Hi() {
      return e.setTimeout(function() {
        Eo = void 0;
      }), Eo = Date.now();
    }
    function wn(i, s) {
      var l, h = 0, f = { height: i };
      for (s = s ? 1 : 0; h < 4; h += 2 - s)
        l = Ut[h], f["margin" + l] = f["padding" + l] = i;
      return s && (f.opacity = f.width = i), f;
    }
    function gr(i, s, l) {
      for (var h, f = (_t.tweeners[s] || []).concat(_t.tweeners["*"]), m = 0, b = f.length; m < b; m++)
        if (h = f[m].call(l, s, i))
          return h;
    }
    function Ps(i, s, l) {
      var h, f, m, b, E, _, L, W, q = "width" in s || "height" in s, N = this, X = {}, ge = i.style, Ce = i.nodeType && gn(i), xe = ce.get(i, "fxshow");
      l.queue || (b = d._queueHooks(i, "fx"), b.unqueued == null && (b.unqueued = 0, E = b.empty.fire, b.empty.fire = function() {
        b.unqueued || E();
      }), b.unqueued++, N.always(function() {
        N.always(function() {
          b.unqueued--, d.queue(i, "fx").length || b.empty.fire();
        });
      }));
      for (h in s)
        if (f = s[h], Is.test(f)) {
          if (delete s[h], m = m || f === "toggle", f === (Ce ? "hide" : "show"))
            if (f === "show" && xe && xe[h] !== void 0)
              Ce = !0;
            else
              continue;
          X[h] = xe && xe[h] || d.style(i, h);
        }
      if (_ = !d.isEmptyObject(s), !(!_ && d.isEmptyObject(X))) {
        q && i.nodeType === 1 && (l.overflow = [ge.overflow, ge.overflowX, ge.overflowY], L = xe && xe.display, L == null && (L = ce.get(i, "display")), W = d.css(i, "display"), W === "none" && (L ? W = L : (xo([i], !0), L = i.style.display || L, W = d.css(i, "display"), xo([i]))), (W === "inline" || W === "inline-block" && L != null) && d.css(i, "float") === "none" && (_ || (N.done(function() {
          ge.display = L;
        }), L == null && (W = ge.display, L = W === "none" ? "" : W)), ge.display = "inline-block")), l.overflow && (ge.overflow = "hidden", N.always(function() {
          ge.overflow = l.overflow[0], ge.overflowX = l.overflow[1], ge.overflowY = l.overflow[2];
        })), _ = !1;
        for (h in X)
          _ || (xe ? "hidden" in xe && (Ce = xe.hidden) : xe = ce.access(i, "fxshow", { display: L }), m && (xe.hidden = !Ce), Ce && xo([i], !0), N.done(function() {
            Ce || xo([i]), ce.remove(i, "fxshow");
            for (h in X)
              d.style(i, h, X[h]);
          })), _ = gr(Ce ? xe[h] : 0, h, N), h in xe || (xe[h] = _.start, Ce && (_.end = _.start, _.start = 0));
      }
    }
    function Pn(i, s) {
      var l, h, f, m, b;
      for (l in i)
        if (h = Pt(l), f = s[h], m = i[l], Array.isArray(m) && (f = m[1], m = i[l] = m[0]), l !== h && (i[h] = m, delete i[l]), b = d.cssHooks[h], b && "expand" in b) {
          m = b.expand(m), delete i[h];
          for (l in m)
            l in i || (i[l] = m[l], s[l] = f);
        } else
          s[h] = f;
    }
    function _t(i, s, l) {
      var h, f, m = 0, b = _t.prefilters.length, E = d.Deferred().always(function() {
        delete _.elem;
      }), _ = function() {
        if (f)
          return !1;
        for (var q = Eo || Hi(), N = Math.max(0, L.startTime + L.duration - q), X = N / L.duration || 0, ge = 1 - X, Ce = 0, xe = L.tweens.length; Ce < xe; Ce++)
          L.tweens[Ce].run(ge);
        return E.notifyWith(i, [L, ge, N]), ge < 1 && xe ? N : (xe || E.notifyWith(i, [L, 1, 0]), E.resolveWith(i, [L]), !1);
      }, L = E.promise({
        elem: i,
        props: d.extend({}, s),
        opts: d.extend(!0, {
          specialEasing: {},
          easing: d.easing._default
        }, l),
        originalProperties: s,
        originalOptions: l,
        startTime: Eo || Hi(),
        duration: l.duration,
        tweens: [],
        createTween: function(q, N) {
          var X = d.Tween(
            i,
            L.opts,
            q,
            N,
            L.opts.specialEasing[q] || L.opts.easing
          );
          return L.tweens.push(X), X;
        },
        stop: function(q) {
          var N = 0, X = q ? L.tweens.length : 0;
          if (f)
            return this;
          for (f = !0; N < X; N++)
            L.tweens[N].run(1);
          return q ? (E.notifyWith(i, [L, 1, 0]), E.resolveWith(i, [L, q])) : E.rejectWith(i, [L, q]), this;
        }
      }), W = L.props;
      for (Pn(W, L.opts.specialEasing); m < b; m++)
        if (h = _t.prefilters[m].call(L, i, W, L.opts), h)
          return M(h.stop) && (d._queueHooks(L.elem, L.opts.queue).stop = h.stop.bind(h)), h;
      return d.map(W, gr, L), M(L.opts.start) && L.opts.start.call(i, L), L.progress(L.opts.progress).done(L.opts.done, L.opts.complete).fail(L.opts.fail).always(L.opts.always), d.fx.timer(
        d.extend(_, {
          elem: i,
          anim: L,
          queue: L.opts.queue
        })
      ), L;
    }
    d.Animation = d.extend(_t, {
      tweeners: {
        "*": [function(i, s) {
          var l = this.createTween(i, s);
          return rr(l.elem, i, Lo.exec(s), l), l;
        }]
      },
      tweener: function(i, s) {
        M(i) ? (s = i, i = ["*"]) : i = i.match(Nt);
        for (var l, h = 0, f = i.length; h < f; h++)
          l = i[h], _t.tweeners[l] = _t.tweeners[l] || [], _t.tweeners[l].unshift(s);
      },
      prefilters: [Ps],
      prefilter: function(i, s) {
        s ? _t.prefilters.unshift(i) : _t.prefilters.push(i);
      }
    }), d.speed = function(i, s, l) {
      var h = i && typeof i == "object" ? d.extend({}, i) : {
        complete: l || !l && s || M(i) && i,
        duration: i,
        easing: l && s || s && !M(s) && s
      };
      return d.fx.off ? h.duration = 0 : typeof h.duration != "number" && (h.duration in d.fx.speeds ? h.duration = d.fx.speeds[h.duration] : h.duration = d.fx.speeds._default), (h.queue == null || h.queue === !0) && (h.queue = "fx"), h.old = h.complete, h.complete = function() {
        M(h.old) && h.old.call(this), h.queue && d.dequeue(this, h.queue);
      }, h;
    }, d.fn.extend({
      fadeTo: function(i, s, l, h) {
        return this.filter(gn).css("opacity", 0).show().end().animate({ opacity: s }, i, l, h);
      },
      animate: function(i, s, l, h) {
        var f = d.isEmptyObject(i), m = d.speed(s, l, h), b = function() {
          var E = _t(this, d.extend({}, i), m);
          (f || ce.get(this, "finish")) && E.stop(!0);
        };
        return b.finish = b, f || m.queue === !1 ? this.each(b) : this.queue(m.queue, b);
      },
      stop: function(i, s, l) {
        var h = function(f) {
          var m = f.stop;
          delete f.stop, m(l);
        };
        return typeof i != "string" && (l = s, s = i, i = void 0), s && this.queue(i || "fx", []), this.each(function() {
          var f = !0, m = i != null && i + "queueHooks", b = d.timers, E = ce.get(this);
          if (m)
            E[m] && E[m].stop && h(E[m]);
          else
            for (m in E)
              E[m] && E[m].stop && Ns.test(m) && h(E[m]);
          for (m = b.length; m--; )
            b[m].elem === this && (i == null || b[m].queue === i) && (b[m].anim.stop(l), f = !1, b.splice(m, 1));
          (f || !l) && d.dequeue(this, i);
        });
      },
      finish: function(i) {
        return i !== !1 && (i = i || "fx"), this.each(function() {
          var s, l = ce.get(this), h = l[i + "queue"], f = l[i + "queueHooks"], m = d.timers, b = h ? h.length : 0;
          for (l.finish = !0, d.queue(this, i, []), f && f.stop && f.stop.call(this, !0), s = m.length; s--; )
            m[s].elem === this && m[s].queue === i && (m[s].anim.stop(!0), m.splice(s, 1));
          for (s = 0; s < b; s++)
            h[s] && h[s].finish && h[s].finish.call(this);
          delete l.finish;
        });
      }
    }), d.each(["toggle", "show", "hide"], function(i, s) {
      var l = d.fn[s];
      d.fn[s] = function(h, f, m) {
        return h == null || typeof h == "boolean" ? l.apply(this, arguments) : this.animate(wn(s, !0), h, f, m);
      };
    }), d.each({
      slideDown: wn("show"),
      slideUp: wn("hide"),
      slideToggle: wn("toggle"),
      fadeIn: { opacity: "show" },
      fadeOut: { opacity: "hide" },
      fadeToggle: { opacity: "toggle" }
    }, function(i, s) {
      d.fn[i] = function(l, h, f) {
        return this.animate(s, l, h, f);
      };
    }), d.timers = [], d.fx.tick = function() {
      var i, s = 0, l = d.timers;
      for (Eo = Date.now(); s < l.length; s++)
        i = l[s], !i() && l[s] === i && l.splice(s--, 1);
      l.length || d.fx.stop(), Eo = void 0;
    }, d.fx.timer = function(i) {
      d.timers.push(i), d.fx.start();
    }, d.fx.interval = 13, d.fx.start = function() {
      yn || (yn = !0, ti());
    }, d.fx.stop = function() {
      yn = null;
    }, d.fx.speeds = {
      slow: 600,
      fast: 200,
      // Default speed
      _default: 400
    }, d.fn.delay = function(i, s) {
      return i = d.fx && d.fx.speeds[i] || i, s = s || "fx", this.queue(s, function(l, h) {
        var f = e.setTimeout(l, i);
        h.stop = function() {
          e.clearTimeout(f);
        };
      });
    }, function() {
      var i = Y.createElement("input"), s = Y.createElement("select"), l = s.appendChild(Y.createElement("option"));
      i.type = "checkbox", k.checkOn = i.value !== "", k.optSelected = l.selected, i = Y.createElement("input"), i.value = "t", i.type = "radio", k.radioValue = i.value === "t";
    }();
    var br, zo = d.expr.attrHandle;
    d.fn.extend({
      attr: function(i, s) {
        return bt(this, d.attr, i, s, arguments.length > 1);
      },
      removeAttr: function(i) {
        return this.each(function() {
          d.removeAttr(this, i);
        });
      }
    }), d.extend({
      attr: function(i, s, l) {
        var h, f, m = i.nodeType;
        if (!(m === 3 || m === 8 || m === 2)) {
          if (typeof i.getAttribute > "u")
            return d.prop(i, s, l);
          if ((m !== 1 || !d.isXMLDoc(i)) && (f = d.attrHooks[s.toLowerCase()] || (d.expr.match.bool.test(s) ? br : void 0)), l !== void 0) {
            if (l === null) {
              d.removeAttr(i, s);
              return;
            }
            return f && "set" in f && (h = f.set(i, l, s)) !== void 0 ? h : (i.setAttribute(s, l + ""), l);
          }
          return f && "get" in f && (h = f.get(i, s)) !== null ? h : (h = d.find.attr(i, s), h ?? void 0);
        }
      },
      attrHooks: {
        type: {
          set: function(i, s) {
            if (!k.radioValue && s === "radio" && R(i, "input")) {
              var l = i.value;
              return i.setAttribute("type", s), l && (i.value = l), s;
            }
          }
        }
      },
      removeAttr: function(i, s) {
        var l, h = 0, f = s && s.match(Nt);
        if (f && i.nodeType === 1)
          for (; l = f[h++]; )
            i.removeAttribute(l);
      }
    }), br = {
      set: function(i, s, l) {
        return s === !1 ? d.removeAttr(i, l) : i.setAttribute(l, l), l;
      }
    }, d.each(d.expr.match.bool.source.match(/\w+/g), function(i, s) {
      var l = zo[s] || d.find.attr;
      zo[s] = function(h, f, m) {
        var b, E, _ = f.toLowerCase();
        return m || (E = zo[_], zo[_] = b, b = l(h, f, m) != null ? _ : null, zo[_] = E), b;
      };
    });
    var Hs = /^(?:input|select|textarea|button)$/i, js = /^(?:a|area)$/i;
    d.fn.extend({
      prop: function(i, s) {
        return bt(this, d.prop, i, s, arguments.length > 1);
      },
      removeProp: function(i) {
        return this.each(function() {
          delete this[d.propFix[i] || i];
        });
      }
    }), d.extend({
      prop: function(i, s, l) {
        var h, f, m = i.nodeType;
        if (!(m === 3 || m === 8 || m === 2))
          return (m !== 1 || !d.isXMLDoc(i)) && (s = d.propFix[s] || s, f = d.propHooks[s]), l !== void 0 ? f && "set" in f && (h = f.set(i, l, s)) !== void 0 ? h : i[s] = l : f && "get" in f && (h = f.get(i, s)) !== null ? h : i[s];
      },
      propHooks: {
        tabIndex: {
          get: function(i) {
            var s = d.find.attr(i, "tabindex");
            return s ? parseInt(s, 10) : Hs.test(i.nodeName) || js.test(i.nodeName) && i.href ? 0 : -1;
          }
        }
      },
      propFix: {
        for: "htmlFor",
        class: "className"
      }
    }), k.optSelected || (d.propHooks.selected = {
      get: function(i) {
        var s = i.parentNode;
        return s && s.parentNode && s.parentNode.selectedIndex, null;
      },
      set: function(i) {
        var s = i.parentNode;
        s && (s.selectedIndex, s.parentNode && s.parentNode.selectedIndex);
      }
    }), d.each([
      "tabIndex",
      "readOnly",
      "maxLength",
      "cellSpacing",
      "cellPadding",
      "rowSpan",
      "colSpan",
      "useMap",
      "frameBorder",
      "contentEditable"
    ], function() {
      d.propFix[this.toLowerCase()] = this;
    });
    function so(i) {
      var s = i.match(Nt) || [];
      return s.join(" ");
    }
    function ao(i) {
      return i.getAttribute && i.getAttribute("class") || "";
    }
    function kn(i) {
      return Array.isArray(i) ? i : typeof i == "string" ? i.match(Nt) || [] : [];
    }
    d.fn.extend({
      addClass: function(i) {
        var s, l, h, f, m, b;
        return M(i) ? this.each(function(E) {
          d(this).addClass(i.call(this, E, ao(this)));
        }) : (s = kn(i), s.length ? this.each(function() {
          if (h = ao(this), l = this.nodeType === 1 && " " + so(h) + " ", l) {
            for (m = 0; m < s.length; m++)
              f = s[m], l.indexOf(" " + f + " ") < 0 && (l += f + " ");
            b = so(l), h !== b && this.setAttribute("class", b);
          }
        }) : this);
      },
      removeClass: function(i) {
        var s, l, h, f, m, b;
        return M(i) ? this.each(function(E) {
          d(this).removeClass(i.call(this, E, ao(this)));
        }) : arguments.length ? (s = kn(i), s.length ? this.each(function() {
          if (h = ao(this), l = this.nodeType === 1 && " " + so(h) + " ", l) {
            for (m = 0; m < s.length; m++)
              for (f = s[m]; l.indexOf(" " + f + " ") > -1; )
                l = l.replace(" " + f + " ", " ");
            b = so(l), h !== b && this.setAttribute("class", b);
          }
        }) : this) : this.attr("class", "");
      },
      toggleClass: function(i, s) {
        var l, h, f, m, b = typeof i, E = b === "string" || Array.isArray(i);
        return M(i) ? this.each(function(_) {
          d(this).toggleClass(
            i.call(this, _, ao(this), s),
            s
          );
        }) : typeof s == "boolean" && E ? s ? this.addClass(i) : this.removeClass(i) : (l = kn(i), this.each(function() {
          if (E)
            for (m = d(this), f = 0; f < l.length; f++)
              h = l[f], m.hasClass(h) ? m.removeClass(h) : m.addClass(h);
          else
            (i === void 0 || b === "boolean") && (h = ao(this), h && ce.set(this, "__className__", h), this.setAttribute && this.setAttribute(
              "class",
              h || i === !1 ? "" : ce.get(this, "__className__") || ""
            ));
        }));
      },
      hasClass: function(i) {
        var s, l, h = 0;
        for (s = " " + i + " "; l = this[h++]; )
          if (l.nodeType === 1 && (" " + so(ao(l)) + " ").indexOf(s) > -1)
            return !0;
        return !1;
      }
    });
    var Vr = /\r/g;
    d.fn.extend({
      val: function(i) {
        var s, l, h, f = this[0];
        return arguments.length ? (h = M(i), this.each(function(m) {
          var b;
          this.nodeType === 1 && (h ? b = i.call(this, m, d(this).val()) : b = i, b == null ? b = "" : typeof b == "number" ? b += "" : Array.isArray(b) && (b = d.map(b, function(E) {
            return E == null ? "" : E + "";
          })), s = d.valHooks[this.type] || d.valHooks[this.nodeName.toLowerCase()], (!s || !("set" in s) || s.set(this, b, "value") === void 0) && (this.value = b));
        })) : f ? (s = d.valHooks[f.type] || d.valHooks[f.nodeName.toLowerCase()], s && "get" in s && (l = s.get(f, "value")) !== void 0 ? l : (l = f.value, typeof l == "string" ? l.replace(Vr, "") : l ?? "")) : void 0;
      }
    }), d.extend({
      valHooks: {
        option: {
          get: function(i) {
            var s = d.find.attr(i, "value");
            return s ?? // Support: IE <=10 - 11 only
            // option.text throws exceptions (trac-14686, trac-14858)
            // Strip and collapse whitespace
            // https://html.spec.whatwg.org/#strip-and-collapse-whitespace
            so(d.text(i));
          }
        },
        select: {
          get: function(i) {
            var s, l, h, f = i.options, m = i.selectedIndex, b = i.type === "select-one", E = b ? null : [], _ = b ? m + 1 : f.length;
            for (m < 0 ? h = _ : h = b ? m : 0; h < _; h++)
              if (l = f[h], (l.selected || h === m) && // Don't return options that are disabled or in a disabled optgroup
              !l.disabled && (!l.parentNode.disabled || !R(l.parentNode, "optgroup"))) {
                if (s = d(l).val(), b)
                  return s;
                E.push(s);
              }
            return E;
          },
          set: function(i, s) {
            for (var l, h, f = i.options, m = d.makeArray(s), b = f.length; b--; )
              h = f[b], (h.selected = d.inArray(d.valHooks.option.get(h), m) > -1) && (l = !0);
            return l || (i.selectedIndex = -1), m;
          }
        }
      }
    }), d.each(["radio", "checkbox"], function() {
      d.valHooks[this] = {
        set: function(i, s) {
          if (Array.isArray(s))
            return i.checked = d.inArray(d(i).val(), s) > -1;
        }
      }, k.checkOn || (d.valHooks[this].get = function(i) {
        return i.getAttribute("value") === null ? "on" : i.value;
      });
    });
    var Bo = e.location, vr = { guid: Date.now() }, Wo = /\?/;
    d.parseXML = function(i) {
      var s, l;
      if (!i || typeof i != "string")
        return null;
      try {
        s = new e.DOMParser().parseFromString(i, "text/xml");
      } catch {
      }
      return l = s && s.getElementsByTagName("parsererror")[0], (!s || l) && d.error("Invalid XML: " + (l ? d.map(l.childNodes, function(h) {
        return h.textContent;
      }).join(`
`) : i)), s;
    };
    var ji = /^(?:focusinfocus|focusoutblur)$/, $i = function(i) {
      i.stopPropagation();
    };
    d.extend(d.event, {
      trigger: function(i, s, l, h) {
        var f, m, b, E, _, L, W, q, N = [l || Y], X = x.call(i, "type") ? i.type : i, ge = x.call(i, "namespace") ? i.namespace.split(".") : [];
        if (m = q = b = l = l || Y, !(l.nodeType === 3 || l.nodeType === 8) && !ji.test(X + d.event.triggered) && (X.indexOf(".") > -1 && (ge = X.split("."), X = ge.shift(), ge.sort()), _ = X.indexOf(":") < 0 && "on" + X, i = i[d.expando] ? i : new d.Event(X, typeof i == "object" && i), i.isTrigger = h ? 2 : 3, i.namespace = ge.join("."), i.rnamespace = i.namespace ? new RegExp("(^|\\.)" + ge.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, i.result = void 0, i.target || (i.target = l), s = s == null ? [i] : d.makeArray(s, [i]), W = d.event.special[X] || {}, !(!h && W.trigger && W.trigger.apply(l, s) === !1))) {
          if (!h && !W.noBubble && !O(l)) {
            for (E = W.delegateType || X, ji.test(E + X) || (m = m.parentNode); m; m = m.parentNode)
              N.push(m), b = m;
            b === (l.ownerDocument || Y) && N.push(b.defaultView || b.parentWindow || e);
          }
          for (f = 0; (m = N[f++]) && !i.isPropagationStopped(); )
            q = m, i.type = f > 1 ? E : W.bindType || X, L = (ce.get(m, "events") || /* @__PURE__ */ Object.create(null))[i.type] && ce.get(m, "handle"), L && L.apply(m, s), L = _ && m[_], L && L.apply && ze(m) && (i.result = L.apply(m, s), i.result === !1 && i.preventDefault());
          return i.type = X, !h && !i.isDefaultPrevented() && (!W._default || W._default.apply(N.pop(), s) === !1) && ze(l) && _ && M(l[X]) && !O(l) && (b = l[_], b && (l[_] = null), d.event.triggered = X, i.isPropagationStopped() && q.addEventListener(X, $i), l[X](), i.isPropagationStopped() && q.removeEventListener(X, $i), d.event.triggered = void 0, b && (l[_] = b)), i.result;
        }
      },
      // Piggyback on a donor event to simulate a different one
      // Used only for `focus(in | out)` events
      simulate: function(i, s, l) {
        var h = d.extend(
          new d.Event(),
          l,
          {
            type: i,
            isSimulated: !0
          }
        );
        d.event.trigger(h, null, s);
      }
    }), d.fn.extend({
      trigger: function(i, s) {
        return this.each(function() {
          d.event.trigger(i, s, this);
        });
      },
      triggerHandler: function(i, s) {
        var l = this[0];
        if (l)
          return d.event.trigger(i, s, l, !0);
      }
    });
    var yr = /\[\]$/, Yi = /\r?\n/g, $s = /^(?:submit|button|image|reset|file)$/i, Ys = /^(?:input|select|textarea|keygen)/i;
    function oi(i, s, l, h) {
      var f;
      if (Array.isArray(s))
        d.each(s, function(m, b) {
          l || yr.test(i) ? h(i, b) : oi(
            i + "[" + (typeof b == "object" && b != null ? m : "") + "]",
            b,
            l,
            h
          );
        });
      else if (!l && Q(s) === "object")
        for (f in s)
          oi(i + "[" + f + "]", s[f], l, h);
      else
        h(i, s);
    }
    d.param = function(i, s) {
      var l, h = [], f = function(m, b) {
        var E = M(b) ? b() : b;
        h[h.length] = encodeURIComponent(m) + "=" + encodeURIComponent(E ?? "");
      };
      if (i == null)
        return "";
      if (Array.isArray(i) || i.jquery && !d.isPlainObject(i))
        d.each(i, function() {
          f(this.name, this.value);
        });
      else
        for (l in i)
          oi(l, i[l], s, f);
      return h.join("&");
    }, d.fn.extend({
      serialize: function() {
        return d.param(this.serializeArray());
      },
      serializeArray: function() {
        return this.map(function() {
          var i = d.prop(this, "elements");
          return i ? d.makeArray(i) : this;
        }).filter(function() {
          var i = this.type;
          return this.name && !d(this).is(":disabled") && Ys.test(this.nodeName) && !$s.test(i) && (this.checked || !Co.test(i));
        }).map(function(i, s) {
          var l = d(this).val();
          return l == null ? null : Array.isArray(l) ? d.map(l, function(h) {
            return { name: s.name, value: h.replace(Yi, `\r
`) };
          }) : { name: s.name, value: l.replace(Yi, `\r
`) };
        }).get();
      }
    });
    var Fs = /%20/g, zs = /#.*$/, Ws = /([?&])_=[^&]*/, Gr = /^(.*?):[ \t]*([^\r\n]*)$/mg, Fi = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, Us = /^(?:GET|HEAD)$/, ni = /^\/\//, wr = {}, ii = {}, kr = "*/".concat("*"), Hn = Y.createElement("a");
    Hn.href = Bo.href;
    function zi(i) {
      return function(s, l) {
        typeof s != "string" && (l = s, s = "*");
        var h, f = 0, m = s.toLowerCase().match(Nt) || [];
        if (M(l))
          for (; h = m[f++]; )
            h[0] === "+" ? (h = h.slice(1) || "*", (i[h] = i[h] || []).unshift(l)) : (i[h] = i[h] || []).push(l);
      };
    }
    function Wi(i, s, l, h) {
      var f = {}, m = i === ii;
      function b(E) {
        var _;
        return f[E] = !0, d.each(i[E] || [], function(L, W) {
          var q = W(s, l, h);
          if (typeof q == "string" && !m && !f[q])
            return s.dataTypes.unshift(q), b(q), !1;
          if (m)
            return !(_ = q);
        }), _;
      }
      return b(s.dataTypes[0]) || !f["*"] && b("*");
    }
    function ri(i, s) {
      var l, h, f = d.ajaxSettings.flatOptions || {};
      for (l in s)
        s[l] !== void 0 && ((f[l] ? i : h || (h = {}))[l] = s[l]);
      return h && d.extend(!0, i, h), i;
    }
    function qs(i, s, l) {
      for (var h, f, m, b, E = i.contents, _ = i.dataTypes; _[0] === "*"; )
        _.shift(), h === void 0 && (h = i.mimeType || s.getResponseHeader("Content-Type"));
      if (h) {
        for (f in E)
          if (E[f] && E[f].test(h)) {
            _.unshift(f);
            break;
          }
      }
      if (_[0] in l)
        m = _[0];
      else {
        for (f in l) {
          if (!_[0] || i.converters[f + " " + _[0]]) {
            m = f;
            break;
          }
          b || (b = f);
        }
        m = m || b;
      }
      if (m)
        return m !== _[0] && _.unshift(m), l[m];
    }
    function Zr(i, s, l, h) {
      var f, m, b, E, _, L = {}, W = i.dataTypes.slice();
      if (W[1])
        for (b in i.converters)
          L[b.toLowerCase()] = i.converters[b];
      for (m = W.shift(); m; )
        if (i.responseFields[m] && (l[i.responseFields[m]] = s), !_ && h && i.dataFilter && (s = i.dataFilter(s, i.dataType)), _ = m, m = W.shift(), m) {
          if (m === "*")
            m = _;
          else if (_ !== "*" && _ !== m) {
            if (b = L[_ + " " + m] || L["* " + m], !b) {
              for (f in L)
                if (E = f.split(" "), E[1] === m && (b = L[_ + " " + E[0]] || L["* " + E[0]], b)) {
                  b === !0 ? b = L[f] : L[f] !== !0 && (m = E[0], W.unshift(E[1]));
                  break;
                }
            }
            if (b !== !0)
              if (b && i.throws)
                s = b(s);
              else
                try {
                  s = b(s);
                } catch (q) {
                  return {
                    state: "parsererror",
                    error: b ? q : "No conversion from " + _ + " to " + m
                  };
                }
          }
        }
      return { state: "success", data: s };
    }
    d.extend({
      // Counter for holding the number of active queries
      active: 0,
      // Last-Modified header cache for next request
      lastModified: {},
      etag: {},
      ajaxSettings: {
        url: Bo.href,
        type: "GET",
        isLocal: Fi.test(Bo.protocol),
        global: !0,
        processData: !0,
        async: !0,
        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
        /*
        timeout: 0,
        data: null,
        dataType: null,
        username: null,
        password: null,
        cache: null,
        throws: false,
        traditional: false,
        headers: {},
        */
        accepts: {
          "*": kr,
          text: "text/plain",
          html: "text/html",
          xml: "application/xml, text/xml",
          json: "application/json, text/javascript"
        },
        contents: {
          xml: /\bxml\b/,
          html: /\bhtml/,
          json: /\bjson\b/
        },
        responseFields: {
          xml: "responseXML",
          text: "responseText",
          json: "responseJSON"
        },
        // Data converters
        // Keys separate source (or catchall "*") and destination types with a single space
        converters: {
          // Convert anything to text
          "* text": String,
          // Text to html (true = no transformation)
          "text html": !0,
          // Evaluate text as a json expression
          "text json": JSON.parse,
          // Parse text as xml
          "text xml": d.parseXML
        },
        // For options that shouldn't be deep extended:
        // you can add your own custom options here if
        // and when you create one that shouldn't be
        // deep extended (see ajaxExtend)
        flatOptions: {
          url: !0,
          context: !0
        }
      },
      // Creates a full fledged settings object into target
      // with both ajaxSettings and settings fields.
      // If target is omitted, writes into ajaxSettings.
      ajaxSetup: function(i, s) {
        return s ? (
          // Building a settings object
          ri(ri(i, d.ajaxSettings), s)
        ) : (
          // Extending ajaxSettings
          ri(d.ajaxSettings, i)
        );
      },
      ajaxPrefilter: zi(wr),
      ajaxTransport: zi(ii),
      // Main method
      ajax: function(i, s) {
        typeof i == "object" && (s = i, i = void 0), s = s || {};
        var l, h, f, m, b, E, _, L, W, q, N = d.ajaxSetup({}, s), X = N.context || N, ge = N.context && (X.nodeType || X.jquery) ? d(X) : d.event, Ce = d.Deferred(), xe = d.Callbacks("once memory"), Xe = N.statusCode || {}, qe = {}, $t = {}, Yt = "canceled", Se = {
          readyState: 0,
          // Builds headers hashtable if needed
          getResponseHeader: function(De) {
            var w;
            if (_) {
              if (!m)
                for (m = {}; w = Gr.exec(f); )
                  m[w[1].toLowerCase() + " "] = (m[w[1].toLowerCase() + " "] || []).concat(w[2]);
              w = m[De.toLowerCase() + " "];
            }
            return w == null ? null : w.join(", ");
          },
          // Raw string
          getAllResponseHeaders: function() {
            return _ ? f : null;
          },
          // Caches the header
          setRequestHeader: function(De, w) {
            return _ == null && (De = $t[De.toLowerCase()] = $t[De.toLowerCase()] || De, qe[De] = w), this;
          },
          // Overrides response content-type header
          overrideMimeType: function(De) {
            return _ == null && (N.mimeType = De), this;
          },
          // Status-dependent callbacks
          statusCode: function(De) {
            var w;
            if (De)
              if (_)
                Se.always(De[Se.status]);
              else
                for (w in De)
                  Xe[w] = [Xe[w], De[w]];
            return this;
          },
          // Cancel the request
          abort: function(De) {
            var w = De || Yt;
            return l && l.abort(w), lo(0, w), this;
          }
        };
        if (Ce.promise(Se), N.url = ((i || N.url || Bo.href) + "").replace(ni, Bo.protocol + "//"), N.type = s.method || s.type || N.method || N.type, N.dataTypes = (N.dataType || "*").toLowerCase().match(Nt) || [""], N.crossDomain == null) {
          E = Y.createElement("a");
          try {
            E.href = N.url, E.href = E.href, N.crossDomain = Hn.protocol + "//" + Hn.host != E.protocol + "//" + E.host;
          } catch {
            N.crossDomain = !0;
          }
        }
        if (N.data && N.processData && typeof N.data != "string" && (N.data = d.param(N.data, N.traditional)), Wi(wr, N, s, Se), _)
          return Se;
        L = d.event && N.global, L && d.active++ === 0 && d.event.trigger("ajaxStart"), N.type = N.type.toUpperCase(), N.hasContent = !Us.test(N.type), h = N.url.replace(zs, ""), N.hasContent ? N.data && N.processData && (N.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && (N.data = N.data.replace(Fs, "+")) : (q = N.url.slice(h.length), N.data && (N.processData || typeof N.data == "string") && (h += (Wo.test(h) ? "&" : "?") + N.data, delete N.data), N.cache === !1 && (h = h.replace(Ws, "$1"), q = (Wo.test(h) ? "&" : "?") + "_=" + vr.guid++ + q), N.url = h + q), N.ifModified && (d.lastModified[h] && Se.setRequestHeader("If-Modified-Since", d.lastModified[h]), d.etag[h] && Se.setRequestHeader("If-None-Match", d.etag[h])), (N.data && N.hasContent && N.contentType !== !1 || s.contentType) && Se.setRequestHeader("Content-Type", N.contentType), Se.setRequestHeader(
          "Accept",
          N.dataTypes[0] && N.accepts[N.dataTypes[0]] ? N.accepts[N.dataTypes[0]] + (N.dataTypes[0] !== "*" ? ", " + kr + "; q=0.01" : "") : N.accepts["*"]
        );
        for (W in N.headers)
          Se.setRequestHeader(W, N.headers[W]);
        if (N.beforeSend && (N.beforeSend.call(X, Se, N) === !1 || _))
          return Se.abort();
        if (Yt = "abort", xe.add(N.complete), Se.done(N.success), Se.fail(N.error), l = Wi(ii, N, s, Se), !l)
          lo(-1, "No Transport");
        else {
          if (Se.readyState = 1, L && ge.trigger("ajaxSend", [Se, N]), _)
            return Se;
          N.async && N.timeout > 0 && (b = e.setTimeout(function() {
            Se.abort("timeout");
          }, N.timeout));
          try {
            _ = !1, l.send(qe, lo);
          } catch (De) {
            if (_)
              throw De;
            lo(-1, De);
          }
        }
        function lo(De, w, S, A) {
          var H, ee, he, ke, Ee, Ae = w;
          _ || (_ = !0, b && e.clearTimeout(b), l = void 0, f = A || "", Se.readyState = De > 0 ? 4 : 0, H = De >= 200 && De < 300 || De === 304, S && (ke = qs(N, Se, S)), !H && d.inArray("script", N.dataTypes) > -1 && d.inArray("json", N.dataTypes) < 0 && (N.converters["text script"] = function() {
          }), ke = Zr(N, ke, Se, H), H ? (N.ifModified && (Ee = Se.getResponseHeader("Last-Modified"), Ee && (d.lastModified[h] = Ee), Ee = Se.getResponseHeader("etag"), Ee && (d.etag[h] = Ee)), De === 204 || N.type === "HEAD" ? Ae = "nocontent" : De === 304 ? Ae = "notmodified" : (Ae = ke.state, ee = ke.data, he = ke.error, H = !he)) : (he = Ae, (De || !Ae) && (Ae = "error", De < 0 && (De = 0))), Se.status = De, Se.statusText = (w || Ae) + "", H ? Ce.resolveWith(X, [ee, Ae, Se]) : Ce.rejectWith(X, [Se, Ae, he]), Se.statusCode(Xe), Xe = void 0, L && ge.trigger(
            H ? "ajaxSuccess" : "ajaxError",
            [Se, N, H ? ee : he]
          ), xe.fireWith(X, [Se, Ae]), L && (ge.trigger("ajaxComplete", [Se, N]), --d.active || d.event.trigger("ajaxStop")));
        }
        return Se;
      },
      getJSON: function(i, s, l) {
        return d.get(i, s, l, "json");
      },
      getScript: function(i, s) {
        return d.get(i, void 0, s, "script");
      }
    }), d.each(["get", "post"], function(i, s) {
      d[s] = function(l, h, f, m) {
        return M(h) && (m = m || f, f = h, h = void 0), d.ajax(d.extend({
          url: l,
          type: s,
          dataType: m,
          data: h,
          success: f
        }, d.isPlainObject(l) && l));
      };
    }), d.ajaxPrefilter(function(i) {
      var s;
      for (s in i.headers)
        s.toLowerCase() === "content-type" && (i.contentType = i.headers[s] || "");
    }), d._evalUrl = function(i, s, l) {
      return d.ajax({
        url: i,
        // Make this explicit, since user can override this through ajaxSetup (trac-11264)
        type: "GET",
        dataType: "script",
        cache: !0,
        async: !1,
        global: !1,
        // Only evaluate the response if it is successful (gh-4126)
        // dataFilter is not invoked for failure responses, so using it instead
        // of the default converter is kludgy but it works.
        converters: {
          "text script": function() {
          }
        },
        dataFilter: function(h) {
          d.globalEval(h, s, l);
        }
      });
    }, d.fn.extend({
      wrapAll: function(i) {
        var s;
        return this[0] && (M(i) && (i = i.call(this[0])), s = d(i, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && s.insertBefore(this[0]), s.map(function() {
          for (var l = this; l.firstElementChild; )
            l = l.firstElementChild;
          return l;
        }).append(this)), this;
      },
      wrapInner: function(i) {
        return M(i) ? this.each(function(s) {
          d(this).wrapInner(i.call(this, s));
        }) : this.each(function() {
          var s = d(this), l = s.contents();
          l.length ? l.wrapAll(i) : s.append(i);
        });
      },
      wrap: function(i) {
        var s = M(i);
        return this.each(function(l) {
          d(this).wrapAll(s ? i.call(this, l) : i);
        });
      },
      unwrap: function(i) {
        return this.parent(i).not("body").each(function() {
          d(this).replaceWith(this.childNodes);
        }), this;
      }
    }), d.expr.pseudos.hidden = function(i) {
      return !d.expr.pseudos.visible(i);
    }, d.expr.pseudos.visible = function(i) {
      return !!(i.offsetWidth || i.offsetHeight || i.getClientRects().length);
    }, d.ajaxSettings.xhr = function() {
      try {
        return new e.XMLHttpRequest();
      } catch {
      }
    };
    var xr = {
      // File protocol always yields status code 0, assume 200
      0: 200,
      // Support: IE <=9 only
      // trac-1450: sometimes IE returns 1223 when it should be 204
      1223: 204
    }, Ro = d.ajaxSettings.xhr();
    k.cors = !!Ro && "withCredentials" in Ro, k.ajax = Ro = !!Ro, d.ajaxTransport(function(i) {
      var s, l;
      if (k.cors || Ro && !i.crossDomain)
        return {
          send: function(h, f) {
            var m, b = i.xhr();
            if (b.open(
              i.type,
              i.url,
              i.async,
              i.username,
              i.password
            ), i.xhrFields)
              for (m in i.xhrFields)
                b[m] = i.xhrFields[m];
            i.mimeType && b.overrideMimeType && b.overrideMimeType(i.mimeType), !i.crossDomain && !h["X-Requested-With"] && (h["X-Requested-With"] = "XMLHttpRequest");
            for (m in h)
              b.setRequestHeader(m, h[m]);
            s = function(E) {
              return function() {
                s && (s = l = b.onload = b.onerror = b.onabort = b.ontimeout = b.onreadystatechange = null, E === "abort" ? b.abort() : E === "error" ? typeof b.status != "number" ? f(0, "error") : f(
                  // File: protocol always yields status 0; see trac-8605, trac-14207
                  b.status,
                  b.statusText
                ) : f(
                  xr[b.status] || b.status,
                  b.statusText,
                  // Support: IE <=9 only
                  // IE9 has no XHR2 but throws on binary (trac-11426)
                  // For XHR2 non-text, let the caller handle it (gh-2498)
                  (b.responseType || "text") !== "text" || typeof b.responseText != "string" ? { binary: b.response } : { text: b.responseText },
                  b.getAllResponseHeaders()
                ));
              };
            }, b.onload = s(), l = b.onerror = b.ontimeout = s("error"), b.onabort !== void 0 ? b.onabort = l : b.onreadystatechange = function() {
              b.readyState === 4 && e.setTimeout(function() {
                s && l();
              });
            }, s = s("abort");
            try {
              b.send(i.hasContent && i.data || null);
            } catch (E) {
              if (s)
                throw E;
            }
          },
          abort: function() {
            s && s();
          }
        };
    }), d.ajaxPrefilter(function(i) {
      i.crossDomain && (i.contents.script = !1);
    }), d.ajaxSetup({
      accepts: {
        script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
      },
      contents: {
        script: /\b(?:java|ecma)script\b/
      },
      converters: {
        "text script": function(i) {
          return d.globalEval(i), i;
        }
      }
    }), d.ajaxPrefilter("script", function(i) {
      i.cache === void 0 && (i.cache = !1), i.crossDomain && (i.type = "GET");
    }), d.ajaxTransport("script", function(i) {
      if (i.crossDomain || i.scriptAttrs) {
        var s, l;
        return {
          send: function(h, f) {
            s = d("<script>").attr(i.scriptAttrs || {}).prop({ charset: i.scriptCharset, src: i.url }).on("load error", l = function(m) {
              s.remove(), l = null, m && f(m.type === "error" ? 404 : 200, m.type);
            }), Y.head.appendChild(s[0]);
          },
          abort: function() {
            l && l();
          }
        };
      }
    });
    var Ui = [], si = /(=)\?(?=&|$)|\?\?/;
    d.ajaxSetup({
      jsonp: "callback",
      jsonpCallback: function() {
        var i = Ui.pop() || d.expando + "_" + vr.guid++;
        return this[i] = !0, i;
      }
    }), d.ajaxPrefilter("json jsonp", function(i, s, l) {
      var h, f, m, b = i.jsonp !== !1 && (si.test(i.url) ? "url" : typeof i.data == "string" && (i.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && si.test(i.data) && "data");
      if (b || i.dataTypes[0] === "jsonp")
        return h = i.jsonpCallback = M(i.jsonpCallback) ? i.jsonpCallback() : i.jsonpCallback, b ? i[b] = i[b].replace(si, "$1" + h) : i.jsonp !== !1 && (i.url += (Wo.test(i.url) ? "&" : "?") + i.jsonp + "=" + h), i.converters["script json"] = function() {
          return m || d.error(h + " was not called"), m[0];
        }, i.dataTypes[0] = "json", f = e[h], e[h] = function() {
          m = arguments;
        }, l.always(function() {
          f === void 0 ? d(e).removeProp(h) : e[h] = f, i[h] && (i.jsonpCallback = s.jsonpCallback, Ui.push(h)), m && M(f) && f(m[0]), m = f = void 0;
        }), "script";
    }), k.createHTMLDocument = function() {
      var i = Y.implementation.createHTMLDocument("").body;
      return i.innerHTML = "<form></form><form></form>", i.childNodes.length === 2;
    }(), d.parseHTML = function(i, s, l) {
      if (typeof i != "string")
        return [];
      typeof s == "boolean" && (l = s, s = !1);
      var h, f, m;
      return s || (k.createHTMLDocument ? (s = Y.implementation.createHTMLDocument(""), h = s.createElement("base"), h.href = Y.location.href, s.head.appendChild(h)) : s = Y), f = Be.exec(i), m = !l && [], f ? [s.createElement(f[1])] : (f = Ue([i], s, m), m && m.length && d(m).remove(), d.merge([], f.childNodes));
    }, d.fn.load = function(i, s, l) {
      var h, f, m, b = this, E = i.indexOf(" ");
      return E > -1 && (h = so(i.slice(E)), i = i.slice(0, E)), M(s) ? (l = s, s = void 0) : s && typeof s == "object" && (f = "POST"), b.length > 0 && d.ajax({
        url: i,
        // If "type" variable is undefined, then "GET" method will be used.
        // Make value of this field explicit since
        // user can override it through ajaxSetup method
        type: f || "GET",
        dataType: "html",
        data: s
      }).done(function(_) {
        m = arguments, b.html(h ? (
          // If a selector was specified, locate the right elements in a dummy div
          // Exclude scripts to avoid IE 'Permission Denied' errors
          d("<div>").append(d.parseHTML(_)).find(h)
        ) : (
          // Otherwise use the full result
          _
        ));
      }).always(l && function(_, L) {
        b.each(function() {
          l.apply(this, m || [_.responseText, L, _]);
        });
      }), this;
    }, d.expr.pseudos.animated = function(i) {
      return d.grep(d.timers, function(s) {
        return i === s.elem;
      }).length;
    }, d.offset = {
      setOffset: function(i, s, l) {
        var h, f, m, b, E, _, L, W = d.css(i, "position"), q = d(i), N = {};
        W === "static" && (i.style.position = "relative"), E = q.offset(), m = d.css(i, "top"), _ = d.css(i, "left"), L = (W === "absolute" || W === "fixed") && (m + _).indexOf("auto") > -1, L ? (h = q.position(), b = h.top, f = h.left) : (b = parseFloat(m) || 0, f = parseFloat(_) || 0), M(s) && (s = s.call(i, l, d.extend({}, E))), s.top != null && (N.top = s.top - E.top + b), s.left != null && (N.left = s.left - E.left + f), "using" in s ? s.using.call(i, N) : q.css(N);
      }
    }, d.fn.extend({
      // offset() relates an element's border box to the document origin
      offset: function(i) {
        if (arguments.length)
          return i === void 0 ? this : this.each(function(f) {
            d.offset.setOffset(this, i, f);
          });
        var s, l, h = this[0];
        if (h)
          return h.getClientRects().length ? (s = h.getBoundingClientRect(), l = h.ownerDocument.defaultView, {
            top: s.top + l.pageYOffset,
            left: s.left + l.pageXOffset
          }) : { top: 0, left: 0 };
      },
      // position() relates an element's margin box to its offset parent's padding box
      // This corresponds to the behavior of CSS absolute positioning
      position: function() {
        if (this[0]) {
          var i, s, l, h = this[0], f = { top: 0, left: 0 };
          if (d.css(h, "position") === "fixed")
            s = h.getBoundingClientRect();
          else {
            for (s = this.offset(), l = h.ownerDocument, i = h.offsetParent || l.documentElement; i && (i === l.body || i === l.documentElement) && d.css(i, "position") === "static"; )
              i = i.parentNode;
            i && i !== h && i.nodeType === 1 && (f = d(i).offset(), f.top += d.css(i, "borderTopWidth", !0), f.left += d.css(i, "borderLeftWidth", !0));
          }
          return {
            top: s.top - f.top - d.css(h, "marginTop", !0),
            left: s.left - f.left - d.css(h, "marginLeft", !0)
          };
        }
      },
      // This method will return documentElement in the following cases:
      // 1) For the element inside the iframe without offsetParent, this method will return
      //    documentElement of the parent window
      // 2) For the hidden or detached element
      // 3) For body or html element, i.e. in case of the html node - it will return itself
      //
      // but those exceptions were never presented as a real life use-cases
      // and might be considered as more preferable results.
      //
      // This logic, however, is not guaranteed and can change at any point in the future
      offsetParent: function() {
        return this.map(function() {
          for (var i = this.offsetParent; i && d.css(i, "position") === "static"; )
            i = i.offsetParent;
          return i || Qt;
        });
      }
    }), d.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function(i, s) {
      var l = s === "pageYOffset";
      d.fn[i] = function(h) {
        return bt(this, function(f, m, b) {
          var E;
          if (O(f) ? E = f : f.nodeType === 9 && (E = f.defaultView), b === void 0)
            return E ? E[s] : f[m];
          E ? E.scrollTo(
            l ? E.pageXOffset : b,
            l ? b : E.pageYOffset
          ) : f[m] = b;
        }, i, h, arguments.length);
      };
    }), d.each(["top", "left"], function(i, s) {
      d.cssHooks[s] = dr(
        k.pixelPosition,
        function(l, h) {
          if (h)
            return h = Ao(l, s), Xn.test(h) ? d(l).position()[s] + "px" : h;
        }
      );
    }), d.each({ Height: "height", Width: "width" }, function(i, s) {
      d.each({
        padding: "inner" + i,
        content: s,
        "": "outer" + i
      }, function(l, h) {
        d.fn[h] = function(f, m) {
          var b = arguments.length && (l || typeof f != "boolean"), E = l || (f === !0 || m === !0 ? "margin" : "border");
          return bt(this, function(_, L, W) {
            var q;
            return O(_) ? h.indexOf("outer") === 0 ? _["inner" + i] : _.document.documentElement["client" + i] : _.nodeType === 9 ? (q = _.documentElement, Math.max(
              _.body["scroll" + i],
              q["scroll" + i],
              _.body["offset" + i],
              q["offset" + i],
              q["client" + i]
            )) : W === void 0 ? (
              // Get width or height on the element, requesting but not forcing parseFloat
              d.css(_, L, E)
            ) : (
              // Set width or height on the element
              d.style(_, L, W, E)
            );
          }, s, b ? f : void 0, b);
        };
      });
    }), d.each([
      "ajaxStart",
      "ajaxStop",
      "ajaxComplete",
      "ajaxError",
      "ajaxSuccess",
      "ajaxSend"
    ], function(i, s) {
      d.fn[s] = function(l) {
        return this.on(s, l);
      };
    }), d.fn.extend({
      bind: function(i, s, l) {
        return this.on(i, null, s, l);
      },
      unbind: function(i, s) {
        return this.off(i, null, s);
      },
      delegate: function(i, s, l, h) {
        return this.on(s, i, l, h);
      },
      undelegate: function(i, s, l) {
        return arguments.length === 1 ? this.off(i, "**") : this.off(s, i || "**", l);
      },
      hover: function(i, s) {
        return this.on("mouseenter", i).on("mouseleave", s || i);
      }
    }), d.each(
      "blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),
      function(i, s) {
        d.fn[s] = function(l, h) {
          return arguments.length > 0 ? this.on(s, null, l, h) : this.trigger(s);
        };
      }
    );
    var Cr = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
    d.proxy = function(i, s) {
      var l, h, f;
      if (typeof s == "string" && (l = i[s], s = i, i = l), !!M(i))
        return h = a.call(arguments, 2), f = function() {
          return i.apply(s || this, h.concat(a.call(arguments)));
        }, f.guid = i.guid = i.guid || d.guid++, f;
    }, d.holdReady = function(i) {
      i ? d.readyWait++ : d.ready(!0);
    }, d.isArray = Array.isArray, d.parseJSON = JSON.parse, d.nodeName = R, d.isFunction = M, d.isWindow = O, d.camelCase = Pt, d.type = Q, d.now = Date.now, d.isNumeric = function(i) {
      var s = d.type(i);
      return (s === "number" || s === "string") && // parseFloat NaNs numeric-cast false positives ("")
      // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
      // subtraction forces infinities to NaN
      !isNaN(i - parseFloat(i));
    }, d.trim = function(i) {
      return i == null ? "" : (i + "").replace(Cr, "$1");
    };
    var Kr = e.jQuery, Xr = e.$;
    return d.noConflict = function(i) {
      return e.$ === d && (e.$ = Xr), i && e.jQuery === d && (e.jQuery = Kr), d;
    }, typeof t > "u" && (e.jQuery = e.$ = d), d;
  });
})(_u);
var Ub = _u.exports;
const Ie = /* @__PURE__ */ Wb(Ub);
//! moment.js
//! version : 2.30.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
var Eu;
function ue() {
  return Eu.apply(null, arguments);
}
function qb(o) {
  Eu = o;
}
function Mn(o) {
  return o instanceof Array || Object.prototype.toString.call(o) === "[object Array]";
}
function Nr(o) {
  return o != null && Object.prototype.toString.call(o) === "[object Object]";
}
function lt(o, e) {
  return Object.prototype.hasOwnProperty.call(o, e);
}
function Sc(o) {
  if (Object.getOwnPropertyNames)
    return Object.getOwnPropertyNames(o).length === 0;
  var e;
  for (e in o)
    if (lt(o, e))
      return !1;
  return !0;
}
function Ho(o) {
  return o === void 0;
}
function Ei(o) {
  return typeof o == "number" || Object.prototype.toString.call(o) === "[object Number]";
}
function va(o) {
  return o instanceof Date || Object.prototype.toString.call(o) === "[object Date]";
}
function Mu(o, e) {
  var t = [], n, r = o.length;
  for (n = 0; n < r; ++n)
    t.push(e(o[n], n));
  return t;
}
function Xi(o, e) {
  for (var t in e)
    lt(e, t) && (o[t] = e[t]);
  return lt(e, "toString") && (o.toString = e.toString), lt(e, "valueOf") && (o.valueOf = e.valueOf), o;
}
function Wn(o, e, t, n) {
  return Xu(o, e, t, n, !0).utc();
}
function Vb() {
  return {
    empty: !1,
    unusedTokens: [],
    unusedInput: [],
    overflow: -2,
    charsLeftOver: 0,
    nullInput: !1,
    invalidEra: null,
    invalidMonth: null,
    invalidFormat: !1,
    userInvalidated: !1,
    iso: !1,
    parsedDateParts: [],
    era: null,
    meridiem: null,
    rfc2822: !1,
    weekdayMismatch: !1
  };
}
function Ve(o) {
  return o._pf == null && (o._pf = Vb()), o._pf;
}
var Jl;
Array.prototype.some ? Jl = Array.prototype.some : Jl = function(o) {
  var e = Object(this), t = e.length >>> 0, n;
  for (n = 0; n < t; n++)
    if (n in e && o.call(this, e[n], n, e))
      return !0;
  return !1;
};
function Tc(o) {
  var e = null, t = !1, n = o._d && !isNaN(o._d.getTime());
  if (n && (e = Ve(o), t = Jl.call(e.parsedDateParts, function(r) {
    return r != null;
  }), n = e.overflow < 0 && !e.empty && !e.invalidEra && !e.invalidMonth && !e.invalidWeekday && !e.weekdayMismatch && !e.nullInput && !e.invalidFormat && !e.userInvalidated && (!e.meridiem || e.meridiem && t), o._strict && (n = n && e.charsLeftOver === 0 && e.unusedTokens.length === 0 && e.bigHour === void 0)), Object.isFrozen == null || !Object.isFrozen(o))
    o._isValid = n;
  else
    return n;
  return o._isValid;
}
function tl(o) {
  var e = Wn(NaN);
  return o != null ? Xi(Ve(e), o) : Ve(e).userInvalidated = !0, e;
}
var ch = ue.momentProperties = [], Al = !1;
function _c(o, e) {
  var t, n, r, a = ch.length;
  if (Ho(e._isAMomentObject) || (o._isAMomentObject = e._isAMomentObject), Ho(e._i) || (o._i = e._i), Ho(e._f) || (o._f = e._f), Ho(e._l) || (o._l = e._l), Ho(e._strict) || (o._strict = e._strict), Ho(e._tzm) || (o._tzm = e._tzm), Ho(e._isUTC) || (o._isUTC = e._isUTC), Ho(e._offset) || (o._offset = e._offset), Ho(e._pf) || (o._pf = Ve(e)), Ho(e._locale) || (o._locale = e._locale), a > 0)
    for (t = 0; t < a; t++)
      n = ch[t], r = e[n], Ho(r) || (o[n] = r);
  return o;
}
function ya(o) {
  _c(this, o), this._d = new Date(o._d != null ? o._d.getTime() : NaN), this.isValid() || (this._d = /* @__PURE__ */ new Date(NaN)), Al === !1 && (Al = !0, ue.updateOffset(this), Al = !1);
}
function Dn(o) {
  return o instanceof ya || o != null && o._isAMomentObject != null;
}
function Du(o) {
  ue.suppressDeprecationWarnings === !1 && typeof console < "u" && console.warn && console.warn("Deprecation warning: " + o);
}
function dn(o, e) {
  var t = !0;
  return Xi(function() {
    if (ue.deprecationHandler != null && ue.deprecationHandler(null, o), t) {
      var n = [], r, a, c, u = arguments.length;
      for (a = 0; a < u; a++) {
        if (r = "", typeof arguments[a] == "object") {
          r += `
[` + a + "] ";
          for (c in arguments[0])
            lt(arguments[0], c) && (r += c + ": " + arguments[0][c] + ", ");
          r = r.slice(0, -2);
        } else
          r = arguments[a];
        n.push(r);
      }
      Du(
        o + `
Arguments: ` + Array.prototype.slice.call(n).join("") + `
` + new Error().stack
      ), t = !1;
    }
    return e.apply(this, arguments);
  }, e);
}
var dh = {};
function Ou(o, e) {
  ue.deprecationHandler != null && ue.deprecationHandler(o, e), dh[o] || (Du(e), dh[o] = !0);
}
ue.suppressDeprecationWarnings = !1;
ue.deprecationHandler = null;
function Un(o) {
  return typeof Function < "u" && o instanceof Function || Object.prototype.toString.call(o) === "[object Function]";
}
function Gb(o) {
  var e, t;
  for (t in o)
    lt(o, t) && (e = o[t], Un(e) ? this[t] = e : this["_" + t] = e);
  this._config = o, this._dayOfMonthOrdinalParseLenient = new RegExp(
    (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source
  );
}
function Ql(o, e) {
  var t = Xi({}, o), n;
  for (n in e)
    lt(e, n) && (Nr(o[n]) && Nr(e[n]) ? (t[n] = {}, Xi(t[n], o[n]), Xi(t[n], e[n])) : e[n] != null ? t[n] = e[n] : delete t[n]);
  for (n in o)
    lt(o, n) && !lt(e, n) && Nr(o[n]) && (t[n] = Xi({}, t[n]));
  return t;
}
function Ec(o) {
  o != null && this.set(o);
}
var ec;
Object.keys ? ec = Object.keys : ec = function(o) {
  var e, t = [];
  for (e in o)
    lt(o, e) && t.push(e);
  return t;
};
var Zb = {
  sameDay: "[Today at] LT",
  nextDay: "[Tomorrow at] LT",
  nextWeek: "dddd [at] LT",
  lastDay: "[Yesterday at] LT",
  lastWeek: "[Last] dddd [at] LT",
  sameElse: "L"
};
function Kb(o, e, t) {
  var n = this._calendar[o] || this._calendar.sameElse;
  return Un(n) ? n.call(e, t) : n;
}
function Fn(o, e, t) {
  var n = "" + Math.abs(o), r = e - n.length, a = o >= 0;
  return (a ? t ? "+" : "" : "-") + Math.pow(10, Math.max(0, r)).toString().substr(1) + n;
}
var Mc = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, _a = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, Bl = {}, fs = {};
function Pe(o, e, t, n) {
  var r = n;
  typeof n == "string" && (r = function() {
    return this[n]();
  }), o && (fs[o] = r), e && (fs[e[0]] = function() {
    return Fn(r.apply(this, arguments), e[1], e[2]);
  }), t && (fs[t] = function() {
    return this.localeData().ordinal(
      r.apply(this, arguments),
      o
    );
  });
}
function Xb(o) {
  return o.match(/\[[\s\S]/) ? o.replace(/^\[|\]$/g, "") : o.replace(/\\/g, "");
}
function Jb(o) {
  var e = o.match(Mc), t, n;
  for (t = 0, n = e.length; t < n; t++)
    fs[e[t]] ? e[t] = fs[e[t]] : e[t] = Xb(e[t]);
  return function(r) {
    var a = "", c;
    for (c = 0; c < n; c++)
      a += Un(e[c]) ? e[c].call(r, o) : e[c];
    return a;
  };
}
function Ra(o, e) {
  return o.isValid() ? (e = Lu(e, o.localeData()), Bl[e] = Bl[e] || Jb(e), Bl[e](o)) : o.localeData().invalidDate();
}
function Lu(o, e) {
  var t = 5;
  function n(r) {
    return e.longDateFormat(r) || r;
  }
  for (_a.lastIndex = 0; t >= 0 && _a.test(o); )
    o = o.replace(
      _a,
      n
    ), _a.lastIndex = 0, t -= 1;
  return o;
}
var Qb = {
  LTS: "h:mm:ss A",
  LT: "h:mm A",
  L: "MM/DD/YYYY",
  LL: "MMMM D, YYYY",
  LLL: "MMMM D, YYYY h:mm A",
  LLLL: "dddd, MMMM D, YYYY h:mm A"
};
function ev(o) {
  var e = this._longDateFormat[o], t = this._longDateFormat[o.toUpperCase()];
  return e || !t ? e : (this._longDateFormat[o] = t.match(Mc).map(function(n) {
    return n === "MMMM" || n === "MM" || n === "DD" || n === "dddd" ? n.slice(1) : n;
  }).join(""), this._longDateFormat[o]);
}
var tv = "Invalid date";
function ov() {
  return this._invalidDate;
}
var nv = "%d", iv = /\d{1,2}/;
function rv(o) {
  return this._ordinal.replace("%d", o);
}
var sv = {
  future: "in %s",
  past: "%s ago",
  s: "a few seconds",
  ss: "%d seconds",
  m: "a minute",
  mm: "%d minutes",
  h: "an hour",
  hh: "%d hours",
  d: "a day",
  dd: "%d days",
  w: "a week",
  ww: "%d weeks",
  M: "a month",
  MM: "%d months",
  y: "a year",
  yy: "%d years"
};
function av(o, e, t, n) {
  var r = this._relativeTime[t];
  return Un(r) ? r(o, e, t, n) : r.replace(/%d/i, o);
}
function lv(o, e) {
  var t = this._relativeTime[o > 0 ? "future" : "past"];
  return Un(t) ? t(e) : t.replace(/%s/i, e);
}
var hh = {
  D: "date",
  dates: "date",
  date: "date",
  d: "day",
  days: "day",
  day: "day",
  e: "weekday",
  weekdays: "weekday",
  weekday: "weekday",
  E: "isoWeekday",
  isoweekdays: "isoWeekday",
  isoweekday: "isoWeekday",
  DDD: "dayOfYear",
  dayofyears: "dayOfYear",
  dayofyear: "dayOfYear",
  h: "hour",
  hours: "hour",
  hour: "hour",
  ms: "millisecond",
  milliseconds: "millisecond",
  millisecond: "millisecond",
  m: "minute",
  minutes: "minute",
  minute: "minute",
  M: "month",
  months: "month",
  month: "month",
  Q: "quarter",
  quarters: "quarter",
  quarter: "quarter",
  s: "second",
  seconds: "second",
  second: "second",
  gg: "weekYear",
  weekyears: "weekYear",
  weekyear: "weekYear",
  GG: "isoWeekYear",
  isoweekyears: "isoWeekYear",
  isoweekyear: "isoWeekYear",
  w: "week",
  weeks: "week",
  week: "week",
  W: "isoWeek",
  isoweeks: "isoWeek",
  isoweek: "isoWeek",
  y: "year",
  years: "year",
  year: "year"
};
function hn(o) {
  return typeof o == "string" ? hh[o] || hh[o.toLowerCase()] : void 0;
}
function Dc(o) {
  var e = {}, t, n;
  for (n in o)
    lt(o, n) && (t = hn(n), t && (e[t] = o[n]));
  return e;
}
var cv = {
  date: 9,
  day: 11,
  weekday: 11,
  isoWeekday: 11,
  dayOfYear: 4,
  hour: 13,
  millisecond: 16,
  minute: 14,
  month: 8,
  quarter: 7,
  second: 15,
  weekYear: 1,
  isoWeekYear: 1,
  week: 5,
  isoWeek: 5,
  year: 1
};
function dv(o) {
  var e = [], t;
  for (t in o)
    lt(o, t) && e.push({ unit: t, priority: cv[t] });
  return e.sort(function(n, r) {
    return n.priority - r.priority;
  }), e;
}
var Au = /\d/, en = /\d\d/, Bu = /\d{3}/, Oc = /\d{4}/, ol = /[+-]?\d{6}/, Rt = /\d\d?/, Ru = /\d\d\d\d?/, Iu = /\d\d\d\d\d\d?/, nl = /\d{1,3}/, Lc = /\d{1,4}/, il = /[+-]?\d{1,6}/, Ss = /\d+/, rl = /[+-]?\d+/, hv = /Z|[+-]\d\d:?\d\d/gi, sl = /Z|[+-]\d\d(?::?\d\d)?/gi, uv = /[+-]?\d+(\.\d{1,3})?/, wa = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i, Ts = /^[1-9]\d?/, Ac = /^([1-9]\d|\d)/, Ya;
Ya = {};
function Oe(o, e, t) {
  Ya[o] = Un(e) ? e : function(n, r) {
    return n && t ? t : e;
  };
}
function pv(o, e) {
  return lt(Ya, o) ? Ya[o](e._strict, e._locale) : new RegExp(fv(o));
}
function fv(o) {
  return Ci(
    o.replace("\\", "").replace(
      /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
      function(e, t, n, r, a) {
        return t || n || r || a;
      }
    )
  );
}
function Ci(o) {
  return o.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
}
function an(o) {
  return o < 0 ? Math.ceil(o) || 0 : Math.floor(o);
}
function et(o) {
  var e = +o, t = 0;
  return e !== 0 && isFinite(e) && (t = an(e)), t;
}
var tc = {};
function wt(o, e) {
  var t, n = e, r;
  for (typeof o == "string" && (o = [o]), Ei(e) && (n = function(a, c) {
    c[e] = et(a);
  }), r = o.length, t = 0; t < r; t++)
    tc[o[t]] = n;
}
function ka(o, e) {
  wt(o, function(t, n, r, a) {
    r._w = r._w || {}, e(t, r._w, r, a);
  });
}
function mv(o, e, t) {
  e != null && lt(tc, o) && tc[o](e, t._a, t, o);
}
function al(o) {
  return o % 4 === 0 && o % 100 !== 0 || o % 400 === 0;
}
var yo = 0, yi = 1, $n = 2, to = 3, Tn = 4, wi = 5, Br = 6, gv = 7, bv = 8;
Pe("Y", 0, 0, function() {
  var o = this.year();
  return o <= 9999 ? Fn(o, 4) : "+" + o;
});
Pe(0, ["YY", 2], 0, function() {
  return this.year() % 100;
});
Pe(0, ["YYYY", 4], 0, "year");
Pe(0, ["YYYYY", 5], 0, "year");
Pe(0, ["YYYYYY", 6, !0], 0, "year");
Oe("Y", rl);
Oe("YY", Rt, en);
Oe("YYYY", Lc, Oc);
Oe("YYYYY", il, ol);
Oe("YYYYYY", il, ol);
wt(["YYYYY", "YYYYYY"], yo);
wt("YYYY", function(o, e) {
  e[yo] = o.length === 2 ? ue.parseTwoDigitYear(o) : et(o);
});
wt("YY", function(o, e) {
  e[yo] = ue.parseTwoDigitYear(o);
});
wt("Y", function(o, e) {
  e[yo] = parseInt(o, 10);
});
function ra(o) {
  return al(o) ? 366 : 365;
}
ue.parseTwoDigitYear = function(o) {
  return et(o) + (et(o) > 68 ? 1900 : 2e3);
};
var Nu = _s("FullYear", !0);
function vv() {
  return al(this.year());
}
function _s(o, e) {
  return function(t) {
    return t != null ? (Pu(this, o, t), ue.updateOffset(this, e), this) : ca(this, o);
  };
}
function ca(o, e) {
  if (!o.isValid())
    return NaN;
  var t = o._d, n = o._isUTC;
  switch (e) {
    case "Milliseconds":
      return n ? t.getUTCMilliseconds() : t.getMilliseconds();
    case "Seconds":
      return n ? t.getUTCSeconds() : t.getSeconds();
    case "Minutes":
      return n ? t.getUTCMinutes() : t.getMinutes();
    case "Hours":
      return n ? t.getUTCHours() : t.getHours();
    case "Date":
      return n ? t.getUTCDate() : t.getDate();
    case "Day":
      return n ? t.getUTCDay() : t.getDay();
    case "Month":
      return n ? t.getUTCMonth() : t.getMonth();
    case "FullYear":
      return n ? t.getUTCFullYear() : t.getFullYear();
    default:
      return NaN;
  }
}
function Pu(o, e, t) {
  var n, r, a, c, u;
  if (!(!o.isValid() || isNaN(t))) {
    switch (n = o._d, r = o._isUTC, e) {
      case "Milliseconds":
        return void (r ? n.setUTCMilliseconds(t) : n.setMilliseconds(t));
      case "Seconds":
        return void (r ? n.setUTCSeconds(t) : n.setSeconds(t));
      case "Minutes":
        return void (r ? n.setUTCMinutes(t) : n.setMinutes(t));
      case "Hours":
        return void (r ? n.setUTCHours(t) : n.setHours(t));
      case "Date":
        return void (r ? n.setUTCDate(t) : n.setDate(t));
      case "FullYear":
        break;
      default:
        return;
    }
    a = t, c = o.month(), u = o.date(), u = u === 29 && c === 1 && !al(a) ? 28 : u, r ? n.setUTCFullYear(a, c, u) : n.setFullYear(a, c, u);
  }
}
function yv(o) {
  return o = hn(o), Un(this[o]) ? this[o]() : this;
}
function wv(o, e) {
  if (typeof o == "object") {
    o = Dc(o);
    var t = dv(o), n, r = t.length;
    for (n = 0; n < r; n++)
      this[t[n].unit](o[t[n].unit]);
  } else if (o = hn(o), Un(this[o]))
    return this[o](e);
  return this;
}
function kv(o, e) {
  return (o % e + e) % e;
}
var Zt;
Array.prototype.indexOf ? Zt = Array.prototype.indexOf : Zt = function(o) {
  var e;
  for (e = 0; e < this.length; ++e)
    if (this[e] === o)
      return e;
  return -1;
};
function Bc(o, e) {
  if (isNaN(o) || isNaN(e))
    return NaN;
  var t = kv(e, 12);
  return o += (e - t) / 12, t === 1 ? al(o) ? 29 : 28 : 31 - t % 7 % 2;
}
Pe("M", ["MM", 2], "Mo", function() {
  return this.month() + 1;
});
Pe("MMM", 0, 0, function(o) {
  return this.localeData().monthsShort(this, o);
});
Pe("MMMM", 0, 0, function(o) {
  return this.localeData().months(this, o);
});
Oe("M", Rt, Ts);
Oe("MM", Rt, en);
Oe("MMM", function(o, e) {
  return e.monthsShortRegex(o);
});
Oe("MMMM", function(o, e) {
  return e.monthsRegex(o);
});
wt(["M", "MM"], function(o, e) {
  e[yi] = et(o) - 1;
});
wt(["MMM", "MMMM"], function(o, e, t, n) {
  var r = t._locale.monthsParse(o, n, t._strict);
  r != null ? e[yi] = r : Ve(t).invalidMonth = o;
});
var xv = "January_February_March_April_May_June_July_August_September_October_November_December".split(
  "_"
), Hu = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), ju = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/, Cv = wa, Sv = wa;
function Tv(o, e) {
  return o ? Mn(this._months) ? this._months[o.month()] : this._months[(this._months.isFormat || ju).test(e) ? "format" : "standalone"][o.month()] : Mn(this._months) ? this._months : this._months.standalone;
}
function _v(o, e) {
  return o ? Mn(this._monthsShort) ? this._monthsShort[o.month()] : this._monthsShort[ju.test(e) ? "format" : "standalone"][o.month()] : Mn(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone;
}
function Ev(o, e, t) {
  var n, r, a, c = o.toLocaleLowerCase();
  if (!this._monthsParse)
    for (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = [], n = 0; n < 12; ++n)
      a = Wn([2e3, n]), this._shortMonthsParse[n] = this.monthsShort(
        a,
        ""
      ).toLocaleLowerCase(), this._longMonthsParse[n] = this.months(a, "").toLocaleLowerCase();
  return t ? e === "MMM" ? (r = Zt.call(this._shortMonthsParse, c), r !== -1 ? r : null) : (r = Zt.call(this._longMonthsParse, c), r !== -1 ? r : null) : e === "MMM" ? (r = Zt.call(this._shortMonthsParse, c), r !== -1 ? r : (r = Zt.call(this._longMonthsParse, c), r !== -1 ? r : null)) : (r = Zt.call(this._longMonthsParse, c), r !== -1 ? r : (r = Zt.call(this._shortMonthsParse, c), r !== -1 ? r : null));
}
function Mv(o, e, t) {
  var n, r, a;
  if (this._monthsParseExact)
    return Ev.call(this, o, e, t);
  for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), n = 0; n < 12; n++)
    if (r = Wn([2e3, n]), t && !this._longMonthsParse[n] && (this._longMonthsParse[n] = new RegExp(
      "^" + this.months(r, "").replace(".", "") + "$",
      "i"
    ), this._shortMonthsParse[n] = new RegExp(
      "^" + this.monthsShort(r, "").replace(".", "") + "$",
      "i"
    )), !t && !this._monthsParse[n] && (a = "^" + this.months(r, "") + "|^" + this.monthsShort(r, ""), this._monthsParse[n] = new RegExp(a.replace(".", ""), "i")), t && e === "MMMM" && this._longMonthsParse[n].test(o) || t && e === "MMM" && this._shortMonthsParse[n].test(o) || !t && this._monthsParse[n].test(o))
      return n;
}
function $u(o, e) {
  if (!o.isValid())
    return o;
  if (typeof e == "string") {
    if (/^\d+$/.test(e))
      e = et(e);
    else if (e = o.localeData().monthsParse(e), !Ei(e))
      return o;
  }
  var t = e, n = o.date();
  return n = n < 29 ? n : Math.min(n, Bc(o.year(), t)), o._isUTC ? o._d.setUTCMonth(t, n) : o._d.setMonth(t, n), o;
}
function Yu(o) {
  return o != null ? ($u(this, o), ue.updateOffset(this, !0), this) : ca(this, "Month");
}
function Dv() {
  return Bc(this.year(), this.month());
}
function Ov(o) {
  return this._monthsParseExact ? (lt(this, "_monthsRegex") || Fu.call(this), o ? this._monthsShortStrictRegex : this._monthsShortRegex) : (lt(this, "_monthsShortRegex") || (this._monthsShortRegex = Cv), this._monthsShortStrictRegex && o ? this._monthsShortStrictRegex : this._monthsShortRegex);
}
function Lv(o) {
  return this._monthsParseExact ? (lt(this, "_monthsRegex") || Fu.call(this), o ? this._monthsStrictRegex : this._monthsRegex) : (lt(this, "_monthsRegex") || (this._monthsRegex = Sv), this._monthsStrictRegex && o ? this._monthsStrictRegex : this._monthsRegex);
}
function Fu() {
  function o(p, g) {
    return g.length - p.length;
  }
  var e = [], t = [], n = [], r, a, c, u;
  for (r = 0; r < 12; r++)
    a = Wn([2e3, r]), c = Ci(this.monthsShort(a, "")), u = Ci(this.months(a, "")), e.push(c), t.push(u), n.push(u), n.push(c);
  e.sort(o), t.sort(o), n.sort(o), this._monthsRegex = new RegExp("^(" + n.join("|") + ")", "i"), this._monthsShortRegex = this._monthsRegex, this._monthsStrictRegex = new RegExp(
    "^(" + t.join("|") + ")",
    "i"
  ), this._monthsShortStrictRegex = new RegExp(
    "^(" + e.join("|") + ")",
    "i"
  );
}
function Av(o, e, t, n, r, a, c) {
  var u;
  return o < 100 && o >= 0 ? (u = new Date(o + 400, e, t, n, r, a, c), isFinite(u.getFullYear()) && u.setFullYear(o)) : u = new Date(o, e, t, n, r, a, c), u;
}
function da(o) {
  var e, t;
  return o < 100 && o >= 0 ? (t = Array.prototype.slice.call(arguments), t[0] = o + 400, e = new Date(Date.UTC.apply(null, t)), isFinite(e.getUTCFullYear()) && e.setUTCFullYear(o)) : e = new Date(Date.UTC.apply(null, arguments)), e;
}
function Fa(o, e, t) {
  var n = 7 + e - t, r = (7 + da(o, 0, n).getUTCDay() - e) % 7;
  return -r + n - 1;
}
function zu(o, e, t, n, r) {
  var a = (7 + t - n) % 7, c = Fa(o, n, r), u = 1 + 7 * (e - 1) + a + c, p, g;
  return u <= 0 ? (p = o - 1, g = ra(p) + u) : u > ra(o) ? (p = o + 1, g = u - ra(o)) : (p = o, g = u), {
    year: p,
    dayOfYear: g
  };
}
function ha(o, e, t) {
  var n = Fa(o.year(), e, t), r = Math.floor((o.dayOfYear() - n - 1) / 7) + 1, a, c;
  return r < 1 ? (c = o.year() - 1, a = r + Si(c, e, t)) : r > Si(o.year(), e, t) ? (a = r - Si(o.year(), e, t), c = o.year() + 1) : (c = o.year(), a = r), {
    week: a,
    year: c
  };
}
function Si(o, e, t) {
  var n = Fa(o, e, t), r = Fa(o + 1, e, t);
  return (ra(o) - n + r) / 7;
}
Pe("w", ["ww", 2], "wo", "week");
Pe("W", ["WW", 2], "Wo", "isoWeek");
Oe("w", Rt, Ts);
Oe("ww", Rt, en);
Oe("W", Rt, Ts);
Oe("WW", Rt, en);
ka(
  ["w", "ww", "W", "WW"],
  function(o, e, t, n) {
    e[n.substr(0, 1)] = et(o);
  }
);
function Bv(o) {
  return ha(o, this._week.dow, this._week.doy).week;
}
var Rv = {
  dow: 0,
  // Sunday is the first day of the week.
  doy: 6
  // The week that contains Jan 6th is the first week of the year.
};
function Iv() {
  return this._week.dow;
}
function Nv() {
  return this._week.doy;
}
function Pv(o) {
  var e = this.localeData().week(this);
  return o == null ? e : this.add((o - e) * 7, "d");
}
function Hv(o) {
  var e = ha(this, 1, 4).week;
  return o == null ? e : this.add((o - e) * 7, "d");
}
Pe("d", 0, "do", "day");
Pe("dd", 0, 0, function(o) {
  return this.localeData().weekdaysMin(this, o);
});
Pe("ddd", 0, 0, function(o) {
  return this.localeData().weekdaysShort(this, o);
});
Pe("dddd", 0, 0, function(o) {
  return this.localeData().weekdays(this, o);
});
Pe("e", 0, 0, "weekday");
Pe("E", 0, 0, "isoWeekday");
Oe("d", Rt);
Oe("e", Rt);
Oe("E", Rt);
Oe("dd", function(o, e) {
  return e.weekdaysMinRegex(o);
});
Oe("ddd", function(o, e) {
  return e.weekdaysShortRegex(o);
});
Oe("dddd", function(o, e) {
  return e.weekdaysRegex(o);
});
ka(["dd", "ddd", "dddd"], function(o, e, t, n) {
  var r = t._locale.weekdaysParse(o, n, t._strict);
  r != null ? e.d = r : Ve(t).invalidWeekday = o;
});
ka(["d", "e", "E"], function(o, e, t, n) {
  e[n] = et(o);
});
function jv(o, e) {
  return typeof o != "string" ? o : isNaN(o) ? (o = e.weekdaysParse(o), typeof o == "number" ? o : null) : parseInt(o, 10);
}
function $v(o, e) {
  return typeof o == "string" ? e.weekdaysParse(o) % 7 || 7 : isNaN(o) ? null : o;
}
function Rc(o, e) {
  return o.slice(e, 7).concat(o.slice(0, e));
}
var Yv = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), Wu = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), Fv = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), zv = wa, Wv = wa, Uv = wa;
function qv(o, e) {
  var t = Mn(this._weekdays) ? this._weekdays : this._weekdays[o && o !== !0 && this._weekdays.isFormat.test(e) ? "format" : "standalone"];
  return o === !0 ? Rc(t, this._week.dow) : o ? t[o.day()] : t;
}
function Vv(o) {
  return o === !0 ? Rc(this._weekdaysShort, this._week.dow) : o ? this._weekdaysShort[o.day()] : this._weekdaysShort;
}
function Gv(o) {
  return o === !0 ? Rc(this._weekdaysMin, this._week.dow) : o ? this._weekdaysMin[o.day()] : this._weekdaysMin;
}
function Zv(o, e, t) {
  var n, r, a, c = o.toLocaleLowerCase();
  if (!this._weekdaysParse)
    for (this._weekdaysParse = [], this._shortWeekdaysParse = [], this._minWeekdaysParse = [], n = 0; n < 7; ++n)
      a = Wn([2e3, 1]).day(n), this._minWeekdaysParse[n] = this.weekdaysMin(
        a,
        ""
      ).toLocaleLowerCase(), this._shortWeekdaysParse[n] = this.weekdaysShort(
        a,
        ""
      ).toLocaleLowerCase(), this._weekdaysParse[n] = this.weekdays(a, "").toLocaleLowerCase();
  return t ? e === "dddd" ? (r = Zt.call(this._weekdaysParse, c), r !== -1 ? r : null) : e === "ddd" ? (r = Zt.call(this._shortWeekdaysParse, c), r !== -1 ? r : null) : (r = Zt.call(this._minWeekdaysParse, c), r !== -1 ? r : null) : e === "dddd" ? (r = Zt.call(this._weekdaysParse, c), r !== -1 || (r = Zt.call(this._shortWeekdaysParse, c), r !== -1) ? r : (r = Zt.call(this._minWeekdaysParse, c), r !== -1 ? r : null)) : e === "ddd" ? (r = Zt.call(this._shortWeekdaysParse, c), r !== -1 || (r = Zt.call(this._weekdaysParse, c), r !== -1) ? r : (r = Zt.call(this._minWeekdaysParse, c), r !== -1 ? r : null)) : (r = Zt.call(this._minWeekdaysParse, c), r !== -1 || (r = Zt.call(this._weekdaysParse, c), r !== -1) ? r : (r = Zt.call(this._shortWeekdaysParse, c), r !== -1 ? r : null));
}
function Kv(o, e, t) {
  var n, r, a;
  if (this._weekdaysParseExact)
    return Zv.call(this, o, e, t);
  for (this._weekdaysParse || (this._weekdaysParse = [], this._minWeekdaysParse = [], this._shortWeekdaysParse = [], this._fullWeekdaysParse = []), n = 0; n < 7; n++)
    if (r = Wn([2e3, 1]).day(n), t && !this._fullWeekdaysParse[n] && (this._fullWeekdaysParse[n] = new RegExp(
      "^" + this.weekdays(r, "").replace(".", "\\.?") + "$",
      "i"
    ), this._shortWeekdaysParse[n] = new RegExp(
      "^" + this.weekdaysShort(r, "").replace(".", "\\.?") + "$",
      "i"
    ), this._minWeekdaysParse[n] = new RegExp(
      "^" + this.weekdaysMin(r, "").replace(".", "\\.?") + "$",
      "i"
    )), this._weekdaysParse[n] || (a = "^" + this.weekdays(r, "") + "|^" + this.weekdaysShort(r, "") + "|^" + this.weekdaysMin(r, ""), this._weekdaysParse[n] = new RegExp(a.replace(".", ""), "i")), t && e === "dddd" && this._fullWeekdaysParse[n].test(o) || t && e === "ddd" && this._shortWeekdaysParse[n].test(o) || t && e === "dd" && this._minWeekdaysParse[n].test(o) || !t && this._weekdaysParse[n].test(o))
      return n;
}
function Xv(o) {
  if (!this.isValid())
    return o != null ? this : NaN;
  var e = ca(this, "Day");
  return o != null ? (o = jv(o, this.localeData()), this.add(o - e, "d")) : e;
}
function Jv(o) {
  if (!this.isValid())
    return o != null ? this : NaN;
  var e = (this.day() + 7 - this.localeData()._week.dow) % 7;
  return o == null ? e : this.add(o - e, "d");
}
function Qv(o) {
  if (!this.isValid())
    return o != null ? this : NaN;
  if (o != null) {
    var e = $v(o, this.localeData());
    return this.day(this.day() % 7 ? e : e - 7);
  } else
    return this.day() || 7;
}
function e0(o) {
  return this._weekdaysParseExact ? (lt(this, "_weekdaysRegex") || Ic.call(this), o ? this._weekdaysStrictRegex : this._weekdaysRegex) : (lt(this, "_weekdaysRegex") || (this._weekdaysRegex = zv), this._weekdaysStrictRegex && o ? this._weekdaysStrictRegex : this._weekdaysRegex);
}
function t0(o) {
  return this._weekdaysParseExact ? (lt(this, "_weekdaysRegex") || Ic.call(this), o ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (lt(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = Wv), this._weekdaysShortStrictRegex && o ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex);
}
function o0(o) {
  return this._weekdaysParseExact ? (lt(this, "_weekdaysRegex") || Ic.call(this), o ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (lt(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = Uv), this._weekdaysMinStrictRegex && o ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex);
}
function Ic() {
  function o(v, x) {
    return x.length - v.length;
  }
  var e = [], t = [], n = [], r = [], a, c, u, p, g;
  for (a = 0; a < 7; a++)
    c = Wn([2e3, 1]).day(a), u = Ci(this.weekdaysMin(c, "")), p = Ci(this.weekdaysShort(c, "")), g = Ci(this.weekdays(c, "")), e.push(u), t.push(p), n.push(g), r.push(u), r.push(p), r.push(g);
  e.sort(o), t.sort(o), n.sort(o), r.sort(o), this._weekdaysRegex = new RegExp("^(" + r.join("|") + ")", "i"), this._weekdaysShortRegex = this._weekdaysRegex, this._weekdaysMinRegex = this._weekdaysRegex, this._weekdaysStrictRegex = new RegExp(
    "^(" + n.join("|") + ")",
    "i"
  ), this._weekdaysShortStrictRegex = new RegExp(
    "^(" + t.join("|") + ")",
    "i"
  ), this._weekdaysMinStrictRegex = new RegExp(
    "^(" + e.join("|") + ")",
    "i"
  );
}
function Nc() {
  return this.hours() % 12 || 12;
}
function n0() {
  return this.hours() || 24;
}
Pe("H", ["HH", 2], 0, "hour");
Pe("h", ["hh", 2], 0, Nc);
Pe("k", ["kk", 2], 0, n0);
Pe("hmm", 0, 0, function() {
  return "" + Nc.apply(this) + Fn(this.minutes(), 2);
});
Pe("hmmss", 0, 0, function() {
  return "" + Nc.apply(this) + Fn(this.minutes(), 2) + Fn(this.seconds(), 2);
});
Pe("Hmm", 0, 0, function() {
  return "" + this.hours() + Fn(this.minutes(), 2);
});
Pe("Hmmss", 0, 0, function() {
  return "" + this.hours() + Fn(this.minutes(), 2) + Fn(this.seconds(), 2);
});
function Uu(o, e) {
  Pe(o, 0, 0, function() {
    return this.localeData().meridiem(
      this.hours(),
      this.minutes(),
      e
    );
  });
}
Uu("a", !0);
Uu("A", !1);
function qu(o, e) {
  return e._meridiemParse;
}
Oe("a", qu);
Oe("A", qu);
Oe("H", Rt, Ac);
Oe("h", Rt, Ts);
Oe("k", Rt, Ts);
Oe("HH", Rt, en);
Oe("hh", Rt, en);
Oe("kk", Rt, en);
Oe("hmm", Ru);
Oe("hmmss", Iu);
Oe("Hmm", Ru);
Oe("Hmmss", Iu);
wt(["H", "HH"], to);
wt(["k", "kk"], function(o, e, t) {
  var n = et(o);
  e[to] = n === 24 ? 0 : n;
});
wt(["a", "A"], function(o, e, t) {
  t._isPm = t._locale.isPM(o), t._meridiem = o;
});
wt(["h", "hh"], function(o, e, t) {
  e[to] = et(o), Ve(t).bigHour = !0;
});
wt("hmm", function(o, e, t) {
  var n = o.length - 2;
  e[to] = et(o.substr(0, n)), e[Tn] = et(o.substr(n)), Ve(t).bigHour = !0;
});
wt("hmmss", function(o, e, t) {
  var n = o.length - 4, r = o.length - 2;
  e[to] = et(o.substr(0, n)), e[Tn] = et(o.substr(n, 2)), e[wi] = et(o.substr(r)), Ve(t).bigHour = !0;
});
wt("Hmm", function(o, e, t) {
  var n = o.length - 2;
  e[to] = et(o.substr(0, n)), e[Tn] = et(o.substr(n));
});
wt("Hmmss", function(o, e, t) {
  var n = o.length - 4, r = o.length - 2;
  e[to] = et(o.substr(0, n)), e[Tn] = et(o.substr(n, 2)), e[wi] = et(o.substr(r));
});
function i0(o) {
  return (o + "").toLowerCase().charAt(0) === "p";
}
var r0 = /[ap]\.?m?\.?/i, s0 = _s("Hours", !0);
function a0(o, e, t) {
  return o > 11 ? t ? "pm" : "PM" : t ? "am" : "AM";
}
var Vu = {
  calendar: Zb,
  longDateFormat: Qb,
  invalidDate: tv,
  ordinal: nv,
  dayOfMonthOrdinalParse: iv,
  relativeTime: sv,
  months: xv,
  monthsShort: Hu,
  week: Rv,
  weekdays: Yv,
  weekdaysMin: Fv,
  weekdaysShort: Wu,
  meridiemParse: r0
}, Ht = {}, Js = {}, ua;
function l0(o, e) {
  var t, n = Math.min(o.length, e.length);
  for (t = 0; t < n; t += 1)
    if (o[t] !== e[t])
      return t;
  return n;
}
function uh(o) {
  return o && o.toLowerCase().replace("_", "-");
}
function c0(o) {
  for (var e = 0, t, n, r, a; e < o.length; ) {
    for (a = uh(o[e]).split("-"), t = a.length, n = uh(o[e + 1]), n = n ? n.split("-") : null; t > 0; ) {
      if (r = ll(a.slice(0, t).join("-")), r)
        return r;
      if (n && n.length >= t && l0(a, n) >= t - 1)
        break;
      t--;
    }
    e++;
  }
  return ua;
}
function d0(o) {
  return !!(o && o.match("^[^/\\\\]*$"));
}
function ll(o) {
  var e = null, t;
  if (Ht[o] === void 0 && typeof module < "u" && module && module.exports && d0(o))
    try {
      e = ua._abbr, t = require, t("./locale/" + o), tr(e);
    } catch {
      Ht[o] = null;
    }
  return Ht[o];
}
function tr(o, e) {
  var t;
  return o && (Ho(e) ? t = Di(o) : t = Pc(o, e), t ? ua = t : typeof console < "u" && console.warn && console.warn(
    "Locale " + o + " not found. Did you forget to load it?"
  )), ua._abbr;
}
function Pc(o, e) {
  if (e !== null) {
    var t, n = Vu;
    if (e.abbr = o, Ht[o] != null)
      Ou(
        "defineLocaleOverride",
        "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
      ), n = Ht[o]._config;
    else if (e.parentLocale != null)
      if (Ht[e.parentLocale] != null)
        n = Ht[e.parentLocale]._config;
      else if (t = ll(e.parentLocale), t != null)
        n = t._config;
      else
        return Js[e.parentLocale] || (Js[e.parentLocale] = []), Js[e.parentLocale].push({
          name: o,
          config: e
        }), null;
    return Ht[o] = new Ec(Ql(n, e)), Js[o] && Js[o].forEach(function(r) {
      Pc(r.name, r.config);
    }), tr(o), Ht[o];
  } else
    return delete Ht[o], null;
}
function h0(o, e) {
  if (e != null) {
    var t, n, r = Vu;
    Ht[o] != null && Ht[o].parentLocale != null ? Ht[o].set(Ql(Ht[o]._config, e)) : (n = ll(o), n != null && (r = n._config), e = Ql(r, e), n == null && (e.abbr = o), t = new Ec(e), t.parentLocale = Ht[o], Ht[o] = t), tr(o);
  } else
    Ht[o] != null && (Ht[o].parentLocale != null ? (Ht[o] = Ht[o].parentLocale, o === tr() && tr(o)) : Ht[o] != null && delete Ht[o]);
  return Ht[o];
}
function Di(o) {
  var e;
  if (o && o._locale && o._locale._abbr && (o = o._locale._abbr), !o)
    return ua;
  if (!Mn(o)) {
    if (e = ll(o), e)
      return e;
    o = [o];
  }
  return c0(o);
}
function u0() {
  return ec(Ht);
}
function Hc(o) {
  var e, t = o._a;
  return t && Ve(o).overflow === -2 && (e = t[yi] < 0 || t[yi] > 11 ? yi : t[$n] < 1 || t[$n] > Bc(t[yo], t[yi]) ? $n : t[to] < 0 || t[to] > 24 || t[to] === 24 && (t[Tn] !== 0 || t[wi] !== 0 || t[Br] !== 0) ? to : t[Tn] < 0 || t[Tn] > 59 ? Tn : t[wi] < 0 || t[wi] > 59 ? wi : t[Br] < 0 || t[Br] > 999 ? Br : -1, Ve(o)._overflowDayOfYear && (e < yo || e > $n) && (e = $n), Ve(o)._overflowWeeks && e === -1 && (e = gv), Ve(o)._overflowWeekday && e === -1 && (e = bv), Ve(o).overflow = e), o;
}
var p0 = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, f0 = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, m0 = /Z|[+-]\d\d(?::?\d\d)?/, Ea = [
  ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
  ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
  ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
  ["GGGG-[W]WW", /\d{4}-W\d\d/, !1],
  ["YYYY-DDD", /\d{4}-\d{3}/],
  ["YYYY-MM", /\d{4}-\d\d/, !1],
  ["YYYYYYMMDD", /[+-]\d{10}/],
  ["YYYYMMDD", /\d{8}/],
  ["GGGG[W]WWE", /\d{4}W\d{3}/],
  ["GGGG[W]WW", /\d{4}W\d{2}/, !1],
  ["YYYYDDD", /\d{7}/],
  ["YYYYMM", /\d{6}/, !1],
  ["YYYY", /\d{4}/, !1]
], Rl = [
  ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
  ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
  ["HH:mm:ss", /\d\d:\d\d:\d\d/],
  ["HH:mm", /\d\d:\d\d/],
  ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
  ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
  ["HHmmss", /\d\d\d\d\d\d/],
  ["HHmm", /\d\d\d\d/],
  ["HH", /\d\d/]
], g0 = /^\/?Date\((-?\d+)/i, b0 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/, v0 = {
  UT: 0,
  GMT: 0,
  EDT: -4 * 60,
  EST: -5 * 60,
  CDT: -5 * 60,
  CST: -6 * 60,
  MDT: -6 * 60,
  MST: -7 * 60,
  PDT: -7 * 60,
  PST: -8 * 60
};
function Gu(o) {
  var e, t, n = o._i, r = p0.exec(n) || f0.exec(n), a, c, u, p, g = Ea.length, v = Rl.length;
  if (r) {
    for (Ve(o).iso = !0, e = 0, t = g; e < t; e++)
      if (Ea[e][1].exec(r[1])) {
        c = Ea[e][0], a = Ea[e][2] !== !1;
        break;
      }
    if (c == null) {
      o._isValid = !1;
      return;
    }
    if (r[3]) {
      for (e = 0, t = v; e < t; e++)
        if (Rl[e][1].exec(r[3])) {
          u = (r[2] || " ") + Rl[e][0];
          break;
        }
      if (u == null) {
        o._isValid = !1;
        return;
      }
    }
    if (!a && u != null) {
      o._isValid = !1;
      return;
    }
    if (r[4])
      if (m0.exec(r[4]))
        p = "Z";
      else {
        o._isValid = !1;
        return;
      }
    o._f = c + (u || "") + (p || ""), $c(o);
  } else
    o._isValid = !1;
}
function y0(o, e, t, n, r, a) {
  var c = [
    w0(o),
    Hu.indexOf(e),
    parseInt(t, 10),
    parseInt(n, 10),
    parseInt(r, 10)
  ];
  return a && c.push(parseInt(a, 10)), c;
}
function w0(o) {
  var e = parseInt(o, 10);
  return e <= 49 ? 2e3 + e : e <= 999 ? 1900 + e : e;
}
function k0(o) {
  return o.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
}
function x0(o, e, t) {
  if (o) {
    var n = Wu.indexOf(o), r = new Date(
      e[0],
      e[1],
      e[2]
    ).getDay();
    if (n !== r)
      return Ve(t).weekdayMismatch = !0, t._isValid = !1, !1;
  }
  return !0;
}
function C0(o, e, t) {
  if (o)
    return v0[o];
  if (e)
    return 0;
  var n = parseInt(t, 10), r = n % 100, a = (n - r) / 100;
  return a * 60 + r;
}
function Zu(o) {
  var e = b0.exec(k0(o._i)), t;
  if (e) {
    if (t = y0(
      e[4],
      e[3],
      e[2],
      e[5],
      e[6],
      e[7]
    ), !x0(e[1], t, o))
      return;
    o._a = t, o._tzm = C0(e[8], e[9], e[10]), o._d = da.apply(null, o._a), o._d.setUTCMinutes(o._d.getUTCMinutes() - o._tzm), Ve(o).rfc2822 = !0;
  } else
    o._isValid = !1;
}
function S0(o) {
  var e = g0.exec(o._i);
  if (e !== null) {
    o._d = /* @__PURE__ */ new Date(+e[1]);
    return;
  }
  if (Gu(o), o._isValid === !1)
    delete o._isValid;
  else
    return;
  if (Zu(o), o._isValid === !1)
    delete o._isValid;
  else
    return;
  o._strict ? o._isValid = !1 : ue.createFromInputFallback(o);
}
ue.createFromInputFallback = dn(
  "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",
  function(o) {
    o._d = /* @__PURE__ */ new Date(o._i + (o._useUTC ? " UTC" : ""));
  }
);
function ls(o, e, t) {
  return o ?? e ?? t;
}
function T0(o) {
  var e = new Date(ue.now());
  return o._useUTC ? [
    e.getUTCFullYear(),
    e.getUTCMonth(),
    e.getUTCDate()
  ] : [e.getFullYear(), e.getMonth(), e.getDate()];
}
function jc(o) {
  var e, t, n = [], r, a, c;
  if (!o._d) {
    for (r = T0(o), o._w && o._a[$n] == null && o._a[yi] == null && _0(o), o._dayOfYear != null && (c = ls(o._a[yo], r[yo]), (o._dayOfYear > ra(c) || o._dayOfYear === 0) && (Ve(o)._overflowDayOfYear = !0), t = da(c, 0, o._dayOfYear), o._a[yi] = t.getUTCMonth(), o._a[$n] = t.getUTCDate()), e = 0; e < 3 && o._a[e] == null; ++e)
      o._a[e] = n[e] = r[e];
    for (; e < 7; e++)
      o._a[e] = n[e] = o._a[e] == null ? e === 2 ? 1 : 0 : o._a[e];
    o._a[to] === 24 && o._a[Tn] === 0 && o._a[wi] === 0 && o._a[Br] === 0 && (o._nextDay = !0, o._a[to] = 0), o._d = (o._useUTC ? da : Av).apply(
      null,
      n
    ), a = o._useUTC ? o._d.getUTCDay() : o._d.getDay(), o._tzm != null && o._d.setUTCMinutes(o._d.getUTCMinutes() - o._tzm), o._nextDay && (o._a[to] = 24), o._w && typeof o._w.d < "u" && o._w.d !== a && (Ve(o).weekdayMismatch = !0);
  }
}
function _0(o) {
  var e, t, n, r, a, c, u, p, g;
  e = o._w, e.GG != null || e.W != null || e.E != null ? (a = 1, c = 4, t = ls(
    e.GG,
    o._a[yo],
    ha(At(), 1, 4).year
  ), n = ls(e.W, 1), r = ls(e.E, 1), (r < 1 || r > 7) && (p = !0)) : (a = o._locale._week.dow, c = o._locale._week.doy, g = ha(At(), a, c), t = ls(e.gg, o._a[yo], g.year), n = ls(e.w, g.week), e.d != null ? (r = e.d, (r < 0 || r > 6) && (p = !0)) : e.e != null ? (r = e.e + a, (e.e < 0 || e.e > 6) && (p = !0)) : r = a), n < 1 || n > Si(t, a, c) ? Ve(o)._overflowWeeks = !0 : p != null ? Ve(o)._overflowWeekday = !0 : (u = zu(t, n, r, a, c), o._a[yo] = u.year, o._dayOfYear = u.dayOfYear);
}
ue.ISO_8601 = function() {
};
ue.RFC_2822 = function() {
};
function $c(o) {
  if (o._f === ue.ISO_8601) {
    Gu(o);
    return;
  }
  if (o._f === ue.RFC_2822) {
    Zu(o);
    return;
  }
  o._a = [], Ve(o).empty = !0;
  var e = "" + o._i, t, n, r, a, c, u = e.length, p = 0, g, v;
  for (r = Lu(o._f, o._locale).match(Mc) || [], v = r.length, t = 0; t < v; t++)
    a = r[t], n = (e.match(pv(a, o)) || [])[0], n && (c = e.substr(0, e.indexOf(n)), c.length > 0 && Ve(o).unusedInput.push(c), e = e.slice(
      e.indexOf(n) + n.length
    ), p += n.length), fs[a] ? (n ? Ve(o).empty = !1 : Ve(o).unusedTokens.push(a), mv(a, n, o)) : o._strict && !n && Ve(o).unusedTokens.push(a);
  Ve(o).charsLeftOver = u - p, e.length > 0 && Ve(o).unusedInput.push(e), o._a[to] <= 12 && Ve(o).bigHour === !0 && o._a[to] > 0 && (Ve(o).bigHour = void 0), Ve(o).parsedDateParts = o._a.slice(0), Ve(o).meridiem = o._meridiem, o._a[to] = E0(
    o._locale,
    o._a[to],
    o._meridiem
  ), g = Ve(o).era, g !== null && (o._a[yo] = o._locale.erasConvertYear(g, o._a[yo])), jc(o), Hc(o);
}
function E0(o, e, t) {
  var n;
  return t == null ? e : o.meridiemHour != null ? o.meridiemHour(e, t) : (o.isPM != null && (n = o.isPM(t), n && e < 12 && (e += 12), !n && e === 12 && (e = 0)), e);
}
function M0(o) {
  var e, t, n, r, a, c, u = !1, p = o._f.length;
  if (p === 0) {
    Ve(o).invalidFormat = !0, o._d = /* @__PURE__ */ new Date(NaN);
    return;
  }
  for (r = 0; r < p; r++)
    a = 0, c = !1, e = _c({}, o), o._useUTC != null && (e._useUTC = o._useUTC), e._f = o._f[r], $c(e), Tc(e) && (c = !0), a += Ve(e).charsLeftOver, a += Ve(e).unusedTokens.length * 10, Ve(e).score = a, u ? a < n && (n = a, t = e) : (n == null || a < n || c) && (n = a, t = e, c && (u = !0));
  Xi(o, t || e);
}
function D0(o) {
  if (!o._d) {
    var e = Dc(o._i), t = e.day === void 0 ? e.date : e.day;
    o._a = Mu(
      [e.year, e.month, t, e.hour, e.minute, e.second, e.millisecond],
      function(n) {
        return n && parseInt(n, 10);
      }
    ), jc(o);
  }
}
function O0(o) {
  var e = new ya(Hc(Ku(o)));
  return e._nextDay && (e.add(1, "d"), e._nextDay = void 0), e;
}
function Ku(o) {
  var e = o._i, t = o._f;
  return o._locale = o._locale || Di(o._l), e === null || t === void 0 && e === "" ? tl({ nullInput: !0 }) : (typeof e == "string" && (o._i = e = o._locale.preparse(e)), Dn(e) ? new ya(Hc(e)) : (va(e) ? o._d = e : Mn(t) ? M0(o) : t ? $c(o) : L0(o), Tc(o) || (o._d = null), o));
}
function L0(o) {
  var e = o._i;
  Ho(e) ? o._d = new Date(ue.now()) : va(e) ? o._d = new Date(e.valueOf()) : typeof e == "string" ? S0(o) : Mn(e) ? (o._a = Mu(e.slice(0), function(t) {
    return parseInt(t, 10);
  }), jc(o)) : Nr(e) ? D0(o) : Ei(e) ? o._d = new Date(e) : ue.createFromInputFallback(o);
}
function Xu(o, e, t, n, r) {
  var a = {};
  return (e === !0 || e === !1) && (n = e, e = void 0), (t === !0 || t === !1) && (n = t, t = void 0), (Nr(o) && Sc(o) || Mn(o) && o.length === 0) && (o = void 0), a._isAMomentObject = !0, a._useUTC = a._isUTC = r, a._l = t, a._i = o, a._f = e, a._strict = n, O0(a);
}
function At(o, e, t, n) {
  return Xu(o, e, t, n, !1);
}
var A0 = dn(
  "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",
  function() {
    var o = At.apply(null, arguments);
    return this.isValid() && o.isValid() ? o < this ? this : o : tl();
  }
), B0 = dn(
  "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",
  function() {
    var o = At.apply(null, arguments);
    return this.isValid() && o.isValid() ? o > this ? this : o : tl();
  }
);
function Ju(o, e) {
  var t, n;
  if (e.length === 1 && Mn(e[0]) && (e = e[0]), !e.length)
    return At();
  for (t = e[0], n = 1; n < e.length; ++n)
    (!e[n].isValid() || e[n][o](t)) && (t = e[n]);
  return t;
}
function R0() {
  var o = [].slice.call(arguments, 0);
  return Ju("isBefore", o);
}
function I0() {
  var o = [].slice.call(arguments, 0);
  return Ju("isAfter", o);
}
var N0 = function() {
  return Date.now ? Date.now() : +/* @__PURE__ */ new Date();
}, Qs = [
  "year",
  "quarter",
  "month",
  "week",
  "day",
  "hour",
  "minute",
  "second",
  "millisecond"
];
function P0(o) {
  var e, t = !1, n, r = Qs.length;
  for (e in o)
    if (lt(o, e) && !(Zt.call(Qs, e) !== -1 && (o[e] == null || !isNaN(o[e]))))
      return !1;
  for (n = 0; n < r; ++n)
    if (o[Qs[n]]) {
      if (t)
        return !1;
      parseFloat(o[Qs[n]]) !== et(o[Qs[n]]) && (t = !0);
    }
  return !0;
}
function H0() {
  return this._isValid;
}
function j0() {
  return Bn(NaN);
}
function cl(o) {
  var e = Dc(o), t = e.year || 0, n = e.quarter || 0, r = e.month || 0, a = e.week || e.isoWeek || 0, c = e.day || 0, u = e.hour || 0, p = e.minute || 0, g = e.second || 0, v = e.millisecond || 0;
  this._isValid = P0(e), this._milliseconds = +v + g * 1e3 + // 1000
  p * 6e4 + // 1000 * 60
  u * 1e3 * 60 * 60, this._days = +c + a * 7, this._months = +r + n * 3 + t * 12, this._data = {}, this._locale = Di(), this._bubble();
}
function Ia(o) {
  return o instanceof cl;
}
function oc(o) {
  return o < 0 ? Math.round(-1 * o) * -1 : Math.round(o);
}
function $0(o, e, t) {
  var n = Math.min(o.length, e.length), r = Math.abs(o.length - e.length), a = 0, c;
  for (c = 0; c < n; c++)
    (t && o[c] !== e[c] || !t && et(o[c]) !== et(e[c])) && a++;
  return a + r;
}
function Qu(o, e) {
  Pe(o, 0, 0, function() {
    var t = this.utcOffset(), n = "+";
    return t < 0 && (t = -t, n = "-"), n + Fn(~~(t / 60), 2) + e + Fn(~~t % 60, 2);
  });
}
Qu("Z", ":");
Qu("ZZ", "");
Oe("Z", sl);
Oe("ZZ", sl);
wt(["Z", "ZZ"], function(o, e, t) {
  t._useUTC = !0, t._tzm = Yc(sl, o);
});
var Y0 = /([\+\-]|\d\d)/gi;
function Yc(o, e) {
  var t = (e || "").match(o), n, r, a;
  return t === null ? null : (n = t[t.length - 1] || [], r = (n + "").match(Y0) || ["-", 0, 0], a = +(r[1] * 60) + et(r[2]), a === 0 ? 0 : r[0] === "+" ? a : -a);
}
function Fc(o, e) {
  var t, n;
  return e._isUTC ? (t = e.clone(), n = (Dn(o) || va(o) ? o.valueOf() : At(o).valueOf()) - t.valueOf(), t._d.setTime(t._d.valueOf() + n), ue.updateOffset(t, !1), t) : At(o).local();
}
function nc(o) {
  return -Math.round(o._d.getTimezoneOffset());
}
ue.updateOffset = function() {
};
function F0(o, e, t) {
  var n = this._offset || 0, r;
  if (!this.isValid())
    return o != null ? this : NaN;
  if (o != null) {
    if (typeof o == "string") {
      if (o = Yc(sl, o), o === null)
        return this;
    } else
      Math.abs(o) < 16 && !t && (o = o * 60);
    return !this._isUTC && e && (r = nc(this)), this._offset = o, this._isUTC = !0, r != null && this.add(r, "m"), n !== o && (!e || this._changeInProgress ? op(
      this,
      Bn(o - n, "m"),
      1,
      !1
    ) : this._changeInProgress || (this._changeInProgress = !0, ue.updateOffset(this, !0), this._changeInProgress = null)), this;
  } else
    return this._isUTC ? n : nc(this);
}
function z0(o, e) {
  return o != null ? (typeof o != "string" && (o = -o), this.utcOffset(o, e), this) : -this.utcOffset();
}
function W0(o) {
  return this.utcOffset(0, o);
}
function U0(o) {
  return this._isUTC && (this.utcOffset(0, o), this._isUTC = !1, o && this.subtract(nc(this), "m")), this;
}
function q0() {
  if (this._tzm != null)
    this.utcOffset(this._tzm, !1, !0);
  else if (typeof this._i == "string") {
    var o = Yc(hv, this._i);
    o != null ? this.utcOffset(o) : this.utcOffset(0, !0);
  }
  return this;
}
function V0(o) {
  return this.isValid() ? (o = o ? At(o).utcOffset() : 0, (this.utcOffset() - o) % 60 === 0) : !1;
}
function G0() {
  return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
}
function Z0() {
  if (!Ho(this._isDSTShifted))
    return this._isDSTShifted;
  var o = {}, e;
  return _c(o, this), o = Ku(o), o._a ? (e = o._isUTC ? Wn(o._a) : At(o._a), this._isDSTShifted = this.isValid() && $0(o._a, e.toArray()) > 0) : this._isDSTShifted = !1, this._isDSTShifted;
}
function K0() {
  return this.isValid() ? !this._isUTC : !1;
}
function X0() {
  return this.isValid() ? this._isUTC : !1;
}
function ep() {
  return this.isValid() ? this._isUTC && this._offset === 0 : !1;
}
var J0 = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/, Q0 = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
function Bn(o, e) {
  var t = o, n = null, r, a, c;
  return Ia(o) ? t = {
    ms: o._milliseconds,
    d: o._days,
    M: o._months
  } : Ei(o) || !isNaN(+o) ? (t = {}, e ? t[e] = +o : t.milliseconds = +o) : (n = J0.exec(o)) ? (r = n[1] === "-" ? -1 : 1, t = {
    y: 0,
    d: et(n[$n]) * r,
    h: et(n[to]) * r,
    m: et(n[Tn]) * r,
    s: et(n[wi]) * r,
    ms: et(oc(n[Br] * 1e3)) * r
    // the millisecond decimal point is included in the match
  }) : (n = Q0.exec(o)) ? (r = n[1] === "-" ? -1 : 1, t = {
    y: Or(n[2], r),
    M: Or(n[3], r),
    w: Or(n[4], r),
    d: Or(n[5], r),
    h: Or(n[6], r),
    m: Or(n[7], r),
    s: Or(n[8], r)
  }) : t == null ? t = {} : typeof t == "object" && ("from" in t || "to" in t) && (c = ey(
    At(t.from),
    At(t.to)
  ), t = {}, t.ms = c.milliseconds, t.M = c.months), a = new cl(t), Ia(o) && lt(o, "_locale") && (a._locale = o._locale), Ia(o) && lt(o, "_isValid") && (a._isValid = o._isValid), a;
}
Bn.fn = cl.prototype;
Bn.invalid = j0;
function Or(o, e) {
  var t = o && parseFloat(o.replace(",", "."));
  return (isNaN(t) ? 0 : t) * e;
}
function ph(o, e) {
  var t = {};
  return t.months = e.month() - o.month() + (e.year() - o.year()) * 12, o.clone().add(t.months, "M").isAfter(e) && --t.months, t.milliseconds = +e - +o.clone().add(t.months, "M"), t;
}
function ey(o, e) {
  var t;
  return o.isValid() && e.isValid() ? (e = Fc(e, o), o.isBefore(e) ? t = ph(o, e) : (t = ph(e, o), t.milliseconds = -t.milliseconds, t.months = -t.months), t) : { milliseconds: 0, months: 0 };
}
function tp(o, e) {
  return function(t, n) {
    var r, a;
    return n !== null && !isNaN(+n) && (Ou(
      e,
      "moment()." + e + "(period, number) is deprecated. Please use moment()." + e + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."
    ), a = t, t = n, n = a), r = Bn(t, n), op(this, r, o), this;
  };
}
function op(o, e, t, n) {
  var r = e._milliseconds, a = oc(e._days), c = oc(e._months);
  o.isValid() && (n = n ?? !0, c && $u(o, ca(o, "Month") + c * t), a && Pu(o, "Date", ca(o, "Date") + a * t), r && o._d.setTime(o._d.valueOf() + r * t), n && ue.updateOffset(o, a || c));
}
var ty = tp(1, "add"), oy = tp(-1, "subtract");
function np(o) {
  return typeof o == "string" || o instanceof String;
}
function ny(o) {
  return Dn(o) || va(o) || np(o) || Ei(o) || ry(o) || iy(o) || o === null || o === void 0;
}
function iy(o) {
  var e = Nr(o) && !Sc(o), t = !1, n = [
    "years",
    "year",
    "y",
    "months",
    "month",
    "M",
    "days",
    "day",
    "d",
    "dates",
    "date",
    "D",
    "hours",
    "hour",
    "h",
    "minutes",
    "minute",
    "m",
    "seconds",
    "second",
    "s",
    "milliseconds",
    "millisecond",
    "ms"
  ], r, a, c = n.length;
  for (r = 0; r < c; r += 1)
    a = n[r], t = t || lt(o, a);
  return e && t;
}
function ry(o) {
  var e = Mn(o), t = !1;
  return e && (t = o.filter(function(n) {
    return !Ei(n) && np(o);
  }).length === 0), e && t;
}
function sy(o) {
  var e = Nr(o) && !Sc(o), t = !1, n = [
    "sameDay",
    "nextDay",
    "lastDay",
    "nextWeek",
    "lastWeek",
    "sameElse"
  ], r, a;
  for (r = 0; r < n.length; r += 1)
    a = n[r], t = t || lt(o, a);
  return e && t;
}
function ay(o, e) {
  var t = o.diff(e, "days", !0);
  return t < -6 ? "sameElse" : t < -1 ? "lastWeek" : t < 0 ? "lastDay" : t < 1 ? "sameDay" : t < 2 ? "nextDay" : t < 7 ? "nextWeek" : "sameElse";
}
function ly(o, e) {
  arguments.length === 1 && (arguments[0] ? ny(arguments[0]) ? (o = arguments[0], e = void 0) : sy(arguments[0]) && (e = arguments[0], o = void 0) : (o = void 0, e = void 0));
  var t = o || At(), n = Fc(t, this).startOf("day"), r = ue.calendarFormat(this, n) || "sameElse", a = e && (Un(e[r]) ? e[r].call(this, t) : e[r]);
  return this.format(
    a || this.localeData().calendar(r, this, At(t))
  );
}
function cy() {
  return new ya(this);
}
function dy(o, e) {
  var t = Dn(o) ? o : At(o);
  return this.isValid() && t.isValid() ? (e = hn(e) || "millisecond", e === "millisecond" ? this.valueOf() > t.valueOf() : t.valueOf() < this.clone().startOf(e).valueOf()) : !1;
}
function hy(o, e) {
  var t = Dn(o) ? o : At(o);
  return this.isValid() && t.isValid() ? (e = hn(e) || "millisecond", e === "millisecond" ? this.valueOf() < t.valueOf() : this.clone().endOf(e).valueOf() < t.valueOf()) : !1;
}
function uy(o, e, t, n) {
  var r = Dn(o) ? o : At(o), a = Dn(e) ? e : At(e);
  return this.isValid() && r.isValid() && a.isValid() ? (n = n || "()", (n[0] === "(" ? this.isAfter(r, t) : !this.isBefore(r, t)) && (n[1] === ")" ? this.isBefore(a, t) : !this.isAfter(a, t))) : !1;
}
function py(o, e) {
  var t = Dn(o) ? o : At(o), n;
  return this.isValid() && t.isValid() ? (e = hn(e) || "millisecond", e === "millisecond" ? this.valueOf() === t.valueOf() : (n = t.valueOf(), this.clone().startOf(e).valueOf() <= n && n <= this.clone().endOf(e).valueOf())) : !1;
}
function fy(o, e) {
  return this.isSame(o, e) || this.isAfter(o, e);
}
function my(o, e) {
  return this.isSame(o, e) || this.isBefore(o, e);
}
function gy(o, e, t) {
  var n, r, a;
  if (!this.isValid())
    return NaN;
  if (n = Fc(o, this), !n.isValid())
    return NaN;
  switch (r = (n.utcOffset() - this.utcOffset()) * 6e4, e = hn(e), e) {
    case "year":
      a = Na(this, n) / 12;
      break;
    case "month":
      a = Na(this, n);
      break;
    case "quarter":
      a = Na(this, n) / 3;
      break;
    case "second":
      a = (this - n) / 1e3;
      break;
    case "minute":
      a = (this - n) / 6e4;
      break;
    case "hour":
      a = (this - n) / 36e5;
      break;
    case "day":
      a = (this - n - r) / 864e5;
      break;
    case "week":
      a = (this - n - r) / 6048e5;
      break;
    default:
      a = this - n;
  }
  return t ? a : an(a);
}
function Na(o, e) {
  if (o.date() < e.date())
    return -Na(e, o);
  var t = (e.year() - o.year()) * 12 + (e.month() - o.month()), n = o.clone().add(t, "months"), r, a;
  return e - n < 0 ? (r = o.clone().add(t - 1, "months"), a = (e - n) / (n - r)) : (r = o.clone().add(t + 1, "months"), a = (e - n) / (r - n)), -(t + a) || 0;
}
ue.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
ue.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
function by() {
  return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
}
function vy(o) {
  if (!this.isValid())
    return null;
  var e = o !== !0, t = e ? this.clone().utc() : this;
  return t.year() < 0 || t.year() > 9999 ? Ra(
    t,
    e ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"
  ) : Un(Date.prototype.toISOString) ? e ? this.toDate().toISOString() : new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", Ra(t, "Z")) : Ra(
    t,
    e ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ"
  );
}
function yy() {
  if (!this.isValid())
    return "moment.invalid(/* " + this._i + " */)";
  var o = "moment", e = "", t, n, r, a;
  return this.isLocal() || (o = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone", e = "Z"), t = "[" + o + '("]', n = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY", r = "-MM-DD[T]HH:mm:ss.SSS", a = e + '[")]', this.format(t + n + r + a);
}
function wy(o) {
  o || (o = this.isUtc() ? ue.defaultFormatUtc : ue.defaultFormat);
  var e = Ra(this, o);
  return this.localeData().postformat(e);
}
function ky(o, e) {
  return this.isValid() && (Dn(o) && o.isValid() || At(o).isValid()) ? Bn({ to: this, from: o }).locale(this.locale()).humanize(!e) : this.localeData().invalidDate();
}
function xy(o) {
  return this.from(At(), o);
}
function Cy(o, e) {
  return this.isValid() && (Dn(o) && o.isValid() || At(o).isValid()) ? Bn({ from: this, to: o }).locale(this.locale()).humanize(!e) : this.localeData().invalidDate();
}
function Sy(o) {
  return this.to(At(), o);
}
function ip(o) {
  var e;
  return o === void 0 ? this._locale._abbr : (e = Di(o), e != null && (this._locale = e), this);
}
var rp = dn(
  "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
  function(o) {
    return o === void 0 ? this.localeData() : this.locale(o);
  }
);
function sp() {
  return this._locale;
}
var za = 1e3, ms = 60 * za, Wa = 60 * ms, ap = (365 * 400 + 97) * 24 * Wa;
function gs(o, e) {
  return (o % e + e) % e;
}
function lp(o, e, t) {
  return o < 100 && o >= 0 ? new Date(o + 400, e, t) - ap : new Date(o, e, t).valueOf();
}
function cp(o, e, t) {
  return o < 100 && o >= 0 ? Date.UTC(o + 400, e, t) - ap : Date.UTC(o, e, t);
}
function Ty(o) {
  var e, t;
  if (o = hn(o), o === void 0 || o === "millisecond" || !this.isValid())
    return this;
  switch (t = this._isUTC ? cp : lp, o) {
    case "year":
      e = t(this.year(), 0, 1);
      break;
    case "quarter":
      e = t(
        this.year(),
        this.month() - this.month() % 3,
        1
      );
      break;
    case "month":
      e = t(this.year(), this.month(), 1);
      break;
    case "week":
      e = t(
        this.year(),
        this.month(),
        this.date() - this.weekday()
      );
      break;
    case "isoWeek":
      e = t(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1)
      );
      break;
    case "day":
    case "date":
      e = t(this.year(), this.month(), this.date());
      break;
    case "hour":
      e = this._d.valueOf(), e -= gs(
        e + (this._isUTC ? 0 : this.utcOffset() * ms),
        Wa
      );
      break;
    case "minute":
      e = this._d.valueOf(), e -= gs(e, ms);
      break;
    case "second":
      e = this._d.valueOf(), e -= gs(e, za);
      break;
  }
  return this._d.setTime(e), ue.updateOffset(this, !0), this;
}
function _y(o) {
  var e, t;
  if (o = hn(o), o === void 0 || o === "millisecond" || !this.isValid())
    return this;
  switch (t = this._isUTC ? cp : lp, o) {
    case "year":
      e = t(this.year() + 1, 0, 1) - 1;
      break;
    case "quarter":
      e = t(
        this.year(),
        this.month() - this.month() % 3 + 3,
        1
      ) - 1;
      break;
    case "month":
      e = t(this.year(), this.month() + 1, 1) - 1;
      break;
    case "week":
      e = t(
        this.year(),
        this.month(),
        this.date() - this.weekday() + 7
      ) - 1;
      break;
    case "isoWeek":
      e = t(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1) + 7
      ) - 1;
      break;
    case "day":
    case "date":
      e = t(this.year(), this.month(), this.date() + 1) - 1;
      break;
    case "hour":
      e = this._d.valueOf(), e += Wa - gs(
        e + (this._isUTC ? 0 : this.utcOffset() * ms),
        Wa
      ) - 1;
      break;
    case "minute":
      e = this._d.valueOf(), e += ms - gs(e, ms) - 1;
      break;
    case "second":
      e = this._d.valueOf(), e += za - gs(e, za) - 1;
      break;
  }
  return this._d.setTime(e), ue.updateOffset(this, !0), this;
}
function Ey() {
  return this._d.valueOf() - (this._offset || 0) * 6e4;
}
function My() {
  return Math.floor(this.valueOf() / 1e3);
}
function Dy() {
  return new Date(this.valueOf());
}
function Oy() {
  var o = this;
  return [
    o.year(),
    o.month(),
    o.date(),
    o.hour(),
    o.minute(),
    o.second(),
    o.millisecond()
  ];
}
function Ly() {
  var o = this;
  return {
    years: o.year(),
    months: o.month(),
    date: o.date(),
    hours: o.hours(),
    minutes: o.minutes(),
    seconds: o.seconds(),
    milliseconds: o.milliseconds()
  };
}
function Ay() {
  return this.isValid() ? this.toISOString() : null;
}
function By() {
  return Tc(this);
}
function Ry() {
  return Xi({}, Ve(this));
}
function Iy() {
  return Ve(this).overflow;
}
function Ny() {
  return {
    input: this._i,
    format: this._f,
    locale: this._locale,
    isUTC: this._isUTC,
    strict: this._strict
  };
}
Pe("N", 0, 0, "eraAbbr");
Pe("NN", 0, 0, "eraAbbr");
Pe("NNN", 0, 0, "eraAbbr");
Pe("NNNN", 0, 0, "eraName");
Pe("NNNNN", 0, 0, "eraNarrow");
Pe("y", ["y", 1], "yo", "eraYear");
Pe("y", ["yy", 2], 0, "eraYear");
Pe("y", ["yyy", 3], 0, "eraYear");
Pe("y", ["yyyy", 4], 0, "eraYear");
Oe("N", zc);
Oe("NN", zc);
Oe("NNN", zc);
Oe("NNNN", Vy);
Oe("NNNNN", Gy);
wt(
  ["N", "NN", "NNN", "NNNN", "NNNNN"],
  function(o, e, t, n) {
    var r = t._locale.erasParse(o, n, t._strict);
    r ? Ve(t).era = r : Ve(t).invalidEra = o;
  }
);
Oe("y", Ss);
Oe("yy", Ss);
Oe("yyy", Ss);
Oe("yyyy", Ss);
Oe("yo", Zy);
wt(["y", "yy", "yyy", "yyyy"], yo);
wt(["yo"], function(o, e, t, n) {
  var r;
  t._locale._eraYearOrdinalRegex && (r = o.match(t._locale._eraYearOrdinalRegex)), t._locale.eraYearOrdinalParse ? e[yo] = t._locale.eraYearOrdinalParse(o, r) : e[yo] = parseInt(o, 10);
});
function Py(o, e) {
  var t, n, r, a = this._eras || Di("en")._eras;
  for (t = 0, n = a.length; t < n; ++t) {
    switch (typeof a[t].since) {
      case "string":
        r = ue(a[t].since).startOf("day"), a[t].since = r.valueOf();
        break;
    }
    switch (typeof a[t].until) {
      case "undefined":
        a[t].until = 1 / 0;
        break;
      case "string":
        r = ue(a[t].until).startOf("day").valueOf(), a[t].until = r.valueOf();
        break;
    }
  }
  return a;
}
function Hy(o, e, t) {
  var n, r, a = this.eras(), c, u, p;
  for (o = o.toUpperCase(), n = 0, r = a.length; n < r; ++n)
    if (c = a[n].name.toUpperCase(), u = a[n].abbr.toUpperCase(), p = a[n].narrow.toUpperCase(), t)
      switch (e) {
        case "N":
        case "NN":
        case "NNN":
          if (u === o)
            return a[n];
          break;
        case "NNNN":
          if (c === o)
            return a[n];
          break;
        case "NNNNN":
          if (p === o)
            return a[n];
          break;
      }
    else if ([c, u, p].indexOf(o) >= 0)
      return a[n];
}
function jy(o, e) {
  var t = o.since <= o.until ? 1 : -1;
  return e === void 0 ? ue(o.since).year() : ue(o.since).year() + (e - o.offset) * t;
}
function $y() {
  var o, e, t, n = this.localeData().eras();
  for (o = 0, e = n.length; o < e; ++o)
    if (t = this.clone().startOf("day").valueOf(), n[o].since <= t && t <= n[o].until || n[o].until <= t && t <= n[o].since)
      return n[o].name;
  return "";
}
function Yy() {
  var o, e, t, n = this.localeData().eras();
  for (o = 0, e = n.length; o < e; ++o)
    if (t = this.clone().startOf("day").valueOf(), n[o].since <= t && t <= n[o].until || n[o].until <= t && t <= n[o].since)
      return n[o].narrow;
  return "";
}
function Fy() {
  var o, e, t, n = this.localeData().eras();
  for (o = 0, e = n.length; o < e; ++o)
    if (t = this.clone().startOf("day").valueOf(), n[o].since <= t && t <= n[o].until || n[o].until <= t && t <= n[o].since)
      return n[o].abbr;
  return "";
}
function zy() {
  var o, e, t, n, r = this.localeData().eras();
  for (o = 0, e = r.length; o < e; ++o)
    if (t = r[o].since <= r[o].until ? 1 : -1, n = this.clone().startOf("day").valueOf(), r[o].since <= n && n <= r[o].until || r[o].until <= n && n <= r[o].since)
      return (this.year() - ue(r[o].since).year()) * t + r[o].offset;
  return this.year();
}
function Wy(o) {
  return lt(this, "_erasNameRegex") || Wc.call(this), o ? this._erasNameRegex : this._erasRegex;
}
function Uy(o) {
  return lt(this, "_erasAbbrRegex") || Wc.call(this), o ? this._erasAbbrRegex : this._erasRegex;
}
function qy(o) {
  return lt(this, "_erasNarrowRegex") || Wc.call(this), o ? this._erasNarrowRegex : this._erasRegex;
}
function zc(o, e) {
  return e.erasAbbrRegex(o);
}
function Vy(o, e) {
  return e.erasNameRegex(o);
}
function Gy(o, e) {
  return e.erasNarrowRegex(o);
}
function Zy(o, e) {
  return e._eraYearOrdinalRegex || Ss;
}
function Wc() {
  var o = [], e = [], t = [], n = [], r, a, c, u, p, g = this.eras();
  for (r = 0, a = g.length; r < a; ++r)
    c = Ci(g[r].name), u = Ci(g[r].abbr), p = Ci(g[r].narrow), e.push(c), o.push(u), t.push(p), n.push(c), n.push(u), n.push(p);
  this._erasRegex = new RegExp("^(" + n.join("|") + ")", "i"), this._erasNameRegex = new RegExp("^(" + e.join("|") + ")", "i"), this._erasAbbrRegex = new RegExp("^(" + o.join("|") + ")", "i"), this._erasNarrowRegex = new RegExp(
    "^(" + t.join("|") + ")",
    "i"
  );
}
Pe(0, ["gg", 2], 0, function() {
  return this.weekYear() % 100;
});
Pe(0, ["GG", 2], 0, function() {
  return this.isoWeekYear() % 100;
});
function dl(o, e) {
  Pe(0, [o, o.length], 0, e);
}
dl("gggg", "weekYear");
dl("ggggg", "weekYear");
dl("GGGG", "isoWeekYear");
dl("GGGGG", "isoWeekYear");
Oe("G", rl);
Oe("g", rl);
Oe("GG", Rt, en);
Oe("gg", Rt, en);
Oe("GGGG", Lc, Oc);
Oe("gggg", Lc, Oc);
Oe("GGGGG", il, ol);
Oe("ggggg", il, ol);
ka(
  ["gggg", "ggggg", "GGGG", "GGGGG"],
  function(o, e, t, n) {
    e[n.substr(0, 2)] = et(o);
  }
);
ka(["gg", "GG"], function(o, e, t, n) {
  e[n] = ue.parseTwoDigitYear(o);
});
function Ky(o) {
  return dp.call(
    this,
    o,
    this.week(),
    this.weekday() + this.localeData()._week.dow,
    this.localeData()._week.dow,
    this.localeData()._week.doy
  );
}
function Xy(o) {
  return dp.call(
    this,
    o,
    this.isoWeek(),
    this.isoWeekday(),
    1,
    4
  );
}
function Jy() {
  return Si(this.year(), 1, 4);
}
function Qy() {
  return Si(this.isoWeekYear(), 1, 4);
}
function e1() {
  var o = this.localeData()._week;
  return Si(this.year(), o.dow, o.doy);
}
function t1() {
  var o = this.localeData()._week;
  return Si(this.weekYear(), o.dow, o.doy);
}
function dp(o, e, t, n, r) {
  var a;
  return o == null ? ha(this, n, r).year : (a = Si(o, n, r), e > a && (e = a), o1.call(this, o, e, t, n, r));
}
function o1(o, e, t, n, r) {
  var a = zu(o, e, t, n, r), c = da(a.year, 0, a.dayOfYear);
  return this.year(c.getUTCFullYear()), this.month(c.getUTCMonth()), this.date(c.getUTCDate()), this;
}
Pe("Q", 0, "Qo", "quarter");
Oe("Q", Au);
wt("Q", function(o, e) {
  e[yi] = (et(o) - 1) * 3;
});
function n1(o) {
  return o == null ? Math.ceil((this.month() + 1) / 3) : this.month((o - 1) * 3 + this.month() % 3);
}
Pe("D", ["DD", 2], "Do", "date");
Oe("D", Rt, Ts);
Oe("DD", Rt, en);
Oe("Do", function(o, e) {
  return o ? e._dayOfMonthOrdinalParse || e._ordinalParse : e._dayOfMonthOrdinalParseLenient;
});
wt(["D", "DD"], $n);
wt("Do", function(o, e) {
  e[$n] = et(o.match(Rt)[0]);
});
var hp = _s("Date", !0);
Pe("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
Oe("DDD", nl);
Oe("DDDD", Bu);
wt(["DDD", "DDDD"], function(o, e, t) {
  t._dayOfYear = et(o);
});
function i1(o) {
  var e = Math.round(
    (this.clone().startOf("day") - this.clone().startOf("year")) / 864e5
  ) + 1;
  return o == null ? e : this.add(o - e, "d");
}
Pe("m", ["mm", 2], 0, "minute");
Oe("m", Rt, Ac);
Oe("mm", Rt, en);
wt(["m", "mm"], Tn);
var r1 = _s("Minutes", !1);
Pe("s", ["ss", 2], 0, "second");
Oe("s", Rt, Ac);
Oe("ss", Rt, en);
wt(["s", "ss"], wi);
var s1 = _s("Seconds", !1);
Pe("S", 0, 0, function() {
  return ~~(this.millisecond() / 100);
});
Pe(0, ["SS", 2], 0, function() {
  return ~~(this.millisecond() / 10);
});
Pe(0, ["SSS", 3], 0, "millisecond");
Pe(0, ["SSSS", 4], 0, function() {
  return this.millisecond() * 10;
});
Pe(0, ["SSSSS", 5], 0, function() {
  return this.millisecond() * 100;
});
Pe(0, ["SSSSSS", 6], 0, function() {
  return this.millisecond() * 1e3;
});
Pe(0, ["SSSSSSS", 7], 0, function() {
  return this.millisecond() * 1e4;
});
Pe(0, ["SSSSSSSS", 8], 0, function() {
  return this.millisecond() * 1e5;
});
Pe(0, ["SSSSSSSSS", 9], 0, function() {
  return this.millisecond() * 1e6;
});
Oe("S", nl, Au);
Oe("SS", nl, en);
Oe("SSS", nl, Bu);
var Ji, up;
for (Ji = "SSSS"; Ji.length <= 9; Ji += "S")
  Oe(Ji, Ss);
function a1(o, e) {
  e[Br] = et(("0." + o) * 1e3);
}
for (Ji = "S"; Ji.length <= 9; Ji += "S")
  wt(Ji, a1);
up = _s("Milliseconds", !1);
Pe("z", 0, 0, "zoneAbbr");
Pe("zz", 0, 0, "zoneName");
function l1() {
  return this._isUTC ? "UTC" : "";
}
function c1() {
  return this._isUTC ? "Coordinated Universal Time" : "";
}
var ve = ya.prototype;
ve.add = ty;
ve.calendar = ly;
ve.clone = cy;
ve.diff = gy;
ve.endOf = _y;
ve.format = wy;
ve.from = ky;
ve.fromNow = xy;
ve.to = Cy;
ve.toNow = Sy;
ve.get = yv;
ve.invalidAt = Iy;
ve.isAfter = dy;
ve.isBefore = hy;
ve.isBetween = uy;
ve.isSame = py;
ve.isSameOrAfter = fy;
ve.isSameOrBefore = my;
ve.isValid = By;
ve.lang = rp;
ve.locale = ip;
ve.localeData = sp;
ve.max = B0;
ve.min = A0;
ve.parsingFlags = Ry;
ve.set = wv;
ve.startOf = Ty;
ve.subtract = oy;
ve.toArray = Oy;
ve.toObject = Ly;
ve.toDate = Dy;
ve.toISOString = vy;
ve.inspect = yy;
typeof Symbol < "u" && Symbol.for != null && (ve[Symbol.for("nodejs.util.inspect.custom")] = function() {
  return "Moment<" + this.format() + ">";
});
ve.toJSON = Ay;
ve.toString = by;
ve.unix = My;
ve.valueOf = Ey;
ve.creationData = Ny;
ve.eraName = $y;
ve.eraNarrow = Yy;
ve.eraAbbr = Fy;
ve.eraYear = zy;
ve.year = Nu;
ve.isLeapYear = vv;
ve.weekYear = Ky;
ve.isoWeekYear = Xy;
ve.quarter = ve.quarters = n1;
ve.month = Yu;
ve.daysInMonth = Dv;
ve.week = ve.weeks = Pv;
ve.isoWeek = ve.isoWeeks = Hv;
ve.weeksInYear = e1;
ve.weeksInWeekYear = t1;
ve.isoWeeksInYear = Jy;
ve.isoWeeksInISOWeekYear = Qy;
ve.date = hp;
ve.day = ve.days = Xv;
ve.weekday = Jv;
ve.isoWeekday = Qv;
ve.dayOfYear = i1;
ve.hour = ve.hours = s0;
ve.minute = ve.minutes = r1;
ve.second = ve.seconds = s1;
ve.millisecond = ve.milliseconds = up;
ve.utcOffset = F0;
ve.utc = W0;
ve.local = U0;
ve.parseZone = q0;
ve.hasAlignedHourOffset = V0;
ve.isDST = G0;
ve.isLocal = K0;
ve.isUtcOffset = X0;
ve.isUtc = ep;
ve.isUTC = ep;
ve.zoneAbbr = l1;
ve.zoneName = c1;
ve.dates = dn(
  "dates accessor is deprecated. Use date instead.",
  hp
);
ve.months = dn(
  "months accessor is deprecated. Use month instead",
  Yu
);
ve.years = dn(
  "years accessor is deprecated. Use year instead",
  Nu
);
ve.zone = dn(
  "moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",
  z0
);
ve.isDSTShifted = dn(
  "isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",
  Z0
);
function d1(o) {
  return At(o * 1e3);
}
function h1() {
  return At.apply(null, arguments).parseZone();
}
function pp(o) {
  return o;
}
var dt = Ec.prototype;
dt.calendar = Kb;
dt.longDateFormat = ev;
dt.invalidDate = ov;
dt.ordinal = rv;
dt.preparse = pp;
dt.postformat = pp;
dt.relativeTime = av;
dt.pastFuture = lv;
dt.set = Gb;
dt.eras = Py;
dt.erasParse = Hy;
dt.erasConvertYear = jy;
dt.erasAbbrRegex = Uy;
dt.erasNameRegex = Wy;
dt.erasNarrowRegex = qy;
dt.months = Tv;
dt.monthsShort = _v;
dt.monthsParse = Mv;
dt.monthsRegex = Lv;
dt.monthsShortRegex = Ov;
dt.week = Bv;
dt.firstDayOfYear = Nv;
dt.firstDayOfWeek = Iv;
dt.weekdays = qv;
dt.weekdaysMin = Gv;
dt.weekdaysShort = Vv;
dt.weekdaysParse = Kv;
dt.weekdaysRegex = e0;
dt.weekdaysShortRegex = t0;
dt.weekdaysMinRegex = o0;
dt.isPM = i0;
dt.meridiem = a0;
function Ua(o, e, t, n) {
  var r = Di(), a = Wn().set(n, e);
  return r[t](a, o);
}
function fp(o, e, t) {
  if (Ei(o) && (e = o, o = void 0), o = o || "", e != null)
    return Ua(o, e, t, "month");
  var n, r = [];
  for (n = 0; n < 12; n++)
    r[n] = Ua(o, n, t, "month");
  return r;
}
function Uc(o, e, t, n) {
  typeof o == "boolean" ? (Ei(e) && (t = e, e = void 0), e = e || "") : (e = o, t = e, o = !1, Ei(e) && (t = e, e = void 0), e = e || "");
  var r = Di(), a = o ? r._week.dow : 0, c, u = [];
  if (t != null)
    return Ua(e, (t + a) % 7, n, "day");
  for (c = 0; c < 7; c++)
    u[c] = Ua(e, (c + a) % 7, n, "day");
  return u;
}
function u1(o, e) {
  return fp(o, e, "months");
}
function p1(o, e) {
  return fp(o, e, "monthsShort");
}
function f1(o, e, t) {
  return Uc(o, e, t, "weekdays");
}
function m1(o, e, t) {
  return Uc(o, e, t, "weekdaysShort");
}
function g1(o, e, t) {
  return Uc(o, e, t, "weekdaysMin");
}
tr("en", {
  eras: [
    {
      since: "0001-01-01",
      until: 1 / 0,
      offset: 1,
      name: "Anno Domini",
      narrow: "AD",
      abbr: "AD"
    },
    {
      since: "0000-12-31",
      until: -1 / 0,
      offset: 1,
      name: "Before Christ",
      narrow: "BC",
      abbr: "BC"
    }
  ],
  dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
  ordinal: function(o) {
    var e = o % 10, t = et(o % 100 / 10) === 1 ? "th" : e === 1 ? "st" : e === 2 ? "nd" : e === 3 ? "rd" : "th";
    return o + t;
  }
});
ue.lang = dn(
  "moment.lang is deprecated. Use moment.locale instead.",
  tr
);
ue.langData = dn(
  "moment.langData is deprecated. Use moment.localeData instead.",
  Di
);
var hi = Math.abs;
function b1() {
  var o = this._data;
  return this._milliseconds = hi(this._milliseconds), this._days = hi(this._days), this._months = hi(this._months), o.milliseconds = hi(o.milliseconds), o.seconds = hi(o.seconds), o.minutes = hi(o.minutes), o.hours = hi(o.hours), o.months = hi(o.months), o.years = hi(o.years), this;
}
function mp(o, e, t, n) {
  var r = Bn(e, t);
  return o._milliseconds += n * r._milliseconds, o._days += n * r._days, o._months += n * r._months, o._bubble();
}
function v1(o, e) {
  return mp(this, o, e, 1);
}
function y1(o, e) {
  return mp(this, o, e, -1);
}
function fh(o) {
  return o < 0 ? Math.floor(o) : Math.ceil(o);
}
function w1() {
  var o = this._milliseconds, e = this._days, t = this._months, n = this._data, r, a, c, u, p;
  return o >= 0 && e >= 0 && t >= 0 || o <= 0 && e <= 0 && t <= 0 || (o += fh(ic(t) + e) * 864e5, e = 0, t = 0), n.milliseconds = o % 1e3, r = an(o / 1e3), n.seconds = r % 60, a = an(r / 60), n.minutes = a % 60, c = an(a / 60), n.hours = c % 24, e += an(c / 24), p = an(gp(e)), t += p, e -= fh(ic(p)), u = an(t / 12), t %= 12, n.days = e, n.months = t, n.years = u, this;
}
function gp(o) {
  return o * 4800 / 146097;
}
function ic(o) {
  return o * 146097 / 4800;
}
function k1(o) {
  if (!this.isValid())
    return NaN;
  var e, t, n = this._milliseconds;
  if (o = hn(o), o === "month" || o === "quarter" || o === "year")
    switch (e = this._days + n / 864e5, t = this._months + gp(e), o) {
      case "month":
        return t;
      case "quarter":
        return t / 3;
      case "year":
        return t / 12;
    }
  else
    switch (e = this._days + Math.round(ic(this._months)), o) {
      case "week":
        return e / 7 + n / 6048e5;
      case "day":
        return e + n / 864e5;
      case "hour":
        return e * 24 + n / 36e5;
      case "minute":
        return e * 1440 + n / 6e4;
      case "second":
        return e * 86400 + n / 1e3;
      case "millisecond":
        return Math.floor(e * 864e5) + n;
      default:
        throw new Error("Unknown unit " + o);
    }
}
function Oi(o) {
  return function() {
    return this.as(o);
  };
}
var bp = Oi("ms"), x1 = Oi("s"), C1 = Oi("m"), S1 = Oi("h"), T1 = Oi("d"), _1 = Oi("w"), E1 = Oi("M"), M1 = Oi("Q"), D1 = Oi("y"), O1 = bp;
function L1() {
  return Bn(this);
}
function A1(o) {
  return o = hn(o), this.isValid() ? this[o + "s"]() : NaN;
}
function jr(o) {
  return function() {
    return this.isValid() ? this._data[o] : NaN;
  };
}
var B1 = jr("milliseconds"), R1 = jr("seconds"), I1 = jr("minutes"), N1 = jr("hours"), P1 = jr("days"), H1 = jr("months"), j1 = jr("years");
function $1() {
  return an(this.days() / 7);
}
var pi = Math.round, us = {
  ss: 44,
  // a few seconds to seconds
  s: 45,
  // seconds to minute
  m: 45,
  // minutes to hour
  h: 22,
  // hours to day
  d: 26,
  // days to month/week
  w: null,
  // weeks to month
  M: 11
  // months to year
};
function Y1(o, e, t, n, r) {
  return r.relativeTime(e || 1, !!t, o, n);
}
function F1(o, e, t, n) {
  var r = Bn(o).abs(), a = pi(r.as("s")), c = pi(r.as("m")), u = pi(r.as("h")), p = pi(r.as("d")), g = pi(r.as("M")), v = pi(r.as("w")), x = pi(r.as("y")), y = a <= t.ss && ["s", a] || a < t.s && ["ss", a] || c <= 1 && ["m"] || c < t.m && ["mm", c] || u <= 1 && ["h"] || u < t.h && ["hh", u] || p <= 1 && ["d"] || p < t.d && ["dd", p];
  return t.w != null && (y = y || v <= 1 && ["w"] || v < t.w && ["ww", v]), y = y || g <= 1 && ["M"] || g < t.M && ["MM", g] || x <= 1 && ["y"] || ["yy", x], y[2] = e, y[3] = +o > 0, y[4] = n, Y1.apply(null, y);
}
function z1(o) {
  return o === void 0 ? pi : typeof o == "function" ? (pi = o, !0) : !1;
}
function W1(o, e) {
  return us[o] === void 0 ? !1 : e === void 0 ? us[o] : (us[o] = e, o === "s" && (us.ss = e - 1), !0);
}
function U1(o, e) {
  if (!this.isValid())
    return this.localeData().invalidDate();
  var t = !1, n = us, r, a;
  return typeof o == "object" && (e = o, o = !1), typeof o == "boolean" && (t = o), typeof e == "object" && (n = Object.assign({}, us, e), e.s != null && e.ss == null && (n.ss = e.s - 1)), r = this.localeData(), a = F1(this, !t, n, r), t && (a = r.pastFuture(+this, a)), r.postformat(a);
}
var Il = Math.abs;
function ts(o) {
  return (o > 0) - (o < 0) || +o;
}
function hl() {
  if (!this.isValid())
    return this.localeData().invalidDate();
  var o = Il(this._milliseconds) / 1e3, e = Il(this._days), t = Il(this._months), n, r, a, c, u = this.asSeconds(), p, g, v, x;
  return u ? (n = an(o / 60), r = an(n / 60), o %= 60, n %= 60, a = an(t / 12), t %= 12, c = o ? o.toFixed(3).replace(/\.?0+$/, "") : "", p = u < 0 ? "-" : "", g = ts(this._months) !== ts(u) ? "-" : "", v = ts(this._days) !== ts(u) ? "-" : "", x = ts(this._milliseconds) !== ts(u) ? "-" : "", p + "P" + (a ? g + a + "Y" : "") + (t ? g + t + "M" : "") + (e ? v + e + "D" : "") + (r || n || o ? "T" : "") + (r ? x + r + "H" : "") + (n ? x + n + "M" : "") + (o ? x + c + "S" : "")) : "P0D";
}
var rt = cl.prototype;
rt.isValid = H0;
rt.abs = b1;
rt.add = v1;
rt.subtract = y1;
rt.as = k1;
rt.asMilliseconds = bp;
rt.asSeconds = x1;
rt.asMinutes = C1;
rt.asHours = S1;
rt.asDays = T1;
rt.asWeeks = _1;
rt.asMonths = E1;
rt.asQuarters = M1;
rt.asYears = D1;
rt.valueOf = O1;
rt._bubble = w1;
rt.clone = L1;
rt.get = A1;
rt.milliseconds = B1;
rt.seconds = R1;
rt.minutes = I1;
rt.hours = N1;
rt.days = P1;
rt.weeks = $1;
rt.months = H1;
rt.years = j1;
rt.humanize = U1;
rt.toISOString = hl;
rt.toString = hl;
rt.toJSON = hl;
rt.locale = ip;
rt.localeData = sp;
rt.toIsoString = dn(
  "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
  hl
);
rt.lang = rp;
Pe("X", 0, 0, "unix");
Pe("x", 0, 0, "valueOf");
Oe("x", rl);
Oe("X", uv);
wt("X", function(o, e, t) {
  t._d = new Date(parseFloat(o) * 1e3);
});
wt("x", function(o, e, t) {
  t._d = new Date(et(o));
});
//! moment.js
ue.version = "2.30.1";
qb(At);
ue.fn = ve;
ue.min = R0;
ue.max = I0;
ue.now = N0;
ue.utc = Wn;
ue.unix = d1;
ue.months = u1;
ue.isDate = va;
ue.locale = tr;
ue.invalid = tl;
ue.duration = Bn;
ue.isMoment = Dn;
ue.weekdays = f1;
ue.parseZone = h1;
ue.localeData = Di;
ue.isDuration = Ia;
ue.monthsShort = p1;
ue.weekdaysMin = g1;
ue.defineLocale = Pc;
ue.updateLocale = h0;
ue.locales = u0;
ue.weekdaysShort = m1;
ue.normalizeUnits = hn;
ue.relativeTimeRounding = z1;
ue.relativeTimeThreshold = W1;
ue.calendarFormat = ay;
ue.prototype = ve;
ue.HTML5_FMT = {
  DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
  // <input type="datetime-local" />
  DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
  // <input type="datetime-local" step="1" />
  DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
  // <input type="datetime-local" step="0.001" />
  DATE: "YYYY-MM-DD",
  // <input type="date" />
  TIME: "HH:mm",
  // <input type="time" />
  TIME_SECONDS: "HH:mm:ss",
  // <input type="time" step="1" />
  TIME_MS: "HH:mm:ss.SSS",
  // <input type="time" step="0.001" />
  WEEK: "GGGG-[W]WW",
  // <input type="week" />
  MONTH: "YYYY-MM"
  // <input type="month" />
};
function zt(o, e, t = {}) {
  const n = document.createElement(o);
  Array.isArray(e) ? n.classList.add(...e) : e && n.classList.add(e);
  for (const r in t)
    Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]);
  return n;
}
function mh(o) {
  const e = o.getBoundingClientRect();
  return {
    y1: Math.floor(e.top + window.pageYOffset),
    x1: Math.floor(e.left + window.pageXOffset),
    x2: Math.floor(e.right + window.pageXOffset),
    y2: Math.floor(e.bottom + window.pageYOffset)
  };
}
function Nl(o, e) {
  const t = mh(o), n = mh(e);
  return {
    fromTopBorder: n.y1 - t.y1,
    fromLeftBorder: n.x1 - t.x1,
    fromRightBorder: t.x2 - n.x2,
    fromBottomBorder: t.y2 - n.y2
  };
}
function q1(o, e) {
  const t = o.getBoundingClientRect(), { width: n, height: r, x: a, y: c } = t, { clientX: u, clientY: p } = e;
  return {
    width: n,
    height: r,
    x: u - a,
    y: p - c
  };
}
function gh(o, e) {
  return e.parentNode.insertBefore(o, e);
}
function bh(o, e = !0) {
  const t = document.createRange(), n = window.getSelection();
  t.selectNodeContents(o), t.collapse(e), n.removeAllRanges(), n.addRange(t);
}
let V1 = class Zo {
  /**
   * @param {object} options - constructor options
   * @param {PopoverItem[]} options.items - constructor options
   */
  constructor({ items: e }) {
    this.items = e, this.wrapper = void 0, this.itemEls = [];
  }
  /**
   * Set of CSS classnames used in popover
   *
   * @returns {object}
   */
  static get CSS() {
    return {
      popover: "tc-popover",
      popoverOpened: "tc-popover--opened",
      item: "tc-popover__item",
      itemHidden: "tc-popover__item--hidden",
      itemConfirmState: "tc-popover__item--confirm",
      itemIcon: "tc-popover__item-icon",
      itemLabel: "tc-popover__item-label"
    };
  }
  /**
   * Returns the popover element
   *
   * @returns {Element}
   */
  render() {
    return this.wrapper = zt("div", Zo.CSS.popover), this.items.forEach((e, t) => {
      const n = zt("div", Zo.CSS.item), r = zt("div", Zo.CSS.itemIcon, {
        innerHTML: e.icon
      }), a = zt("div", Zo.CSS.itemLabel, {
        textContent: e.label
      });
      n.dataset.index = t, n.appendChild(r), n.appendChild(a), this.wrapper.appendChild(n), this.itemEls.push(n);
    }), this.wrapper.addEventListener("click", (e) => {
      this.popoverClicked(e);
    }), this.wrapper;
  }
  /**
   * Popover wrapper click listener
   * Used to delegate clicks in items
   *
   * @returns {void}
   */
  popoverClicked(e) {
    const t = e.target.closest(`.${Zo.CSS.item}`);
    if (!t)
      return;
    const n = t.dataset.index, r = this.items[n];
    if (r.confirmationRequired && !this.hasConfirmationState(t)) {
      this.setConfirmationState(t);
      return;
    }
    r.onClick();
  }
  /**
   * Enable the confirmation state on passed item
   *
   * @returns {void}
   */
  setConfirmationState(e) {
    e.classList.add(Zo.CSS.itemConfirmState);
  }
  /**
   * Disable the confirmation state on passed item
   *
   * @returns {void}
   */
  clearConfirmationState(e) {
    e.classList.remove(Zo.CSS.itemConfirmState);
  }
  /**
   * Check if passed item has the confirmation state
   *
   * @returns {boolean}
   */
  hasConfirmationState(e) {
    return e.classList.contains(Zo.CSS.itemConfirmState);
  }
  /**
   * Return an opening state
   *
   * @returns {boolean}
   */
  get opened() {
    return this.wrapper.classList.contains(Zo.CSS.popoverOpened);
  }
  /**
   * Opens the popover
   *
   * @returns {void}
   */
  open() {
    this.items.forEach((e, t) => {
      typeof e.hideIf == "function" && this.itemEls[t].classList.toggle(Zo.CSS.itemHidden, e.hideIf());
    }), this.wrapper.classList.add(Zo.CSS.popoverOpened);
  }
  /**
   * Closes the popover
   *
   * @returns {void}
   */
  close() {
    this.wrapper.classList.remove(Zo.CSS.popoverOpened), this.itemEls.forEach((e) => {
      this.clearConfirmationState(e);
    });
  }
};
const vh = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 8L12 12M12 12L16 16M12 12L16 8M12 12L8 16"/></svg>', G1 = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 9.16666L18.2167 12.5M18.2167 12.5L14.8833 15.8333M18.2167 12.5H10.05C9.16594 12.5 8.31809 12.1488 7.69297 11.5237C7.06785 10.8986 6.71666 10.0507 6.71666 9.16666"/></svg>', Z1 = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.9167 14.9167L11.5833 18.25M11.5833 18.25L8.25 14.9167M11.5833 18.25L11.5833 10.0833C11.5833 9.19928 11.9345 8.35143 12.5596 7.72631C13.1848 7.10119 14.0326 6.75 14.9167 6.75"/></svg>', K1 = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 15.8333L18.2167 12.5M18.2167 12.5L14.8833 9.16667M18.2167 12.5L10.05 12.5C9.16595 12.5 8.31811 12.8512 7.69299 13.4763C7.06787 14.1014 6.71667 14.9493 6.71667 15.8333"/></svg>', X1 = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.41 9.66H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 9.66H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.31 14.36H9.3"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 14.36H14.59"/></svg>', yh = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 7V12M12 17V12M17 12H12M12 12H7"/></svg>', J1 = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', Q1 = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>';
let wh = class cs {
  /**
   * Creates toolbox buttons and toolbox menus
   *
   * @param {object} api - Editor.js api
   * @param {PopoverItem[]} items - Editor.js api
   * @param {function} onOpen - callback fired when the Popover is opening
   * @param {function} onClose - callback fired when the Popover is closing
   * @param {string} [cssModifier] - the modifier for the Toolbox. Allows to add some specific styles.
   */
  constructor({ api: e, items: t, onOpen: n, onClose: r, cssModifier: a = "" }) {
    this.api = e, this.items = t, this.onOpen = n, this.onClose = r, this.cssModifier = a, this.popover = null, this.wrapper = this.createToolbox();
  }
  /**
   * Style classes
   */
  static get CSS() {
    return {
      toolbox: "tc-toolbox",
      toolboxShowed: "tc-toolbox--showed",
      toggler: "tc-toolbox__toggler"
    };
  }
  /**
   * Returns rendered Toolbox element
   */
  get element() {
    return this.wrapper;
  }
  /**
   * Creating a toolbox to open menu for a manipulating columns
   *
   * @returns {Element}
   */
  createToolbox() {
    const e = zt("div", [
      cs.CSS.toolbox,
      this.cssModifier ? `${cs.CSS.toolbox}--${this.cssModifier}` : ""
    ]);
    e.dataset.mutationFree = "true";
    const t = this.createPopover(), n = this.createToggler();
    return e.appendChild(n), e.appendChild(t), e;
  }
  /**
   * Creates the Toggler
   *
   * @returns {Element}
   */
  createToggler() {
    const e = zt("div", cs.CSS.toggler, {
      innerHTML: X1
    });
    return e.addEventListener("click", () => {
      this.togglerClicked();
    }), e;
  }
  /**
   * Creates the Popover instance and render it
   *
   * @returns {Element}
   */
  createPopover() {
    return this.popover = new V1({
      items: this.items
    }), this.popover.render();
  }
  /**
   * Toggler click handler. Opens/Closes the popover
   *
   * @returns {void}
   */
  togglerClicked() {
    this.popover.opened ? (this.popover.close(), this.onClose()) : (this.popover.open(), this.onOpen());
  }
  /**
   * Shows the Toolbox
   *
   * @param {function} computePositionMethod - method that returns the position coordinate
   * @returns {void}
   */
  show(e) {
    const t = e();
    Object.entries(t).forEach(([n, r]) => {
      this.wrapper.style[n] = r;
    }), this.wrapper.classList.add(cs.CSS.toolboxShowed);
  }
  /**
   * Hides the Toolbox
   *
   * @returns {void}
   */
  hide() {
    this.popover.close(), this.wrapper.classList.remove(cs.CSS.toolboxShowed);
  }
};
function ew(o, e) {
  let t = 0;
  return function(...n) {
    const r = (/* @__PURE__ */ new Date()).getTime();
    if (!(r - t < o))
      return t = r, e(...n);
  };
}
let tw = class {
  constructor(e, t, n) {
    if (this.parentEl = "body", this.element = Ie(e), this.startDate = ue().startOf("day"), this.endDate = ue().endOf("day"), this.minDate = !1, this.maxDate = !1, this.maxSpan = !1, this.autoApply = !1, this.singleDatePicker = !1, this.showDropdowns = !1, this.minYear = ue().subtract(100, "year").format("YYYY"), this.maxYear = ue().add(100, "year").format("YYYY"), this.showWeekNumbers = !1, this.showISOWeekNumbers = !1, this.showCustomRangeLabel = !0, this.timePicker = !1, this.timePicker24Hour = !1, this.timePickerIncrement = 1, this.timePickerSeconds = !1, this.linkedCalendars = !0, this.autoUpdateInput = !0, this.alwaysShowCalendars = !1, this.ranges = {}, this.opens = "right", this.element.hasClass("pull-right") && (this.opens = "left"), this.drops = "down", this.element.hasClass("dropup") && (this.drops = "up"), this.buttonClasses = "btn btn-sm", this.applyButtonClasses = "btn-primary", this.cancelButtonClasses = "btn-default", this.locale = {
      direction: "ltr",
      format: ue.localeData().firstDayOfWeek(),
      separator: " - ",
      applyLabel: "Apply",
      cancelLabel: "Cancel",
      weekLabel: "W",
      customRangeLabel: "Custom Range",
      daysOfWeek: ue.weekdaysMin(),
      monthNames: ue.monthsShort(),
      firstDay: ue.localeData().firstDayOfWeek()
    }, this.callback = function() {
    }, this.isShowing = !1, this.leftCalendar = {}, this.rightCalendar = {}, (typeof t != "object" || t === null) && (t = {}), t = Ie.extend(this.element.data(), t), typeof t.template != "string" && !(t.template instanceof Ie) && (t.template = '<div class="daterangepicker"><div class="ranges"></div><div class="drp-calendar left"><div class="calendar-table"></div><div class="calendar-time"></div></div><div class="drp-calendar right"><div class="calendar-table"></div><div class="calendar-time"></div></div><div class="drp-buttons"><span class="drp-selected"></span><button class="cancelBtn" type="button"></button><button class="applyBtn" disabled="disabled" type="button"></button> </div></div>'), this.parentEl = t.parentEl && Ie(t.parentEl).length ? Ie(t.parentEl) : Ie(this.parentEl), this.container = Ie(t.template).appendTo(this.parentEl), typeof t.locale == "object" && (typeof t.locale.direction == "string" && (this.locale.direction = t.locale.direction), typeof t.locale.format == "string" && (this.locale.format = t.locale.format), typeof t.locale.separator == "string" && (this.locale.separator = t.locale.separator), typeof t.locale.daysOfWeek == "object" && (this.locale.daysOfWeek = t.locale.daysOfWeek.slice()), typeof t.locale.monthNames == "object" && (this.locale.monthNames = t.locale.monthNames.slice()), typeof t.locale.firstDay == "number" && (this.locale.firstDay = t.locale.firstDay), typeof t.locale.applyLabel == "string" && (this.locale.applyLabel = t.locale.applyLabel), typeof t.locale.cancelLabel == "string" && (this.locale.cancelLabel = t.locale.cancelLabel), typeof t.locale.weekLabel == "string" && (this.locale.weekLabel = t.locale.weekLabel), typeof t.locale.customRangeLabel == "string")) {
      var r = document.createElement("textarea");
      r.innerHTML = t.locale.customRangeLabel;
      var a = r.value;
      this.locale.customRangeLabel = a;
    }
    if (this.container.addClass(this.locale.direction), typeof t.startDate == "string" && (this.startDate = ue(t.startDate, this.locale.format)), typeof t.endDate == "string" && (this.endDate = ue(t.endDate, this.locale.format)), typeof t.minDate == "string" && (this.minDate = ue(t.minDate, this.locale.format)), typeof t.maxDate == "string" && (this.maxDate = ue(t.maxDate, this.locale.format)), typeof t.startDate == "object" && (this.startDate = ue(t.startDate)), typeof t.endDate == "object" && (this.endDate = ue(t.endDate)), typeof t.minDate == "object" && (this.minDate = ue(t.minDate)), typeof t.maxDate == "object" && (this.maxDate = ue(t.maxDate)), this.minDate && this.startDate.isBefore(this.minDate) && (this.startDate = this.minDate.clone()), this.maxDate && this.endDate.isAfter(this.maxDate) && (this.endDate = this.maxDate.clone()), typeof t.applyButtonClasses == "string" && (this.applyButtonClasses = t.applyButtonClasses), typeof t.applyClass == "string" && (this.applyButtonClasses = t.applyClass), typeof t.cancelButtonClasses == "string" && (this.cancelButtonClasses = t.cancelButtonClasses), typeof t.cancelClass == "string" && (this.cancelButtonClasses = t.cancelClass), typeof t.maxSpan == "object" && (this.maxSpan = t.maxSpan), typeof t.dateLimit == "object" && (this.maxSpan = t.dateLimit), typeof t.opens == "string" && (this.opens = t.opens), typeof t.drops == "string" && (this.drops = t.drops), typeof t.showWeekNumbers == "boolean" && (this.showWeekNumbers = t.showWeekNumbers), typeof t.showISOWeekNumbers == "boolean" && (this.showISOWeekNumbers = t.showISOWeekNumbers), typeof t.buttonClasses == "string" && (this.buttonClasses = t.buttonClasses), typeof t.buttonClasses == "object" && (this.buttonClasses = t.buttonClasses.join(" ")), typeof t.showDropdowns == "boolean" && (this.showDropdowns = t.showDropdowns), typeof t.minYear == "number" && (this.minYear = t.minYear), typeof t.maxYear == "number" && (this.maxYear = t.maxYear), typeof t.showCustomRangeLabel == "boolean" && (this.showCustomRangeLabel = t.showCustomRangeLabel), typeof t.singleDatePicker == "boolean" && (this.singleDatePicker = t.singleDatePicker, this.singleDatePicker && (this.endDate = this.startDate.clone())), typeof t.timePicker == "boolean" && (this.timePicker = t.timePicker), typeof t.timePickerSeconds == "boolean" && (this.timePickerSeconds = t.timePickerSeconds), typeof t.timePickerIncrement == "number" && (this.timePickerIncrement = t.timePickerIncrement), typeof t.timePicker24Hour == "boolean" && (this.timePicker24Hour = t.timePicker24Hour), typeof t.autoApply == "boolean" && (this.autoApply = t.autoApply), typeof t.autoUpdateInput == "boolean" && (this.autoUpdateInput = t.autoUpdateInput), typeof t.linkedCalendars == "boolean" && (this.linkedCalendars = t.linkedCalendars), typeof t.isInvalidDate == "function" && (this.isInvalidDate = t.isInvalidDate), typeof t.isCustomDate == "function" && (this.isCustomDate = t.isCustomDate), typeof t.alwaysShowCalendars == "boolean" && (this.alwaysShowCalendars = t.alwaysShowCalendars), this.locale.firstDay != 0)
      for (var c = this.locale.firstDay; c > 0; )
        this.locale.daysOfWeek.push(this.locale.daysOfWeek.shift()), c--;
    var u, p, g;
    if (typeof t.startDate > "u" && typeof t.endDate > "u" && Ie(this.element).is(":text")) {
      var v = Ie(this.element).val(), x = v.split(this.locale.separator);
      u = p = null, x.length == 2 ? (u = ue(x[0], this.locale.format), p = ue(x[1], this.locale.format)) : this.singleDatePicker && v !== "" && (u = ue(v, this.locale.format), p = ue(v, this.locale.format)), u !== null && p !== null && (this.setStartDate(u), this.setEndDate(p));
    }
    if (typeof t.ranges == "object") {
      for (g in t.ranges) {
        typeof t.ranges[g][0] == "string" ? u = ue(t.ranges[g][0], this.locale.format) : u = ue(t.ranges[g][0]), typeof t.ranges[g][1] == "string" ? p = ue(t.ranges[g][1], this.locale.format) : p = ue(t.ranges[g][1]), this.minDate && u.isBefore(this.minDate) && (u = this.minDate.clone());
        var y = this.maxDate;
        if (this.maxSpan && y && u.clone().add(this.maxSpan).isAfter(y) && (y = u.clone().add(this.maxSpan)), y && p.isAfter(y) && (p = y.clone()), !(this.minDate && p.isBefore(this.minDate, this.timepicker ? "minute" : "day") || y && u.isAfter(y, this.timepicker ? "minute" : "day"))) {
          var r = document.createElement("textarea");
          r.innerHTML = g;
          var a = r.value;
          this.ranges[a] = [u, p];
        }
      }
      var T = "<ul>";
      for (g in this.ranges)
        T += '<li data-range-key="' + g + '">' + g + "</li>";
      this.showCustomRangeLabel && (T += '<li data-range-key="' + this.locale.customRangeLabel + '">' + this.locale.customRangeLabel + "</li>"), T += "</ul>", this.container.find(".ranges").prepend(T);
    }
    typeof n == "function" && (this.callback = n), this.timePicker || (this.startDate = this.startDate.startOf("day"), this.endDate = this.endDate.endOf("day"), this.container.find(".calendar-time").hide()), this.timePicker && this.autoApply && (this.autoApply = !1), this.autoApply && this.container.addClass("auto-apply"), typeof t.ranges == "object" && this.container.addClass("show-ranges"), this.singleDatePicker && (this.container.addClass("single"), this.container.find(".drp-calendar.left").addClass("single"), this.container.find(".drp-calendar.left").show(), this.container.find(".drp-calendar.right").hide(), !this.timePicker && this.autoApply && this.container.addClass("auto-apply")), (typeof t.ranges > "u" && !this.singleDatePicker || this.alwaysShowCalendars) && this.container.addClass("show-calendar"), this.container.addClass("opens" + this.opens), this.container.find(".applyBtn, .cancelBtn").addClass(this.buttonClasses), this.applyButtonClasses.length && this.container.find(".applyBtn").addClass(this.applyButtonClasses), this.cancelButtonClasses.length && this.container.find(".cancelBtn").addClass(this.cancelButtonClasses), this.container.find(".applyBtn").html(this.locale.applyLabel), this.container.find(".cancelBtn").html(this.locale.cancelLabel), this.container.find(".drp-calendar").on("click.daterangepicker", ".prev", Ie.proxy(this.clickPrev, this)).on("click.daterangepicker", ".next", Ie.proxy(this.clickNext, this)).on("mousedown.daterangepicker", "td.available", Ie.proxy(this.clickDate, this)).on("mouseenter.daterangepicker", "td.available", Ie.proxy(this.hoverDate, this)).on("change.daterangepicker", "select.yearselect", Ie.proxy(this.monthOrYearChanged, this)).on("change.daterangepicker", "select.monthselect", Ie.proxy(this.monthOrYearChanged, this)).on("change.daterangepicker", "select.hourselect,select.minuteselect,select.secondselect,select.ampmselect", Ie.proxy(this.timeChanged, this)), this.container.find(".ranges").on("click.daterangepicker", "li", Ie.proxy(this.clickRange, this)), this.container.find(".drp-buttons").on("click.daterangepicker", "button.applyBtn", Ie.proxy(this.clickApply, this)).on("click.daterangepicker", "button.cancelBtn", Ie.proxy(this.clickCancel, this)), this.element.is("input") || this.element.is("button") ? this.element.on({
      "click.daterangepicker": Ie.proxy(this.show, this),
      "focus.daterangepicker": Ie.proxy(this.show, this),
      "keyup.daterangepicker": Ie.proxy(this.elementChanged, this),
      "keydown.daterangepicker": Ie.proxy(this.keydown, this)
      //IE 11 compatibility
    }) : (this.element.on("click.daterangepicker", Ie.proxy(this.toggle, this)), this.element.on("keydown.daterangepicker", Ie.proxy(this.toggle, this))), this.updateElement();
  }
  setStartDate(e) {
    typeof e == "string" && (this.startDate = ue(e, this.locale.format)), typeof e == "object" && (this.startDate = ue(e)), this.timePicker || (this.startDate = this.startDate.startOf("day")), this.timePicker && this.timePickerIncrement && this.startDate.minute(Math.round(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement), this.minDate && this.startDate.isBefore(this.minDate) && (this.startDate = this.minDate.clone(), this.timePicker && this.timePickerIncrement && this.startDate.minute(Math.round(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement)), this.maxDate && this.startDate.isAfter(this.maxDate) && (this.startDate = this.maxDate.clone(), this.timePicker && this.timePickerIncrement && this.startDate.minute(Math.floor(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement)), this.isShowing || this.updateElement(), this.updateMonthsInView();
  }
  setEndDate(e) {
    typeof e == "string" && (this.endDate = ue(e, this.locale.format)), typeof e == "object" && (this.endDate = ue(e)), this.timePicker || (this.endDate = this.endDate.endOf("day")), this.timePicker && this.timePickerIncrement && this.endDate.minute(Math.round(this.endDate.minute() / this.timePickerIncrement) * this.timePickerIncrement), this.endDate.isBefore(this.startDate) && (this.endDate = this.startDate.clone()), this.maxDate && this.endDate.isAfter(this.maxDate) && (this.endDate = this.maxDate.clone()), this.maxSpan && this.startDate.clone().add(this.maxSpan).isBefore(this.endDate) && (this.endDate = this.startDate.clone().add(this.maxSpan)), this.previousRightTime = this.endDate.clone(), this.container.find(".drp-selected").html(this.startDate.format(this.locale.format) + this.locale.separator + this.endDate.format(this.locale.format)), this.isShowing || this.updateElement(), this.updateMonthsInView();
  }
  isInvalidDate() {
    return !1;
  }
  isCustomDate() {
    return !1;
  }
  updateView() {
    this.timePicker && (this.renderTimePicker("left"), this.renderTimePicker("right"), this.endDate ? this.container.find(".right .calendar-time select").prop("disabled", !1).removeClass("disabled") : this.container.find(".right .calendar-time select").prop("disabled", !0).addClass("disabled")), this.endDate && this.container.find(".drp-selected").html(this.startDate.format(this.locale.format) + this.locale.separator + this.endDate.format(this.locale.format)), this.updateMonthsInView(), this.updateCalendars(), this.updateFormInputs();
  }
  updateMonthsInView() {
    if (this.endDate) {
      if (!this.singleDatePicker && this.leftCalendar.month && this.rightCalendar.month && (this.startDate.format("YYYY-MM") == this.leftCalendar.month.format("YYYY-MM") || this.startDate.format("YYYY-MM") == this.rightCalendar.month.format("YYYY-MM")) && (this.endDate.format("YYYY-MM") == this.leftCalendar.month.format("YYYY-MM") || this.endDate.format("YYYY-MM") == this.rightCalendar.month.format("YYYY-MM")))
        return;
      this.leftCalendar.month = this.startDate.clone().date(2), !this.linkedCalendars && (this.endDate.month() != this.startDate.month() || this.endDate.year() != this.startDate.year()) ? this.rightCalendar.month = this.endDate.clone().date(2) : this.rightCalendar.month = this.startDate.clone().date(2).add(1, "month");
    } else
      this.leftCalendar.month.format("YYYY-MM") != this.startDate.format("YYYY-MM") && this.rightCalendar.month.format("YYYY-MM") != this.startDate.format("YYYY-MM") && (this.leftCalendar.month = this.startDate.clone().date(2), this.rightCalendar.month = this.startDate.clone().date(2).add(1, "month"));
    this.maxDate && this.linkedCalendars && !this.singleDatePicker && this.rightCalendar.month > this.maxDate && (this.rightCalendar.month = this.maxDate.clone().date(2), this.leftCalendar.month = this.maxDate.clone().date(2).subtract(1, "month"));
  }
  updateCalendars() {
    if (this.timePicker) {
      var e, t, n;
      if (this.endDate) {
        if (e = parseInt(this.container.find(".left .hourselect").val(), 10), t = parseInt(this.container.find(".left .minuteselect").val(), 10), isNaN(t) && (t = parseInt(this.container.find(".left .minuteselect option:last").val(), 10)), n = this.timePickerSeconds ? parseInt(this.container.find(".left .secondselect").val(), 10) : 0, !this.timePicker24Hour) {
          var r = this.container.find(".left .ampmselect").val();
          r === "PM" && e < 12 && (e += 12), r === "AM" && e === 12 && (e = 0);
        }
      } else if (e = parseInt(this.container.find(".right .hourselect").val(), 10), t = parseInt(this.container.find(".right .minuteselect").val(), 10), isNaN(t) && (t = parseInt(this.container.find(".right .minuteselect option:last").val(), 10)), n = this.timePickerSeconds ? parseInt(this.container.find(".right .secondselect").val(), 10) : 0, !this.timePicker24Hour) {
        var r = this.container.find(".right .ampmselect").val();
        r === "PM" && e < 12 && (e += 12), r === "AM" && e === 12 && (e = 0);
      }
      this.leftCalendar.month.hour(e).minute(t).second(n), this.rightCalendar.month.hour(e).minute(t).second(n);
    }
    this.renderCalendar("left"), this.renderCalendar("right"), this.container.find(".ranges li").removeClass("active"), this.endDate != null && this.calculateChosenLabel();
  }
  renderCalendar(e) {
    var k = e == "left" ? this.leftCalendar : this.rightCalendar, t = k.month.month(), n = k.month.year(), r = k.month.hour(), a = k.month.minute(), c = k.month.second(), u = ue([n, t]).daysInMonth(), p = ue([n, t, 1]), g = ue([n, t, u]), v = ue(p).subtract(1, "month").month(), x = ue(p).subtract(1, "month").year(), y = ue([x, v]).daysInMonth(), T = p.day(), k = [];
    k.firstDay = p, k.lastDay = g;
    for (var M = 0; M < 6; M++)
      k[M] = [];
    var O = y - T + this.locale.firstDay + 1;
    O > y && (O -= 7), T == this.locale.firstDay && (O = y - 6);
    for (var Y = ue([x, v, O, 12, a, c]), I, F, M = 0, I = 0, F = 0; M < 42; M++, I++, Y = ue(Y).add(24, "hour"))
      M > 0 && I % 7 === 0 && (I = 0, F++), k[F][I] = Y.clone().hour(r).minute(a).second(c), Y.hour(12), this.minDate && k[F][I].format("YYYY-MM-DD") == this.minDate.format("YYYY-MM-DD") && k[F][I].isBefore(this.minDate) && e == "left" && (k[F][I] = this.minDate.clone()), this.maxDate && k[F][I].format("YYYY-MM-DD") == this.maxDate.format("YYYY-MM-DD") && k[F][I].isAfter(this.maxDate) && e == "right" && (k[F][I] = this.maxDate.clone());
    e == "left" ? this.leftCalendar.calendar = k : this.rightCalendar.calendar = k;
    var Q = e == "left" ? this.minDate : this.startDate, U = this.maxDate;
    e == "left" ? this.startDate : this.endDate, this.locale.direction == "ltr";
    var z = '<table class="table-condensed">';
    z += "<thead>", z += "<tr>", (this.showWeekNumbers || this.showISOWeekNumbers) && (z += "<th></th>"), (!Q || Q.isBefore(k.firstDay)) && (!this.linkedCalendars || e == "left") ? z += '<th class="prev available"><span></span></th>' : z += "<th></th>";
    var d = this.locale.monthNames[k[1][1].month()] + k[1][1].format(" YYYY");
    if (this.showDropdowns) {
      for (var j = k[1][1].month(), R = k[1][1].year(), V = U && U.year() || this.maxYear, K = Q && Q.year() || this.minYear, J = R == K, B = R == V, se = '<select class="monthselect">', Z = 0; Z < 12; Z++)
        (!J || Q && Z >= Q.month()) && (!B || U && Z <= U.month()) ? se += "<option value='" + Z + "'" + (Z === j ? " selected='selected'" : "") + ">" + this.locale.monthNames[Z] + "</option>" : se += "<option value='" + Z + "'" + (Z === j ? " selected='selected'" : "") + " disabled='disabled'>" + this.locale.monthNames[Z] + "</option>";
      se += "</select>";
      for (var ne = '<select class="yearselect">', le = K; le <= V; le++)
        ne += '<option value="' + le + '"' + (le === R ? ' selected="selected"' : "") + ">" + le + "</option>";
      ne += "</select>", d = se + ne;
    }
    if (z += '<th colspan="5" class="month">' + d + "</th>", (!U || U.isAfter(k.lastDay)) && (!this.linkedCalendars || e == "right" || this.singleDatePicker) ? z += '<th class="next available"><span></span></th>' : z += "<th></th>", z += "</tr>", z += "<tr>", (this.showWeekNumbers || this.showISOWeekNumbers) && (z += '<th class="week">' + this.locale.weekLabel + "</th>"), Ie.each(this.locale.daysOfWeek, function(Ke, io) {
      z += "<th>" + io + "</th>";
    }), z += "</tr>", z += "</thead>", z += "<tbody>", this.endDate == null && this.maxSpan) {
      var oe = this.startDate.clone().add(this.maxSpan).endOf("day");
      (!U || oe.isBefore(U)) && (U = oe);
    }
    for (var F = 0; F < 6; F++) {
      z += "<tr>", this.showWeekNumbers ? z += '<td class="week">' + k[F][0].week() + "</td>" : this.showISOWeekNumbers && (z += '<td class="week">' + k[F][0].isoWeek() + "</td>");
      for (var I = 0; I < 7; I++) {
        var fe = [];
        k[F][I].isSame(/* @__PURE__ */ new Date(), "day") && fe.push("today"), k[F][I].isoWeekday() > 5 && fe.push("weekend"), k[F][I].month() != k[1][1].month() && fe.push("off", "ends"), this.minDate && k[F][I].isBefore(this.minDate, "day") && fe.push("off", "disabled"), U && k[F][I].isAfter(U, "day") && fe.push("off", "disabled"), this.isInvalidDate(k[F][I]) && fe.push("off", "disabled"), k[F][I].format("YYYY-MM-DD") == this.startDate.format("YYYY-MM-DD") && fe.push("active", "start-date"), this.endDate != null && k[F][I].format("YYYY-MM-DD") == this.endDate.format("YYYY-MM-DD") && fe.push("active", "end-date"), this.endDate != null && k[F][I] > this.startDate && k[F][I] < this.endDate && fe.push("in-range");
        var Me = this.isCustomDate(k[F][I]);
        Me !== !1 && (typeof Me == "string" ? fe.push(Me) : Array.prototype.push.apply(fe, Me));
        for (var je = "", Be = !1, M = 0; M < fe.length; M++)
          je += fe[M] + " ", fe[M] == "disabled" && (Be = !0);
        Be || (je += "available"), z += '<td class="' + je.replace(/^\s+|\s+$/g, "") + '" data-title="r' + F + "c" + I + '">' + k[F][I].date() + "</td>";
      }
      z += "</tr>";
    }
    z += "</tbody>", z += "</table>", this.container.find(".drp-calendar." + e + " .calendar-table").html(z);
  }
  renderTimePicker(e) {
    if (!(e == "right" && !this.endDate)) {
      var t, n, r, a = this.maxDate;
      if (this.maxSpan && (!this.maxDate || this.startDate.clone().add(this.maxSpan).isBefore(this.maxDate)) && (a = this.startDate.clone().add(this.maxSpan)), e == "left")
        n = this.startDate.clone(), r = this.minDate;
      else if (e == "right") {
        n = this.endDate.clone(), r = this.startDate;
        var c = this.container.find(".drp-calendar.right .calendar-time");
        if (c.html() != "" && (n.hour(isNaN(n.hour()) ? c.find(".hourselect option:selected").val() : n.hour()), n.minute(isNaN(n.minute()) ? c.find(".minuteselect option:selected").val() : n.minute()), n.second(isNaN(n.second()) ? c.find(".secondselect option:selected").val() : n.second()), !this.timePicker24Hour)) {
          var u = c.find(".ampmselect option:selected").val();
          u === "PM" && n.hour() < 12 && n.hour(n.hour() + 12), u === "AM" && n.hour() === 12 && n.hour(0);
        }
        n.isBefore(this.startDate) && (n = this.startDate.clone()), a && n.isAfter(a) && (n = a.clone());
      }
      t = '<select class="hourselect">';
      for (var p = this.timePicker24Hour ? 0 : 1, g = this.timePicker24Hour ? 23 : 12, v = p; v <= g; v++) {
        var x = v;
        this.timePicker24Hour || (x = n.hour() >= 12 ? v == 12 ? 12 : v + 12 : v == 12 ? 0 : v);
        var y = n.clone().hour(x), T = !1;
        r && y.minute(59).isBefore(r) && (T = !0), a && y.minute(0).isAfter(a) && (T = !0), x == n.hour() && !T ? t += '<option value="' + v + '" selected="selected">' + v + "</option>" : T ? t += '<option value="' + v + '" disabled="disabled" class="disabled">' + v + "</option>" : t += '<option value="' + v + '">' + v + "</option>";
      }
      t += "</select> ", t += ': <select class="minuteselect">';
      for (var v = 0; v < 60; v += this.timePickerIncrement) {
        var k = v < 10 ? "0" + v : v, y = n.clone().minute(v), T = !1;
        r && y.second(59).isBefore(r) && (T = !0), a && y.second(0).isAfter(a) && (T = !0), n.minute() == v && !T ? t += '<option value="' + v + '" selected="selected">' + k + "</option>" : T ? t += '<option value="' + v + '" disabled="disabled" class="disabled">' + k + "</option>" : t += '<option value="' + v + '">' + k + "</option>";
      }
      if (t += "</select> ", this.timePickerSeconds) {
        t += ': <select class="secondselect">';
        for (var v = 0; v < 60; v++) {
          var k = v < 10 ? "0" + v : v, y = n.clone().second(v), T = !1;
          r && y.isBefore(r) && (T = !0), a && y.isAfter(a) && (T = !0), n.second() == v && !T ? t += '<option value="' + v + '" selected="selected">' + k + "</option>" : T ? t += '<option value="' + v + '" disabled="disabled" class="disabled">' + k + "</option>" : t += '<option value="' + v + '">' + k + "</option>";
        }
        t += "</select> ";
      }
      if (!this.timePicker24Hour) {
        t += '<select class="ampmselect">';
        var M = "", O = "";
        r && n.clone().hour(12).minute(0).second(0).isBefore(r) && (M = ' disabled="disabled" class="disabled"'), a && n.clone().hour(0).minute(0).second(0).isAfter(a) && (O = ' disabled="disabled" class="disabled"'), n.hour() >= 12 ? t += '<option value="AM"' + M + '>AM</option><option value="PM" selected="selected"' + O + ">PM</option>" : t += '<option value="AM" selected="selected"' + M + '>AM</option><option value="PM"' + O + ">PM</option>", t += "</select>";
      }
      this.container.find(".drp-calendar." + e + " .calendar-time").html(t);
    }
  }
  updateFormInputs() {
    this.singleDatePicker || this.endDate && (this.startDate.isBefore(this.endDate) || this.startDate.isSame(this.endDate)) ? this.container.find("button.applyBtn").prop("disabled", !1) : this.container.find("button.applyBtn").prop("disabled", !0);
  }
  move() {
    var e = { top: 0, left: 0 }, t, n = this.drops, r = Ie(window).width();
    switch (this.parentEl.is("body") || (e = {
      top: this.parentEl.offset().top - this.parentEl.scrollTop(),
      left: this.parentEl.offset().left - this.parentEl.scrollLeft()
    }, r = this.parentEl[0].clientWidth + this.parentEl.offset().left), n) {
      case "auto":
        t = this.element.offset().top + this.element.outerHeight() - e.top, t + this.container.outerHeight() >= this.parentEl[0].scrollHeight && (t = this.element.offset().top - this.container.outerHeight() - e.top, n = "up");
        break;
      case "up":
        t = this.element.offset().top - this.container.outerHeight() - e.top;
        break;
      default:
        t = this.element.offset().top + this.element.outerHeight() - e.top;
        break;
    }
    this.container.css({
      top: 0,
      left: 0,
      right: "auto"
    });
    var a = this.container.outerWidth();
    if (this.container.toggleClass("drop-up", n == "up"), this.opens == "left") {
      var c = r - this.element.offset().left - this.element.outerWidth();
      a + c > Ie(window).width() ? this.container.css({
        top: t,
        right: "auto",
        left: 9
      }) : this.container.css({
        top: t,
        right: c,
        left: "auto"
      });
    } else if (this.opens == "center") {
      var u = this.element.offset().left - e.left + this.element.outerWidth() / 2 - a / 2;
      u < 0 ? this.container.css({
        top: t,
        right: "auto",
        left: 9
      }) : u + a > Ie(window).width() ? this.container.css({
        top: t,
        left: "auto",
        right: 0
      }) : this.container.css({
        top: t,
        left: u,
        right: "auto"
      });
    } else {
      var u = this.element.offset().left - e.left;
      u + a > Ie(window).width() ? this.container.css({
        top: t,
        left: "auto",
        right: 0
      }) : this.container.css({
        top: t,
        left: u,
        right: "auto"
      });
    }
  }
  show(e) {
    this.isShowing || (this._outsideClickProxy = Ie.proxy(function(t) {
      this.outsideClick(t);
    }, this), Ie(document).on("mousedown.daterangepicker", this._outsideClickProxy).on("touchend.daterangepicker", this._outsideClickProxy).on("click.daterangepicker", "[data-toggle=dropdown]", this._outsideClickProxy).on("focusin.daterangepicker", this._outsideClickProxy), Ie(window).on("resize.daterangepicker", Ie.proxy(function(t) {
      this.move(t);
    }, this)), this.oldStartDate = this.startDate.clone(), this.oldEndDate = this.endDate.clone(), this.previousRightTime = this.endDate.clone(), this.updateView(), this.container.show(), this.move(), this.element.trigger("show.daterangepicker", this), this.isShowing = !0);
  }
  hide(e) {
    this.isShowing && (this.endDate || (this.startDate = this.oldStartDate.clone(), this.endDate = this.oldEndDate.clone()), (!this.startDate.isSame(this.oldStartDate) || !this.endDate.isSame(this.oldEndDate)) && this.callback(this.startDate.clone(), this.endDate.clone(), this.chosenLabel), this.updateElement(), Ie(document).off(".daterangepicker"), Ie(window).off(".daterangepicker"), this.container.hide(), this.element.trigger("hide.daterangepicker", this), this.isShowing = !1);
  }
  toggle(e) {
    this.isShowing ? this.hide() : this.show();
  }
  outsideClick(e) {
    var t = Ie(e.target);
    e.type == "focusin" || t.closest(this.element).length || t.closest(this.container).length || t.closest(".calendar-table").length || (this.hide(), this.element.trigger("outsideClick.daterangepicker", this));
  }
  showCalendars() {
    this.container.addClass("show-calendar"), this.move(), this.element.trigger("showCalendar.daterangepicker", this);
  }
  hideCalendars() {
    this.container.removeClass("show-calendar"), this.element.trigger("hideCalendar.daterangepicker", this);
  }
  clickRange(e) {
    var t = e.target.getAttribute("data-range-key");
    if (this.chosenLabel = t, t == this.locale.customRangeLabel)
      this.showCalendars();
    else {
      var n = this.ranges[t];
      this.startDate = n[0], this.endDate = n[1], this.timePicker || (this.startDate.startOf("day"), this.endDate.endOf("day")), this.alwaysShowCalendars || this.hideCalendars(), this.clickApply();
    }
  }
  clickPrev(e) {
    var t = Ie(e.target).parents(".drp-calendar");
    t.hasClass("left") ? (this.leftCalendar.month.subtract(1, "month"), this.linkedCalendars && this.rightCalendar.month.subtract(1, "month")) : this.rightCalendar.month.subtract(1, "month"), this.updateCalendars();
  }
  clickNext(e) {
    var t = Ie(e.target).parents(".drp-calendar");
    t.hasClass("left") ? this.leftCalendar.month.add(1, "month") : (this.rightCalendar.month.add(1, "month"), this.linkedCalendars && this.leftCalendar.month.add(1, "month")), this.updateCalendars();
  }
  hoverDate(e) {
    if (Ie(e.target).hasClass("available")) {
      var t = Ie(e.target).attr("data-title"), n = t.substr(1, 1), r = t.substr(3, 1), a = Ie(e.target).parents(".drp-calendar"), c = a.hasClass("left") ? this.leftCalendar.calendar[n][r] : this.rightCalendar.calendar[n][r], u = this.leftCalendar, p = this.rightCalendar, g = this.startDate;
      this.endDate || this.container.find(".drp-calendar tbody td").each(function(v, x) {
        if (!Ie(x).hasClass("week")) {
          var y = Ie(x).attr("data-title"), T = y.substr(1, 1), k = y.substr(3, 1), M = Ie(x).parents(".drp-calendar"), O = M.hasClass("left") ? u.calendar[T][k] : p.calendar[T][k];
          O.isAfter(g) && O.isBefore(c) || O.isSame(c, "day") ? Ie(x).addClass("in-range") : Ie(x).removeClass("in-range");
        }
      });
    }
  }
  clickDate(e) {
    if (Ie(e.target).hasClass("available")) {
      var t = Ie(e.target).attr("data-title"), n = t.substr(1, 1), r = t.substr(3, 1), a = Ie(e.target).parents(".drp-calendar"), c = a.hasClass("left") ? this.leftCalendar.calendar[n][r] : this.rightCalendar.calendar[n][r];
      if (this.endDate || c.isBefore(this.startDate, "day")) {
        if (this.timePicker) {
          var u = parseInt(this.container.find(".left .hourselect").val(), 10);
          if (!this.timePicker24Hour) {
            var p = this.container.find(".left .ampmselect").val();
            p === "PM" && u < 12 && (u += 12), p === "AM" && u === 12 && (u = 0);
          }
          var g = parseInt(this.container.find(".left .minuteselect").val(), 10);
          isNaN(g) && (g = parseInt(this.container.find(".left .minuteselect option:last").val(), 10));
          var v = this.timePickerSeconds ? parseInt(this.container.find(".left .secondselect").val(), 10) : 0;
          c = c.clone().hour(u).minute(g).second(v);
        }
        this.endDate = null, this.setStartDate(c.clone());
      } else if (!this.endDate && c.isBefore(this.startDate))
        this.setEndDate(this.startDate.clone());
      else {
        if (this.timePicker) {
          var u = parseInt(this.container.find(".right .hourselect").val(), 10);
          if (!this.timePicker24Hour) {
            var p = this.container.find(".right .ampmselect").val();
            p === "PM" && u < 12 && (u += 12), p === "AM" && u === 12 && (u = 0);
          }
          var g = parseInt(this.container.find(".right .minuteselect").val(), 10);
          isNaN(g) && (g = parseInt(this.container.find(".right .minuteselect option:last").val(), 10));
          var v = this.timePickerSeconds ? parseInt(this.container.find(".right .secondselect").val(), 10) : 0;
          c = c.clone().hour(u).minute(g).second(v);
        }
        this.setEndDate(c.clone()), this.autoApply && (this.calculateChosenLabel(), this.clickApply());
      }
      this.singleDatePicker && (this.setEndDate(this.startDate), !this.timePicker && this.autoApply && this.clickApply()), this.updateView(), e.stopPropagation();
    }
  }
  calculateChosenLabel() {
    var e = !0, t = 0;
    for (var n in this.ranges) {
      if (this.timePicker) {
        var r = this.timePickerSeconds ? "YYYY-MM-DD HH:mm:ss" : "YYYY-MM-DD HH:mm";
        if (this.startDate.format(r) == this.ranges[n][0].format(r) && this.endDate.format(r) == this.ranges[n][1].format(r)) {
          e = !1, this.chosenLabel = this.container.find(".ranges li:eq(" + t + ")").addClass("active").attr("data-range-key");
          break;
        }
      } else if (this.startDate.format("YYYY-MM-DD") == this.ranges[n][0].format("YYYY-MM-DD") && this.endDate.format("YYYY-MM-DD") == this.ranges[n][1].format("YYYY-MM-DD")) {
        e = !1, this.chosenLabel = this.container.find(".ranges li:eq(" + t + ")").addClass("active").attr("data-range-key");
        break;
      }
      t++;
    }
    e && (this.showCustomRangeLabel ? this.chosenLabel = this.container.find(".ranges li:last").addClass("active").attr("data-range-key") : this.chosenLabel = null, this.showCalendars());
  }
  clickApply(e) {
    this.hide(), this.element.trigger("apply.daterangepicker", this);
  }
  clickCancel(e) {
    this.startDate = this.oldStartDate, this.endDate = this.oldEndDate, this.hide(), this.element.trigger("cancel.daterangepicker", this);
  }
  monthOrYearChanged(e) {
    var t = Ie(e.target).closest(".drp-calendar").hasClass("left"), n = t ? "left" : "right", r = this.container.find(".drp-calendar." + n), a = parseInt(r.find(".monthselect").val(), 10), c = r.find(".yearselect").val();
    t || (c < this.startDate.year() || c == this.startDate.year() && a < this.startDate.month()) && (a = this.startDate.month(), c = this.startDate.year()), this.minDate && (c < this.minDate.year() || c == this.minDate.year() && a < this.minDate.month()) && (a = this.minDate.month(), c = this.minDate.year()), this.maxDate && (c > this.maxDate.year() || c == this.maxDate.year() && a > this.maxDate.month()) && (a = this.maxDate.month(), c = this.maxDate.year()), t ? (this.leftCalendar.month.month(a).year(c), this.linkedCalendars && (this.rightCalendar.month = this.leftCalendar.month.clone().add(1, "month"))) : (this.rightCalendar.month.month(a).year(c), this.linkedCalendars && (this.leftCalendar.month = this.rightCalendar.month.clone().subtract(1, "month"))), this.updateCalendars();
  }
  timeChanged(e) {
    var t = Ie(e.target).closest(".drp-calendar"), n = t.hasClass("left"), r = parseInt(t.find(".hourselect").val(), 10), a = parseInt(t.find(".minuteselect").val(), 10);
    isNaN(a) && (a = parseInt(t.find(".minuteselect option:last").val(), 10));
    var c = this.timePickerSeconds ? parseInt(t.find(".secondselect").val(), 10) : 0;
    if (!this.timePicker24Hour) {
      var u = t.find(".ampmselect").val();
      u === "PM" && r < 12 && (r += 12), u === "AM" && r === 12 && (r = 0);
    }
    if (n) {
      var p = this.startDate.clone();
      p.hour(r), p.minute(a), p.second(c), this.setStartDate(p), this.singleDatePicker ? this.endDate = this.startDate.clone() : this.endDate && this.endDate.format("YYYY-MM-DD") == p.format("YYYY-MM-DD") && this.endDate.isBefore(p) && this.setEndDate(p.clone());
    } else if (this.endDate) {
      var g = this.endDate.clone();
      g.hour(r), g.minute(a), g.second(c), this.setEndDate(g);
    }
    this.updateCalendars(), this.updateFormInputs(), this.renderTimePicker("left"), this.renderTimePicker("right");
  }
  elementChanged() {
    if (this.element.is("input") && this.element.val().length) {
      var e = this.element.val().split(this.locale.separator), t = null, n = null;
      e.length === 2 && (t = ue(e[0], this.locale.format), n = ue(e[1], this.locale.format)), (this.singleDatePicker || t === null || n === null) && (t = ue(this.element.val(), this.locale.format), n = t), !(!t.isValid() || !n.isValid()) && (this.setStartDate(t), this.setEndDate(n), this.updateView());
    }
  }
  keydown(e) {
    (e.keyCode === 9 || e.keyCode === 13) && this.hide(), e.keyCode === 27 && (e.preventDefault(), e.stopPropagation(), this.hide());
  }
  updateElement() {
    if (this.element.is("input") && this.autoUpdateInput) {
      var e = this.startDate.format(this.locale.format);
      this.singleDatePicker || (e += this.locale.separator + this.endDate.format(this.locale.format)), e !== this.element.val() && this.element.val(e).trigger("change");
    }
  }
  remove() {
    this.container.remove(), this.element.off(".daterangepicker"), this.element.removeData();
  }
};
Ie.fn.daterangepicker = function(o, e) {
  var t = Ie.extend(!0, {}, Ie.fn.daterangepicker.defaultOptions, o);
  return this.each(function() {
    var n = Ie(this);
    n.data("daterangepicker") && n.data("daterangepicker").remove(), n.data("daterangepicker", new tw(n, t, e));
  }), this;
};
const Je = {
  wrapper: "tc-wrap",
  wrapperReadOnly: "tc-wrap--readonly",
  table: "tc-table",
  row: "tc-row",
  withHeadings: "tc-table--heading",
  rowSelected: "tc-row--selected",
  cell: "tc-cell",
  cellSelected: "tc-cell--selected",
  addRow: "tc-add-row",
  addColumn: "tc-add-column",
  formInput: "vc-form-input"
};
let ow = class {
  /**
   * Creates
   *
   * @constructor
   * @param {boolean} readOnly - read-only mode flag
   * @param {object} api - Editor.js API
   * @param {TableData} data - Editor.js API
   * @param {TableConfig} config - Editor.js API
   */
  constructor(e, t, n, r, a) {
    var c;
    if (this.readOnly = e, this.api = t, this.block = a, this.config = r, this.isJapan = ((c = this.config) == null ? void 0 : c.locale) == "jp", n.content.length > 1) {
      const u = r.data.data.length;
      n.content.map((p, g) => p.splice(u));
    }
    n.heading = r.data.data.map((u) => this.isJapan ? u.heading_jp : u.heading), this.data = n, this.wrapper = null, this.table = null, this.interval = null, this.customDatePicker = null, this.toolboxRow = this.createRowToolbox(), this.toolBoxDue = null, this.createTableWrapper(), this.hoveredRow = 0, this.hoveredColumn = 0, this.selectedRow = 0, this.selectedColumn = 0, this.tunes = {
      withHeadings: !1
    }, this.resize(), this.fill(), setTimeout(() => {
      this.checkInput();
    }, 0), this.focusedCell = {
      row: 0,
      column: 0
    }, this.documentClicked = (u) => {
      const p = u.target.closest(`.${Je.table}`) !== null, g = u.target.closest(`.${Je.wrapper}`) === null;
      (p || g) && this.hideToolboxes();
      const v = u.target.closest(`.${Je.addRow}`), x = u.target.closest(`.${Je.addColumn}`);
      v && v.parentNode === this.wrapper ? (this.addRow(void 0, !0), this.hideToolboxes()) : x && x.parentNode === this.wrapper && this.hideToolboxes();
    }, this.readOnly || this.bindEvents();
  }
  checkInput() {
    this.table.querySelectorAll(`.${Je.row}`).forEach((e, t) => {
      var n;
      t != 0 && ((n = e == null ? void 0 : e.firstChild) == null ? void 0 : n.childElementCount) == 0 && this.createColumnInput(t);
    });
  }
  createColumnInput(e) {
    var t, n, r, a;
    this.isJapan = ((t = this.config) == null ? void 0 : t.locale) == "jp";
    for (let c = 0; c < this.config.data.data.length; c++) {
      const u = this.config.data.data[c], p = this.getCell(e + 1, c + 1);
      if (!p)
        return;
      const g = ((a = (r = (n = this.data) == null ? void 0 : n.content) == null ? void 0 : r[e - 1]) == null ? void 0 : a[c]) || "";
      if (u.type == "search") {
        const v = zt("input", Je.formInput, {
          value: g,
          disabled: this.readOnly
        });
        this.api.listeners.on(v, "keyup", (x) => {
          const y = x.target.value.trim().replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
          clearTimeout(this.interval), this.interval = setTimeout(() => {
            this.fetchData(y, v);
          }, 500);
        }), p.appendChild(v);
      } else if (u.type == "date") {
        const v = zt("input", Je.formInput, {
          value: g,
          disabled: this.readOnly
        });
        Ie(v).daterangepicker({
          autohide: !0,
          singleDatePicker: !0,
          autoUpdateInput: !1,
          autoApply: !0,
          locale: {
            format: "DD-MM-YYYY"
          }
        }), Ie(v).on("apply.daterangepicker", (x, y) => {
          v.value = y.startDate.format("DD-MM-YYYY"), this.block.dispatchChange();
        }), p.appendChild(v);
      } else if (u.type == "textDate") {
        const v = zt("input", Je.formInput, {
          value: g,
          disabled: this.readOnly
        });
        Ie(v).daterangepicker({
          autohide: !0,
          singleDatePicker: !0,
          autoUpdateInput: !1,
          autoApply: !0,
          ranges: {
            "1 Week": [ue().add(1, "week")],
            "8 Week": [ue().add(8, "week")],
            "1 Year": [ue().add(1, "year")]
          },
          locale: {
            format: "DD-MM-YYYY"
          }
        }), Ie(v).on("apply.daterangepicker", (x, y) => {
          v.value = y.startDate.format("DD-MM-YYYY"), this.block.dispatchChange();
        }), p.appendChild(v);
      } else if (u.type == "select") {
        const v = zt("select", Je.formInput, {
          value: g,
          disabled: this.readOnly
        });
        let x = !1;
        u.options.map((y) => {
          y.label == g && (x = !0);
          const T = zt("option", "", {
            label: this.isJapan ? y.label_jp : y.label,
            value: y.label,
            selected: g == y.label
          });
          v.appendChild(T);
        }), x || v.prepend(zt("option", "", {
          label: g,
          value: g,
          selected: !0
        })), this.api.listeners.on(v, "change", (y) => {
          var T, k;
          if (y.target.value == "Others") {
            const M = y.target.parentElement, O = zt("input", Je.formInput, {
              placeholder: this.api.i18n.t("Enter text")
            });
            this.api.listeners.on(O, "focusout", () => {
              this.block.dispatchChange();
            }), (k = (T = M.children) == null ? void 0 : T[0]) == null || k.remove(), M.appendChild(O);
          }
          this.block.dispatchChange();
        }), p.appendChild(v);
      } else if (u.type == "text") {
        const v = zt("input", Je.formInput, {
          value: g,
          disabled: this.readOnly
        });
        p.appendChild(v);
      } else if (u.type == "checkbox") {
        const v = zt("input", Je.formInput, {
          checked: g,
          type: "checkbox",
          disabled: this.readOnly
        });
        this.api.listeners.on(v, "change", () => {
          this.block.dispatchChange();
        }), p.appendChild(v);
      }
    }
  }
  async fetchData(e = "", t) {
    const n = new Headers();
    n.append("Content-Type", "application/json");
    const r = JSON.stringify({
      search: e
    }), a = {
      method: "POST",
      headers: n,
      body: r
    }, c = await fetch(this.config.apiUrl, a).then((p) => p.json()).catch((p) => console.log("error", p)), u = [{
      label: this.api.i18n.t("Delete row"),
      icon: vh,
      hideIf: () => this.numberOfRows === 1,
      confirmationRequired: !0,
      onClick: () => {
        this.deleteRow(this.focusedCell.row), this.hideToolboxes();
      }
    }];
    this.focusedCell.row - 1, c.data.map((p) => {
      u.push({
        label: p.medicine,
        icon: Z1,
        confirmationRequired: !1,
        onClick: (g) => {
          p.medicine && (t.value = p.medicine), this.hideToolboxes(), this.block.dispatchChange();
        }
      });
    }), this.renderToolBox(u);
  }
  /**
   * Returns the rendered table wrapper
   *
   * @returns {Element}
   */
  getWrapper() {
    return this.wrapper;
  }
  /**
   * Hangs the necessary handlers to events
   */
  bindEvents() {
    this.wrapper.addEventListener("click", this.documentClicked), this.table.addEventListener("mousemove", ew(150, (e) => this.onMouseMoveInTable(e)), { passive: !0 }), this.table.onkeypress = (e) => this.onKeyPressListener(e), this.table.addEventListener("keydown", (e) => this.onKeyDownListener(e)), this.table.addEventListener("keyup", (e) => this.onKeyUpListener(e)), this.table.addEventListener("focusin", (e) => this.focusInTableListener(e));
  }
  /**
  * Configures and creates the toolbox for manipulating with rows
  *
  * @returns {Toolbox}
  */
  createRowToolbox() {
    return new wh({
      api: this.api,
      cssModifier: "row",
      items: [
        {
          label: this.api.i18n.t("Add row above"),
          icon: K1,
          onClick: () => {
            this.selectedRow != 1 && (this.addRow(this.selectedRow, !0), this.hideToolboxes());
          }
        },
        {
          label: this.api.i18n.t("Add row below"),
          icon: G1,
          onClick: () => {
            this.addRow(this.selectedRow + 1, !0), this.hideToolboxes();
          }
        },
        {
          label: this.api.i18n.t("Delete row"),
          icon: vh,
          hideIf: () => this.numberOfRows === 1,
          confirmationRequired: !0,
          onClick: () => {
            this.deleteRow(this.selectedRow), this.hideToolboxes();
          }
        }
      ],
      onOpen: () => {
        this.selectRow(this.hoveredRow), this.hideColumnToolbox();
      },
      onClose: () => {
        this.unselectRow();
      }
    });
  }
  createCustomToolbox(e = []) {
    return new wh({
      table: this,
      api: this.api,
      cssModifier: "row",
      items: e,
      onOpen: () => {
        this.selectRow(this.hoveredRow), this.hideColumnToolbox();
      },
      onClose: () => {
        this.unselectRow();
      }
    });
  }
  renderToolBox(e = []) {
    this.toolBoxDue && this.toolBoxDue.element.remove(), this.toolBoxDue = this.createCustomToolbox(e), this.wrapper.appendChild(this.toolBoxDue.element), this.toolBoxDue.togglerClicked(), this.toolBoxDue.show(() => this.getUpdateLocation());
  }
  getUpdateLocation() {
    const e = this.hoveredRow, t = this.hoveredColumn, n = this.getRow(e), { fromTopBorder: r } = Nl(this.table, n), { height: a } = n.getBoundingClientRect();
    return {
      top: `${Math.ceil(r + a / 0.8)}px`,
      left: `calc((100% - var(--cell-size)) / (${this.numberOfColumns} * 2) * ( (${t} - 1) * 2))`
    };
  }
  /**
   * When you press enter it moves the cursor down to the next row
   * or creates it if the click occurred on the last one
   */
  moveCursorToNextRow() {
    this.focusedCell.row !== this.numberOfRows ? (this.focusedCell.row += 1, this.focusCell(this.focusedCell)) : (this.addRow(), this.focusedCell.row += 1, this.focusCell(this.focusedCell), this.updateToolboxesPosition(0, 0));
  }
  /**
   * Get table cell by row and col index
   *
   * @param {number} row - cell row coordinate
   * @param {number} column - cell column coordinate
   * @returns {HTMLElement}
   */
  getCell(e, t) {
    return this.table.querySelectorAll(`.${Je.row}:nth-child(${e}) .${Je.cell}`)[t - 1];
  }
  /**
   * Get table row by index
   *
   * @param {number} row - row coordinate
   * @returns {HTMLElement}
   */
  getRow(e) {
    return this.table.querySelector(`.${Je.row}:nth-child(${e})`);
  }
  /**
   * The parent of the cell which is the row
   *
   * @param {HTMLElement} cell - cell element
   * @returns {HTMLElement}
   */
  getRowByCell(e) {
    return e.parentElement;
  }
  /**
   * Ger row's first cell
   *
   * @param {Element} row - row to find its first cell
   * @returns {Element}
   */
  getRowFirstCell(e) {
    return e.querySelector(`.${Je.cell}:first-child`);
  }
  /**
   * Set the sell's content by row and column numbers
   *
   * @param {number} row - cell row coordinate
   * @param {number} column - cell column coordinate
   * @param {string} content - cell HTML content
   */
  setCellContent(e, t, n) {
    const r = this.getCell(e, t);
    "innerHTML" in r && (r.innerHTML = n);
  }
  /**
   * Add column in table on index place
   * Add cells in each row
   *
   * @param {number} columnIndex - number in the array of columns, where new column to insert, -1 if insert at the end
   * @param {boolean} [setFocus] - pass true to focus the first cell
   */
  addColumn(e = -1, t = !1) {
    let n = this.numberOfColumns;
    for (let r = 1; r <= this.numberOfRows; r++) {
      let a;
      const c = this.createCell();
      if (e > 0 && e <= n ? (a = this.getCell(r, e), gh(c, a)) : a = this.getRow(r).appendChild(c), r === 1) {
        const u = this.getCell(r, e > 0 ? e : n + 1);
        u && t && bh(u);
      }
    }
    this.addHeadingAttrToFirstRow();
  }
  /**
   * Add row in table on index place
   *
   * @param {number} index - number in the array of rows, where new column to insert, -1 if insert at the end
   * @param {boolean} [setFocus] - pass true to focus the inserted row
   * @returns {HTMLElement} row
   */
  addRow(e = -1, t = !1) {
    let n, r = zt("div", Je.row);
    this.tunes.withHeadings && this.removeHeadingAttrFromFirstRow();
    let a = this.numberOfColumns;
    if (e > 0 && e <= this.numberOfRows) {
      let u = this.getRow(e);
      n = gh(r, u);
    } else
      n = this.table.appendChild(r);
    this.fillRow(n, a), this.tunes.withHeadings && this.addHeadingAttrToFirstRow();
    const c = this.getRowFirstCell(n);
    return c && t && bh(c), this.checkInput(), n;
  }
  /**
   * Delete a column by index
   *
   * @param {number} index
   */
  deleteColumn(e) {
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.getCell(t, e);
      if (!n)
        return;
      n.remove();
    }
  }
  /**
   * Delete a row by index
   *
   * @param {number} index
   */
  deleteRow(e) {
    this.getRow(e).remove(), this.addHeadingAttrToFirstRow();
  }
  /**
   * Create a wrapper containing a table, toolboxes
   * and buttons for adding rows and columns
   *
   * @returns {HTMLElement} wrapper - where all buttons for a table and the table itself will be
   */
  createTableWrapper() {
    if (this.wrapper ? this.table.remove() : this.wrapper = zt("div", Je.wrapper), this.table = zt("div", Je.table), this.wrapper.classList.add(Je.wrapperReadOnly), this.wrapper.appendChild(this.toolboxRow.element), this.wrapper.appendChild(this.table), !this.readOnly) {
      const e = zt("div", Je.addColumn, {
        innerHTML: yh
      }), t = zt("div", Je.addRow, {
        innerHTML: yh
      });
      this.wrapper.appendChild(e), this.wrapper.appendChild(t);
    }
  }
  /**
   * Returns the size of the table based on initial data or config "size" property
   *
   * @return {{rows: number, cols: number}} - number of cols and rows
   */
  computeInitialSize() {
    const e = this.data && this.data.content, t = Array.isArray(e), n = t ? e.length : !1, r = t ? e.length : void 0, a = n ? e[0].length : void 0, c = Number.parseInt(this.config && this.config.rows), u = Number.parseInt(this.config && this.config.cols), p = !isNaN(c) && c > 0 ? c : void 0, g = !isNaN(u) && u > 0 ? u : void 0;
    return {
      rows: r || p || 2,
      cols: a || g || 2
    };
  }
  /**
   * Resize table to match config size or transmitted data size
   *
   * @return {{rows: number, cols: number}} - number of cols and rows
   */
  resize() {
    const e = (this.data.content.length || 1) + 1, t = this.data.heading.length;
    for (let n = 0; n < e; n++)
      this.addRow();
    for (let n = 0; n < t; n++)
      this.addColumn();
  }
  /**
   * Fills the table with data passed to the constructor
   *
   * @returns {void}
   */
  fill() {
    const e = this.data;
    if (e && e.heading)
      for (let t = 0; t < e.heading.length; t++)
        this.setCellContent(1, t + 1, e.heading[t]);
  }
  /**
   * Fills a row with cells
   *
   * @param {HTMLElement} row - row to fill
   * @param {number} numberOfColumns - how many cells should be in a row
   */
  fillRow(e, t) {
    for (let n = 1; n <= t; n++) {
      const r = this.createCell();
      e.appendChild(r);
    }
  }
  /**
   * Creating a cell element
   *
   * @return {Element}
   */
  createCell() {
    return zt("div", Je.cell, {
      contentEditable: !1
    });
  }
  /**
   * Get number of rows in the table
   */
  get numberOfRows() {
    return this.table.childElementCount;
  }
  /**
   * Get number of columns in the table
   */
  get numberOfColumns() {
    return this.numberOfRows ? this.table.querySelectorAll(`.${Je.row}:first-child .${Je.cell}`).length : 0;
  }
  /**
   * Is the column toolbox menu displayed or not
   *
   * @returns {boolean}
   */
  get isColumnMenuShowing() {
    return this.selectedColumn !== 0;
  }
  /**
   * Is the row toolbox menu displayed or not
   *
   * @returns {boolean}
   */
  get isRowMenuShowing() {
    return this.selectedRow !== 0;
  }
  /**
   * Recalculate position of toolbox icons
   *
   * @param {Event} event - mouse move event
   */
  onMouseMoveInTable(e) {
    const { row: t, column: n } = this.getHoveredCell(e);
    this.hoveredColumn = n, this.hoveredRow = t, this.updateToolboxesPosition();
  }
  /**
   * Prevents default Enter behaviors
   * Adds Shift+Enter processing
   *
   * @param {KeyboardEvent} event - keypress event
   */
  onKeyPressListener(e) {
    return e.key === "Enter" && e.shiftKey ? !0 : e.key !== "Enter";
  }
  /**
   * Prevents tab keydown event from bubbling
   * so that it only works inside the table
   *
   * @param {KeyboardEvent} event - keydown event
   */
  onKeyDownListener(e) {
    e.key === "Tab" && e.stopPropagation();
  }
  /**
   * Prevents tab keyup event from bubbling
   * so that it only works inside the table
   *
   * @param {KeyboardEvent} event - keydown event
   */
  onKeyUpListener(e) {
    if (e.key === "Tab") {
      e.stopPropagation();
      return;
    }
    if (e.key === "Enter") {
      e.stopPropagation();
      return;
    }
  }
  /**
   * Set the coordinates of the cell that the focus has moved to
   *
   * @param {FocusEvent} event - focusin event
   */
  focusInTableListener(e) {
    const t = e.target, n = this.getRowByCell(t);
    this.focusedCell = {
      row: Array.from(this.table.querySelectorAll(`.${Je.row}`)).indexOf(n) + 1,
      column: Array.from(n.querySelectorAll(`.${Je.cell}`)).indexOf(t) + 1
    };
  }
  /**
   * Unselect row/column
   * Close toolbox menu
   * Hide toolboxes
   *
   * @returns {void}
   */
  hideToolboxes() {
    this.hideRowToolbox(), this.updateToolboxesPosition();
  }
  /**
   * Unselect row, close toolbox
   *
   * @returns {void}
   */
  hideRowToolbox() {
    var e;
    this.unselectRow(), this.toolboxRow.hide(), (e = this.toolBoxDue) == null || e.hide();
  }
  /**
   * Unselect column, close toolbox
   *
   * @returns {void}
   */
  hideColumnToolbox() {
    this.unselectColumn();
  }
  /**
   * Set the cursor focus to the focused cell
   *
   * @returns {void}
   */
  focusCell() {
    var e;
    (e = this.focusedCellElem) == null || e.focus();
  }
  /**
   * Get current focused element
   *
   * @returns {HTMLElement} - focused cell
   */
  get focusedCellElem() {
    const { row: e, column: t } = this.focusedCell;
    return this.getCell(e, t);
  }
  /**
   * Update toolboxes position
   *
   * @param {number} row - hovered row
   * @param {number} column - hovered column
   */
  updateToolboxesPosition(e = this.hoveredRow, t = this.hoveredColumn) {
    this.isRowMenuShowing || e > 0 && e <= this.numberOfRows && this.toolboxRow.show(() => {
      const n = this.getRow(e), { fromTopBorder: r } = Nl(this.table, n), { height: a } = n.getBoundingClientRect();
      return {
        top: `${Math.ceil(r + a / 2)}px`
      };
    });
  }
  /**
   * Makes the first row headings
   *
   * @param {boolean} withHeadings - use headings row or not
   */
  setHeadingsSetting(e) {
    this.tunes.withHeadings = e, e ? (this.table.classList.add(Je.withHeadings), this.addHeadingAttrToFirstRow()) : (this.table.classList.remove(Je.withHeadings), this.removeHeadingAttrFromFirstRow());
  }
  /**
   * Adds an attribute for displaying the placeholder in the cell
   */
  addHeadingAttrToFirstRow() {
    for (let e = 1; e <= this.numberOfColumns; e++) {
      let t = this.getCell(1, e);
      t && t.setAttribute("heading", this.api.i18n.t("Heading"));
    }
  }
  /**
   * Removes an attribute for displaying the placeholder in the cell
   */
  removeHeadingAttrFromFirstRow() {
    for (let e = 1; e <= this.numberOfColumns; e++) {
      let t = this.getCell(1, e);
      t && t.removeAttribute("heading");
    }
  }
  /**
   * Add effect of a selected row
   *
   * @param {number} index
   */
  selectRow(e) {
    const t = this.getRow(e);
    t && (this.selectedRow = e, t.classList.add(Je.rowSelected));
  }
  /**
   * Remove effect of a selected row
   */
  unselectRow() {
    if (this.selectedRow <= 0)
      return;
    const e = this.table.querySelector(`.${Je.rowSelected}`);
    e && e.classList.remove(Je.rowSelected), this.selectedRow = 0;
  }
  /**
   * Add effect of a selected column
   *
   * @param {number} index
   */
  selectColumn(e) {
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.getCell(t, e);
      n && n.classList.add(Je.cellSelected);
    }
    this.selectedColumn = e;
  }
  /**
   * Remove effect of a selected column
   */
  unselectColumn() {
    if (this.selectedColumn <= 0)
      return;
    let e = this.table.querySelectorAll(`.${Je.cellSelected}`);
    Array.from(e).forEach((t) => {
      t.classList.remove(Je.cellSelected);
    }), this.selectedColumn = 0;
  }
  /**
   * Calculates the row and column that the cursor is currently hovering over
   * The search was optimized from O(n) to O (log n) via bin search to reduce the number of calculations
   *
   * @param {Event} event - mousemove event
   * @returns hovered cell coordinates as an integer row and column
   */
  getHoveredCell(e) {
    let t = this.hoveredRow, n = this.hoveredColumn;
    const { width: r, height: a, x: c, y: u } = q1(this.table, e);
    return c >= 0 && (n = this.binSearch(
      this.numberOfColumns,
      (p) => this.getCell(1, p),
      ({ fromLeftBorder: p }) => c < p,
      ({ fromRightBorder: p }) => c > r - p
    )), u >= 0 && (t = this.binSearch(
      this.numberOfRows,
      (p) => this.getCell(p, 1),
      ({ fromTopBorder: p }) => u < p,
      ({ fromBottomBorder: p }) => u > a - p
    )), {
      row: t || this.hoveredRow,
      column: n || this.hoveredColumn
    };
  }
  /**
   * Looks for the index of the cell the mouse is hovering over.
   * Cells can be represented as ordered intervals with left and
   * right (upper and lower for rows) borders inside the table, if the mouse enters it, then this is our index
   *
   * @param {number} numberOfCells - upper bound of binary search
   * @param {function} getCell - function to take the currently viewed cell
   * @param {function} beforeTheLeftBorder - determines the cursor position, to the left of the cell or not
   * @param {function} afterTheRightBorder - determines the cursor position, to the right of the cell or not
   * @returns {number}
   */
  binSearch(e, t, n, r) {
    let a = 0, c = e + 1, u = 0, p;
    for (; a < c - 1 && u < 10; ) {
      p = Math.ceil((a + c) / 2);
      const g = t(p), v = Nl(this.table, g);
      if (n(v))
        c = p;
      else if (r(v))
        a = p;
      else
        break;
      u++;
    }
    return p;
  }
  /**
   * Collects data from cells into a two-dimensional array
   *
   * @returns {string[][]}
   */
  getData() {
    const e = [];
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.table.querySelector(`.${Je.row}:nth-child(${t})`), r = Array.from(n.querySelectorAll(`.${Je.formInput}`));
      t != 1 && (console.log("GET DATA", n, r), e.push(r.map((a) => {
        if (["text", "select-one", "number"].includes(a == null ? void 0 : a.type))
          return a == null ? void 0 : a.value;
        if ((a == null ? void 0 : a.type) === "checkbox")
          return a == null ? void 0 : a.checked;
      })));
    }
    return e;
  }
  /**
   * Remove listeners on the document
   */
  destroy() {
    document.removeEventListener("click", this.documentClicked);
  }
};
const nw = {
  combinationVaccine: {
    title: "Combination Vaccine",
    title_jp: "混合ワクチン",
    data: [
      {
        heading: "Vaccination Medicine",
        heading_jp: "予防接種医学",
        type: "search",
        key: "vaccinationMedicine"
      },
      {
        heading: "Administration Date",
        heading_jp: "投与日",
        type: "date",
        key: "administrationDate"
      },
      {
        heading: "Due Date",
        heading_jp: "期日",
        type: "textDate",
        key: "dueDate"
      },
      {
        heading: "Lot Number",
        heading_jp: "整理番号",
        type: "text",
        key: "lotNumber"
      },
      {
        heading: "Allergic reaction",
        heading_jp: "アレルギー反応",
        type: "checkbox",
        key: "allergicReaction"
      },
      {
        heading: "Remarks",
        heading_jp: "備考",
        type: "text",
        key: "remarks"
      }
    ]
  },
  rabiesVaccine: {
    title: "Rabies Vaccine",
    title_jp: "狂犬病ワクチン",
    data: [
      {
        heading: "Vaccination Medicine",
        heading_jp: "予防接種医学",
        type: "search",
        key: "vaccinationMedicine"
      },
      {
        heading: "Administration Date",
        heading_jp: "投与日",
        type: "date",
        key: "administrationDate"
      },
      {
        heading: "Due date",
        heading_jp: "期日",
        type: "textDate",
        key: "dueDate"
      },
      {
        heading: "Lot number",
        heading_jp: "整理番号",
        type: "text",
        key: "lotNumber"
      },
      {
        heading: "(Rabies Vaccination Number)",
        heading_jp: "（狂犬病予防接種番号）",
        type: "text",
        key: "rabbiesVaccineNumber"
      },
      {
        heading: "Allergic reaction",
        heading_jp: "アレルギー反応",
        type: "checkbox",
        key: "allergicReaction"
      },
      {
        heading: "Remarks",
        heading_jp: "備考",
        type: "text",
        key: "remarks"
      }
    ]
  },
  rabiesDeferment: {
    title: "Rabies Deferment",
    title_jp: "狂犬病の延期",
    data: [
      {
        heading: "Title",
        heading_jp: "タイトル",
        type: "search",
        key: "vaccinationMedicine"
      },
      {
        heading: "Exemption Date",
        heading_jp: "免除日",
        type: "date",
        key: "exemptionDate"
      },
      {
        heading: "Deferral Period",
        heading_jp: "延期期間",
        type: "date",
        key: "deferralPeriod"
      },
      {
        heading: "Deferment reason",
        heading_jp: "延期理由",
        type: "select",
        key: "defermentReason",
        options: [
          {
            label: "May have heart failure, kidney failure, or other serious illness",
            label_jp: "心不全、腎不全、その他の深刻な病気にかかっている可能性がある",
            value: 1
          },
          {
            label: "Previous vaccination has caused anaphylaxis",
            label_jp: "以前のワクチン接種により、アナフィラキシーの症状を示した経験がある",
            value: 2
          },
          {
            label: "May have an infectious disease",
            label_jp: "感染症にかかっている可能性がある",
            value: 3
          },
          {
            label: "History of seizures and ongoing condition",
            label_jp: "痙攣の病歴があり、現在もその状態が続いている",
            value: 4
          },
          {
            label: "Pregnant dog",
            label_jp: "妊娠中の犬で、時期的に母犬への影響が懸念される",
            value: 5
          },
          {
            label: "The bite accident occurred and is in the appraisal period",
            label_jp: "咬傷事故を起こしたことにより、鑑定期間中である",
            value: 6
          },
          {
            label: "Others",
            label_jp: "その他",
            value: 7
          }
        ]
      },
      {
        heading: "Remarks",
        heading_jp: "備考",
        type: "text",
        key: "remarks"
      }
    ]
  }
}, os = {
  default: "combinationVaccine",
  data: nw
};
class iw {
  /**
   * Notify core that read-only mode is supported
   *
   * @returns {boolean}
   */
  static get isReadOnlySupported() {
    return !0;
  }
  /**
   * Allow to press Enter inside the CodeTool textarea
   *
   * @returns {boolean}
   * @public
   */
  static get enableLineBreaks() {
    return !0;
  }
  /**
   * Render plugin`s main Element and fill it with saved data
   *
   * @param {TableData} data — previously saved data
   * @param {TableConfig} config - user config for Tool
   * @param {object} api - Editor.js API
   * @param {boolean} readOnly - read-only mode flag
   */
  constructor({ data: e, config: t, api: n, readOnly: r, block: a }) {
    if (this.api = n, this.block = a, this.title = n.i18n.t("Vaccination"), this.readOnly = r, this.config = t, !t.apiUrl)
      throw new Error("Please provide API url for Vacination Search");
    this.data = {
      current: e && e.current ? e.current : os.default,
      content: e && e.content ? e.content : []
    }, setTimeout(() => {
      if (e != null && e.content)
        return;
      const c = this.block.id;
      this.api.toolbar.toggleBlockSettingsById(c);
    }, 500), this.table = null;
  }
  /**
   * Get Tool toolbox settings
   * icon - Tool icon's SVG
   * title - title to show in toolbox
   *
   * @returns {{icon: string, title: string}}
   */
  static get toolbox() {
    return {
      icon: Q1,
      title: this.title
    };
  }
  /**
   * Return Tool's view
   *
   * @returns {HTMLDivElement}
   */
  render() {
    var e;
    this.config.data = os.data[this.data.current], this.container ? (this.table.getWrapper().remove(), this.container.innerHTML = "") : this.container = zt("div", this.api.styles.block), this.table = new ow(this.readOnly, this.api, this.data, this.config, this.block);
    const t = zt("h5", "tc-header");
    return t.innerHTML = ((e = this.config) == null ? void 0 : e.locale) == "jp" ? this.config.data.title_jp : this.config.data.title, this.container.appendChild(t), this.container.appendChild(this.table.getWrapper()), this.table.setHeadingsSetting(!0), this.container;
  }
  /**
   * Returns plugin settings
   *
   * @returns {Array}
   */
  renderSettings() {
    var e;
    const t = [], n = ((e = this.config) == null ? void 0 : e.locale) === "jp";
    for (const r in os.data)
      if (Object.hasOwnProperty.call(os.data, r)) {
        const a = os.data[r];
        t.push({
          label: n ? a.title_jp : a.title,
          icon: J1,
          isActive: this.data.current == r,
          closeOnActivate: !0,
          toggle: !0,
          onActivate: () => {
            this.data.current = r, this.data.content = [], this.render();
          }
        });
      }
    return t;
  }
  /**
   * Extract table data from the view
   *
   * @returns {TableData} - saved data
   */
  save() {
    var e;
    const t = this.table.getData();
    return {
      current: ((e = this.data) == null ? void 0 : e.current) || os.default,
      content: t
    };
  }
  /**
   * Plugin destroyer
   *
   * @returns {void}
   */
  destroy() {
    this.table.destroy();
  }
  /**
   * A helper to get config value.
   * 
   * @param {string} configName - the key to get from the config. 
   * @param {any} defaultValue - default value if config doesn't have passed key
   * @param {object} savedData - previously saved data. If passed, the key will be got from there, otherwise from the config
   * @returns {any} - config value.
   */
  getConfig(e, t = void 0, n = void 0) {
    const r = this.data || n;
    return r ? r[e] ? r[e] : t : this.config && this.config[e] ? this.config[e] : t;
  }
  /**  
   * Table onPaste configuration
   *
   * @public
   */
  static get pasteConfig() {
    return { tags: ["TABLE", "TR", "TH", "TD"] };
  }
  /**
   * On paste callback that is fired from Editor
   *
   * @param {PasteEvent} event - event with pasted data
   */
  onPaste(e) {
    const t = e.detail.data, n = t.querySelector(":scope > thead, tr:first-of-type th"), r = Array.from(t.querySelectorAll("tr")).map((a) => Array.from(a.querySelectorAll("th, td")).map((c) => c.innerHTML));
    this.data = {
      withHeadings: n !== null,
      content: r
    }, this.table.wrapper && this.table.wrapper.replaceWith(this.render());
  }
}
(function() {
  var o;
  try {
    if (typeof document < "u") {
      var e = document.createElement("style");
      e.nonce = (o = document.head.querySelector("meta[property=csp-nonce]")) == null ? void 0 : o.content, e.appendChild(document.createTextNode('.daterangepicker{position:absolute;color:inherit;background-color:#fff;border-radius:4px;border:1px solid #ddd;width:278px;max-width:none;padding:0;margin-top:7px;top:100px;left:20px;z-index:3001;display:none;font-family:arial;font-size:15px;line-height:1em}.daterangepicker:after,.daterangepicker:before{position:absolute;display:inline-block;border-bottom-color:#0003;content:""}.daterangepicker:before{top:-7px;border-right:7px solid transparent;border-left:7px solid transparent;border-bottom:7px solid #ccc}.daterangepicker:after{top:-6px;border-right:6px solid transparent;border-bottom:6px solid #fff;border-left:6px solid transparent}.daterangepicker.opensleft:before{right:9px}.daterangepicker.opensleft:after{right:10px}.daterangepicker.openscenter:after,.daterangepicker.openscenter:before{left:0;right:0;width:0;margin-left:auto;margin-right:auto}.daterangepicker.opensright:before{left:9px}.daterangepicker.opensright:after{left:10px}.daterangepicker.drop-up{margin-top:-7px}.daterangepicker.drop-up:before{top:auto;bottom:-7px;border-bottom:initial;border-top:7px solid #ccc}.daterangepicker.drop-up:after{top:auto;bottom:-6px;border-bottom:initial;border-top:6px solid #fff}.daterangepicker.single .daterangepicker .ranges,.daterangepicker.single .drp-calendar{float:none}.daterangepicker.single .drp-selected{display:none}.daterangepicker.show-calendar .drp-buttons,.daterangepicker.show-calendar .drp-calendar{display:block}.daterangepicker.auto-apply .drp-buttons{display:none}.daterangepicker .drp-calendar{display:none;max-width:270px}.daterangepicker .drp-calendar.left{padding:8px 0 8px 8px}.daterangepicker .drp-calendar.right{padding:8px}.daterangepicker .drp-calendar.single .calendar-table{border:none}.daterangepicker .calendar-table .next span,.daterangepicker .calendar-table .prev span{color:#fff;border:solid #000;border-width:0 2px 2px 0;border-radius:0;display:inline-block;padding:3px}.daterangepicker .calendar-table .next span{transform:rotate(-45deg);-webkit-transform:rotate(-45deg)}.daterangepicker .calendar-table .prev span{transform:rotate(135deg);-webkit-transform:rotate(135deg)}.daterangepicker .calendar-table td,.daterangepicker .calendar-table th{text-align:center;vertical-align:middle;min-width:32px;width:32px;height:24px;line-height:24px;font-size:12px;border-radius:4px;border:1px solid transparent;white-space:nowrap;cursor:pointer}.daterangepicker .calendar-table{border:1px solid #fff;border-radius:4px;background-color:#fff}.daterangepicker .calendar-table table{width:100%;margin:0;border-spacing:0;border-collapse:collapse}.daterangepicker td.available:hover,.daterangepicker th.available:hover{background-color:#eee;border-color:transparent;color:inherit}.daterangepicker td.week,.daterangepicker th.week{font-size:80%;color:#ccc}.daterangepicker td.off,.daterangepicker td.off.end-date,.daterangepicker td.off.in-range,.daterangepicker td.off.start-date{background-color:#fff;border-color:transparent;color:#999}.daterangepicker td.in-range{background-color:#ebf4f8;border-color:transparent;color:#000;border-radius:0}.daterangepicker td.start-date{border-radius:4px 0 0 4px}.daterangepicker td.end-date{border-radius:0 4px 4px 0}.daterangepicker td.start-date.end-date{border-radius:4px}.daterangepicker td.active,.daterangepicker td.active:hover{background-color:#357ebd;border-color:transparent;color:#fff}.daterangepicker th.month{width:auto}.daterangepicker option.disabled,.daterangepicker td.disabled{color:#999;cursor:not-allowed;text-decoration:line-through}.daterangepicker select.monthselect,.daterangepicker select.yearselect{font-size:12px;padding:1px;height:auto;margin:0;cursor:default}.daterangepicker select.monthselect{margin-right:2%;width:56%}.daterangepicker select.yearselect{width:40%}.daterangepicker select.ampmselect,.daterangepicker select.hourselect,.daterangepicker select.minuteselect,.daterangepicker select.secondselect{width:50px;margin:0 auto;background:#eee;border:1px solid #eee;padding:2px;outline:0;font-size:12px}.daterangepicker .calendar-time{text-align:center;margin:4px auto 0;line-height:30px;position:relative}.daterangepicker .calendar-time select.disabled{color:#ccc;cursor:not-allowed}.daterangepicker .drp-buttons{clear:both;text-align:right;padding:8px;border-top:1px solid #ddd;display:none;line-height:12px;vertical-align:middle}.daterangepicker .drp-selected{display:inline-block;font-size:12px;padding-right:8px}.daterangepicker .drp-buttons .btn{margin-left:8px;font-size:12px;font-weight:700;padding:4px 8px}.daterangepicker.show-ranges.single.rtl .drp-calendar.left{border-right:1px solid #ddd}.daterangepicker.show-ranges.single.ltr .drp-calendar.left{border-left:1px solid #ddd}.daterangepicker.show-ranges.rtl .drp-calendar.right{border-right:1px solid #ddd}.daterangepicker.show-ranges.ltr .drp-calendar.left{border-left:1px solid #ddd}.daterangepicker .ranges{float:none;text-align:left;margin:0}.daterangepicker.show-calendar .ranges{margin-top:8px}.daterangepicker .ranges ul{list-style:none;margin:0 auto;padding:0;width:100%}.daterangepicker .ranges li{font-size:12px;padding:8px 12px;cursor:pointer}.daterangepicker .ranges li:hover{background-color:#eee}.daterangepicker .ranges li.active{background-color:#08c;color:#fff}@media (min-width:564px){.daterangepicker{width:auto}.daterangepicker .ranges ul{width:140px}.daterangepicker.single .ranges ul{width:100%}.daterangepicker.single .drp-calendar.left{clear:none}.daterangepicker.single .drp-calendar,.daterangepicker.single .ranges{float:left}.daterangepicker{direction:ltr;text-align:left}.daterangepicker .drp-calendar.left{clear:left;margin-right:0}.daterangepicker .drp-calendar.left .calendar-table{border-right:none;border-top-right-radius:0;border-bottom-right-radius:0}.daterangepicker .drp-calendar.right{margin-left:0}.daterangepicker .drp-calendar.right .calendar-table{border-left:none;border-top-left-radius:0;border-bottom-left-radius:0}.daterangepicker .drp-calendar.left .calendar-table{padding-right:8px}.daterangepicker .drp-calendar,.daterangepicker .ranges{float:left}}@media (min-width:730px){.daterangepicker .ranges{width:auto;float:left}.daterangepicker.rtl .ranges{float:right}.daterangepicker .drp-calendar.left{clear:none!important}}.tc-header{margin:0;padding:0;position:relative;bottom:-1rem;text-align:left}.tc-wrap{--color-background:#f9f9fb;--color-text-secondary:#7b7e89;--color-border:#e8e8eb;--cell-size:34px;--toolbox-icon-size:18px;--toolbox-padding:6px;--toolbox-aiming-field-size:calc(var(--toolbox-icon-size) + var(--toolbox-padding)*2);border-left:0;margin-top:var(--toolbox-icon-size);box-sizing:border-box;grid-template-columns:calc(100% - var(--cell-size)) var(--cell-size)}.tc-wrap--readonly{grid-template-columns:100% var(--cell-size)}.tc-wrap svg{vertical-align:top}@media print{.tc-wrap{border-left-color:var(--color-border);border-left-style:solid;border-left-width:1px;grid-template-columns:100% var(--cell-size)}}@media print{.tc-wrap .tc-row:after{display:none}}.tc-table,.tc-wrap{position:relative;height:100%;width:100%;display:grid}.tc-table{font-size:14px;border-top:1px solid var(--color-border);line-height:1.4}.tc-table:after{width:calc(var(--cell-size));left:calc(var(--cell-size)*-1);top:0}.tc-table:after,.tc-table:before{position:absolute;content:""}.tc-table:before{height:var(--toolbox-aiming-field-size);top:calc(var(--toolbox-aiming-field-size)*-1);left:0}.tc-table--heading .tc-row:first-child{font-weight:600;border-bottom:2px solid var(--color-border)}.tc-table--heading .tc-row:first-child [contenteditable]:empty:before{content:attr(heading);color:var(--color-text-secondary)}.tc-table--heading .tc-row:first-child:after{bottom:-2px;border-bottom:2px solid var(--color-border)}.tc-add-column,.tc-add-row{display:flex;color:var(--color-text-secondary)}@media print{.tc-add{display:none}}.tc-add-column{padding:4px 0;justify-content:center;border-top:1px solid var(--color-border);visibility:hidden}@media print{.tc-add-column{display:none}}.tc-add-row{height:var(--cell-size);align-items:center;padding-left:4px;position:relative}.tc-add-row:before{content:"";position:absolute;right:calc(var(--cell-size)*-1);width:var(--cell-size);height:100%}@media print{.tc-add-row{display:none}}.tc-add-column,.tc-add-row{transition:0s;cursor:pointer;will-change:background-color}.tc-add-column:hover,.tc-add-row:hover{transition:background-color .1s ease;background-color:var(--color-background)}.tc-add-row{margin-top:1px}.tc-add-row:hover:before{transition:.1s;background-color:var(--color-background)}.tc-row{display:grid;grid-template-columns:repeat(auto-fit,minmax(10px,1fr));position:relative;border-bottom:1px solid var(--color-border)}.tc-row:after{content:"";pointer-events:none;position:absolute;width:var(--cell-size);height:100%;bottom:-1px;right:calc(var(--cell-size)*-1);border-bottom:1px solid var(--color-border)}.tc-row--selected{background:var(--color-background)}.tc-row--selected:after{background:var(--color-background)}.tc-cell{border-right:1px solid var(--color-border);padding:6px 12px;overflow:hidden;outline:none;line-break:normal}.tc-cell input{outline:none;border:none;width:100%;height:100%;padding:0;margin:0}.tc-cell--selected{background:var(--color-background)}.tc-wrap--readonly .tc-row:after{display:none}.tc-toolbox{--toolbox-padding:6px;--popover-margin:30px;--toggler-click-zone-size:30px;--toggler-dots-color:#7b7e89;--toggler-dots-color-hovered:#1d202b;position:absolute;cursor:pointer;z-index:1;opacity:0;transition:opacity .1s;will-change:left,opacity}.tc-toolbox--column{top:calc(var(--toggler-click-zone-size)*-1);transform:translate(calc(var(--toggler-click-zone-size)*-1/2));will-change:left,opacity}.tc-toolbox--row{left:calc(var(--popover-margin)*-1);transform:translateY(calc(var(--toggler-click-zone-size)*-1/2));margin-top:-1px;will-change:top,opacity}.tc-toolbox--showed{opacity:1}.tc-toolbox .tc-popover{position:absolute;top:0;left:var(--popover-margin)}.tc-toolbox__toggler{display:flex;align-items:center;justify-content:center;width:var(--toggler-click-zone-size);height:var(--toggler-click-zone-size);color:var(--toggler-dots-color);opacity:0;transition:opacity .15s ease;will-change:opacity}.tc-toolbox__toggler:hover{color:var(--toggler-dots-color-hovered)}.tc-toolbox__toggler svg{fill:currentColor}.tc-wrap:hover .tc-toolbox__toggler{opacity:1}.tc-settings .cdx-settings-button{width:50%;margin:0}.tc-popover{--color-border:#eaeaea;--color-background:#fff;--color-background-hover:rgba(232,232,235,.49);--color-background-confirm:#e24a4a;--color-background-confirm-hover:#d54040;--color-text-confirm:#fff;background:var(--color-background);border:1px solid var(--color-border);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;padding:6px;display:none;will-change:opacity,transform}.tc-popover--opened{display:block;animation:menuShowing .1s cubic-bezier(.215,.61,.355,1) forwards}.tc-popover__item{display:flex;align-items:center;padding:2px 14px 2px 2px;border-radius:5px;cursor:pointer;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;user-select:none}.tc-popover__item:hover{background:var(--color-background-hover)}.tc-popover__item:not(:last-of-type){margin-bottom:2px}.tc-popover__item-icon{display:inline-flex;width:26px;height:26px;align-items:center;justify-content:center;background:var(--color-background);border-radius:5px;border:1px solid var(--color-border);margin-right:8px}.tc-popover__item-label{line-height:22px;font-size:14px;font-weight:500}.tc-popover__item--confirm{background:var(--color-background-confirm);color:var(--color-text-confirm)}.tc-popover__item--confirm:hover{background-color:var(--color-background-confirm-hover)}.tc-popover__item--confirm .tc-popover__item-icon{background:var(--color-background-confirm);border-color:#0000001a}.tc-popover__item--confirm .tc-popover__item-icon svg{transition:transform .2s ease-in;transform:rotate(90deg) scale(1.2)}.tc-popover__item--hidden{display:none}@keyframes menuShowing{0%{opacity:0;transform:translateY(-8px) scale(.9)}70%{opacity:1;transform:translateY(2px)}to{transform:translateY(0)}}')), document.head.appendChild(e);
    }
  } catch (t) {
    console.error("vite-plugin-css-injected-by-js", t);
  }
})();
var rw = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function sw(o) {
  return o && o.__esModule && Object.prototype.hasOwnProperty.call(o, "default") ? o.default : o;
}
var vp = { exports: {} };
/*!
 * jQuery JavaScript Library v3.7.1
 * https://jquery.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2023-08-28T13:37Z
 */
(function(o) {
  (function(e, t) {
    o.exports = e.document ? t(e, !0) : function(n) {
      if (!n.document)
        throw new Error("jQuery requires a window with a document");
      return t(n);
    };
  })(typeof window < "u" ? window : rw, function(e, t) {
    var n = [], r = Object.getPrototypeOf, a = n.slice, c = n.flat ? function(i) {
      return n.flat.call(i);
    } : function(i) {
      return n.concat.apply([], i);
    }, u = n.push, p = n.indexOf, g = {}, v = g.toString, x = g.hasOwnProperty, y = x.toString, T = y.call(Object), k = {}, M = function(i) {
      return typeof i == "function" && typeof i.nodeType != "number" && typeof i.item != "function";
    }, O = function(i) {
      return i != null && i === i.window;
    }, Y = e.document, I = {
      type: !0,
      src: !0,
      nonce: !0,
      noModule: !0
    };
    function F(i, s, l) {
      l = l || Y;
      var h, f, m = l.createElement("script");
      if (m.text = i, s)
        for (h in I)
          f = s[h] || s.getAttribute && s.getAttribute(h), f && m.setAttribute(h, f);
      l.head.appendChild(m).parentNode.removeChild(m);
    }
    function Q(i) {
      return i == null ? i + "" : typeof i == "object" || typeof i == "function" ? g[v.call(i)] || "object" : typeof i;
    }
    var U = "3.7.1", z = /HTML$/i, d = function(i, s) {
      return new d.fn.init(i, s);
    };
    d.fn = d.prototype = {
      // The current version of jQuery being used
      jquery: U,
      constructor: d,
      // The default length of a jQuery object is 0
      length: 0,
      toArray: function() {
        return a.call(this);
      },
      // Get the Nth element in the matched element set OR
      // Get the whole matched element set as a clean array
      get: function(i) {
        return i == null ? a.call(this) : i < 0 ? this[i + this.length] : this[i];
      },
      // Take an array of elements and push it onto the stack
      // (returning the new matched element set)
      pushStack: function(i) {
        var s = d.merge(this.constructor(), i);
        return s.prevObject = this, s;
      },
      // Execute a callback for every element in the matched set.
      each: function(i) {
        return d.each(this, i);
      },
      map: function(i) {
        return this.pushStack(d.map(this, function(s, l) {
          return i.call(s, l, s);
        }));
      },
      slice: function() {
        return this.pushStack(a.apply(this, arguments));
      },
      first: function() {
        return this.eq(0);
      },
      last: function() {
        return this.eq(-1);
      },
      even: function() {
        return this.pushStack(d.grep(this, function(i, s) {
          return (s + 1) % 2;
        }));
      },
      odd: function() {
        return this.pushStack(d.grep(this, function(i, s) {
          return s % 2;
        }));
      },
      eq: function(i) {
        var s = this.length, l = +i + (i < 0 ? s : 0);
        return this.pushStack(l >= 0 && l < s ? [this[l]] : []);
      },
      end: function() {
        return this.prevObject || this.constructor();
      },
      // For internal use only.
      // Behaves like an Array's method, not like a jQuery method.
      push: u,
      sort: n.sort,
      splice: n.splice
    }, d.extend = d.fn.extend = function() {
      var i, s, l, h, f, m, b = arguments[0] || {}, E = 1, _ = arguments.length, L = !1;
      for (typeof b == "boolean" && (L = b, b = arguments[E] || {}, E++), typeof b != "object" && !M(b) && (b = {}), E === _ && (b = this, E--); E < _; E++)
        if ((i = arguments[E]) != null)
          for (s in i)
            h = i[s], !(s === "__proto__" || b === h) && (L && h && (d.isPlainObject(h) || (f = Array.isArray(h))) ? (l = b[s], f && !Array.isArray(l) ? m = [] : !f && !d.isPlainObject(l) ? m = {} : m = l, f = !1, b[s] = d.extend(L, m, h)) : h !== void 0 && (b[s] = h));
      return b;
    }, d.extend({
      // Unique for each copy of jQuery on the page
      expando: "jQuery" + (U + Math.random()).replace(/\D/g, ""),
      // Assume jQuery is ready without the ready module
      isReady: !0,
      error: function(i) {
        throw new Error(i);
      },
      noop: function() {
      },
      isPlainObject: function(i) {
        var s, l;
        return !i || v.call(i) !== "[object Object]" ? !1 : (s = r(i), s ? (l = x.call(s, "constructor") && s.constructor, typeof l == "function" && y.call(l) === T) : !0);
      },
      isEmptyObject: function(i) {
        var s;
        for (s in i)
          return !1;
        return !0;
      },
      // Evaluates a script in a provided context; falls back to the global one
      // if not specified.
      globalEval: function(i, s, l) {
        F(i, { nonce: s && s.nonce }, l);
      },
      each: function(i, s) {
        var l, h = 0;
        if (j(i))
          for (l = i.length; h < l && s.call(i[h], h, i[h]) !== !1; h++)
            ;
        else
          for (h in i)
            if (s.call(i[h], h, i[h]) === !1)
              break;
        return i;
      },
      // Retrieve the text value of an array of DOM nodes
      text: function(i) {
        var s, l = "", h = 0, f = i.nodeType;
        if (!f)
          for (; s = i[h++]; )
            l += d.text(s);
        return f === 1 || f === 11 ? i.textContent : f === 9 ? i.documentElement.textContent : f === 3 || f === 4 ? i.nodeValue : l;
      },
      // results is for internal usage only
      makeArray: function(i, s) {
        var l = s || [];
        return i != null && (j(Object(i)) ? d.merge(
          l,
          typeof i == "string" ? [i] : i
        ) : u.call(l, i)), l;
      },
      inArray: function(i, s, l) {
        return s == null ? -1 : p.call(s, i, l);
      },
      isXMLDoc: function(i) {
        var s = i && i.namespaceURI, l = i && (i.ownerDocument || i).documentElement;
        return !z.test(s || l && l.nodeName || "HTML");
      },
      // Support: Android <=4.0 only, PhantomJS 1 only
      // push.apply(_, arraylike) throws on ancient WebKit
      merge: function(i, s) {
        for (var l = +s.length, h = 0, f = i.length; h < l; h++)
          i[f++] = s[h];
        return i.length = f, i;
      },
      grep: function(i, s, l) {
        for (var h, f = [], m = 0, b = i.length, E = !l; m < b; m++)
          h = !s(i[m], m), h !== E && f.push(i[m]);
        return f;
      },
      // arg is for internal usage only
      map: function(i, s, l) {
        var h, f, m = 0, b = [];
        if (j(i))
          for (h = i.length; m < h; m++)
            f = s(i[m], m, l), f != null && b.push(f);
        else
          for (m in i)
            f = s(i[m], m, l), f != null && b.push(f);
        return c(b);
      },
      // A global GUID counter for objects
      guid: 1,
      // jQuery.support is not used in Core but other projects attach their
      // properties to it so it needs to exist.
      support: k
    }), typeof Symbol == "function" && (d.fn[Symbol.iterator] = n[Symbol.iterator]), d.each(
      "Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),
      function(i, s) {
        g["[object " + s + "]"] = s.toLowerCase();
      }
    );
    function j(i) {
      var s = !!i && "length" in i && i.length, l = Q(i);
      return M(i) || O(i) ? !1 : l === "array" || s === 0 || typeof s == "number" && s > 0 && s - 1 in i;
    }
    function R(i, s) {
      return i.nodeName && i.nodeName.toLowerCase() === s.toLowerCase();
    }
    var V = n.pop, K = n.sort, J = n.splice, B = "[\\x20\\t\\r\\n\\f]", se = new RegExp(
      "^" + B + "+|((?:^|[^\\\\])(?:\\\\.)*)" + B + "+$",
      "g"
    );
    d.contains = function(i, s) {
      var l = s && s.parentNode;
      return i === l || !!(l && l.nodeType === 1 && // Support: IE 9 - 11+
      // IE doesn't have `contains` on SVG.
      (i.contains ? i.contains(l) : i.compareDocumentPosition && i.compareDocumentPosition(l) & 16));
    };
    var Z = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
    function ne(i, s) {
      return s ? i === "\0" ? "�" : i.slice(0, -1) + "\\" + i.charCodeAt(i.length - 1).toString(16) + " " : "\\" + i;
    }
    d.escapeSelector = function(i) {
      return (i + "").replace(Z, ne);
    };
    var le = Y, oe = u;
    (function() {
      var i, s, l, h, f, m = oe, b, E, _, L, W, q = d.expando, N = 0, X = 0, ge = ai(), Ce = ai(), xe = ai(), Xe = ai(), qe = function(C, D) {
        return C === D && (f = !0), 0;
      }, $t = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", Yt = "(?:\\\\[\\da-fA-F]{1,6}" + B + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", Se = "\\[" + B + "*(" + Yt + ")(?:" + B + // Operator (capture 2)
      "*([*^$|!~]?=)" + B + // "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
      `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + Yt + "))|)" + B + "*\\]", lo = ":(" + Yt + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + Se + ")*)|.*)\\)|)", De = new RegExp(B + "+", "g"), w = new RegExp("^" + B + "*," + B + "*"), S = new RegExp("^" + B + "*([>+~]|" + B + ")" + B + "*"), A = new RegExp(B + "|>"), H = new RegExp(lo), ee = new RegExp("^" + Yt + "$"), he = {
        ID: new RegExp("^#(" + Yt + ")"),
        CLASS: new RegExp("^\\.(" + Yt + ")"),
        TAG: new RegExp("^(" + Yt + "|[*])"),
        ATTR: new RegExp("^" + Se),
        PSEUDO: new RegExp("^" + lo),
        CHILD: new RegExp(
          "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + B + "*(even|odd|(([+-]|)(\\d*)n|)" + B + "*(?:([+-]|)" + B + "*(\\d+)|))" + B + "*\\)|)",
          "i"
        ),
        bool: new RegExp("^(?:" + $t + ")$", "i"),
        // For use in libraries implementing .is()
        // We use this for POS matching in `select`
        needsContext: new RegExp("^" + B + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + B + "*((?:-\\d)?\\d*)" + B + "*\\)|)(?=[^-]|$)", "i")
      }, ke = /^(?:input|select|textarea|button)$/i, Ee = /^h\d$/i, Ae = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, St = /[+~]/, nt = new RegExp("\\\\[\\da-fA-F]{1,6}" + B + "?|\\\\([^\\r\\n\\f])", "g"), Tt = function(C, D) {
        var P = "0x" + C.slice(1) - 65536;
        return D || (P < 0 ? String.fromCharCode(P + 65536) : String.fromCharCode(P >> 10 | 55296, P & 1023 | 56320));
      }, jn = function() {
        co();
      }, xn = ci(
        function(C) {
          return C.disabled === !0 && R(C, "fieldset");
        },
        { dir: "parentNode", next: "legend" }
      );
      function Cl() {
        try {
          return b.activeElement;
        } catch {
        }
      }
      try {
        m.apply(
          n = a.call(le.childNodes),
          le.childNodes
        ), n[le.childNodes.length].nodeType;
      } catch {
        m = {
          apply: function(C, D) {
            oe.apply(C, a.call(D));
          },
          call: function(C) {
            oe.apply(C, a.call(arguments, 1));
          }
        };
      }
      function Ne(C, D, P, $) {
        var G, te, ie, de, re, Te, be, we = D && D.ownerDocument, _e = D ? D.nodeType : 9;
        if (P = P || [], typeof C != "string" || !C || _e !== 1 && _e !== 9 && _e !== 11)
          return P;
        if (!$ && (co(D), D = D || b, _)) {
          if (_e !== 11 && (re = Ae.exec(C)))
            if (G = re[1]) {
              if (_e === 9)
                if (ie = D.getElementById(G)) {
                  if (ie.id === G)
                    return m.call(P, ie), P;
                } else
                  return P;
              else if (we && (ie = we.getElementById(G)) && Ne.contains(D, ie) && ie.id === G)
                return m.call(P, ie), P;
            } else {
              if (re[2])
                return m.apply(P, D.getElementsByTagName(C)), P;
              if ((G = re[3]) && D.getElementsByClassName)
                return m.apply(P, D.getElementsByClassName(G)), P;
            }
          if (!Xe[C + " "] && (!L || !L.test(C))) {
            if (be = C, we = D, _e === 1 && (A.test(C) || S.test(C))) {
              for (we = St.test(C) && Sr(D.parentNode) || D, (we != D || !k.scope) && ((de = D.getAttribute("id")) ? de = d.escapeSelector(de) : D.setAttribute("id", de = q)), Te = Cn(C), te = Te.length; te--; )
                Te[te] = (de ? "#" + de : ":scope") + " " + li(Te[te]);
              be = Te.join(",");
            }
            try {
              return m.apply(
                P,
                we.querySelectorAll(be)
              ), P;
            } catch {
              Xe(C, !0);
            } finally {
              de === q && D.removeAttribute("id");
            }
          }
        }
        return Zs(C.replace(se, "$1"), D, P, $);
      }
      function ai() {
        var C = [];
        function D(P, $) {
          return C.push(P + " ") > s.cacheLength && delete D[C.shift()], D[P + " "] = $;
        }
        return D;
      }
      function Ft(C) {
        return C[q] = !0, C;
      }
      function Uo(C) {
        var D = b.createElement("fieldset");
        try {
          return !!C(D);
        } catch {
          return !1;
        } finally {
          D.parentNode && D.parentNode.removeChild(D), D = null;
        }
      }
      function Sl(C) {
        return function(D) {
          return R(D, "input") && D.type === C;
        };
      }
      function Tl(C) {
        return function(D) {
          return (R(D, "input") || R(D, "button")) && D.type === C;
        };
      }
      function Vs(C) {
        return function(D) {
          return "form" in D ? D.parentNode && D.disabled === !1 ? "label" in D ? "label" in D.parentNode ? D.parentNode.disabled === C : D.disabled === C : D.isDisabled === C || // Where there is no isDisabled, check manually
          D.isDisabled !== !C && xn(D) === C : D.disabled === C : "label" in D ? D.disabled === C : !1;
        };
      }
      function Mo(C) {
        return Ft(function(D) {
          return D = +D, Ft(function(P, $) {
            for (var G, te = C([], P.length, D), ie = te.length; ie--; )
              P[G = te[ie]] && (P[G] = !($[G] = P[G]));
          });
        });
      }
      function Sr(C) {
        return C && typeof C.getElementsByTagName < "u" && C;
      }
      function co(C) {
        var D, P = C ? C.ownerDocument || C : le;
        return P == b || P.nodeType !== 9 || !P.documentElement || (b = P, E = b.documentElement, _ = !d.isXMLDoc(b), W = E.matches || E.webkitMatchesSelector || E.msMatchesSelector, E.msMatchesSelector && // Support: IE 11+, Edge 17 - 18+
        // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
        // two documents; shallow comparisons work.
        // eslint-disable-next-line eqeqeq
        le != b && (D = b.defaultView) && D.top !== D && D.addEventListener("unload", jn), k.getById = Uo(function($) {
          return E.appendChild($).id = d.expando, !b.getElementsByName || !b.getElementsByName(d.expando).length;
        }), k.disconnectedMatch = Uo(function($) {
          return W.call($, "*");
        }), k.scope = Uo(function() {
          return b.querySelectorAll(":scope");
        }), k.cssHas = Uo(function() {
          try {
            return b.querySelector(":has(*,:jqfake)"), !1;
          } catch {
            return !0;
          }
        }), k.getById ? (s.filter.ID = function($) {
          var G = $.replace(nt, Tt);
          return function(te) {
            return te.getAttribute("id") === G;
          };
        }, s.find.ID = function($, G) {
          if (typeof G.getElementById < "u" && _) {
            var te = G.getElementById($);
            return te ? [te] : [];
          }
        }) : (s.filter.ID = function($) {
          var G = $.replace(nt, Tt);
          return function(te) {
            var ie = typeof te.getAttributeNode < "u" && te.getAttributeNode("id");
            return ie && ie.value === G;
          };
        }, s.find.ID = function($, G) {
          if (typeof G.getElementById < "u" && _) {
            var te, ie, de, re = G.getElementById($);
            if (re) {
              if (te = re.getAttributeNode("id"), te && te.value === $)
                return [re];
              for (de = G.getElementsByName($), ie = 0; re = de[ie++]; )
                if (te = re.getAttributeNode("id"), te && te.value === $)
                  return [re];
            }
            return [];
          }
        }), s.find.TAG = function($, G) {
          return typeof G.getElementsByTagName < "u" ? G.getElementsByTagName($) : G.querySelectorAll($);
        }, s.find.CLASS = function($, G) {
          if (typeof G.getElementsByClassName < "u" && _)
            return G.getElementsByClassName($);
        }, L = [], Uo(function($) {
          var G;
          E.appendChild($).innerHTML = "<a id='" + q + "' href='' disabled='disabled'></a><select id='" + q + "-\r\\' disabled='disabled'><option selected=''></option></select>", $.querySelectorAll("[selected]").length || L.push("\\[" + B + "*(?:value|" + $t + ")"), $.querySelectorAll("[id~=" + q + "-]").length || L.push("~="), $.querySelectorAll("a#" + q + "+*").length || L.push(".#.+[+~]"), $.querySelectorAll(":checked").length || L.push(":checked"), G = b.createElement("input"), G.setAttribute("type", "hidden"), $.appendChild(G).setAttribute("name", "D"), E.appendChild($).disabled = !0, $.querySelectorAll(":disabled").length !== 2 && L.push(":enabled", ":disabled"), G = b.createElement("input"), G.setAttribute("name", ""), $.appendChild(G), $.querySelectorAll("[name='']").length || L.push("\\[" + B + "*name" + B + "*=" + B + `*(?:''|"")`);
        }), k.cssHas || L.push(":has"), L = L.length && new RegExp(L.join("|")), qe = function($, G) {
          if ($ === G)
            return f = !0, 0;
          var te = !$.compareDocumentPosition - !G.compareDocumentPosition;
          return te || (te = ($.ownerDocument || $) == (G.ownerDocument || G) ? $.compareDocumentPosition(G) : (
            // Otherwise we know they are disconnected
            1
          ), te & 1 || !k.sortDetached && G.compareDocumentPosition($) === te ? $ === b || $.ownerDocument == le && Ne.contains(le, $) ? -1 : G === b || G.ownerDocument == le && Ne.contains(le, G) ? 1 : h ? p.call(h, $) - p.call(h, G) : 0 : te & 4 ? -1 : 1);
        }), b;
      }
      Ne.matches = function(C, D) {
        return Ne(C, null, null, D);
      }, Ne.matchesSelector = function(C, D) {
        if (co(C), _ && !Xe[D + " "] && (!L || !L.test(D)))
          try {
            var P = W.call(C, D);
            if (P || k.disconnectedMatch || // As well, disconnected nodes are said to be in a document
            // fragment in IE 9
            C.document && C.document.nodeType !== 11)
              return P;
          } catch {
            Xe(D, !0);
          }
        return Ne(D, b, null, [C]).length > 0;
      }, Ne.contains = function(C, D) {
        return (C.ownerDocument || C) != b && co(C), d.contains(C, D);
      }, Ne.attr = function(C, D) {
        (C.ownerDocument || C) != b && co(C);
        var P = s.attrHandle[D.toLowerCase()], $ = P && x.call(s.attrHandle, D.toLowerCase()) ? P(C, D, !_) : void 0;
        return $ !== void 0 ? $ : C.getAttribute(D);
      }, Ne.error = function(C) {
        throw new Error("Syntax error, unrecognized expression: " + C);
      }, d.uniqueSort = function(C) {
        var D, P = [], $ = 0, G = 0;
        if (f = !k.sortStable, h = !k.sortStable && a.call(C, 0), K.call(C, qe), f) {
          for (; D = C[G++]; )
            D === C[G] && ($ = P.push(G));
          for (; $--; )
            J.call(C, P[$], 1);
        }
        return h = null, C;
      }, d.fn.uniqueSort = function() {
        return this.pushStack(d.uniqueSort(a.apply(this)));
      }, s = d.expr = {
        // Can be adjusted by the user
        cacheLength: 50,
        createPseudo: Ft,
        match: he,
        attrHandle: {},
        find: {},
        relative: {
          ">": { dir: "parentNode", first: !0 },
          " ": { dir: "parentNode" },
          "+": { dir: "previousSibling", first: !0 },
          "~": { dir: "previousSibling" }
        },
        preFilter: {
          ATTR: function(C) {
            return C[1] = C[1].replace(nt, Tt), C[3] = (C[3] || C[4] || C[5] || "").replace(nt, Tt), C[2] === "~=" && (C[3] = " " + C[3] + " "), C.slice(0, 4);
          },
          CHILD: function(C) {
            return C[1] = C[1].toLowerCase(), C[1].slice(0, 3) === "nth" ? (C[3] || Ne.error(C[0]), C[4] = +(C[4] ? C[5] + (C[6] || 1) : 2 * (C[3] === "even" || C[3] === "odd")), C[5] = +(C[7] + C[8] || C[3] === "odd")) : C[3] && Ne.error(C[0]), C;
          },
          PSEUDO: function(C) {
            var D, P = !C[6] && C[2];
            return he.CHILD.test(C[0]) ? null : (C[3] ? C[2] = C[4] || C[5] || "" : P && H.test(P) && // Get excess from tokenize (recursively)
            (D = Cn(P, !0)) && // advance to the next closing parenthesis
            (D = P.indexOf(")", P.length - D) - P.length) && (C[0] = C[0].slice(0, D), C[2] = P.slice(0, D)), C.slice(0, 3));
          }
        },
        filter: {
          TAG: function(C) {
            var D = C.replace(nt, Tt).toLowerCase();
            return C === "*" ? function() {
              return !0;
            } : function(P) {
              return R(P, D);
            };
          },
          CLASS: function(C) {
            var D = ge[C + " "];
            return D || (D = new RegExp("(^|" + B + ")" + C + "(" + B + "|$)")) && ge(C, function(P) {
              return D.test(
                typeof P.className == "string" && P.className || typeof P.getAttribute < "u" && P.getAttribute("class") || ""
              );
            });
          },
          ATTR: function(C, D, P) {
            return function($) {
              var G = Ne.attr($, C);
              return G == null ? D === "!=" : D ? (G += "", D === "=" ? G === P : D === "!=" ? G !== P : D === "^=" ? P && G.indexOf(P) === 0 : D === "*=" ? P && G.indexOf(P) > -1 : D === "$=" ? P && G.slice(-P.length) === P : D === "~=" ? (" " + G.replace(De, " ") + " ").indexOf(P) > -1 : D === "|=" ? G === P || G.slice(0, P.length + 1) === P + "-" : !1) : !0;
            };
          },
          CHILD: function(C, D, P, $, G) {
            var te = C.slice(0, 3) !== "nth", ie = C.slice(-4) !== "last", de = D === "of-type";
            return $ === 1 && G === 0 ? (
              // Shortcut for :nth-*(n)
              function(re) {
                return !!re.parentNode;
              }
            ) : function(re, Te, be) {
              var we, _e, me, $e, vt, at = te !== ie ? "nextSibling" : "previousSibling", Et = re.parentNode, Vt = de && re.nodeName.toLowerCase(), qo = !be && !de, mt = !1;
              if (Et) {
                if (te) {
                  for (; at; ) {
                    for (me = re; me = me[at]; )
                      if (de ? R(me, Vt) : me.nodeType === 1)
                        return !1;
                    vt = at = C === "only" && !vt && "nextSibling";
                  }
                  return !0;
                }
                if (vt = [ie ? Et.firstChild : Et.lastChild], ie && qo) {
                  for (_e = Et[q] || (Et[q] = {}), we = _e[C] || [], $e = we[0] === N && we[1], mt = $e && we[2], me = $e && Et.childNodes[$e]; me = ++$e && me && me[at] || // Fallback to seeking `elem` from the start
                  (mt = $e = 0) || vt.pop(); )
                    if (me.nodeType === 1 && ++mt && me === re) {
                      _e[C] = [N, $e, mt];
                      break;
                    }
                } else if (qo && (_e = re[q] || (re[q] = {}), we = _e[C] || [], $e = we[0] === N && we[1], mt = $e), mt === !1)
                  for (; (me = ++$e && me && me[at] || (mt = $e = 0) || vt.pop()) && !((de ? R(me, Vt) : me.nodeType === 1) && ++mt && (qo && (_e = me[q] || (me[q] = {}), _e[C] = [N, mt]), me === re)); )
                    ;
                return mt -= G, mt === $ || mt % $ === 0 && mt / $ >= 0;
              }
            };
          },
          PSEUDO: function(C, D) {
            var P, $ = s.pseudos[C] || s.setFilters[C.toLowerCase()] || Ne.error("unsupported pseudo: " + C);
            return $[q] ? $(D) : $.length > 1 ? (P = [C, C, "", D], s.setFilters.hasOwnProperty(C.toLowerCase()) ? Ft(function(G, te) {
              for (var ie, de = $(G, D), re = de.length; re--; )
                ie = p.call(G, de[re]), G[ie] = !(te[ie] = de[re]);
            }) : function(G) {
              return $(G, 0, P);
            }) : $;
          }
        },
        pseudos: {
          // Potentially complex pseudos
          not: Ft(function(C) {
            var D = [], P = [], $ = Mr(C.replace(se, "$1"));
            return $[q] ? Ft(function(G, te, ie, de) {
              for (var re, Te = $(G, null, de, []), be = G.length; be--; )
                (re = Te[be]) && (G[be] = !(te[be] = re));
            }) : function(G, te, ie) {
              return D[0] = G, $(D, null, ie, P), D[0] = null, !P.pop();
            };
          }),
          has: Ft(function(C) {
            return function(D) {
              return Ne(C, D).length > 0;
            };
          }),
          contains: Ft(function(C) {
            return C = C.replace(nt, Tt), function(D) {
              return (D.textContent || d.text(D)).indexOf(C) > -1;
            };
          }),
          // "Whether an element is represented by a :lang() selector
          // is based solely on the element's language value
          // being equal to the identifier C,
          // or beginning with the identifier C immediately followed by "-".
          // The matching of C against the element's language value is performed case-insensitively.
          // The identifier C does not have to be a valid language name."
          // https://www.w3.org/TR/selectors/#lang-pseudo
          lang: Ft(function(C) {
            return ee.test(C || "") || Ne.error("unsupported lang: " + C), C = C.replace(nt, Tt).toLowerCase(), function(D) {
              var P;
              do
                if (P = _ ? D.lang : D.getAttribute("xml:lang") || D.getAttribute("lang"))
                  return P = P.toLowerCase(), P === C || P.indexOf(C + "-") === 0;
              while ((D = D.parentNode) && D.nodeType === 1);
              return !1;
            };
          }),
          // Miscellaneous
          target: function(C) {
            var D = e.location && e.location.hash;
            return D && D.slice(1) === C.id;
          },
          root: function(C) {
            return C === E;
          },
          focus: function(C) {
            return C === Cl() && b.hasFocus() && !!(C.type || C.href || ~C.tabIndex);
          },
          // Boolean properties
          enabled: Vs(!1),
          disabled: Vs(!0),
          checked: function(C) {
            return R(C, "input") && !!C.checked || R(C, "option") && !!C.selected;
          },
          selected: function(C) {
            return C.parentNode && C.parentNode.selectedIndex, C.selected === !0;
          },
          // Contents
          empty: function(C) {
            for (C = C.firstChild; C; C = C.nextSibling)
              if (C.nodeType < 6)
                return !1;
            return !0;
          },
          parent: function(C) {
            return !s.pseudos.empty(C);
          },
          // Element/input types
          header: function(C) {
            return Ee.test(C.nodeName);
          },
          input: function(C) {
            return ke.test(C.nodeName);
          },
          button: function(C) {
            return R(C, "input") && C.type === "button" || R(C, "button");
          },
          text: function(C) {
            var D;
            return R(C, "input") && C.type === "text" && // Support: IE <10 only
            // New HTML5 attribute values (e.g., "search") appear
            // with elem.type === "text"
            ((D = C.getAttribute("type")) == null || D.toLowerCase() === "text");
          },
          // Position-in-collection
          first: Mo(function() {
            return [0];
          }),
          last: Mo(function(C, D) {
            return [D - 1];
          }),
          eq: Mo(function(C, D, P) {
            return [P < 0 ? P + D : P];
          }),
          even: Mo(function(C, D) {
            for (var P = 0; P < D; P += 2)
              C.push(P);
            return C;
          }),
          odd: Mo(function(C, D) {
            for (var P = 1; P < D; P += 2)
              C.push(P);
            return C;
          }),
          lt: Mo(function(C, D, P) {
            var $;
            for (P < 0 ? $ = P + D : P > D ? $ = D : $ = P; --$ >= 0; )
              C.push($);
            return C;
          }),
          gt: Mo(function(C, D, P) {
            for (var $ = P < 0 ? P + D : P; ++$ < D; )
              C.push($);
            return C;
          })
        }
      }, s.pseudos.nth = s.pseudos.eq;
      for (i in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 })
        s.pseudos[i] = Sl(i);
      for (i in { submit: !0, reset: !0 })
        s.pseudos[i] = Tl(i);
      function Gs() {
      }
      Gs.prototype = s.filters = s.pseudos, s.setFilters = new Gs();
      function Cn(C, D) {
        var P, $, G, te, ie, de, re, Te = Ce[C + " "];
        if (Te)
          return D ? 0 : Te.slice(0);
        for (ie = C, de = [], re = s.preFilter; ie; ) {
          (!P || ($ = w.exec(ie))) && ($ && (ie = ie.slice($[0].length) || ie), de.push(G = [])), P = !1, ($ = S.exec(ie)) && (P = $.shift(), G.push({
            value: P,
            // Cast descendant combinators to space
            type: $[0].replace(se, " ")
          }), ie = ie.slice(P.length));
          for (te in s.filter)
            ($ = he[te].exec(ie)) && (!re[te] || ($ = re[te]($))) && (P = $.shift(), G.push({
              value: P,
              type: te,
              matches: $
            }), ie = ie.slice(P.length));
          if (!P)
            break;
        }
        return D ? ie.length : ie ? Ne.error(C) : (
          // Cache the tokens
          Ce(C, de).slice(0)
        );
      }
      function li(C) {
        for (var D = 0, P = C.length, $ = ""; D < P; D++)
          $ += C[D].value;
        return $;
      }
      function ci(C, D, P) {
        var $ = D.dir, G = D.next, te = G || $, ie = P && te === "parentNode", de = X++;
        return D.first ? (
          // Check against closest ancestor/preceding element
          function(re, Te, be) {
            for (; re = re[$]; )
              if (re.nodeType === 1 || ie)
                return C(re, Te, be);
            return !1;
          }
        ) : (
          // Check against all ancestor/preceding elements
          function(re, Te, be) {
            var we, _e, me = [N, de];
            if (be) {
              for (; re = re[$]; )
                if ((re.nodeType === 1 || ie) && C(re, Te, be))
                  return !0;
            } else
              for (; re = re[$]; )
                if (re.nodeType === 1 || ie)
                  if (_e = re[q] || (re[q] = {}), G && R(re, G))
                    re = re[$] || re;
                  else {
                    if ((we = _e[te]) && we[0] === N && we[1] === de)
                      return me[2] = we[2];
                    if (_e[te] = me, me[2] = C(re, Te, be))
                      return !0;
                  }
            return !1;
          }
        );
      }
      function Tr(C) {
        return C.length > 1 ? function(D, P, $) {
          for (var G = C.length; G--; )
            if (!C[G](D, P, $))
              return !1;
          return !0;
        } : C[0];
      }
      function _l(C, D, P) {
        for (var $ = 0, G = D.length; $ < G; $++)
          Ne(C, D[$], P);
        return P;
      }
      function di(C, D, P, $, G) {
        for (var te, ie = [], de = 0, re = C.length, Te = D != null; de < re; de++)
          (te = C[de]) && (!P || P(te, $, G)) && (ie.push(te), Te && D.push(de));
        return ie;
      }
      function _r(C, D, P, $, G, te) {
        return $ && !$[q] && ($ = _r($)), G && !G[q] && (G = _r(G, te)), Ft(function(ie, de, re, Te) {
          var be, we, _e, me, $e = [], vt = [], at = de.length, Et = ie || _l(
            D || "*",
            re.nodeType ? [re] : re,
            []
          ), Vt = C && (ie || !D) ? di(Et, $e, C, re, Te) : Et;
          if (P ? (me = G || (ie ? C : at || $) ? (
            // ...intermediate processing is necessary
            []
          ) : (
            // ...otherwise use results directly
            de
          ), P(Vt, me, re, Te)) : me = Vt, $)
            for (be = di(me, vt), $(be, [], re, Te), we = be.length; we--; )
              (_e = be[we]) && (me[vt[we]] = !(Vt[vt[we]] = _e));
          if (ie) {
            if (G || C) {
              if (G) {
                for (be = [], we = me.length; we--; )
                  (_e = me[we]) && be.push(Vt[we] = _e);
                G(null, me = [], be, Te);
              }
              for (we = me.length; we--; )
                (_e = me[we]) && (be = G ? p.call(ie, _e) : $e[we]) > -1 && (ie[be] = !(de[be] = _e));
            }
          } else
            me = di(
              me === de ? me.splice(at, me.length) : me
            ), G ? G(null, de, me, Te) : m.apply(de, me);
        });
      }
      function Er(C) {
        for (var D, P, $, G = C.length, te = s.relative[C[0].type], ie = te || s.relative[" "], de = te ? 1 : 0, re = ci(function(we) {
          return we === D;
        }, ie, !0), Te = ci(function(we) {
          return p.call(D, we) > -1;
        }, ie, !0), be = [function(we, _e, me) {
          var $e = !te && (me || _e != l) || ((D = _e).nodeType ? re(we, _e, me) : Te(we, _e, me));
          return D = null, $e;
        }]; de < G; de++)
          if (P = s.relative[C[de].type])
            be = [ci(Tr(be), P)];
          else {
            if (P = s.filter[C[de].type].apply(null, C[de].matches), P[q]) {
              for ($ = ++de; $ < G && !s.relative[C[$].type]; $++)
                ;
              return _r(
                de > 1 && Tr(be),
                de > 1 && li(
                  // If the preceding token was a descendant combinator, insert an implicit any-element `*`
                  C.slice(0, de - 1).concat({ value: C[de - 2].type === " " ? "*" : "" })
                ).replace(se, "$1"),
                P,
                de < $ && Er(C.slice(de, $)),
                $ < G && Er(C = C.slice($)),
                $ < G && li(C)
              );
            }
            be.push(P);
          }
        return Tr(be);
      }
      function El(C, D) {
        var P = D.length > 0, $ = C.length > 0, G = function(te, ie, de, re, Te) {
          var be, we, _e, me = 0, $e = "0", vt = te && [], at = [], Et = l, Vt = te || $ && s.find.TAG("*", Te), qo = N += Et == null ? 1 : Math.random() || 0.1, mt = Vt.length;
          for (Te && (l = ie == b || ie || Te); $e !== mt && (be = Vt[$e]) != null; $e++) {
            if ($ && be) {
              for (we = 0, !ie && be.ownerDocument != b && (co(be), de = !_); _e = C[we++]; )
                if (_e(be, ie || b, de)) {
                  m.call(re, be);
                  break;
                }
              Te && (N = qo);
            }
            P && ((be = !_e && be) && me--, te && vt.push(be));
          }
          if (me += $e, P && $e !== me) {
            for (we = 0; _e = D[we++]; )
              _e(vt, at, ie, de);
            if (te) {
              if (me > 0)
                for (; $e--; )
                  vt[$e] || at[$e] || (at[$e] = V.call(re));
              at = di(at);
            }
            m.apply(re, at), Te && !te && at.length > 0 && me + D.length > 1 && d.uniqueSort(re);
          }
          return Te && (N = qo, l = Et), vt;
        };
        return P ? Ft(G) : G;
      }
      function Mr(C, D) {
        var P, $ = [], G = [], te = xe[C + " "];
        if (!te) {
          for (D || (D = Cn(C)), P = D.length; P--; )
            te = Er(D[P]), te[q] ? $.push(te) : G.push(te);
          te = xe(
            C,
            El(G, $)
          ), te.selector = C;
        }
        return te;
      }
      function Zs(C, D, P, $) {
        var G, te, ie, de, re, Te = typeof C == "function" && C, be = !$ && Cn(C = Te.selector || C);
        if (P = P || [], be.length === 1) {
          if (te = be[0] = be[0].slice(0), te.length > 2 && (ie = te[0]).type === "ID" && D.nodeType === 9 && _ && s.relative[te[1].type]) {
            if (D = (s.find.ID(
              ie.matches[0].replace(nt, Tt),
              D
            ) || [])[0], D)
              Te && (D = D.parentNode);
            else
              return P;
            C = C.slice(te.shift().value.length);
          }
          for (G = he.needsContext.test(C) ? 0 : te.length; G-- && (ie = te[G], !s.relative[de = ie.type]); )
            if ((re = s.find[de]) && ($ = re(
              ie.matches[0].replace(nt, Tt),
              St.test(te[0].type) && Sr(D.parentNode) || D
            ))) {
              if (te.splice(G, 1), C = $.length && li(te), !C)
                return m.apply(P, $), P;
              break;
            }
        }
        return (Te || Mr(C, be))(
          $,
          D,
          !_,
          P,
          !D || St.test(C) && Sr(D.parentNode) || D
        ), P;
      }
      k.sortStable = q.split("").sort(qe).join("") === q, co(), k.sortDetached = Uo(function(C) {
        return C.compareDocumentPosition(b.createElement("fieldset")) & 1;
      }), d.find = Ne, d.expr[":"] = d.expr.pseudos, d.unique = d.uniqueSort, Ne.compile = Mr, Ne.select = Zs, Ne.setDocument = co, Ne.tokenize = Cn, Ne.escape = d.escapeSelector, Ne.getText = d.text, Ne.isXML = d.isXMLDoc, Ne.selectors = d.expr, Ne.support = d.support, Ne.uniqueSort = d.uniqueSort;
    })();
    var fe = function(i, s, l) {
      for (var h = [], f = l !== void 0; (i = i[s]) && i.nodeType !== 9; )
        if (i.nodeType === 1) {
          if (f && d(i).is(l))
            break;
          h.push(i);
        }
      return h;
    }, Me = function(i, s) {
      for (var l = []; i; i = i.nextSibling)
        i.nodeType === 1 && i !== s && l.push(i);
      return l;
    }, je = d.expr.match.needsContext, Be = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function Ke(i, s, l) {
      return M(s) ? d.grep(i, function(h, f) {
        return !!s.call(h, f, h) !== l;
      }) : s.nodeType ? d.grep(i, function(h) {
        return h === s !== l;
      }) : typeof s != "string" ? d.grep(i, function(h) {
        return p.call(s, h) > -1 !== l;
      }) : d.filter(s, i, l);
    }
    d.filter = function(i, s, l) {
      var h = s[0];
      return l && (i = ":not(" + i + ")"), s.length === 1 && h.nodeType === 1 ? d.find.matchesSelector(h, i) ? [h] : [] : d.find.matches(i, d.grep(s, function(f) {
        return f.nodeType === 1;
      }));
    }, d.fn.extend({
      find: function(i) {
        var s, l, h = this.length, f = this;
        if (typeof i != "string")
          return this.pushStack(d(i).filter(function() {
            for (s = 0; s < h; s++)
              if (d.contains(f[s], this))
                return !0;
          }));
        for (l = this.pushStack([]), s = 0; s < h; s++)
          d.find(i, f[s], l);
        return h > 1 ? d.uniqueSort(l) : l;
      },
      filter: function(i) {
        return this.pushStack(Ke(this, i || [], !1));
      },
      not: function(i) {
        return this.pushStack(Ke(this, i || [], !0));
      },
      is: function(i) {
        return !!Ke(
          this,
          // If this is a positional/relative selector, check membership in the returned set
          // so $("p:first").is("p:last") won't return true for a doc with two "p".
          typeof i == "string" && je.test(i) ? d(i) : i || [],
          !1
        ).length;
      }
    });
    var io, ko = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, on = d.fn.init = function(i, s, l) {
      var h, f;
      if (!i)
        return this;
      if (l = l || io, typeof i == "string")
        if (i[0] === "<" && i[i.length - 1] === ">" && i.length >= 3 ? h = [null, i, null] : h = ko.exec(i), h && (h[1] || !s))
          if (h[1]) {
            if (s = s instanceof d ? s[0] : s, d.merge(this, d.parseHTML(
              h[1],
              s && s.nodeType ? s.ownerDocument || s : Y,
              !0
            )), Be.test(h[1]) && d.isPlainObject(s))
              for (h in s)
                M(this[h]) ? this[h](s[h]) : this.attr(h, s[h]);
            return this;
          } else
            return f = Y.getElementById(h[2]), f && (this[0] = f, this.length = 1), this;
        else
          return !s || s.jquery ? (s || l).find(i) : this.constructor(s).find(i);
      else {
        if (i.nodeType)
          return this[0] = i, this.length = 1, this;
        if (M(i))
          return l.ready !== void 0 ? l.ready(i) : (
            // Execute immediately if ready is not present
            i(d)
          );
      }
      return d.makeArray(i, this);
    };
    on.prototype = d.fn, io = d(Y);
    var In = /^(?:parents|prev(?:Until|All))/, fn = {
      children: !0,
      contents: !0,
      next: !0,
      prev: !0
    };
    d.fn.extend({
      has: function(i) {
        var s = d(i, this), l = s.length;
        return this.filter(function() {
          for (var h = 0; h < l; h++)
            if (d.contains(this, s[h]))
              return !0;
        });
      },
      closest: function(i, s) {
        var l, h = 0, f = this.length, m = [], b = typeof i != "string" && d(i);
        if (!je.test(i)) {
          for (; h < f; h++)
            for (l = this[h]; l && l !== s; l = l.parentNode)
              if (l.nodeType < 11 && (b ? b.index(l) > -1 : (
                // Don't pass non-elements to jQuery#find
                l.nodeType === 1 && d.find.matchesSelector(l, i)
              ))) {
                m.push(l);
                break;
              }
        }
        return this.pushStack(m.length > 1 ? d.uniqueSort(m) : m);
      },
      // Determine the position of an element within the set
      index: function(i) {
        return i ? typeof i == "string" ? p.call(d(i), this[0]) : p.call(
          this,
          // If it receives a jQuery object, the first element is used
          i.jquery ? i[0] : i
        ) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
      },
      add: function(i, s) {
        return this.pushStack(
          d.uniqueSort(
            d.merge(this.get(), d(i, s))
          )
        );
      },
      addBack: function(i) {
        return this.add(
          i == null ? this.prevObject : this.prevObject.filter(i)
        );
      }
    });
    function mn(i, s) {
      for (; (i = i[s]) && i.nodeType !== 1; )
        ;
      return i;
    }
    d.each({
      parent: function(i) {
        var s = i.parentNode;
        return s && s.nodeType !== 11 ? s : null;
      },
      parents: function(i) {
        return fe(i, "parentNode");
      },
      parentsUntil: function(i, s, l) {
        return fe(i, "parentNode", l);
      },
      next: function(i) {
        return mn(i, "nextSibling");
      },
      prev: function(i) {
        return mn(i, "previousSibling");
      },
      nextAll: function(i) {
        return fe(i, "nextSibling");
      },
      prevAll: function(i) {
        return fe(i, "previousSibling");
      },
      nextUntil: function(i, s, l) {
        return fe(i, "nextSibling", l);
      },
      prevUntil: function(i, s, l) {
        return fe(i, "previousSibling", l);
      },
      siblings: function(i) {
        return Me((i.parentNode || {}).firstChild, i);
      },
      children: function(i) {
        return Me(i.firstChild);
      },
      contents: function(i) {
        return i.contentDocument != null && // Support: IE 11+
        // <object> elements with no `data` attribute has an object
        // `contentDocument` with a `null` prototype.
        r(i.contentDocument) ? i.contentDocument : (R(i, "template") && (i = i.content || i), d.merge([], i.childNodes));
      }
    }, function(i, s) {
      d.fn[i] = function(l, h) {
        var f = d.map(this, s, l);
        return i.slice(-5) !== "Until" && (h = l), h && typeof h == "string" && (f = d.filter(h, f)), this.length > 1 && (fn[i] || d.uniqueSort(f), In.test(i) && f.reverse()), this.pushStack(f);
      };
    });
    var Nt = /[^\x20\t\r\n\f]+/g;
    function Bi(i) {
      var s = {};
      return d.each(i.match(Nt) || [], function(l, h) {
        s[h] = !0;
      }), s;
    }
    d.Callbacks = function(i) {
      i = typeof i == "string" ? Bi(i) : d.extend({}, i);
      var s, l, h, f, m = [], b = [], E = -1, _ = function() {
        for (f = f || i.once, h = s = !0; b.length; E = -1)
          for (l = b.shift(); ++E < m.length; )
            m[E].apply(l[0], l[1]) === !1 && i.stopOnFalse && (E = m.length, l = !1);
        i.memory || (l = !1), s = !1, f && (l ? m = [] : m = "");
      }, L = {
        // Add a callback or a collection of callbacks to the list
        add: function() {
          return m && (l && !s && (E = m.length - 1, b.push(l)), function W(q) {
            d.each(q, function(N, X) {
              M(X) ? (!i.unique || !L.has(X)) && m.push(X) : X && X.length && Q(X) !== "string" && W(X);
            });
          }(arguments), l && !s && _()), this;
        },
        // Remove a callback from the list
        remove: function() {
          return d.each(arguments, function(W, q) {
            for (var N; (N = d.inArray(q, m, N)) > -1; )
              m.splice(N, 1), N <= E && E--;
          }), this;
        },
        // Check if a given callback is in the list.
        // If no argument is given, return whether or not list has callbacks attached.
        has: function(W) {
          return W ? d.inArray(W, m) > -1 : m.length > 0;
        },
        // Remove all callbacks from the list
        empty: function() {
          return m && (m = []), this;
        },
        // Disable .fire and .add
        // Abort any current/pending executions
        // Clear all callbacks and values
        disable: function() {
          return f = b = [], m = l = "", this;
        },
        disabled: function() {
          return !m;
        },
        // Disable .fire
        // Also disable .add unless we have memory (since it would have no effect)
        // Abort any pending executions
        lock: function() {
          return f = b = [], !l && !s && (m = l = ""), this;
        },
        locked: function() {
          return !!f;
        },
        // Call all callbacks with the given context and arguments
        fireWith: function(W, q) {
          return f || (q = q || [], q = [W, q.slice ? q.slice() : q], b.push(q), s || _()), this;
        },
        // Call all the callbacks with the given arguments
        fire: function() {
          return L.fireWith(this, arguments), this;
        },
        // To know if the callbacks have already been called at least once
        fired: function() {
          return !!h;
        }
      };
      return L;
    };
    function ro(i) {
      return i;
    }
    function $o(i) {
      throw i;
    }
    function Gn(i, s, l, h) {
      var f;
      try {
        i && M(f = i.promise) ? f.call(i).done(s).fail(l) : i && M(f = i.then) ? f.call(i, s, l) : s.apply(void 0, [i].slice(h));
      } catch (m) {
        l.apply(void 0, [m]);
      }
    }
    d.extend({
      Deferred: function(i) {
        var s = [
          // action, add listener, callbacks,
          // ... .then handlers, argument index, [final state]
          [
            "notify",
            "progress",
            d.Callbacks("memory"),
            d.Callbacks("memory"),
            2
          ],
          [
            "resolve",
            "done",
            d.Callbacks("once memory"),
            d.Callbacks("once memory"),
            0,
            "resolved"
          ],
          [
            "reject",
            "fail",
            d.Callbacks("once memory"),
            d.Callbacks("once memory"),
            1,
            "rejected"
          ]
        ], l = "pending", h = {
          state: function() {
            return l;
          },
          always: function() {
            return f.done(arguments).fail(arguments), this;
          },
          catch: function(m) {
            return h.then(null, m);
          },
          // Keep pipe for back-compat
          pipe: function() {
            var m = arguments;
            return d.Deferred(function(b) {
              d.each(s, function(E, _) {
                var L = M(m[_[4]]) && m[_[4]];
                f[_[1]](function() {
                  var W = L && L.apply(this, arguments);
                  W && M(W.promise) ? W.promise().progress(b.notify).done(b.resolve).fail(b.reject) : b[_[0] + "With"](
                    this,
                    L ? [W] : arguments
                  );
                });
              }), m = null;
            }).promise();
          },
          then: function(m, b, E) {
            var _ = 0;
            function L(W, q, N, X) {
              return function() {
                var ge = this, Ce = arguments, xe = function() {
                  var qe, $t;
                  if (!(W < _)) {
                    if (qe = N.apply(ge, Ce), qe === q.promise())
                      throw new TypeError("Thenable self-resolution");
                    $t = qe && // Support: Promises/A+ section 2.3.4
                    // https://promisesaplus.com/#point-64
                    // Only check objects and functions for thenability
                    (typeof qe == "object" || typeof qe == "function") && qe.then, M($t) ? X ? $t.call(
                      qe,
                      L(_, q, ro, X),
                      L(_, q, $o, X)
                    ) : (_++, $t.call(
                      qe,
                      L(_, q, ro, X),
                      L(_, q, $o, X),
                      L(
                        _,
                        q,
                        ro,
                        q.notifyWith
                      )
                    )) : (N !== ro && (ge = void 0, Ce = [qe]), (X || q.resolveWith)(ge, Ce));
                  }
                }, Xe = X ? xe : function() {
                  try {
                    xe();
                  } catch (qe) {
                    d.Deferred.exceptionHook && d.Deferred.exceptionHook(
                      qe,
                      Xe.error
                    ), W + 1 >= _ && (N !== $o && (ge = void 0, Ce = [qe]), q.rejectWith(ge, Ce));
                  }
                };
                W ? Xe() : (d.Deferred.getErrorHook ? Xe.error = d.Deferred.getErrorHook() : d.Deferred.getStackHook && (Xe.error = d.Deferred.getStackHook()), e.setTimeout(Xe));
              };
            }
            return d.Deferred(function(W) {
              s[0][3].add(
                L(
                  0,
                  W,
                  M(E) ? E : ro,
                  W.notifyWith
                )
              ), s[1][3].add(
                L(
                  0,
                  W,
                  M(m) ? m : ro
                )
              ), s[2][3].add(
                L(
                  0,
                  W,
                  M(b) ? b : $o
                )
              );
            }).promise();
          },
          // Get a promise for this deferred
          // If obj is provided, the promise aspect is added to the object
          promise: function(m) {
            return m != null ? d.extend(m, h) : h;
          }
        }, f = {};
        return d.each(s, function(m, b) {
          var E = b[2], _ = b[5];
          h[b[1]] = E.add, _ && E.add(
            function() {
              l = _;
            },
            // rejected_callbacks.disable
            // fulfilled_callbacks.disable
            s[3 - m][2].disable,
            // rejected_handlers.disable
            // fulfilled_handlers.disable
            s[3 - m][3].disable,
            // progress_callbacks.lock
            s[0][2].lock,
            // progress_handlers.lock
            s[0][3].lock
          ), E.add(b[3].fire), f[b[0]] = function() {
            return f[b[0] + "With"](this === f ? void 0 : this, arguments), this;
          }, f[b[0] + "With"] = E.fireWith;
        }), h.promise(f), i && i.call(f, f), f;
      },
      // Deferred helper
      when: function(i) {
        var s = arguments.length, l = s, h = Array(l), f = a.call(arguments), m = d.Deferred(), b = function(E) {
          return function(_) {
            h[E] = this, f[E] = arguments.length > 1 ? a.call(arguments) : _, --s || m.resolveWith(h, f);
          };
        };
        if (s <= 1 && (Gn(
          i,
          m.done(b(l)).resolve,
          m.reject,
          !s
        ), m.state() === "pending" || M(f[l] && f[l].then)))
          return m.then();
        for (; l--; )
          Gn(f[l], b(l), m.reject);
        return m.promise();
      }
    });
    var Ri = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    d.Deferred.exceptionHook = function(i, s) {
      e.console && e.console.warn && i && Ri.test(i.name) && e.console.warn(
        "jQuery.Deferred exception: " + i.message,
        i.stack,
        s
      );
    }, d.readyException = function(i) {
      e.setTimeout(function() {
        throw i;
      });
    };
    var Oo = d.Deferred();
    d.fn.ready = function(i) {
      return Oo.then(i).catch(function(s) {
        d.readyException(s);
      }), this;
    }, d.extend({
      // Is the DOM ready to be used? Set to true once it occurs.
      isReady: !1,
      // A counter to track how many items to wait for before
      // the ready event fires. See trac-6781
      readyWait: 1,
      // Handle when the DOM is ready
      ready: function(i) {
        (i === !0 ? --d.readyWait : d.isReady) || (d.isReady = !0, !(i !== !0 && --d.readyWait > 0) && Oo.resolveWith(Y, [d]));
      }
    }), d.ready.then = Oo.then;
    function xt() {
      Y.removeEventListener("DOMContentLoaded", xt), e.removeEventListener("load", xt), d.ready();
    }
    Y.readyState === "complete" || Y.readyState !== "loading" && !Y.documentElement.doScroll ? e.setTimeout(d.ready) : (Y.addEventListener("DOMContentLoaded", xt), e.addEventListener("load", xt));
    var bt = function(i, s, l, h, f, m, b) {
      var E = 0, _ = i.length, L = l == null;
      if (Q(l) === "object") {
        f = !0;
        for (E in l)
          bt(i, s, E, l[E], !0, m, b);
      } else if (h !== void 0 && (f = !0, M(h) || (b = !0), L && (b ? (s.call(i, h), s = null) : (L = s, s = function(W, q, N) {
        return L.call(d(W), N);
      })), s))
        for (; E < _; E++)
          s(
            i[E],
            l,
            b ? h : h.call(i[E], E, s(i[E], l))
          );
      return f ? i : L ? s.call(i) : _ ? s(i[0], l) : m;
    }, po = /^-ms-/, ir = /-([a-z])/g;
    function Yr(i, s) {
      return s.toUpperCase();
    }
    function Pt(i) {
      return i.replace(po, "ms-").replace(ir, Yr);
    }
    var ze = function(i) {
      return i.nodeType === 1 || i.nodeType === 9 || !+i.nodeType;
    };
    function Wt() {
      this.expando = d.expando + Wt.uid++;
    }
    Wt.uid = 1, Wt.prototype = {
      cache: function(i) {
        var s = i[this.expando];
        return s || (s = {}, ze(i) && (i.nodeType ? i[this.expando] = s : Object.defineProperty(i, this.expando, {
          value: s,
          configurable: !0
        }))), s;
      },
      set: function(i, s, l) {
        var h, f = this.cache(i);
        if (typeof s == "string")
          f[Pt(s)] = l;
        else
          for (h in s)
            f[Pt(h)] = s[h];
        return f;
      },
      get: function(i, s) {
        return s === void 0 ? this.cache(i) : (
          // Always use camelCase key (gh-2257)
          i[this.expando] && i[this.expando][Pt(s)]
        );
      },
      access: function(i, s, l) {
        return s === void 0 || s && typeof s == "string" && l === void 0 ? this.get(i, s) : (this.set(i, s, l), l !== void 0 ? l : s);
      },
      remove: function(i, s) {
        var l, h = i[this.expando];
        if (h !== void 0) {
          if (s !== void 0)
            for (Array.isArray(s) ? s = s.map(Pt) : (s = Pt(s), s = s in h ? [s] : s.match(Nt) || []), l = s.length; l--; )
              delete h[s[l]];
          (s === void 0 || d.isEmptyObject(h)) && (i.nodeType ? i[this.expando] = void 0 : delete i[this.expando]);
        }
      },
      hasData: function(i) {
        var s = i[this.expando];
        return s !== void 0 && !d.isEmptyObject(s);
      }
    };
    var ce = new Wt(), ot = new Wt(), qt = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, Xt = /[A-Z]/g;
    function Fr(i) {
      return i === "true" ? !0 : i === "false" ? !1 : i === "null" ? null : i === +i + "" ? +i : qt.test(i) ? JSON.parse(i) : i;
    }
    function Nn(i, s, l) {
      var h;
      if (l === void 0 && i.nodeType === 1)
        if (h = "data-" + s.replace(Xt, "-$&").toLowerCase(), l = i.getAttribute(h), typeof l == "string") {
          try {
            l = Fr(l);
          } catch {
          }
          ot.set(i, s, l);
        } else
          l = void 0;
      return l;
    }
    d.extend({
      hasData: function(i) {
        return ot.hasData(i) || ce.hasData(i);
      },
      data: function(i, s, l) {
        return ot.access(i, s, l);
      },
      removeData: function(i, s) {
        ot.remove(i, s);
      },
      // TODO: Now that all calls to _data and _removeData have been replaced
      // with direct calls to dataPriv methods, these can be deprecated.
      _data: function(i, s, l) {
        return ce.access(i, s, l);
      },
      _removeData: function(i, s) {
        ce.remove(i, s);
      }
    }), d.fn.extend({
      data: function(i, s) {
        var l, h, f, m = this[0], b = m && m.attributes;
        if (i === void 0) {
          if (this.length && (f = ot.get(m), m.nodeType === 1 && !ce.get(m, "hasDataAttrs"))) {
            for (l = b.length; l--; )
              b[l] && (h = b[l].name, h.indexOf("data-") === 0 && (h = Pt(h.slice(5)), Nn(m, h, f[h])));
            ce.set(m, "hasDataAttrs", !0);
          }
          return f;
        }
        return typeof i == "object" ? this.each(function() {
          ot.set(this, i);
        }) : bt(this, function(E) {
          var _;
          if (m && E === void 0)
            return _ = ot.get(m, i), _ !== void 0 || (_ = Nn(m, i), _ !== void 0) ? _ : void 0;
          this.each(function() {
            ot.set(this, i, E);
          });
        }, null, s, arguments.length > 1, null, !0);
      },
      removeData: function(i) {
        return this.each(function() {
          ot.remove(this, i);
        });
      }
    }), d.extend({
      queue: function(i, s, l) {
        var h;
        if (i)
          return s = (s || "fx") + "queue", h = ce.get(i, s), l && (!h || Array.isArray(l) ? h = ce.access(i, s, d.makeArray(l)) : h.push(l)), h || [];
      },
      dequeue: function(i, s) {
        s = s || "fx";
        var l = d.queue(i, s), h = l.length, f = l.shift(), m = d._queueHooks(i, s), b = function() {
          d.dequeue(i, s);
        };
        f === "inprogress" && (f = l.shift(), h--), f && (s === "fx" && l.unshift("inprogress"), delete m.stop, f.call(i, b, m)), !h && m && m.empty.fire();
      },
      // Not public - generate a queueHooks object, or return the current one
      _queueHooks: function(i, s) {
        var l = s + "queueHooks";
        return ce.get(i, l) || ce.access(i, l, {
          empty: d.Callbacks("once memory").add(function() {
            ce.remove(i, [s + "queue", l]);
          })
        });
      }
    }), d.fn.extend({
      queue: function(i, s) {
        var l = 2;
        return typeof i != "string" && (s = i, i = "fx", l--), arguments.length < l ? d.queue(this[0], i) : s === void 0 ? this : this.each(function() {
          var h = d.queue(this, i, s);
          d._queueHooks(this, i), i === "fx" && h[0] !== "inprogress" && d.dequeue(this, i);
        });
      },
      dequeue: function(i) {
        return this.each(function() {
          d.dequeue(this, i);
        });
      },
      clearQueue: function(i) {
        return this.queue(i || "fx", []);
      },
      // Get a promise resolved when queues of a certain type
      // are emptied (fx is the type by default)
      promise: function(i, s) {
        var l, h = 1, f = d.Deferred(), m = this, b = this.length, E = function() {
          --h || f.resolveWith(m, [m]);
        };
        for (typeof i != "string" && (s = i, i = void 0), i = i || "fx"; b--; )
          l = ce.get(m[b], i + "queueHooks"), l && l.empty && (h++, l.empty.add(E));
        return E(), f.promise(s);
      }
    });
    var Jt = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, Lo = new RegExp("^(?:([+-])=|)(" + Jt + ")([a-z%]*)$", "i"), Ut = ["Top", "Right", "Bottom", "Left"], Qt = Y.documentElement, fo = function(i) {
      return d.contains(i.ownerDocument, i);
    }, We = { composed: !0 };
    Qt.getRootNode && (fo = function(i) {
      return d.contains(i.ownerDocument, i) || i.getRootNode(We) === i.ownerDocument;
    });
    var gn = function(i, s) {
      return i = s || i, i.style.display === "none" || i.style.display === "" && // Otherwise, check computed style
      // Support: Firefox <=43 - 45
      // Disconnected elements can have computed display: none, so first confirm that elem is
      // in the document.
      fo(i) && d.css(i, "display") === "none";
    };
    function rr(i, s, l, h) {
      var f, m, b = 20, E = h ? function() {
        return h.cur();
      } : function() {
        return d.css(i, s, "");
      }, _ = E(), L = l && l[3] || (d.cssNumber[s] ? "" : "px"), W = i.nodeType && (d.cssNumber[s] || L !== "px" && +_) && Lo.exec(d.css(i, s));
      if (W && W[3] !== L) {
        for (_ = _ / 2, L = L || W[3], W = +_ || 1; b--; )
          d.style(i, s, W + L), (1 - m) * (1 - (m = E() / _ || 0.5)) <= 0 && (b = 0), W = W / m;
        W = W * 2, d.style(i, s, W + L), l = l || [];
      }
      return l && (W = +W || +_ || 0, f = l[1] ? W + (l[1] + 1) * l[2] : +l[2], h && (h.unit = L, h.start = W, h.end = f)), f;
    }
    var Yo = {};
    function Os(i) {
      var s, l = i.ownerDocument, h = i.nodeName, f = Yo[h];
      return f || (s = l.body.appendChild(l.createElement(h)), f = d.css(s, "display"), s.parentNode.removeChild(s), f === "none" && (f = "block"), Yo[h] = f, f);
    }
    function xo(i, s) {
      for (var l, h, f = [], m = 0, b = i.length; m < b; m++)
        h = i[m], h.style && (l = h.style.display, s ? (l === "none" && (f[m] = ce.get(h, "display") || null, f[m] || (h.style.display = "")), h.style.display === "" && gn(h) && (f[m] = Os(h))) : l !== "none" && (f[m] = "none", ce.set(h, "display", l)));
      for (m = 0; m < b; m++)
        f[m] != null && (i[m].style.display = f[m]);
      return i;
    }
    d.fn.extend({
      show: function() {
        return xo(this, !0);
      },
      hide: function() {
        return xo(this);
      },
      toggle: function(i) {
        return typeof i == "boolean" ? i ? this.show() : this.hide() : this.each(function() {
          gn(this) ? d(this).show() : d(this).hide();
        });
      }
    });
    var Co = /^(?:checkbox|radio)$/i, sr = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i, ar = /^$|^module$|\/(?:java|ecma)script/i;
    (function() {
      var i = Y.createDocumentFragment(), s = i.appendChild(Y.createElement("div")), l = Y.createElement("input");
      l.setAttribute("type", "radio"), l.setAttribute("checked", "checked"), l.setAttribute("name", "t"), s.appendChild(l), k.checkClone = s.cloneNode(!0).cloneNode(!0).lastChild.checked, s.innerHTML = "<textarea>x</textarea>", k.noCloneChecked = !!s.cloneNode(!0).lastChild.defaultValue, s.innerHTML = "<option></option>", k.option = !!s.lastChild;
    })();
    var ut = {
      // XHTML parsers do not magically insert elements in the
      // same way that tag soup parsers do. So we cannot shorten
      // this by omitting <tbody> or other required elements.
      thead: [1, "<table>", "</table>"],
      col: [2, "<table><colgroup>", "</colgroup></table>"],
      tr: [2, "<table><tbody>", "</tbody></table>"],
      td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
      _default: [0, "", ""]
    };
    ut.tbody = ut.tfoot = ut.colgroup = ut.caption = ut.thead, ut.th = ut.td, k.option || (ut.optgroup = ut.option = [1, "<select multiple='multiple'>", "</select>"]);
    function pt(i, s) {
      var l;
      return typeof i.getElementsByTagName < "u" ? l = i.getElementsByTagName(s || "*") : typeof i.querySelectorAll < "u" ? l = i.querySelectorAll(s || "*") : l = [], s === void 0 || s && R(i, s) ? d.merge([i], l) : l;
    }
    function bn(i, s) {
      for (var l = 0, h = i.length; l < h; l++)
        ce.set(
          i[l],
          "globalEval",
          !s || ce.get(s[l], "globalEval")
        );
    }
    var Ls = /<|&#?\w+;/;
    function Ue(i, s, l, h, f) {
      for (var m, b, E, _, L, W, q = s.createDocumentFragment(), N = [], X = 0, ge = i.length; X < ge; X++)
        if (m = i[X], m || m === 0)
          if (Q(m) === "object")
            d.merge(N, m.nodeType ? [m] : m);
          else if (!Ls.test(m))
            N.push(s.createTextNode(m));
          else {
            for (b = b || q.appendChild(s.createElement("div")), E = (sr.exec(m) || ["", ""])[1].toLowerCase(), _ = ut[E] || ut._default, b.innerHTML = _[1] + d.htmlPrefilter(m) + _[2], W = _[0]; W--; )
              b = b.lastChild;
            d.merge(N, b.childNodes), b = q.firstChild, b.textContent = "";
          }
      for (q.textContent = "", X = 0; m = N[X++]; ) {
        if (h && d.inArray(m, h) > -1) {
          f && f.push(m);
          continue;
        }
        if (L = fo(m), b = pt(q.appendChild(m), "script"), L && bn(b), l)
          for (W = 0; m = b[W++]; )
            ar.test(m.type || "") && l.push(m);
      }
      return q;
    }
    var lr = /^([^.]*)(?:\.(.+)|)/;
    function So() {
      return !0;
    }
    function To() {
      return !1;
    }
    function Zn(i, s, l, h, f, m) {
      var b, E;
      if (typeof s == "object") {
        typeof l != "string" && (h = h || l, l = void 0);
        for (E in s)
          Zn(i, E, l, h, s[E], m);
        return i;
      }
      if (h == null && f == null ? (f = l, h = l = void 0) : f == null && (typeof l == "string" ? (f = h, h = void 0) : (f = h, h = l, l = void 0)), f === !1)
        f = To;
      else if (!f)
        return i;
      return m === 1 && (b = f, f = function(_) {
        return d().off(_), b.apply(this, arguments);
      }, f.guid = b.guid || (b.guid = d.guid++)), i.each(function() {
        d.event.add(this, s, f, h, l);
      });
    }
    d.event = {
      global: {},
      add: function(i, s, l, h, f) {
        var m, b, E, _, L, W, q, N, X, ge, Ce, xe = ce.get(i);
        if (ze(i))
          for (l.handler && (m = l, l = m.handler, f = m.selector), f && d.find.matchesSelector(Qt, f), l.guid || (l.guid = d.guid++), (_ = xe.events) || (_ = xe.events = /* @__PURE__ */ Object.create(null)), (b = xe.handle) || (b = xe.handle = function(Xe) {
            return typeof d < "u" && d.event.triggered !== Xe.type ? d.event.dispatch.apply(i, arguments) : void 0;
          }), s = (s || "").match(Nt) || [""], L = s.length; L--; )
            E = lr.exec(s[L]) || [], X = Ce = E[1], ge = (E[2] || "").split(".").sort(), X && (q = d.event.special[X] || {}, X = (f ? q.delegateType : q.bindType) || X, q = d.event.special[X] || {}, W = d.extend({
              type: X,
              origType: Ce,
              data: h,
              handler: l,
              guid: l.guid,
              selector: f,
              needsContext: f && d.expr.match.needsContext.test(f),
              namespace: ge.join(".")
            }, m), (N = _[X]) || (N = _[X] = [], N.delegateCount = 0, (!q.setup || q.setup.call(i, h, ge, b) === !1) && i.addEventListener && i.addEventListener(X, b)), q.add && (q.add.call(i, W), W.handler.guid || (W.handler.guid = l.guid)), f ? N.splice(N.delegateCount++, 0, W) : N.push(W), d.event.global[X] = !0);
      },
      // Detach an event or set of events from an element
      remove: function(i, s, l, h, f) {
        var m, b, E, _, L, W, q, N, X, ge, Ce, xe = ce.hasData(i) && ce.get(i);
        if (!(!xe || !(_ = xe.events))) {
          for (s = (s || "").match(Nt) || [""], L = s.length; L--; ) {
            if (E = lr.exec(s[L]) || [], X = Ce = E[1], ge = (E[2] || "").split(".").sort(), !X) {
              for (X in _)
                d.event.remove(i, X + s[L], l, h, !0);
              continue;
            }
            for (q = d.event.special[X] || {}, X = (h ? q.delegateType : q.bindType) || X, N = _[X] || [], E = E[2] && new RegExp("(^|\\.)" + ge.join("\\.(?:.*\\.|)") + "(\\.|$)"), b = m = N.length; m--; )
              W = N[m], (f || Ce === W.origType) && (!l || l.guid === W.guid) && (!E || E.test(W.namespace)) && (!h || h === W.selector || h === "**" && W.selector) && (N.splice(m, 1), W.selector && N.delegateCount--, q.remove && q.remove.call(i, W));
            b && !N.length && ((!q.teardown || q.teardown.call(i, ge, xe.handle) === !1) && d.removeEvent(i, X, xe.handle), delete _[X]);
          }
          d.isEmptyObject(_) && ce.remove(i, "handle events");
        }
      },
      dispatch: function(i) {
        var s, l, h, f, m, b, E = new Array(arguments.length), _ = d.event.fix(i), L = (ce.get(this, "events") || /* @__PURE__ */ Object.create(null))[_.type] || [], W = d.event.special[_.type] || {};
        for (E[0] = _, s = 1; s < arguments.length; s++)
          E[s] = arguments[s];
        if (_.delegateTarget = this, !(W.preDispatch && W.preDispatch.call(this, _) === !1)) {
          for (b = d.event.handlers.call(this, _, L), s = 0; (f = b[s++]) && !_.isPropagationStopped(); )
            for (_.currentTarget = f.elem, l = 0; (m = f.handlers[l++]) && !_.isImmediatePropagationStopped(); )
              (!_.rnamespace || m.namespace === !1 || _.rnamespace.test(m.namespace)) && (_.handleObj = m, _.data = m.data, h = ((d.event.special[m.origType] || {}).handle || m.handler).apply(f.elem, E), h !== void 0 && (_.result = h) === !1 && (_.preventDefault(), _.stopPropagation()));
          return W.postDispatch && W.postDispatch.call(this, _), _.result;
        }
      },
      handlers: function(i, s) {
        var l, h, f, m, b, E = [], _ = s.delegateCount, L = i.target;
        if (_ && // Support: IE <=9
        // Black-hole SVG <use> instance trees (trac-13180)
        L.nodeType && // Support: Firefox <=42
        // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
        // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
        // Support: IE 11 only
        // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
        !(i.type === "click" && i.button >= 1)) {
          for (; L !== this; L = L.parentNode || this)
            if (L.nodeType === 1 && !(i.type === "click" && L.disabled === !0)) {
              for (m = [], b = {}, l = 0; l < _; l++)
                h = s[l], f = h.selector + " ", b[f] === void 0 && (b[f] = h.needsContext ? d(f, this).index(L) > -1 : d.find(f, this, null, [L]).length), b[f] && m.push(h);
              m.length && E.push({ elem: L, handlers: m });
            }
        }
        return L = this, _ < s.length && E.push({ elem: L, handlers: s.slice(_) }), E;
      },
      addProp: function(i, s) {
        Object.defineProperty(d.Event.prototype, i, {
          enumerable: !0,
          configurable: !0,
          get: M(s) ? function() {
            if (this.originalEvent)
              return s(this.originalEvent);
          } : function() {
            if (this.originalEvent)
              return this.originalEvent[i];
          },
          set: function(l) {
            Object.defineProperty(this, i, {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: l
            });
          }
        });
      },
      fix: function(i) {
        return i[d.expando] ? i : new d.Event(i);
      },
      special: {
        load: {
          // Prevent triggered image.load events from bubbling to window.load
          noBubble: !0
        },
        click: {
          // Utilize native event to ensure correct state for checkable inputs
          setup: function(i) {
            var s = this || i;
            return Co.test(s.type) && s.click && R(s, "input") && Fo(s, "click", !0), !1;
          },
          trigger: function(i) {
            var s = this || i;
            return Co.test(s.type) && s.click && R(s, "input") && Fo(s, "click"), !0;
          },
          // For cross-browser consistency, suppress native .click() on links
          // Also prevent it if we're currently inside a leveraged native-event stack
          _default: function(i) {
            var s = i.target;
            return Co.test(s.type) && s.click && R(s, "input") && ce.get(s, "click") || R(s, "a");
          }
        },
        beforeunload: {
          postDispatch: function(i) {
            i.result !== void 0 && i.originalEvent && (i.originalEvent.returnValue = i.result);
          }
        }
      }
    };
    function Fo(i, s, l) {
      if (!l) {
        ce.get(i, s) === void 0 && d.event.add(i, s, So);
        return;
      }
      ce.set(i, s, !1), d.event.add(i, s, {
        namespace: !1,
        handler: function(h) {
          var f, m = ce.get(this, s);
          if (h.isTrigger & 1 && this[s]) {
            if (m)
              (d.event.special[s] || {}).delegateType && h.stopPropagation();
            else if (m = a.call(arguments), ce.set(this, s, m), this[s](), f = ce.get(this, s), ce.set(this, s, !1), m !== f)
              return h.stopImmediatePropagation(), h.preventDefault(), f;
          } else
            m && (ce.set(this, s, d.event.trigger(
              m[0],
              m.slice(1),
              this
            )), h.stopPropagation(), h.isImmediatePropagationStopped = So);
        }
      });
    }
    d.removeEvent = function(i, s, l) {
      i.removeEventListener && i.removeEventListener(s, l);
    }, d.Event = function(i, s) {
      if (!(this instanceof d.Event))
        return new d.Event(i, s);
      i && i.type ? (this.originalEvent = i, this.type = i.type, this.isDefaultPrevented = i.defaultPrevented || i.defaultPrevented === void 0 && // Support: Android <=2.3 only
      i.returnValue === !1 ? So : To, this.target = i.target && i.target.nodeType === 3 ? i.target.parentNode : i.target, this.currentTarget = i.currentTarget, this.relatedTarget = i.relatedTarget) : this.type = i, s && d.extend(this, s), this.timeStamp = i && i.timeStamp || Date.now(), this[d.expando] = !0;
    }, d.Event.prototype = {
      constructor: d.Event,
      isDefaultPrevented: To,
      isPropagationStopped: To,
      isImmediatePropagationStopped: To,
      isSimulated: !1,
      preventDefault: function() {
        var i = this.originalEvent;
        this.isDefaultPrevented = So, i && !this.isSimulated && i.preventDefault();
      },
      stopPropagation: function() {
        var i = this.originalEvent;
        this.isPropagationStopped = So, i && !this.isSimulated && i.stopPropagation();
      },
      stopImmediatePropagation: function() {
        var i = this.originalEvent;
        this.isImmediatePropagationStopped = So, i && !this.isSimulated && i.stopImmediatePropagation(), this.stopPropagation();
      }
    }, d.each({
      altKey: !0,
      bubbles: !0,
      cancelable: !0,
      changedTouches: !0,
      ctrlKey: !0,
      detail: !0,
      eventPhase: !0,
      metaKey: !0,
      pageX: !0,
      pageY: !0,
      shiftKey: !0,
      view: !0,
      char: !0,
      code: !0,
      charCode: !0,
      key: !0,
      keyCode: !0,
      button: !0,
      buttons: !0,
      clientX: !0,
      clientY: !0,
      offsetX: !0,
      offsetY: !0,
      pointerId: !0,
      pointerType: !0,
      screenX: !0,
      screenY: !0,
      targetTouches: !0,
      toElement: !0,
      touches: !0,
      which: !0
    }, d.event.addProp), d.each({ focus: "focusin", blur: "focusout" }, function(i, s) {
      function l(h) {
        if (Y.documentMode) {
          var f = ce.get(this, "handle"), m = d.event.fix(h);
          m.type = h.type === "focusin" ? "focus" : "blur", m.isSimulated = !0, f(h), m.target === m.currentTarget && f(m);
        } else
          d.event.simulate(
            s,
            h.target,
            d.event.fix(h)
          );
      }
      d.event.special[i] = {
        // Utilize native event if possible so blur/focus sequence is correct
        setup: function() {
          var h;
          if (Fo(this, i, !0), Y.documentMode)
            h = ce.get(this, s), h || this.addEventListener(s, l), ce.set(this, s, (h || 0) + 1);
          else
            return !1;
        },
        trigger: function() {
          return Fo(this, i), !0;
        },
        teardown: function() {
          var h;
          if (Y.documentMode)
            h = ce.get(this, s) - 1, h ? ce.set(this, s, h) : (this.removeEventListener(s, l), ce.remove(this, s));
          else
            return !1;
        },
        // Suppress native focus or blur if we're currently inside
        // a leveraged native-event stack
        _default: function(h) {
          return ce.get(h.target, i);
        },
        delegateType: s
      }, d.event.special[s] = {
        setup: function() {
          var h = this.ownerDocument || this.document || this, f = Y.documentMode ? this : h, m = ce.get(f, s);
          m || (Y.documentMode ? this.addEventListener(s, l) : h.addEventListener(i, l, !0)), ce.set(f, s, (m || 0) + 1);
        },
        teardown: function() {
          var h = this.ownerDocument || this.document || this, f = Y.documentMode ? this : h, m = ce.get(f, s) - 1;
          m ? ce.set(f, s, m) : (Y.documentMode ? this.removeEventListener(s, l) : h.removeEventListener(i, l, !0), ce.remove(f, s));
        }
      };
    }), d.each({
      mouseenter: "mouseover",
      mouseleave: "mouseout",
      pointerenter: "pointerover",
      pointerleave: "pointerout"
    }, function(i, s) {
      d.event.special[i] = {
        delegateType: s,
        bindType: s,
        handle: function(l) {
          var h, f = this, m = l.relatedTarget, b = l.handleObj;
          return (!m || m !== f && !d.contains(f, m)) && (l.type = b.origType, h = b.handler.apply(this, arguments), l.type = s), h;
        }
      };
    }), d.fn.extend({
      on: function(i, s, l, h) {
        return Zn(this, i, s, l, h);
      },
      one: function(i, s, l, h) {
        return Zn(this, i, s, l, h, 1);
      },
      off: function(i, s, l) {
        var h, f;
        if (i && i.preventDefault && i.handleObj)
          return h = i.handleObj, d(i.delegateTarget).off(
            h.namespace ? h.origType + "." + h.namespace : h.origType,
            h.selector,
            h.handler
          ), this;
        if (typeof i == "object") {
          for (f in i)
            this.off(f, s, i[f]);
          return this;
        }
        return (s === !1 || typeof s == "function") && (l = s, s = void 0), l === !1 && (l = To), this.each(function() {
          d.event.remove(this, i, l, s);
        });
      }
    });
    var Kn = /<script|<style|<link/i, zr = /checked\s*(?:[^=]|=\s*.checked.)/i, no = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
    function Ii(i, s) {
      return R(i, "table") && R(s.nodeType !== 11 ? s : s.firstChild, "tr") && d(i).children("tbody")[0] || i;
    }
    function As(i) {
      return i.type = (i.getAttribute("type") !== null) + "/" + i.type, i;
    }
    function Wr(i) {
      return (i.type || "").slice(0, 5) === "true/" ? i.type = i.type.slice(5) : i.removeAttribute("type"), i;
    }
    function cr(i, s) {
      var l, h, f, m, b, E, _;
      if (s.nodeType === 1) {
        if (ce.hasData(i) && (m = ce.get(i), _ = m.events, _)) {
          ce.remove(s, "handle events");
          for (f in _)
            for (l = 0, h = _[f].length; l < h; l++)
              d.event.add(s, f, _[f][l]);
        }
        ot.hasData(i) && (b = ot.access(i), E = d.extend({}, b), ot.set(s, E));
      }
    }
    function Ur(i, s) {
      var l = s.nodeName.toLowerCase();
      l === "input" && Co.test(i.type) ? s.checked = i.checked : (l === "input" || l === "textarea") && (s.defaultValue = i.defaultValue);
    }
    function _o(i, s, l, h) {
      s = c(s);
      var f, m, b, E, _, L, W = 0, q = i.length, N = q - 1, X = s[0], ge = M(X);
      if (ge || q > 1 && typeof X == "string" && !k.checkClone && zr.test(X))
        return i.each(function(Ce) {
          var xe = i.eq(Ce);
          ge && (s[0] = X.call(this, Ce, xe.html())), _o(xe, s, l, h);
        });
      if (q && (f = Ue(s, i[0].ownerDocument, !1, i, h), m = f.firstChild, f.childNodes.length === 1 && (f = m), m || h)) {
        for (b = d.map(pt(f, "script"), As), E = b.length; W < q; W++)
          _ = f, W !== N && (_ = d.clone(_, !0, !0), E && d.merge(b, pt(_, "script"))), l.call(i[W], _, W);
        if (E)
          for (L = b[b.length - 1].ownerDocument, d.map(b, Wr), W = 0; W < E; W++)
            _ = b[W], ar.test(_.type || "") && !ce.access(_, "globalEval") && d.contains(L, _) && (_.src && (_.type || "").toLowerCase() !== "module" ? d._evalUrl && !_.noModule && d._evalUrl(_.src, {
              nonce: _.nonce || _.getAttribute("nonce")
            }, L) : F(_.textContent.replace(no, ""), _, L));
      }
      return i;
    }
    function Ni(i, s, l) {
      for (var h, f = s ? d.filter(s, i) : i, m = 0; (h = f[m]) != null; m++)
        !l && h.nodeType === 1 && d.cleanData(pt(h)), h.parentNode && (l && fo(h) && bn(pt(h, "script")), h.parentNode.removeChild(h));
      return i;
    }
    d.extend({
      htmlPrefilter: function(i) {
        return i;
      },
      clone: function(i, s, l) {
        var h, f, m, b, E = i.cloneNode(!0), _ = fo(i);
        if (!k.noCloneChecked && (i.nodeType === 1 || i.nodeType === 11) && !d.isXMLDoc(i))
          for (b = pt(E), m = pt(i), h = 0, f = m.length; h < f; h++)
            Ur(m[h], b[h]);
        if (s)
          if (l)
            for (m = m || pt(i), b = b || pt(E), h = 0, f = m.length; h < f; h++)
              cr(m[h], b[h]);
          else
            cr(i, E);
        return b = pt(E, "script"), b.length > 0 && bn(b, !_ && pt(i, "script")), E;
      },
      cleanData: function(i) {
        for (var s, l, h, f = d.event.special, m = 0; (l = i[m]) !== void 0; m++)
          if (ze(l)) {
            if (s = l[ce.expando]) {
              if (s.events)
                for (h in s.events)
                  f[h] ? d.event.remove(l, h) : d.removeEvent(l, h, s.handle);
              l[ce.expando] = void 0;
            }
            l[ot.expando] && (l[ot.expando] = void 0);
          }
      }
    }), d.fn.extend({
      detach: function(i) {
        return Ni(this, i, !0);
      },
      remove: function(i) {
        return Ni(this, i);
      },
      text: function(i) {
        return bt(this, function(s) {
          return s === void 0 ? d.text(this) : this.empty().each(function() {
            (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) && (this.textContent = s);
          });
        }, null, i, arguments.length);
      },
      append: function() {
        return _o(this, arguments, function(i) {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            var s = Ii(this, i);
            s.appendChild(i);
          }
        });
      },
      prepend: function() {
        return _o(this, arguments, function(i) {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            var s = Ii(this, i);
            s.insertBefore(i, s.firstChild);
          }
        });
      },
      before: function() {
        return _o(this, arguments, function(i) {
          this.parentNode && this.parentNode.insertBefore(i, this);
        });
      },
      after: function() {
        return _o(this, arguments, function(i) {
          this.parentNode && this.parentNode.insertBefore(i, this.nextSibling);
        });
      },
      empty: function() {
        for (var i, s = 0; (i = this[s]) != null; s++)
          i.nodeType === 1 && (d.cleanData(pt(i, !1)), i.textContent = "");
        return this;
      },
      clone: function(i, s) {
        return i = i ?? !1, s = s ?? i, this.map(function() {
          return d.clone(this, i, s);
        });
      },
      html: function(i) {
        return bt(this, function(s) {
          var l = this[0] || {}, h = 0, f = this.length;
          if (s === void 0 && l.nodeType === 1)
            return l.innerHTML;
          if (typeof s == "string" && !Kn.test(s) && !ut[(sr.exec(s) || ["", ""])[1].toLowerCase()]) {
            s = d.htmlPrefilter(s);
            try {
              for (; h < f; h++)
                l = this[h] || {}, l.nodeType === 1 && (d.cleanData(pt(l, !1)), l.innerHTML = s);
              l = 0;
            } catch {
            }
          }
          l && this.empty().append(s);
        }, null, i, arguments.length);
      },
      replaceWith: function() {
        var i = [];
        return _o(this, arguments, function(s) {
          var l = this.parentNode;
          d.inArray(this, i) < 0 && (d.cleanData(pt(this)), l && l.replaceChild(s, this));
        }, i);
      }
    }), d.each({
      appendTo: "append",
      prependTo: "prepend",
      insertBefore: "before",
      insertAfter: "after",
      replaceAll: "replaceWith"
    }, function(i, s) {
      d.fn[i] = function(l) {
        for (var h, f = [], m = d(l), b = m.length - 1, E = 0; E <= b; E++)
          h = E === b ? this : this.clone(!0), d(m[E])[s](h), u.apply(f, h.get());
        return this.pushStack(f);
      };
    });
    var Xn = new RegExp("^(" + Jt + ")(?!px)[a-z%]+$", "i"), Jn = /^--/, nn = function(i) {
      var s = i.ownerDocument.defaultView;
      return (!s || !s.opener) && (s = e), s.getComputedStyle(i);
    }, rn = function(i, s, l) {
      var h, f, m = {};
      for (f in s)
        m[f] = i.style[f], i.style[f] = s[f];
      h = l.call(i);
      for (f in s)
        i.style[f] = m[f];
      return h;
    }, qr = new RegExp(Ut.join("|"), "i");
    (function() {
      function i() {
        if (L) {
          _.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", L.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", Qt.appendChild(_).appendChild(L);
          var W = e.getComputedStyle(L);
          l = W.top !== "1%", E = s(W.marginLeft) === 12, L.style.right = "60%", m = s(W.right) === 36, h = s(W.width) === 36, L.style.position = "absolute", f = s(L.offsetWidth / 3) === 12, Qt.removeChild(_), L = null;
        }
      }
      function s(W) {
        return Math.round(parseFloat(W));
      }
      var l, h, f, m, b, E, _ = Y.createElement("div"), L = Y.createElement("div");
      L.style && (L.style.backgroundClip = "content-box", L.cloneNode(!0).style.backgroundClip = "", k.clearCloneStyle = L.style.backgroundClip === "content-box", d.extend(k, {
        boxSizingReliable: function() {
          return i(), h;
        },
        pixelBoxStyles: function() {
          return i(), m;
        },
        pixelPosition: function() {
          return i(), l;
        },
        reliableMarginLeft: function() {
          return i(), E;
        },
        scrollboxSize: function() {
          return i(), f;
        },
        // Support: IE 9 - 11+, Edge 15 - 18+
        // IE/Edge misreport `getComputedStyle` of table rows with width/height
        // set in CSS while `offset*` properties report correct values.
        // Behavior in IE 9 is more subtle than in newer versions & it passes
        // some versions of this test; make sure not to make it pass there!
        //
        // Support: Firefox 70+
        // Only Firefox includes border widths
        // in computed dimensions. (gh-4529)
        reliableTrDimensions: function() {
          var W, q, N, X;
          return b == null && (W = Y.createElement("table"), q = Y.createElement("tr"), N = Y.createElement("div"), W.style.cssText = "position:absolute;left:-11111px;border-collapse:separate", q.style.cssText = "box-sizing:content-box;border:1px solid", q.style.height = "1px", N.style.height = "9px", N.style.display = "block", Qt.appendChild(W).appendChild(q).appendChild(N), X = e.getComputedStyle(q), b = parseInt(X.height, 10) + parseInt(X.borderTopWidth, 10) + parseInt(X.borderBottomWidth, 10) === q.offsetHeight, Qt.removeChild(W)), b;
        }
      }));
    })();
    function Ao(i, s, l) {
      var h, f, m, b, E = Jn.test(s), _ = i.style;
      return l = l || nn(i), l && (b = l.getPropertyValue(s) || l[s], E && b && (b = b.replace(se, "$1") || void 0), b === "" && !fo(i) && (b = d.style(i, s)), !k.pixelBoxStyles() && Xn.test(b) && qr.test(s) && (h = _.width, f = _.minWidth, m = _.maxWidth, _.minWidth = _.maxWidth = _.width = b, b = l.width, _.width = h, _.minWidth = f, _.maxWidth = m)), b !== void 0 ? (
        // Support: IE <=9 - 11 only
        // IE returns zIndex value as an integer.
        b + ""
      ) : b;
    }
    function dr(i, s) {
      return {
        get: function() {
          if (i()) {
            delete this.get;
            return;
          }
          return (this.get = s).apply(this, arguments);
        }
      };
    }
    var hr = ["Webkit", "Moz", "ms"], ur = Y.createElement("div").style, pr = {};
    function Bs(i) {
      for (var s = i[0].toUpperCase() + i.slice(1), l = hr.length; l--; )
        if (i = hr[l] + s, i in ur)
          return i;
    }
    function Qn(i) {
      var s = d.cssProps[i] || pr[i];
      return s || (i in ur ? i : pr[i] = Bs(i) || i);
    }
    var Rs = /^(none|table(?!-c[ea]).+)/, vn = { position: "absolute", visibility: "hidden", display: "block" }, Pi = {
      letterSpacing: "0",
      fontWeight: "400"
    };
    function fr(i, s, l) {
      var h = Lo.exec(s);
      return h ? (
        // Guard against undefined "subtract", e.g., when used as in cssHooks
        Math.max(0, h[2] - (l || 0)) + (h[3] || "px")
      ) : s;
    }
    function ei(i, s, l, h, f, m) {
      var b = s === "width" ? 1 : 0, E = 0, _ = 0, L = 0;
      if (l === (h ? "border" : "content"))
        return 0;
      for (; b < 4; b += 2)
        l === "margin" && (L += d.css(i, l + Ut[b], !0, f)), h ? (l === "content" && (_ -= d.css(i, "padding" + Ut[b], !0, f)), l !== "margin" && (_ -= d.css(i, "border" + Ut[b] + "Width", !0, f))) : (_ += d.css(i, "padding" + Ut[b], !0, f), l !== "padding" ? _ += d.css(i, "border" + Ut[b] + "Width", !0, f) : E += d.css(i, "border" + Ut[b] + "Width", !0, f));
      return !h && m >= 0 && (_ += Math.max(0, Math.ceil(
        i["offset" + s[0].toUpperCase() + s.slice(1)] - m - _ - E - 0.5
        // If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
        // Use an explicit zero to avoid NaN (gh-3964)
      )) || 0), _ + L;
    }
    function mr(i, s, l) {
      var h = nn(i), f = !k.boxSizingReliable() || l, m = f && d.css(i, "boxSizing", !1, h) === "border-box", b = m, E = Ao(i, s, h), _ = "offset" + s[0].toUpperCase() + s.slice(1);
      if (Xn.test(E)) {
        if (!l)
          return E;
        E = "auto";
      }
      return (!k.boxSizingReliable() && m || // Support: IE 10 - 11+, Edge 15 - 18+
      // IE/Edge misreport `getComputedStyle` of table rows with width/height
      // set in CSS while `offset*` properties report correct values.
      // Interestingly, in some cases IE 9 doesn't suffer from this issue.
      !k.reliableTrDimensions() && R(i, "tr") || // Fall back to offsetWidth/offsetHeight when value is "auto"
      // This happens for inline elements with no explicit setting (gh-3571)
      E === "auto" || // Support: Android <=4.1 - 4.3 only
      // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
      !parseFloat(E) && d.css(i, "display", !1, h) === "inline") && // Make sure the element is visible & connected
      i.getClientRects().length && (m = d.css(i, "boxSizing", !1, h) === "border-box", b = _ in i, b && (E = i[_])), E = parseFloat(E) || 0, E + ei(
        i,
        s,
        l || (m ? "border" : "content"),
        b,
        h,
        // Provide the current computed size to request scroll gutter calculation (gh-3589)
        E
      ) + "px";
    }
    d.extend({
      // Add in style property hooks for overriding the default
      // behavior of getting and setting a style property
      cssHooks: {
        opacity: {
          get: function(i, s) {
            if (s) {
              var l = Ao(i, "opacity");
              return l === "" ? "1" : l;
            }
          }
        }
      },
      // Don't automatically add "px" to these possibly-unitless properties
      cssNumber: {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageSlice: !0,
        columnCount: !0,
        flexGrow: !0,
        flexShrink: !0,
        fontWeight: !0,
        gridArea: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnStart: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowStart: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        scale: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        // SVG-related
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0
      },
      // Add in properties whose names you wish to fix before
      // setting or getting the value
      cssProps: {},
      // Get and set the style property on a DOM Node
      style: function(i, s, l, h) {
        if (!(!i || i.nodeType === 3 || i.nodeType === 8 || !i.style)) {
          var f, m, b, E = Pt(s), _ = Jn.test(s), L = i.style;
          if (_ || (s = Qn(E)), b = d.cssHooks[s] || d.cssHooks[E], l !== void 0) {
            if (m = typeof l, m === "string" && (f = Lo.exec(l)) && f[1] && (l = rr(i, s, f), m = "number"), l == null || l !== l)
              return;
            m === "number" && !_ && (l += f && f[3] || (d.cssNumber[E] ? "" : "px")), !k.clearCloneStyle && l === "" && s.indexOf("background") === 0 && (L[s] = "inherit"), (!b || !("set" in b) || (l = b.set(i, l, h)) !== void 0) && (_ ? L.setProperty(s, l) : L[s] = l);
          } else
            return b && "get" in b && (f = b.get(i, !1, h)) !== void 0 ? f : L[s];
        }
      },
      css: function(i, s, l, h) {
        var f, m, b, E = Pt(s), _ = Jn.test(s);
        return _ || (s = Qn(E)), b = d.cssHooks[s] || d.cssHooks[E], b && "get" in b && (f = b.get(i, !0, l)), f === void 0 && (f = Ao(i, s, h)), f === "normal" && s in Pi && (f = Pi[s]), l === "" || l ? (m = parseFloat(f), l === !0 || isFinite(m) ? m || 0 : f) : f;
      }
    }), d.each(["height", "width"], function(i, s) {
      d.cssHooks[s] = {
        get: function(l, h, f) {
          if (h)
            return Rs.test(d.css(l, "display")) && // Support: Safari 8+
            // Table columns in Safari have non-zero offsetWidth & zero
            // getBoundingClientRect().width unless display is changed.
            // Support: IE <=11 only
            // Running getBoundingClientRect on a disconnected node
            // in IE throws an error.
            (!l.getClientRects().length || !l.getBoundingClientRect().width) ? rn(l, vn, function() {
              return mr(l, s, f);
            }) : mr(l, s, f);
        },
        set: function(l, h, f) {
          var m, b = nn(l), E = !k.scrollboxSize() && b.position === "absolute", _ = E || f, L = _ && d.css(l, "boxSizing", !1, b) === "border-box", W = f ? ei(
            l,
            s,
            f,
            L,
            b
          ) : 0;
          return L && E && (W -= Math.ceil(
            l["offset" + s[0].toUpperCase() + s.slice(1)] - parseFloat(b[s]) - ei(l, s, "border", !1, b) - 0.5
          )), W && (m = Lo.exec(h)) && (m[3] || "px") !== "px" && (l.style[s] = h, h = d.css(l, s)), fr(l, h, W);
        }
      };
    }), d.cssHooks.marginLeft = dr(
      k.reliableMarginLeft,
      function(i, s) {
        if (s)
          return (parseFloat(Ao(i, "marginLeft")) || i.getBoundingClientRect().left - rn(i, { marginLeft: 0 }, function() {
            return i.getBoundingClientRect().left;
          })) + "px";
      }
    ), d.each({
      margin: "",
      padding: "",
      border: "Width"
    }, function(i, s) {
      d.cssHooks[i + s] = {
        expand: function(l) {
          for (var h = 0, f = {}, m = typeof l == "string" ? l.split(" ") : [l]; h < 4; h++)
            f[i + Ut[h] + s] = m[h] || m[h - 2] || m[0];
          return f;
        }
      }, i !== "margin" && (d.cssHooks[i + s].set = fr);
    }), d.fn.extend({
      css: function(i, s) {
        return bt(this, function(l, h, f) {
          var m, b, E = {}, _ = 0;
          if (Array.isArray(h)) {
            for (m = nn(l), b = h.length; _ < b; _++)
              E[h[_]] = d.css(l, h[_], !1, m);
            return E;
          }
          return f !== void 0 ? d.style(l, h, f) : d.css(l, h);
        }, i, s, arguments.length > 1);
      }
    });
    function ft(i, s, l, h, f) {
      return new ft.prototype.init(i, s, l, h, f);
    }
    d.Tween = ft, ft.prototype = {
      constructor: ft,
      init: function(i, s, l, h, f, m) {
        this.elem = i, this.prop = l, this.easing = f || d.easing._default, this.options = s, this.start = this.now = this.cur(), this.end = h, this.unit = m || (d.cssNumber[l] ? "" : "px");
      },
      cur: function() {
        var i = ft.propHooks[this.prop];
        return i && i.get ? i.get(this) : ft.propHooks._default.get(this);
      },
      run: function(i) {
        var s, l = ft.propHooks[this.prop];
        return this.options.duration ? this.pos = s = d.easing[this.easing](
          i,
          this.options.duration * i,
          0,
          1,
          this.options.duration
        ) : this.pos = s = i, this.now = (this.end - this.start) * s + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), l && l.set ? l.set(this) : ft.propHooks._default.set(this), this;
      }
    }, ft.prototype.init.prototype = ft.prototype, ft.propHooks = {
      _default: {
        get: function(i) {
          var s;
          return i.elem.nodeType !== 1 || i.elem[i.prop] != null && i.elem.style[i.prop] == null ? i.elem[i.prop] : (s = d.css(i.elem, i.prop, ""), !s || s === "auto" ? 0 : s);
        },
        set: function(i) {
          d.fx.step[i.prop] ? d.fx.step[i.prop](i) : i.elem.nodeType === 1 && (d.cssHooks[i.prop] || i.elem.style[Qn(i.prop)] != null) ? d.style(i.elem, i.prop, i.now + i.unit) : i.elem[i.prop] = i.now;
        }
      }
    }, ft.propHooks.scrollTop = ft.propHooks.scrollLeft = {
      set: function(i) {
        i.elem.nodeType && i.elem.parentNode && (i.elem[i.prop] = i.now);
      }
    }, d.easing = {
      linear: function(i) {
        return i;
      },
      swing: function(i) {
        return 0.5 - Math.cos(i * Math.PI) / 2;
      },
      _default: "swing"
    }, d.fx = ft.prototype.init, d.fx.step = {};
    var Eo, yn, Is = /^(?:toggle|show|hide)$/, Ns = /queueHooks$/;
    function ti() {
      yn && (Y.hidden === !1 && e.requestAnimationFrame ? e.requestAnimationFrame(ti) : e.setTimeout(ti, d.fx.interval), d.fx.tick());
    }
    function Hi() {
      return e.setTimeout(function() {
        Eo = void 0;
      }), Eo = Date.now();
    }
    function wn(i, s) {
      var l, h = 0, f = { height: i };
      for (s = s ? 1 : 0; h < 4; h += 2 - s)
        l = Ut[h], f["margin" + l] = f["padding" + l] = i;
      return s && (f.opacity = f.width = i), f;
    }
    function gr(i, s, l) {
      for (var h, f = (_t.tweeners[s] || []).concat(_t.tweeners["*"]), m = 0, b = f.length; m < b; m++)
        if (h = f[m].call(l, s, i))
          return h;
    }
    function Ps(i, s, l) {
      var h, f, m, b, E, _, L, W, q = "width" in s || "height" in s, N = this, X = {}, ge = i.style, Ce = i.nodeType && gn(i), xe = ce.get(i, "fxshow");
      l.queue || (b = d._queueHooks(i, "fx"), b.unqueued == null && (b.unqueued = 0, E = b.empty.fire, b.empty.fire = function() {
        b.unqueued || E();
      }), b.unqueued++, N.always(function() {
        N.always(function() {
          b.unqueued--, d.queue(i, "fx").length || b.empty.fire();
        });
      }));
      for (h in s)
        if (f = s[h], Is.test(f)) {
          if (delete s[h], m = m || f === "toggle", f === (Ce ? "hide" : "show"))
            if (f === "show" && xe && xe[h] !== void 0)
              Ce = !0;
            else
              continue;
          X[h] = xe && xe[h] || d.style(i, h);
        }
      if (_ = !d.isEmptyObject(s), !(!_ && d.isEmptyObject(X))) {
        q && i.nodeType === 1 && (l.overflow = [ge.overflow, ge.overflowX, ge.overflowY], L = xe && xe.display, L == null && (L = ce.get(i, "display")), W = d.css(i, "display"), W === "none" && (L ? W = L : (xo([i], !0), L = i.style.display || L, W = d.css(i, "display"), xo([i]))), (W === "inline" || W === "inline-block" && L != null) && d.css(i, "float") === "none" && (_ || (N.done(function() {
          ge.display = L;
        }), L == null && (W = ge.display, L = W === "none" ? "" : W)), ge.display = "inline-block")), l.overflow && (ge.overflow = "hidden", N.always(function() {
          ge.overflow = l.overflow[0], ge.overflowX = l.overflow[1], ge.overflowY = l.overflow[2];
        })), _ = !1;
        for (h in X)
          _ || (xe ? "hidden" in xe && (Ce = xe.hidden) : xe = ce.access(i, "fxshow", { display: L }), m && (xe.hidden = !Ce), Ce && xo([i], !0), N.done(function() {
            Ce || xo([i]), ce.remove(i, "fxshow");
            for (h in X)
              d.style(i, h, X[h]);
          })), _ = gr(Ce ? xe[h] : 0, h, N), h in xe || (xe[h] = _.start, Ce && (_.end = _.start, _.start = 0));
      }
    }
    function Pn(i, s) {
      var l, h, f, m, b;
      for (l in i)
        if (h = Pt(l), f = s[h], m = i[l], Array.isArray(m) && (f = m[1], m = i[l] = m[0]), l !== h && (i[h] = m, delete i[l]), b = d.cssHooks[h], b && "expand" in b) {
          m = b.expand(m), delete i[h];
          for (l in m)
            l in i || (i[l] = m[l], s[l] = f);
        } else
          s[h] = f;
    }
    function _t(i, s, l) {
      var h, f, m = 0, b = _t.prefilters.length, E = d.Deferred().always(function() {
        delete _.elem;
      }), _ = function() {
        if (f)
          return !1;
        for (var q = Eo || Hi(), N = Math.max(0, L.startTime + L.duration - q), X = N / L.duration || 0, ge = 1 - X, Ce = 0, xe = L.tweens.length; Ce < xe; Ce++)
          L.tweens[Ce].run(ge);
        return E.notifyWith(i, [L, ge, N]), ge < 1 && xe ? N : (xe || E.notifyWith(i, [L, 1, 0]), E.resolveWith(i, [L]), !1);
      }, L = E.promise({
        elem: i,
        props: d.extend({}, s),
        opts: d.extend(!0, {
          specialEasing: {},
          easing: d.easing._default
        }, l),
        originalProperties: s,
        originalOptions: l,
        startTime: Eo || Hi(),
        duration: l.duration,
        tweens: [],
        createTween: function(q, N) {
          var X = d.Tween(
            i,
            L.opts,
            q,
            N,
            L.opts.specialEasing[q] || L.opts.easing
          );
          return L.tweens.push(X), X;
        },
        stop: function(q) {
          var N = 0, X = q ? L.tweens.length : 0;
          if (f)
            return this;
          for (f = !0; N < X; N++)
            L.tweens[N].run(1);
          return q ? (E.notifyWith(i, [L, 1, 0]), E.resolveWith(i, [L, q])) : E.rejectWith(i, [L, q]), this;
        }
      }), W = L.props;
      for (Pn(W, L.opts.specialEasing); m < b; m++)
        if (h = _t.prefilters[m].call(L, i, W, L.opts), h)
          return M(h.stop) && (d._queueHooks(L.elem, L.opts.queue).stop = h.stop.bind(h)), h;
      return d.map(W, gr, L), M(L.opts.start) && L.opts.start.call(i, L), L.progress(L.opts.progress).done(L.opts.done, L.opts.complete).fail(L.opts.fail).always(L.opts.always), d.fx.timer(
        d.extend(_, {
          elem: i,
          anim: L,
          queue: L.opts.queue
        })
      ), L;
    }
    d.Animation = d.extend(_t, {
      tweeners: {
        "*": [function(i, s) {
          var l = this.createTween(i, s);
          return rr(l.elem, i, Lo.exec(s), l), l;
        }]
      },
      tweener: function(i, s) {
        M(i) ? (s = i, i = ["*"]) : i = i.match(Nt);
        for (var l, h = 0, f = i.length; h < f; h++)
          l = i[h], _t.tweeners[l] = _t.tweeners[l] || [], _t.tweeners[l].unshift(s);
      },
      prefilters: [Ps],
      prefilter: function(i, s) {
        s ? _t.prefilters.unshift(i) : _t.prefilters.push(i);
      }
    }), d.speed = function(i, s, l) {
      var h = i && typeof i == "object" ? d.extend({}, i) : {
        complete: l || !l && s || M(i) && i,
        duration: i,
        easing: l && s || s && !M(s) && s
      };
      return d.fx.off ? h.duration = 0 : typeof h.duration != "number" && (h.duration in d.fx.speeds ? h.duration = d.fx.speeds[h.duration] : h.duration = d.fx.speeds._default), (h.queue == null || h.queue === !0) && (h.queue = "fx"), h.old = h.complete, h.complete = function() {
        M(h.old) && h.old.call(this), h.queue && d.dequeue(this, h.queue);
      }, h;
    }, d.fn.extend({
      fadeTo: function(i, s, l, h) {
        return this.filter(gn).css("opacity", 0).show().end().animate({ opacity: s }, i, l, h);
      },
      animate: function(i, s, l, h) {
        var f = d.isEmptyObject(i), m = d.speed(s, l, h), b = function() {
          var E = _t(this, d.extend({}, i), m);
          (f || ce.get(this, "finish")) && E.stop(!0);
        };
        return b.finish = b, f || m.queue === !1 ? this.each(b) : this.queue(m.queue, b);
      },
      stop: function(i, s, l) {
        var h = function(f) {
          var m = f.stop;
          delete f.stop, m(l);
        };
        return typeof i != "string" && (l = s, s = i, i = void 0), s && this.queue(i || "fx", []), this.each(function() {
          var f = !0, m = i != null && i + "queueHooks", b = d.timers, E = ce.get(this);
          if (m)
            E[m] && E[m].stop && h(E[m]);
          else
            for (m in E)
              E[m] && E[m].stop && Ns.test(m) && h(E[m]);
          for (m = b.length; m--; )
            b[m].elem === this && (i == null || b[m].queue === i) && (b[m].anim.stop(l), f = !1, b.splice(m, 1));
          (f || !l) && d.dequeue(this, i);
        });
      },
      finish: function(i) {
        return i !== !1 && (i = i || "fx"), this.each(function() {
          var s, l = ce.get(this), h = l[i + "queue"], f = l[i + "queueHooks"], m = d.timers, b = h ? h.length : 0;
          for (l.finish = !0, d.queue(this, i, []), f && f.stop && f.stop.call(this, !0), s = m.length; s--; )
            m[s].elem === this && m[s].queue === i && (m[s].anim.stop(!0), m.splice(s, 1));
          for (s = 0; s < b; s++)
            h[s] && h[s].finish && h[s].finish.call(this);
          delete l.finish;
        });
      }
    }), d.each(["toggle", "show", "hide"], function(i, s) {
      var l = d.fn[s];
      d.fn[s] = function(h, f, m) {
        return h == null || typeof h == "boolean" ? l.apply(this, arguments) : this.animate(wn(s, !0), h, f, m);
      };
    }), d.each({
      slideDown: wn("show"),
      slideUp: wn("hide"),
      slideToggle: wn("toggle"),
      fadeIn: { opacity: "show" },
      fadeOut: { opacity: "hide" },
      fadeToggle: { opacity: "toggle" }
    }, function(i, s) {
      d.fn[i] = function(l, h, f) {
        return this.animate(s, l, h, f);
      };
    }), d.timers = [], d.fx.tick = function() {
      var i, s = 0, l = d.timers;
      for (Eo = Date.now(); s < l.length; s++)
        i = l[s], !i() && l[s] === i && l.splice(s--, 1);
      l.length || d.fx.stop(), Eo = void 0;
    }, d.fx.timer = function(i) {
      d.timers.push(i), d.fx.start();
    }, d.fx.interval = 13, d.fx.start = function() {
      yn || (yn = !0, ti());
    }, d.fx.stop = function() {
      yn = null;
    }, d.fx.speeds = {
      slow: 600,
      fast: 200,
      // Default speed
      _default: 400
    }, d.fn.delay = function(i, s) {
      return i = d.fx && d.fx.speeds[i] || i, s = s || "fx", this.queue(s, function(l, h) {
        var f = e.setTimeout(l, i);
        h.stop = function() {
          e.clearTimeout(f);
        };
      });
    }, function() {
      var i = Y.createElement("input"), s = Y.createElement("select"), l = s.appendChild(Y.createElement("option"));
      i.type = "checkbox", k.checkOn = i.value !== "", k.optSelected = l.selected, i = Y.createElement("input"), i.value = "t", i.type = "radio", k.radioValue = i.value === "t";
    }();
    var br, zo = d.expr.attrHandle;
    d.fn.extend({
      attr: function(i, s) {
        return bt(this, d.attr, i, s, arguments.length > 1);
      },
      removeAttr: function(i) {
        return this.each(function() {
          d.removeAttr(this, i);
        });
      }
    }), d.extend({
      attr: function(i, s, l) {
        var h, f, m = i.nodeType;
        if (!(m === 3 || m === 8 || m === 2)) {
          if (typeof i.getAttribute > "u")
            return d.prop(i, s, l);
          if ((m !== 1 || !d.isXMLDoc(i)) && (f = d.attrHooks[s.toLowerCase()] || (d.expr.match.bool.test(s) ? br : void 0)), l !== void 0) {
            if (l === null) {
              d.removeAttr(i, s);
              return;
            }
            return f && "set" in f && (h = f.set(i, l, s)) !== void 0 ? h : (i.setAttribute(s, l + ""), l);
          }
          return f && "get" in f && (h = f.get(i, s)) !== null ? h : (h = d.find.attr(i, s), h ?? void 0);
        }
      },
      attrHooks: {
        type: {
          set: function(i, s) {
            if (!k.radioValue && s === "radio" && R(i, "input")) {
              var l = i.value;
              return i.setAttribute("type", s), l && (i.value = l), s;
            }
          }
        }
      },
      removeAttr: function(i, s) {
        var l, h = 0, f = s && s.match(Nt);
        if (f && i.nodeType === 1)
          for (; l = f[h++]; )
            i.removeAttribute(l);
      }
    }), br = {
      set: function(i, s, l) {
        return s === !1 ? d.removeAttr(i, l) : i.setAttribute(l, l), l;
      }
    }, d.each(d.expr.match.bool.source.match(/\w+/g), function(i, s) {
      var l = zo[s] || d.find.attr;
      zo[s] = function(h, f, m) {
        var b, E, _ = f.toLowerCase();
        return m || (E = zo[_], zo[_] = b, b = l(h, f, m) != null ? _ : null, zo[_] = E), b;
      };
    });
    var Hs = /^(?:input|select|textarea|button)$/i, js = /^(?:a|area)$/i;
    d.fn.extend({
      prop: function(i, s) {
        return bt(this, d.prop, i, s, arguments.length > 1);
      },
      removeProp: function(i) {
        return this.each(function() {
          delete this[d.propFix[i] || i];
        });
      }
    }), d.extend({
      prop: function(i, s, l) {
        var h, f, m = i.nodeType;
        if (!(m === 3 || m === 8 || m === 2))
          return (m !== 1 || !d.isXMLDoc(i)) && (s = d.propFix[s] || s, f = d.propHooks[s]), l !== void 0 ? f && "set" in f && (h = f.set(i, l, s)) !== void 0 ? h : i[s] = l : f && "get" in f && (h = f.get(i, s)) !== null ? h : i[s];
      },
      propHooks: {
        tabIndex: {
          get: function(i) {
            var s = d.find.attr(i, "tabindex");
            return s ? parseInt(s, 10) : Hs.test(i.nodeName) || js.test(i.nodeName) && i.href ? 0 : -1;
          }
        }
      },
      propFix: {
        for: "htmlFor",
        class: "className"
      }
    }), k.optSelected || (d.propHooks.selected = {
      get: function(i) {
        var s = i.parentNode;
        return s && s.parentNode && s.parentNode.selectedIndex, null;
      },
      set: function(i) {
        var s = i.parentNode;
        s && (s.selectedIndex, s.parentNode && s.parentNode.selectedIndex);
      }
    }), d.each([
      "tabIndex",
      "readOnly",
      "maxLength",
      "cellSpacing",
      "cellPadding",
      "rowSpan",
      "colSpan",
      "useMap",
      "frameBorder",
      "contentEditable"
    ], function() {
      d.propFix[this.toLowerCase()] = this;
    });
    function so(i) {
      var s = i.match(Nt) || [];
      return s.join(" ");
    }
    function ao(i) {
      return i.getAttribute && i.getAttribute("class") || "";
    }
    function kn(i) {
      return Array.isArray(i) ? i : typeof i == "string" ? i.match(Nt) || [] : [];
    }
    d.fn.extend({
      addClass: function(i) {
        var s, l, h, f, m, b;
        return M(i) ? this.each(function(E) {
          d(this).addClass(i.call(this, E, ao(this)));
        }) : (s = kn(i), s.length ? this.each(function() {
          if (h = ao(this), l = this.nodeType === 1 && " " + so(h) + " ", l) {
            for (m = 0; m < s.length; m++)
              f = s[m], l.indexOf(" " + f + " ") < 0 && (l += f + " ");
            b = so(l), h !== b && this.setAttribute("class", b);
          }
        }) : this);
      },
      removeClass: function(i) {
        var s, l, h, f, m, b;
        return M(i) ? this.each(function(E) {
          d(this).removeClass(i.call(this, E, ao(this)));
        }) : arguments.length ? (s = kn(i), s.length ? this.each(function() {
          if (h = ao(this), l = this.nodeType === 1 && " " + so(h) + " ", l) {
            for (m = 0; m < s.length; m++)
              for (f = s[m]; l.indexOf(" " + f + " ") > -1; )
                l = l.replace(" " + f + " ", " ");
            b = so(l), h !== b && this.setAttribute("class", b);
          }
        }) : this) : this.attr("class", "");
      },
      toggleClass: function(i, s) {
        var l, h, f, m, b = typeof i, E = b === "string" || Array.isArray(i);
        return M(i) ? this.each(function(_) {
          d(this).toggleClass(
            i.call(this, _, ao(this), s),
            s
          );
        }) : typeof s == "boolean" && E ? s ? this.addClass(i) : this.removeClass(i) : (l = kn(i), this.each(function() {
          if (E)
            for (m = d(this), f = 0; f < l.length; f++)
              h = l[f], m.hasClass(h) ? m.removeClass(h) : m.addClass(h);
          else
            (i === void 0 || b === "boolean") && (h = ao(this), h && ce.set(this, "__className__", h), this.setAttribute && this.setAttribute(
              "class",
              h || i === !1 ? "" : ce.get(this, "__className__") || ""
            ));
        }));
      },
      hasClass: function(i) {
        var s, l, h = 0;
        for (s = " " + i + " "; l = this[h++]; )
          if (l.nodeType === 1 && (" " + so(ao(l)) + " ").indexOf(s) > -1)
            return !0;
        return !1;
      }
    });
    var Vr = /\r/g;
    d.fn.extend({
      val: function(i) {
        var s, l, h, f = this[0];
        return arguments.length ? (h = M(i), this.each(function(m) {
          var b;
          this.nodeType === 1 && (h ? b = i.call(this, m, d(this).val()) : b = i, b == null ? b = "" : typeof b == "number" ? b += "" : Array.isArray(b) && (b = d.map(b, function(E) {
            return E == null ? "" : E + "";
          })), s = d.valHooks[this.type] || d.valHooks[this.nodeName.toLowerCase()], (!s || !("set" in s) || s.set(this, b, "value") === void 0) && (this.value = b));
        })) : f ? (s = d.valHooks[f.type] || d.valHooks[f.nodeName.toLowerCase()], s && "get" in s && (l = s.get(f, "value")) !== void 0 ? l : (l = f.value, typeof l == "string" ? l.replace(Vr, "") : l ?? "")) : void 0;
      }
    }), d.extend({
      valHooks: {
        option: {
          get: function(i) {
            var s = d.find.attr(i, "value");
            return s ?? // Support: IE <=10 - 11 only
            // option.text throws exceptions (trac-14686, trac-14858)
            // Strip and collapse whitespace
            // https://html.spec.whatwg.org/#strip-and-collapse-whitespace
            so(d.text(i));
          }
        },
        select: {
          get: function(i) {
            var s, l, h, f = i.options, m = i.selectedIndex, b = i.type === "select-one", E = b ? null : [], _ = b ? m + 1 : f.length;
            for (m < 0 ? h = _ : h = b ? m : 0; h < _; h++)
              if (l = f[h], (l.selected || h === m) && // Don't return options that are disabled or in a disabled optgroup
              !l.disabled && (!l.parentNode.disabled || !R(l.parentNode, "optgroup"))) {
                if (s = d(l).val(), b)
                  return s;
                E.push(s);
              }
            return E;
          },
          set: function(i, s) {
            for (var l, h, f = i.options, m = d.makeArray(s), b = f.length; b--; )
              h = f[b], (h.selected = d.inArray(d.valHooks.option.get(h), m) > -1) && (l = !0);
            return l || (i.selectedIndex = -1), m;
          }
        }
      }
    }), d.each(["radio", "checkbox"], function() {
      d.valHooks[this] = {
        set: function(i, s) {
          if (Array.isArray(s))
            return i.checked = d.inArray(d(i).val(), s) > -1;
        }
      }, k.checkOn || (d.valHooks[this].get = function(i) {
        return i.getAttribute("value") === null ? "on" : i.value;
      });
    });
    var Bo = e.location, vr = { guid: Date.now() }, Wo = /\?/;
    d.parseXML = function(i) {
      var s, l;
      if (!i || typeof i != "string")
        return null;
      try {
        s = new e.DOMParser().parseFromString(i, "text/xml");
      } catch {
      }
      return l = s && s.getElementsByTagName("parsererror")[0], (!s || l) && d.error("Invalid XML: " + (l ? d.map(l.childNodes, function(h) {
        return h.textContent;
      }).join(`
`) : i)), s;
    };
    var ji = /^(?:focusinfocus|focusoutblur)$/, $i = function(i) {
      i.stopPropagation();
    };
    d.extend(d.event, {
      trigger: function(i, s, l, h) {
        var f, m, b, E, _, L, W, q, N = [l || Y], X = x.call(i, "type") ? i.type : i, ge = x.call(i, "namespace") ? i.namespace.split(".") : [];
        if (m = q = b = l = l || Y, !(l.nodeType === 3 || l.nodeType === 8) && !ji.test(X + d.event.triggered) && (X.indexOf(".") > -1 && (ge = X.split("."), X = ge.shift(), ge.sort()), _ = X.indexOf(":") < 0 && "on" + X, i = i[d.expando] ? i : new d.Event(X, typeof i == "object" && i), i.isTrigger = h ? 2 : 3, i.namespace = ge.join("."), i.rnamespace = i.namespace ? new RegExp("(^|\\.)" + ge.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, i.result = void 0, i.target || (i.target = l), s = s == null ? [i] : d.makeArray(s, [i]), W = d.event.special[X] || {}, !(!h && W.trigger && W.trigger.apply(l, s) === !1))) {
          if (!h && !W.noBubble && !O(l)) {
            for (E = W.delegateType || X, ji.test(E + X) || (m = m.parentNode); m; m = m.parentNode)
              N.push(m), b = m;
            b === (l.ownerDocument || Y) && N.push(b.defaultView || b.parentWindow || e);
          }
          for (f = 0; (m = N[f++]) && !i.isPropagationStopped(); )
            q = m, i.type = f > 1 ? E : W.bindType || X, L = (ce.get(m, "events") || /* @__PURE__ */ Object.create(null))[i.type] && ce.get(m, "handle"), L && L.apply(m, s), L = _ && m[_], L && L.apply && ze(m) && (i.result = L.apply(m, s), i.result === !1 && i.preventDefault());
          return i.type = X, !h && !i.isDefaultPrevented() && (!W._default || W._default.apply(N.pop(), s) === !1) && ze(l) && _ && M(l[X]) && !O(l) && (b = l[_], b && (l[_] = null), d.event.triggered = X, i.isPropagationStopped() && q.addEventListener(X, $i), l[X](), i.isPropagationStopped() && q.removeEventListener(X, $i), d.event.triggered = void 0, b && (l[_] = b)), i.result;
        }
      },
      // Piggyback on a donor event to simulate a different one
      // Used only for `focus(in | out)` events
      simulate: function(i, s, l) {
        var h = d.extend(
          new d.Event(),
          l,
          {
            type: i,
            isSimulated: !0
          }
        );
        d.event.trigger(h, null, s);
      }
    }), d.fn.extend({
      trigger: function(i, s) {
        return this.each(function() {
          d.event.trigger(i, s, this);
        });
      },
      triggerHandler: function(i, s) {
        var l = this[0];
        if (l)
          return d.event.trigger(i, s, l, !0);
      }
    });
    var yr = /\[\]$/, Yi = /\r?\n/g, $s = /^(?:submit|button|image|reset|file)$/i, Ys = /^(?:input|select|textarea|keygen)/i;
    function oi(i, s, l, h) {
      var f;
      if (Array.isArray(s))
        d.each(s, function(m, b) {
          l || yr.test(i) ? h(i, b) : oi(
            i + "[" + (typeof b == "object" && b != null ? m : "") + "]",
            b,
            l,
            h
          );
        });
      else if (!l && Q(s) === "object")
        for (f in s)
          oi(i + "[" + f + "]", s[f], l, h);
      else
        h(i, s);
    }
    d.param = function(i, s) {
      var l, h = [], f = function(m, b) {
        var E = M(b) ? b() : b;
        h[h.length] = encodeURIComponent(m) + "=" + encodeURIComponent(E ?? "");
      };
      if (i == null)
        return "";
      if (Array.isArray(i) || i.jquery && !d.isPlainObject(i))
        d.each(i, function() {
          f(this.name, this.value);
        });
      else
        for (l in i)
          oi(l, i[l], s, f);
      return h.join("&");
    }, d.fn.extend({
      serialize: function() {
        return d.param(this.serializeArray());
      },
      serializeArray: function() {
        return this.map(function() {
          var i = d.prop(this, "elements");
          return i ? d.makeArray(i) : this;
        }).filter(function() {
          var i = this.type;
          return this.name && !d(this).is(":disabled") && Ys.test(this.nodeName) && !$s.test(i) && (this.checked || !Co.test(i));
        }).map(function(i, s) {
          var l = d(this).val();
          return l == null ? null : Array.isArray(l) ? d.map(l, function(h) {
            return { name: s.name, value: h.replace(Yi, `\r
`) };
          }) : { name: s.name, value: l.replace(Yi, `\r
`) };
        }).get();
      }
    });
    var Fs = /%20/g, zs = /#.*$/, Ws = /([?&])_=[^&]*/, Gr = /^(.*?):[ \t]*([^\r\n]*)$/mg, Fi = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, Us = /^(?:GET|HEAD)$/, ni = /^\/\//, wr = {}, ii = {}, kr = "*/".concat("*"), Hn = Y.createElement("a");
    Hn.href = Bo.href;
    function zi(i) {
      return function(s, l) {
        typeof s != "string" && (l = s, s = "*");
        var h, f = 0, m = s.toLowerCase().match(Nt) || [];
        if (M(l))
          for (; h = m[f++]; )
            h[0] === "+" ? (h = h.slice(1) || "*", (i[h] = i[h] || []).unshift(l)) : (i[h] = i[h] || []).push(l);
      };
    }
    function Wi(i, s, l, h) {
      var f = {}, m = i === ii;
      function b(E) {
        var _;
        return f[E] = !0, d.each(i[E] || [], function(L, W) {
          var q = W(s, l, h);
          if (typeof q == "string" && !m && !f[q])
            return s.dataTypes.unshift(q), b(q), !1;
          if (m)
            return !(_ = q);
        }), _;
      }
      return b(s.dataTypes[0]) || !f["*"] && b("*");
    }
    function ri(i, s) {
      var l, h, f = d.ajaxSettings.flatOptions || {};
      for (l in s)
        s[l] !== void 0 && ((f[l] ? i : h || (h = {}))[l] = s[l]);
      return h && d.extend(!0, i, h), i;
    }
    function qs(i, s, l) {
      for (var h, f, m, b, E = i.contents, _ = i.dataTypes; _[0] === "*"; )
        _.shift(), h === void 0 && (h = i.mimeType || s.getResponseHeader("Content-Type"));
      if (h) {
        for (f in E)
          if (E[f] && E[f].test(h)) {
            _.unshift(f);
            break;
          }
      }
      if (_[0] in l)
        m = _[0];
      else {
        for (f in l) {
          if (!_[0] || i.converters[f + " " + _[0]]) {
            m = f;
            break;
          }
          b || (b = f);
        }
        m = m || b;
      }
      if (m)
        return m !== _[0] && _.unshift(m), l[m];
    }
    function Zr(i, s, l, h) {
      var f, m, b, E, _, L = {}, W = i.dataTypes.slice();
      if (W[1])
        for (b in i.converters)
          L[b.toLowerCase()] = i.converters[b];
      for (m = W.shift(); m; )
        if (i.responseFields[m] && (l[i.responseFields[m]] = s), !_ && h && i.dataFilter && (s = i.dataFilter(s, i.dataType)), _ = m, m = W.shift(), m) {
          if (m === "*")
            m = _;
          else if (_ !== "*" && _ !== m) {
            if (b = L[_ + " " + m] || L["* " + m], !b) {
              for (f in L)
                if (E = f.split(" "), E[1] === m && (b = L[_ + " " + E[0]] || L["* " + E[0]], b)) {
                  b === !0 ? b = L[f] : L[f] !== !0 && (m = E[0], W.unshift(E[1]));
                  break;
                }
            }
            if (b !== !0)
              if (b && i.throws)
                s = b(s);
              else
                try {
                  s = b(s);
                } catch (q) {
                  return {
                    state: "parsererror",
                    error: b ? q : "No conversion from " + _ + " to " + m
                  };
                }
          }
        }
      return { state: "success", data: s };
    }
    d.extend({
      // Counter for holding the number of active queries
      active: 0,
      // Last-Modified header cache for next request
      lastModified: {},
      etag: {},
      ajaxSettings: {
        url: Bo.href,
        type: "GET",
        isLocal: Fi.test(Bo.protocol),
        global: !0,
        processData: !0,
        async: !0,
        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
        /*
        timeout: 0,
        data: null,
        dataType: null,
        username: null,
        password: null,
        cache: null,
        throws: false,
        traditional: false,
        headers: {},
        */
        accepts: {
          "*": kr,
          text: "text/plain",
          html: "text/html",
          xml: "application/xml, text/xml",
          json: "application/json, text/javascript"
        },
        contents: {
          xml: /\bxml\b/,
          html: /\bhtml/,
          json: /\bjson\b/
        },
        responseFields: {
          xml: "responseXML",
          text: "responseText",
          json: "responseJSON"
        },
        // Data converters
        // Keys separate source (or catchall "*") and destination types with a single space
        converters: {
          // Convert anything to text
          "* text": String,
          // Text to html (true = no transformation)
          "text html": !0,
          // Evaluate text as a json expression
          "text json": JSON.parse,
          // Parse text as xml
          "text xml": d.parseXML
        },
        // For options that shouldn't be deep extended:
        // you can add your own custom options here if
        // and when you create one that shouldn't be
        // deep extended (see ajaxExtend)
        flatOptions: {
          url: !0,
          context: !0
        }
      },
      // Creates a full fledged settings object into target
      // with both ajaxSettings and settings fields.
      // If target is omitted, writes into ajaxSettings.
      ajaxSetup: function(i, s) {
        return s ? (
          // Building a settings object
          ri(ri(i, d.ajaxSettings), s)
        ) : (
          // Extending ajaxSettings
          ri(d.ajaxSettings, i)
        );
      },
      ajaxPrefilter: zi(wr),
      ajaxTransport: zi(ii),
      // Main method
      ajax: function(i, s) {
        typeof i == "object" && (s = i, i = void 0), s = s || {};
        var l, h, f, m, b, E, _, L, W, q, N = d.ajaxSetup({}, s), X = N.context || N, ge = N.context && (X.nodeType || X.jquery) ? d(X) : d.event, Ce = d.Deferred(), xe = d.Callbacks("once memory"), Xe = N.statusCode || {}, qe = {}, $t = {}, Yt = "canceled", Se = {
          readyState: 0,
          // Builds headers hashtable if needed
          getResponseHeader: function(De) {
            var w;
            if (_) {
              if (!m)
                for (m = {}; w = Gr.exec(f); )
                  m[w[1].toLowerCase() + " "] = (m[w[1].toLowerCase() + " "] || []).concat(w[2]);
              w = m[De.toLowerCase() + " "];
            }
            return w == null ? null : w.join(", ");
          },
          // Raw string
          getAllResponseHeaders: function() {
            return _ ? f : null;
          },
          // Caches the header
          setRequestHeader: function(De, w) {
            return _ == null && (De = $t[De.toLowerCase()] = $t[De.toLowerCase()] || De, qe[De] = w), this;
          },
          // Overrides response content-type header
          overrideMimeType: function(De) {
            return _ == null && (N.mimeType = De), this;
          },
          // Status-dependent callbacks
          statusCode: function(De) {
            var w;
            if (De)
              if (_)
                Se.always(De[Se.status]);
              else
                for (w in De)
                  Xe[w] = [Xe[w], De[w]];
            return this;
          },
          // Cancel the request
          abort: function(De) {
            var w = De || Yt;
            return l && l.abort(w), lo(0, w), this;
          }
        };
        if (Ce.promise(Se), N.url = ((i || N.url || Bo.href) + "").replace(ni, Bo.protocol + "//"), N.type = s.method || s.type || N.method || N.type, N.dataTypes = (N.dataType || "*").toLowerCase().match(Nt) || [""], N.crossDomain == null) {
          E = Y.createElement("a");
          try {
            E.href = N.url, E.href = E.href, N.crossDomain = Hn.protocol + "//" + Hn.host != E.protocol + "//" + E.host;
          } catch {
            N.crossDomain = !0;
          }
        }
        if (N.data && N.processData && typeof N.data != "string" && (N.data = d.param(N.data, N.traditional)), Wi(wr, N, s, Se), _)
          return Se;
        L = d.event && N.global, L && d.active++ === 0 && d.event.trigger("ajaxStart"), N.type = N.type.toUpperCase(), N.hasContent = !Us.test(N.type), h = N.url.replace(zs, ""), N.hasContent ? N.data && N.processData && (N.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && (N.data = N.data.replace(Fs, "+")) : (q = N.url.slice(h.length), N.data && (N.processData || typeof N.data == "string") && (h += (Wo.test(h) ? "&" : "?") + N.data, delete N.data), N.cache === !1 && (h = h.replace(Ws, "$1"), q = (Wo.test(h) ? "&" : "?") + "_=" + vr.guid++ + q), N.url = h + q), N.ifModified && (d.lastModified[h] && Se.setRequestHeader("If-Modified-Since", d.lastModified[h]), d.etag[h] && Se.setRequestHeader("If-None-Match", d.etag[h])), (N.data && N.hasContent && N.contentType !== !1 || s.contentType) && Se.setRequestHeader("Content-Type", N.contentType), Se.setRequestHeader(
          "Accept",
          N.dataTypes[0] && N.accepts[N.dataTypes[0]] ? N.accepts[N.dataTypes[0]] + (N.dataTypes[0] !== "*" ? ", " + kr + "; q=0.01" : "") : N.accepts["*"]
        );
        for (W in N.headers)
          Se.setRequestHeader(W, N.headers[W]);
        if (N.beforeSend && (N.beforeSend.call(X, Se, N) === !1 || _))
          return Se.abort();
        if (Yt = "abort", xe.add(N.complete), Se.done(N.success), Se.fail(N.error), l = Wi(ii, N, s, Se), !l)
          lo(-1, "No Transport");
        else {
          if (Se.readyState = 1, L && ge.trigger("ajaxSend", [Se, N]), _)
            return Se;
          N.async && N.timeout > 0 && (b = e.setTimeout(function() {
            Se.abort("timeout");
          }, N.timeout));
          try {
            _ = !1, l.send(qe, lo);
          } catch (De) {
            if (_)
              throw De;
            lo(-1, De);
          }
        }
        function lo(De, w, S, A) {
          var H, ee, he, ke, Ee, Ae = w;
          _ || (_ = !0, b && e.clearTimeout(b), l = void 0, f = A || "", Se.readyState = De > 0 ? 4 : 0, H = De >= 200 && De < 300 || De === 304, S && (ke = qs(N, Se, S)), !H && d.inArray("script", N.dataTypes) > -1 && d.inArray("json", N.dataTypes) < 0 && (N.converters["text script"] = function() {
          }), ke = Zr(N, ke, Se, H), H ? (N.ifModified && (Ee = Se.getResponseHeader("Last-Modified"), Ee && (d.lastModified[h] = Ee), Ee = Se.getResponseHeader("etag"), Ee && (d.etag[h] = Ee)), De === 204 || N.type === "HEAD" ? Ae = "nocontent" : De === 304 ? Ae = "notmodified" : (Ae = ke.state, ee = ke.data, he = ke.error, H = !he)) : (he = Ae, (De || !Ae) && (Ae = "error", De < 0 && (De = 0))), Se.status = De, Se.statusText = (w || Ae) + "", H ? Ce.resolveWith(X, [ee, Ae, Se]) : Ce.rejectWith(X, [Se, Ae, he]), Se.statusCode(Xe), Xe = void 0, L && ge.trigger(
            H ? "ajaxSuccess" : "ajaxError",
            [Se, N, H ? ee : he]
          ), xe.fireWith(X, [Se, Ae]), L && (ge.trigger("ajaxComplete", [Se, N]), --d.active || d.event.trigger("ajaxStop")));
        }
        return Se;
      },
      getJSON: function(i, s, l) {
        return d.get(i, s, l, "json");
      },
      getScript: function(i, s) {
        return d.get(i, void 0, s, "script");
      }
    }), d.each(["get", "post"], function(i, s) {
      d[s] = function(l, h, f, m) {
        return M(h) && (m = m || f, f = h, h = void 0), d.ajax(d.extend({
          url: l,
          type: s,
          dataType: m,
          data: h,
          success: f
        }, d.isPlainObject(l) && l));
      };
    }), d.ajaxPrefilter(function(i) {
      var s;
      for (s in i.headers)
        s.toLowerCase() === "content-type" && (i.contentType = i.headers[s] || "");
    }), d._evalUrl = function(i, s, l) {
      return d.ajax({
        url: i,
        // Make this explicit, since user can override this through ajaxSetup (trac-11264)
        type: "GET",
        dataType: "script",
        cache: !0,
        async: !1,
        global: !1,
        // Only evaluate the response if it is successful (gh-4126)
        // dataFilter is not invoked for failure responses, so using it instead
        // of the default converter is kludgy but it works.
        converters: {
          "text script": function() {
          }
        },
        dataFilter: function(h) {
          d.globalEval(h, s, l);
        }
      });
    }, d.fn.extend({
      wrapAll: function(i) {
        var s;
        return this[0] && (M(i) && (i = i.call(this[0])), s = d(i, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && s.insertBefore(this[0]), s.map(function() {
          for (var l = this; l.firstElementChild; )
            l = l.firstElementChild;
          return l;
        }).append(this)), this;
      },
      wrapInner: function(i) {
        return M(i) ? this.each(function(s) {
          d(this).wrapInner(i.call(this, s));
        }) : this.each(function() {
          var s = d(this), l = s.contents();
          l.length ? l.wrapAll(i) : s.append(i);
        });
      },
      wrap: function(i) {
        var s = M(i);
        return this.each(function(l) {
          d(this).wrapAll(s ? i.call(this, l) : i);
        });
      },
      unwrap: function(i) {
        return this.parent(i).not("body").each(function() {
          d(this).replaceWith(this.childNodes);
        }), this;
      }
    }), d.expr.pseudos.hidden = function(i) {
      return !d.expr.pseudos.visible(i);
    }, d.expr.pseudos.visible = function(i) {
      return !!(i.offsetWidth || i.offsetHeight || i.getClientRects().length);
    }, d.ajaxSettings.xhr = function() {
      try {
        return new e.XMLHttpRequest();
      } catch {
      }
    };
    var xr = {
      // File protocol always yields status code 0, assume 200
      0: 200,
      // Support: IE <=9 only
      // trac-1450: sometimes IE returns 1223 when it should be 204
      1223: 204
    }, Ro = d.ajaxSettings.xhr();
    k.cors = !!Ro && "withCredentials" in Ro, k.ajax = Ro = !!Ro, d.ajaxTransport(function(i) {
      var s, l;
      if (k.cors || Ro && !i.crossDomain)
        return {
          send: function(h, f) {
            var m, b = i.xhr();
            if (b.open(
              i.type,
              i.url,
              i.async,
              i.username,
              i.password
            ), i.xhrFields)
              for (m in i.xhrFields)
                b[m] = i.xhrFields[m];
            i.mimeType && b.overrideMimeType && b.overrideMimeType(i.mimeType), !i.crossDomain && !h["X-Requested-With"] && (h["X-Requested-With"] = "XMLHttpRequest");
            for (m in h)
              b.setRequestHeader(m, h[m]);
            s = function(E) {
              return function() {
                s && (s = l = b.onload = b.onerror = b.onabort = b.ontimeout = b.onreadystatechange = null, E === "abort" ? b.abort() : E === "error" ? typeof b.status != "number" ? f(0, "error") : f(
                  // File: protocol always yields status 0; see trac-8605, trac-14207
                  b.status,
                  b.statusText
                ) : f(
                  xr[b.status] || b.status,
                  b.statusText,
                  // Support: IE <=9 only
                  // IE9 has no XHR2 but throws on binary (trac-11426)
                  // For XHR2 non-text, let the caller handle it (gh-2498)
                  (b.responseType || "text") !== "text" || typeof b.responseText != "string" ? { binary: b.response } : { text: b.responseText },
                  b.getAllResponseHeaders()
                ));
              };
            }, b.onload = s(), l = b.onerror = b.ontimeout = s("error"), b.onabort !== void 0 ? b.onabort = l : b.onreadystatechange = function() {
              b.readyState === 4 && e.setTimeout(function() {
                s && l();
              });
            }, s = s("abort");
            try {
              b.send(i.hasContent && i.data || null);
            } catch (E) {
              if (s)
                throw E;
            }
          },
          abort: function() {
            s && s();
          }
        };
    }), d.ajaxPrefilter(function(i) {
      i.crossDomain && (i.contents.script = !1);
    }), d.ajaxSetup({
      accepts: {
        script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
      },
      contents: {
        script: /\b(?:java|ecma)script\b/
      },
      converters: {
        "text script": function(i) {
          return d.globalEval(i), i;
        }
      }
    }), d.ajaxPrefilter("script", function(i) {
      i.cache === void 0 && (i.cache = !1), i.crossDomain && (i.type = "GET");
    }), d.ajaxTransport("script", function(i) {
      if (i.crossDomain || i.scriptAttrs) {
        var s, l;
        return {
          send: function(h, f) {
            s = d("<script>").attr(i.scriptAttrs || {}).prop({ charset: i.scriptCharset, src: i.url }).on("load error", l = function(m) {
              s.remove(), l = null, m && f(m.type === "error" ? 404 : 200, m.type);
            }), Y.head.appendChild(s[0]);
          },
          abort: function() {
            l && l();
          }
        };
      }
    });
    var Ui = [], si = /(=)\?(?=&|$)|\?\?/;
    d.ajaxSetup({
      jsonp: "callback",
      jsonpCallback: function() {
        var i = Ui.pop() || d.expando + "_" + vr.guid++;
        return this[i] = !0, i;
      }
    }), d.ajaxPrefilter("json jsonp", function(i, s, l) {
      var h, f, m, b = i.jsonp !== !1 && (si.test(i.url) ? "url" : typeof i.data == "string" && (i.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && si.test(i.data) && "data");
      if (b || i.dataTypes[0] === "jsonp")
        return h = i.jsonpCallback = M(i.jsonpCallback) ? i.jsonpCallback() : i.jsonpCallback, b ? i[b] = i[b].replace(si, "$1" + h) : i.jsonp !== !1 && (i.url += (Wo.test(i.url) ? "&" : "?") + i.jsonp + "=" + h), i.converters["script json"] = function() {
          return m || d.error(h + " was not called"), m[0];
        }, i.dataTypes[0] = "json", f = e[h], e[h] = function() {
          m = arguments;
        }, l.always(function() {
          f === void 0 ? d(e).removeProp(h) : e[h] = f, i[h] && (i.jsonpCallback = s.jsonpCallback, Ui.push(h)), m && M(f) && f(m[0]), m = f = void 0;
        }), "script";
    }), k.createHTMLDocument = function() {
      var i = Y.implementation.createHTMLDocument("").body;
      return i.innerHTML = "<form></form><form></form>", i.childNodes.length === 2;
    }(), d.parseHTML = function(i, s, l) {
      if (typeof i != "string")
        return [];
      typeof s == "boolean" && (l = s, s = !1);
      var h, f, m;
      return s || (k.createHTMLDocument ? (s = Y.implementation.createHTMLDocument(""), h = s.createElement("base"), h.href = Y.location.href, s.head.appendChild(h)) : s = Y), f = Be.exec(i), m = !l && [], f ? [s.createElement(f[1])] : (f = Ue([i], s, m), m && m.length && d(m).remove(), d.merge([], f.childNodes));
    }, d.fn.load = function(i, s, l) {
      var h, f, m, b = this, E = i.indexOf(" ");
      return E > -1 && (h = so(i.slice(E)), i = i.slice(0, E)), M(s) ? (l = s, s = void 0) : s && typeof s == "object" && (f = "POST"), b.length > 0 && d.ajax({
        url: i,
        // If "type" variable is undefined, then "GET" method will be used.
        // Make value of this field explicit since
        // user can override it through ajaxSetup method
        type: f || "GET",
        dataType: "html",
        data: s
      }).done(function(_) {
        m = arguments, b.html(h ? (
          // If a selector was specified, locate the right elements in a dummy div
          // Exclude scripts to avoid IE 'Permission Denied' errors
          d("<div>").append(d.parseHTML(_)).find(h)
        ) : (
          // Otherwise use the full result
          _
        ));
      }).always(l && function(_, L) {
        b.each(function() {
          l.apply(this, m || [_.responseText, L, _]);
        });
      }), this;
    }, d.expr.pseudos.animated = function(i) {
      return d.grep(d.timers, function(s) {
        return i === s.elem;
      }).length;
    }, d.offset = {
      setOffset: function(i, s, l) {
        var h, f, m, b, E, _, L, W = d.css(i, "position"), q = d(i), N = {};
        W === "static" && (i.style.position = "relative"), E = q.offset(), m = d.css(i, "top"), _ = d.css(i, "left"), L = (W === "absolute" || W === "fixed") && (m + _).indexOf("auto") > -1, L ? (h = q.position(), b = h.top, f = h.left) : (b = parseFloat(m) || 0, f = parseFloat(_) || 0), M(s) && (s = s.call(i, l, d.extend({}, E))), s.top != null && (N.top = s.top - E.top + b), s.left != null && (N.left = s.left - E.left + f), "using" in s ? s.using.call(i, N) : q.css(N);
      }
    }, d.fn.extend({
      // offset() relates an element's border box to the document origin
      offset: function(i) {
        if (arguments.length)
          return i === void 0 ? this : this.each(function(f) {
            d.offset.setOffset(this, i, f);
          });
        var s, l, h = this[0];
        if (h)
          return h.getClientRects().length ? (s = h.getBoundingClientRect(), l = h.ownerDocument.defaultView, {
            top: s.top + l.pageYOffset,
            left: s.left + l.pageXOffset
          }) : { top: 0, left: 0 };
      },
      // position() relates an element's margin box to its offset parent's padding box
      // This corresponds to the behavior of CSS absolute positioning
      position: function() {
        if (this[0]) {
          var i, s, l, h = this[0], f = { top: 0, left: 0 };
          if (d.css(h, "position") === "fixed")
            s = h.getBoundingClientRect();
          else {
            for (s = this.offset(), l = h.ownerDocument, i = h.offsetParent || l.documentElement; i && (i === l.body || i === l.documentElement) && d.css(i, "position") === "static"; )
              i = i.parentNode;
            i && i !== h && i.nodeType === 1 && (f = d(i).offset(), f.top += d.css(i, "borderTopWidth", !0), f.left += d.css(i, "borderLeftWidth", !0));
          }
          return {
            top: s.top - f.top - d.css(h, "marginTop", !0),
            left: s.left - f.left - d.css(h, "marginLeft", !0)
          };
        }
      },
      // This method will return documentElement in the following cases:
      // 1) For the element inside the iframe without offsetParent, this method will return
      //    documentElement of the parent window
      // 2) For the hidden or detached element
      // 3) For body or html element, i.e. in case of the html node - it will return itself
      //
      // but those exceptions were never presented as a real life use-cases
      // and might be considered as more preferable results.
      //
      // This logic, however, is not guaranteed and can change at any point in the future
      offsetParent: function() {
        return this.map(function() {
          for (var i = this.offsetParent; i && d.css(i, "position") === "static"; )
            i = i.offsetParent;
          return i || Qt;
        });
      }
    }), d.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function(i, s) {
      var l = s === "pageYOffset";
      d.fn[i] = function(h) {
        return bt(this, function(f, m, b) {
          var E;
          if (O(f) ? E = f : f.nodeType === 9 && (E = f.defaultView), b === void 0)
            return E ? E[s] : f[m];
          E ? E.scrollTo(
            l ? E.pageXOffset : b,
            l ? b : E.pageYOffset
          ) : f[m] = b;
        }, i, h, arguments.length);
      };
    }), d.each(["top", "left"], function(i, s) {
      d.cssHooks[s] = dr(
        k.pixelPosition,
        function(l, h) {
          if (h)
            return h = Ao(l, s), Xn.test(h) ? d(l).position()[s] + "px" : h;
        }
      );
    }), d.each({ Height: "height", Width: "width" }, function(i, s) {
      d.each({
        padding: "inner" + i,
        content: s,
        "": "outer" + i
      }, function(l, h) {
        d.fn[h] = function(f, m) {
          var b = arguments.length && (l || typeof f != "boolean"), E = l || (f === !0 || m === !0 ? "margin" : "border");
          return bt(this, function(_, L, W) {
            var q;
            return O(_) ? h.indexOf("outer") === 0 ? _["inner" + i] : _.document.documentElement["client" + i] : _.nodeType === 9 ? (q = _.documentElement, Math.max(
              _.body["scroll" + i],
              q["scroll" + i],
              _.body["offset" + i],
              q["offset" + i],
              q["client" + i]
            )) : W === void 0 ? (
              // Get width or height on the element, requesting but not forcing parseFloat
              d.css(_, L, E)
            ) : (
              // Set width or height on the element
              d.style(_, L, W, E)
            );
          }, s, b ? f : void 0, b);
        };
      });
    }), d.each([
      "ajaxStart",
      "ajaxStop",
      "ajaxComplete",
      "ajaxError",
      "ajaxSuccess",
      "ajaxSend"
    ], function(i, s) {
      d.fn[s] = function(l) {
        return this.on(s, l);
      };
    }), d.fn.extend({
      bind: function(i, s, l) {
        return this.on(i, null, s, l);
      },
      unbind: function(i, s) {
        return this.off(i, null, s);
      },
      delegate: function(i, s, l, h) {
        return this.on(s, i, l, h);
      },
      undelegate: function(i, s, l) {
        return arguments.length === 1 ? this.off(i, "**") : this.off(s, i || "**", l);
      },
      hover: function(i, s) {
        return this.on("mouseenter", i).on("mouseleave", s || i);
      }
    }), d.each(
      "blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),
      function(i, s) {
        d.fn[s] = function(l, h) {
          return arguments.length > 0 ? this.on(s, null, l, h) : this.trigger(s);
        };
      }
    );
    var Cr = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
    d.proxy = function(i, s) {
      var l, h, f;
      if (typeof s == "string" && (l = i[s], s = i, i = l), !!M(i))
        return h = a.call(arguments, 2), f = function() {
          return i.apply(s || this, h.concat(a.call(arguments)));
        }, f.guid = i.guid = i.guid || d.guid++, f;
    }, d.holdReady = function(i) {
      i ? d.readyWait++ : d.ready(!0);
    }, d.isArray = Array.isArray, d.parseJSON = JSON.parse, d.nodeName = R, d.isFunction = M, d.isWindow = O, d.camelCase = Pt, d.type = Q, d.now = Date.now, d.isNumeric = function(i) {
      var s = d.type(i);
      return (s === "number" || s === "string") && // parseFloat NaNs numeric-cast false positives ("")
      // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
      // subtraction forces infinities to NaN
      !isNaN(i - parseFloat(i));
    }, d.trim = function(i) {
      return i == null ? "" : (i + "").replace(Cr, "$1");
    };
    var Kr = e.jQuery, Xr = e.$;
    return d.noConflict = function(i) {
      return e.$ === d && (e.$ = Xr), i && e.jQuery === d && (e.jQuery = Kr), d;
    }, typeof t > "u" && (e.jQuery = e.$ = d), d;
  });
})(vp);
var aw = vp.exports;
const Re = /* @__PURE__ */ sw(aw);
//! moment.js
//! version : 2.30.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
var yp;
function pe() {
  return yp.apply(null, arguments);
}
function lw(o) {
  yp = o;
}
function On(o) {
  return o instanceof Array || Object.prototype.toString.call(o) === "[object Array]";
}
function Pr(o) {
  return o != null && Object.prototype.toString.call(o) === "[object Object]";
}
function ct(o, e) {
  return Object.prototype.hasOwnProperty.call(o, e);
}
function qc(o) {
  if (Object.getOwnPropertyNames)
    return Object.getOwnPropertyNames(o).length === 0;
  var e;
  for (e in o)
    if (ct(o, e))
      return !1;
  return !0;
}
function jo(o) {
  return o === void 0;
}
function Mi(o) {
  return typeof o == "number" || Object.prototype.toString.call(o) === "[object Number]";
}
function xa(o) {
  return o instanceof Date || Object.prototype.toString.call(o) === "[object Date]";
}
function wp(o, e) {
  var t = [], n, r = o.length;
  for (n = 0; n < r; ++n)
    t.push(e(o[n], n));
  return t;
}
function Qi(o, e) {
  for (var t in e)
    ct(e, t) && (o[t] = e[t]);
  return ct(e, "toString") && (o.toString = e.toString), ct(e, "valueOf") && (o.valueOf = e.valueOf), o;
}
function qn(o, e, t, n) {
  return zp(o, e, t, n, !0).utc();
}
function cw() {
  return {
    empty: !1,
    unusedTokens: [],
    unusedInput: [],
    overflow: -2,
    charsLeftOver: 0,
    nullInput: !1,
    invalidEra: null,
    invalidMonth: null,
    invalidFormat: !1,
    userInvalidated: !1,
    iso: !1,
    parsedDateParts: [],
    era: null,
    meridiem: null,
    rfc2822: !1,
    weekdayMismatch: !1
  };
}
function Ge(o) {
  return o._pf == null && (o._pf = cw()), o._pf;
}
var rc;
Array.prototype.some ? rc = Array.prototype.some : rc = function(o) {
  var e = Object(this), t = e.length >>> 0, n;
  for (n = 0; n < t; n++)
    if (n in e && o.call(this, e[n], n, e))
      return !0;
  return !1;
};
function Vc(o) {
  var e = null, t = !1, n = o._d && !isNaN(o._d.getTime());
  if (n && (e = Ge(o), t = rc.call(e.parsedDateParts, function(r) {
    return r != null;
  }), n = e.overflow < 0 && !e.empty && !e.invalidEra && !e.invalidMonth && !e.invalidWeekday && !e.weekdayMismatch && !e.nullInput && !e.invalidFormat && !e.userInvalidated && (!e.meridiem || e.meridiem && t), o._strict && (n = n && e.charsLeftOver === 0 && e.unusedTokens.length === 0 && e.bigHour === void 0)), Object.isFrozen == null || !Object.isFrozen(o))
    o._isValid = n;
  else
    return n;
  return o._isValid;
}
function ul(o) {
  var e = qn(NaN);
  return o != null ? Qi(Ge(e), o) : Ge(e).userInvalidated = !0, e;
}
var kh = pe.momentProperties = [], Pl = !1;
function Gc(o, e) {
  var t, n, r, a = kh.length;
  if (jo(e._isAMomentObject) || (o._isAMomentObject = e._isAMomentObject), jo(e._i) || (o._i = e._i), jo(e._f) || (o._f = e._f), jo(e._l) || (o._l = e._l), jo(e._strict) || (o._strict = e._strict), jo(e._tzm) || (o._tzm = e._tzm), jo(e._isUTC) || (o._isUTC = e._isUTC), jo(e._offset) || (o._offset = e._offset), jo(e._pf) || (o._pf = Ge(e)), jo(e._locale) || (o._locale = e._locale), a > 0)
    for (t = 0; t < a; t++)
      n = kh[t], r = e[n], jo(r) || (o[n] = r);
  return o;
}
function Ca(o) {
  Gc(this, o), this._d = new Date(o._d != null ? o._d.getTime() : NaN), this.isValid() || (this._d = /* @__PURE__ */ new Date(NaN)), Pl === !1 && (Pl = !0, pe.updateOffset(this), Pl = !1);
}
function Ln(o) {
  return o instanceof Ca || o != null && o._isAMomentObject != null;
}
function kp(o) {
  pe.suppressDeprecationWarnings === !1 && typeof console < "u" && console.warn && console.warn("Deprecation warning: " + o);
}
function un(o, e) {
  var t = !0;
  return Qi(function() {
    if (pe.deprecationHandler != null && pe.deprecationHandler(null, o), t) {
      var n = [], r, a, c, u = arguments.length;
      for (a = 0; a < u; a++) {
        if (r = "", typeof arguments[a] == "object") {
          r += `
[` + a + "] ";
          for (c in arguments[0])
            ct(arguments[0], c) && (r += c + ": " + arguments[0][c] + ", ");
          r = r.slice(0, -2);
        } else
          r = arguments[a];
        n.push(r);
      }
      kp(
        o + `
Arguments: ` + Array.prototype.slice.call(n).join("") + `
` + new Error().stack
      ), t = !1;
    }
    return e.apply(this, arguments);
  }, e);
}
var xh = {};
function xp(o, e) {
  pe.deprecationHandler != null && pe.deprecationHandler(o, e), xh[o] || (kp(e), xh[o] = !0);
}
pe.suppressDeprecationWarnings = !1;
pe.deprecationHandler = null;
function Vn(o) {
  return typeof Function < "u" && o instanceof Function || Object.prototype.toString.call(o) === "[object Function]";
}
function dw(o) {
  var e, t;
  for (t in o)
    ct(o, t) && (e = o[t], Vn(e) ? this[t] = e : this["_" + t] = e);
  this._config = o, this._dayOfMonthOrdinalParseLenient = new RegExp(
    (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source
  );
}
function sc(o, e) {
  var t = Qi({}, o), n;
  for (n in e)
    ct(e, n) && (Pr(o[n]) && Pr(e[n]) ? (t[n] = {}, Qi(t[n], o[n]), Qi(t[n], e[n])) : e[n] != null ? t[n] = e[n] : delete t[n]);
  for (n in o)
    ct(o, n) && !ct(e, n) && Pr(o[n]) && (t[n] = Qi({}, t[n]));
  return t;
}
function Zc(o) {
  o != null && this.set(o);
}
var ac;
Object.keys ? ac = Object.keys : ac = function(o) {
  var e, t = [];
  for (e in o)
    ct(o, e) && t.push(e);
  return t;
};
var hw = {
  sameDay: "[Today at] LT",
  nextDay: "[Tomorrow at] LT",
  nextWeek: "dddd [at] LT",
  lastDay: "[Yesterday at] LT",
  lastWeek: "[Last] dddd [at] LT",
  sameElse: "L"
};
function uw(o, e, t) {
  var n = this._calendar[o] || this._calendar.sameElse;
  return Vn(n) ? n.call(e, t) : n;
}
function zn(o, e, t) {
  var n = "" + Math.abs(o), r = e - n.length, a = o >= 0;
  return (a ? t ? "+" : "" : "-") + Math.pow(10, Math.max(0, r)).toString().substr(1) + n;
}
var Kc = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, Ma = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, Hl = {}, bs = {};
function He(o, e, t, n) {
  var r = n;
  typeof n == "string" && (r = function() {
    return this[n]();
  }), o && (bs[o] = r), e && (bs[e[0]] = function() {
    return zn(r.apply(this, arguments), e[1], e[2]);
  }), t && (bs[t] = function() {
    return this.localeData().ordinal(
      r.apply(this, arguments),
      o
    );
  });
}
function pw(o) {
  return o.match(/\[[\s\S]/) ? o.replace(/^\[|\]$/g, "") : o.replace(/\\/g, "");
}
function fw(o) {
  var e = o.match(Kc), t, n;
  for (t = 0, n = e.length; t < n; t++)
    bs[e[t]] ? e[t] = bs[e[t]] : e[t] = pw(e[t]);
  return function(r) {
    var a = "", c;
    for (c = 0; c < n; c++)
      a += Vn(e[c]) ? e[c].call(r, o) : e[c];
    return a;
  };
}
function Pa(o, e) {
  return o.isValid() ? (e = Cp(e, o.localeData()), Hl[e] = Hl[e] || fw(e), Hl[e](o)) : o.localeData().invalidDate();
}
function Cp(o, e) {
  var t = 5;
  function n(r) {
    return e.longDateFormat(r) || r;
  }
  for (Ma.lastIndex = 0; t >= 0 && Ma.test(o); )
    o = o.replace(
      Ma,
      n
    ), Ma.lastIndex = 0, t -= 1;
  return o;
}
var mw = {
  LTS: "h:mm:ss A",
  LT: "h:mm A",
  L: "MM/DD/YYYY",
  LL: "MMMM D, YYYY",
  LLL: "MMMM D, YYYY h:mm A",
  LLLL: "dddd, MMMM D, YYYY h:mm A"
};
function gw(o) {
  var e = this._longDateFormat[o], t = this._longDateFormat[o.toUpperCase()];
  return e || !t ? e : (this._longDateFormat[o] = t.match(Kc).map(function(n) {
    return n === "MMMM" || n === "MM" || n === "DD" || n === "dddd" ? n.slice(1) : n;
  }).join(""), this._longDateFormat[o]);
}
var bw = "Invalid date";
function vw() {
  return this._invalidDate;
}
var yw = "%d", ww = /\d{1,2}/;
function kw(o) {
  return this._ordinal.replace("%d", o);
}
var xw = {
  future: "in %s",
  past: "%s ago",
  s: "a few seconds",
  ss: "%d seconds",
  m: "a minute",
  mm: "%d minutes",
  h: "an hour",
  hh: "%d hours",
  d: "a day",
  dd: "%d days",
  w: "a week",
  ww: "%d weeks",
  M: "a month",
  MM: "%d months",
  y: "a year",
  yy: "%d years"
};
function Cw(o, e, t, n) {
  var r = this._relativeTime[t];
  return Vn(r) ? r(o, e, t, n) : r.replace(/%d/i, o);
}
function Sw(o, e) {
  var t = this._relativeTime[o > 0 ? "future" : "past"];
  return Vn(t) ? t(e) : t.replace(/%s/i, e);
}
var Ch = {
  D: "date",
  dates: "date",
  date: "date",
  d: "day",
  days: "day",
  day: "day",
  e: "weekday",
  weekdays: "weekday",
  weekday: "weekday",
  E: "isoWeekday",
  isoweekdays: "isoWeekday",
  isoweekday: "isoWeekday",
  DDD: "dayOfYear",
  dayofyears: "dayOfYear",
  dayofyear: "dayOfYear",
  h: "hour",
  hours: "hour",
  hour: "hour",
  ms: "millisecond",
  milliseconds: "millisecond",
  millisecond: "millisecond",
  m: "minute",
  minutes: "minute",
  minute: "minute",
  M: "month",
  months: "month",
  month: "month",
  Q: "quarter",
  quarters: "quarter",
  quarter: "quarter",
  s: "second",
  seconds: "second",
  second: "second",
  gg: "weekYear",
  weekyears: "weekYear",
  weekyear: "weekYear",
  GG: "isoWeekYear",
  isoweekyears: "isoWeekYear",
  isoweekyear: "isoWeekYear",
  w: "week",
  weeks: "week",
  week: "week",
  W: "isoWeek",
  isoweeks: "isoWeek",
  isoweek: "isoWeek",
  y: "year",
  years: "year",
  year: "year"
};
function pn(o) {
  return typeof o == "string" ? Ch[o] || Ch[o.toLowerCase()] : void 0;
}
function Xc(o) {
  var e = {}, t, n;
  for (n in o)
    ct(o, n) && (t = pn(n), t && (e[t] = o[n]));
  return e;
}
var Tw = {
  date: 9,
  day: 11,
  weekday: 11,
  isoWeekday: 11,
  dayOfYear: 4,
  hour: 13,
  millisecond: 16,
  minute: 14,
  month: 8,
  quarter: 7,
  second: 15,
  weekYear: 1,
  isoWeekYear: 1,
  week: 5,
  isoWeek: 5,
  year: 1
};
function _w(o) {
  var e = [], t;
  for (t in o)
    ct(o, t) && e.push({ unit: t, priority: Tw[t] });
  return e.sort(function(n, r) {
    return n.priority - r.priority;
  }), e;
}
var Sp = /\d/, tn = /\d\d/, Tp = /\d{3}/, Jc = /\d{4}/, pl = /[+-]?\d{6}/, It = /\d\d?/, _p = /\d\d\d\d?/, Ep = /\d\d\d\d\d\d?/, fl = /\d{1,3}/, Qc = /\d{1,4}/, ml = /[+-]?\d{1,6}/, Es = /\d+/, gl = /[+-]?\d+/, Ew = /Z|[+-]\d\d:?\d\d/gi, bl = /Z|[+-]\d\d(?::?\d\d)?/gi, Mw = /[+-]?\d+(\.\d{1,3})?/, Sa = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i, Ms = /^[1-9]\d?/, ed = /^([1-9]\d|\d)/, qa;
qa = {};
function Le(o, e, t) {
  qa[o] = Vn(e) ? e : function(n, r) {
    return n && t ? t : e;
  };
}
function Dw(o, e) {
  return ct(qa, o) ? qa[o](e._strict, e._locale) : new RegExp(Ow(o));
}
function Ow(o) {
  return Ti(
    o.replace("\\", "").replace(
      /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
      function(e, t, n, r, a) {
        return t || n || r || a;
      }
    )
  );
}
function Ti(o) {
  return o.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
}
function ln(o) {
  return o < 0 ? Math.ceil(o) || 0 : Math.floor(o);
}
function tt(o) {
  var e = +o, t = 0;
  return e !== 0 && isFinite(e) && (t = ln(e)), t;
}
var lc = {};
function kt(o, e) {
  var t, n = e, r;
  for (typeof o == "string" && (o = [o]), Mi(e) && (n = function(a, c) {
    c[e] = tt(a);
  }), r = o.length, t = 0; t < r; t++)
    lc[o[t]] = n;
}
function Ta(o, e) {
  kt(o, function(t, n, r, a) {
    r._w = r._w || {}, e(t, r._w, r, a);
  });
}
function Lw(o, e, t) {
  e != null && ct(lc, o) && lc[o](e, t._a, t, o);
}
function vl(o) {
  return o % 4 === 0 && o % 100 !== 0 || o % 400 === 0;
}
var wo = 0, ki = 1, Yn = 2, oo = 3, _n = 4, xi = 5, Rr = 6, Aw = 7, Bw = 8;
He("Y", 0, 0, function() {
  var o = this.year();
  return o <= 9999 ? zn(o, 4) : "+" + o;
});
He(0, ["YY", 2], 0, function() {
  return this.year() % 100;
});
He(0, ["YYYY", 4], 0, "year");
He(0, ["YYYYY", 5], 0, "year");
He(0, ["YYYYYY", 6, !0], 0, "year");
Le("Y", gl);
Le("YY", It, tn);
Le("YYYY", Qc, Jc);
Le("YYYYY", ml, pl);
Le("YYYYYY", ml, pl);
kt(["YYYYY", "YYYYYY"], wo);
kt("YYYY", function(o, e) {
  e[wo] = o.length === 2 ? pe.parseTwoDigitYear(o) : tt(o);
});
kt("YY", function(o, e) {
  e[wo] = pe.parseTwoDigitYear(o);
});
kt("Y", function(o, e) {
  e[wo] = parseInt(o, 10);
});
function sa(o) {
  return vl(o) ? 366 : 365;
}
pe.parseTwoDigitYear = function(o) {
  return tt(o) + (tt(o) > 68 ? 1900 : 2e3);
};
var Mp = Ds("FullYear", !0);
function Rw() {
  return vl(this.year());
}
function Ds(o, e) {
  return function(t) {
    return t != null ? (Dp(this, o, t), pe.updateOffset(this, e), this) : pa(this, o);
  };
}
function pa(o, e) {
  if (!o.isValid())
    return NaN;
  var t = o._d, n = o._isUTC;
  switch (e) {
    case "Milliseconds":
      return n ? t.getUTCMilliseconds() : t.getMilliseconds();
    case "Seconds":
      return n ? t.getUTCSeconds() : t.getSeconds();
    case "Minutes":
      return n ? t.getUTCMinutes() : t.getMinutes();
    case "Hours":
      return n ? t.getUTCHours() : t.getHours();
    case "Date":
      return n ? t.getUTCDate() : t.getDate();
    case "Day":
      return n ? t.getUTCDay() : t.getDay();
    case "Month":
      return n ? t.getUTCMonth() : t.getMonth();
    case "FullYear":
      return n ? t.getUTCFullYear() : t.getFullYear();
    default:
      return NaN;
  }
}
function Dp(o, e, t) {
  var n, r, a, c, u;
  if (!(!o.isValid() || isNaN(t))) {
    switch (n = o._d, r = o._isUTC, e) {
      case "Milliseconds":
        return void (r ? n.setUTCMilliseconds(t) : n.setMilliseconds(t));
      case "Seconds":
        return void (r ? n.setUTCSeconds(t) : n.setSeconds(t));
      case "Minutes":
        return void (r ? n.setUTCMinutes(t) : n.setMinutes(t));
      case "Hours":
        return void (r ? n.setUTCHours(t) : n.setHours(t));
      case "Date":
        return void (r ? n.setUTCDate(t) : n.setDate(t));
      case "FullYear":
        break;
      default:
        return;
    }
    a = t, c = o.month(), u = o.date(), u = u === 29 && c === 1 && !vl(a) ? 28 : u, r ? n.setUTCFullYear(a, c, u) : n.setFullYear(a, c, u);
  }
}
function Iw(o) {
  return o = pn(o), Vn(this[o]) ? this[o]() : this;
}
function Nw(o, e) {
  if (typeof o == "object") {
    o = Xc(o);
    var t = _w(o), n, r = t.length;
    for (n = 0; n < r; n++)
      this[t[n].unit](o[t[n].unit]);
  } else if (o = pn(o), Vn(this[o]))
    return this[o](e);
  return this;
}
function Pw(o, e) {
  return (o % e + e) % e;
}
var Kt;
Array.prototype.indexOf ? Kt = Array.prototype.indexOf : Kt = function(o) {
  var e;
  for (e = 0; e < this.length; ++e)
    if (this[e] === o)
      return e;
  return -1;
};
function td(o, e) {
  if (isNaN(o) || isNaN(e))
    return NaN;
  var t = Pw(e, 12);
  return o += (e - t) / 12, t === 1 ? vl(o) ? 29 : 28 : 31 - t % 7 % 2;
}
He("M", ["MM", 2], "Mo", function() {
  return this.month() + 1;
});
He("MMM", 0, 0, function(o) {
  return this.localeData().monthsShort(this, o);
});
He("MMMM", 0, 0, function(o) {
  return this.localeData().months(this, o);
});
Le("M", It, Ms);
Le("MM", It, tn);
Le("MMM", function(o, e) {
  return e.monthsShortRegex(o);
});
Le("MMMM", function(o, e) {
  return e.monthsRegex(o);
});
kt(["M", "MM"], function(o, e) {
  e[ki] = tt(o) - 1;
});
kt(["MMM", "MMMM"], function(o, e, t, n) {
  var r = t._locale.monthsParse(o, n, t._strict);
  r != null ? e[ki] = r : Ge(t).invalidMonth = o;
});
var Hw = "January_February_March_April_May_June_July_August_September_October_November_December".split(
  "_"
), Op = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), Lp = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/, jw = Sa, $w = Sa;
function Yw(o, e) {
  return o ? On(this._months) ? this._months[o.month()] : this._months[(this._months.isFormat || Lp).test(e) ? "format" : "standalone"][o.month()] : On(this._months) ? this._months : this._months.standalone;
}
function Fw(o, e) {
  return o ? On(this._monthsShort) ? this._monthsShort[o.month()] : this._monthsShort[Lp.test(e) ? "format" : "standalone"][o.month()] : On(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone;
}
function zw(o, e, t) {
  var n, r, a, c = o.toLocaleLowerCase();
  if (!this._monthsParse)
    for (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = [], n = 0; n < 12; ++n)
      a = qn([2e3, n]), this._shortMonthsParse[n] = this.monthsShort(
        a,
        ""
      ).toLocaleLowerCase(), this._longMonthsParse[n] = this.months(a, "").toLocaleLowerCase();
  return t ? e === "MMM" ? (r = Kt.call(this._shortMonthsParse, c), r !== -1 ? r : null) : (r = Kt.call(this._longMonthsParse, c), r !== -1 ? r : null) : e === "MMM" ? (r = Kt.call(this._shortMonthsParse, c), r !== -1 ? r : (r = Kt.call(this._longMonthsParse, c), r !== -1 ? r : null)) : (r = Kt.call(this._longMonthsParse, c), r !== -1 ? r : (r = Kt.call(this._shortMonthsParse, c), r !== -1 ? r : null));
}
function Ww(o, e, t) {
  var n, r, a;
  if (this._monthsParseExact)
    return zw.call(this, o, e, t);
  for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), n = 0; n < 12; n++)
    if (r = qn([2e3, n]), t && !this._longMonthsParse[n] && (this._longMonthsParse[n] = new RegExp(
      "^" + this.months(r, "").replace(".", "") + "$",
      "i"
    ), this._shortMonthsParse[n] = new RegExp(
      "^" + this.monthsShort(r, "").replace(".", "") + "$",
      "i"
    )), !t && !this._monthsParse[n] && (a = "^" + this.months(r, "") + "|^" + this.monthsShort(r, ""), this._monthsParse[n] = new RegExp(a.replace(".", ""), "i")), t && e === "MMMM" && this._longMonthsParse[n].test(o) || t && e === "MMM" && this._shortMonthsParse[n].test(o) || !t && this._monthsParse[n].test(o))
      return n;
}
function Ap(o, e) {
  if (!o.isValid())
    return o;
  if (typeof e == "string") {
    if (/^\d+$/.test(e))
      e = tt(e);
    else if (e = o.localeData().monthsParse(e), !Mi(e))
      return o;
  }
  var t = e, n = o.date();
  return n = n < 29 ? n : Math.min(n, td(o.year(), t)), o._isUTC ? o._d.setUTCMonth(t, n) : o._d.setMonth(t, n), o;
}
function Bp(o) {
  return o != null ? (Ap(this, o), pe.updateOffset(this, !0), this) : pa(this, "Month");
}
function Uw() {
  return td(this.year(), this.month());
}
function qw(o) {
  return this._monthsParseExact ? (ct(this, "_monthsRegex") || Rp.call(this), o ? this._monthsShortStrictRegex : this._monthsShortRegex) : (ct(this, "_monthsShortRegex") || (this._monthsShortRegex = jw), this._monthsShortStrictRegex && o ? this._monthsShortStrictRegex : this._monthsShortRegex);
}
function Vw(o) {
  return this._monthsParseExact ? (ct(this, "_monthsRegex") || Rp.call(this), o ? this._monthsStrictRegex : this._monthsRegex) : (ct(this, "_monthsRegex") || (this._monthsRegex = $w), this._monthsStrictRegex && o ? this._monthsStrictRegex : this._monthsRegex);
}
function Rp() {
  function o(p, g) {
    return g.length - p.length;
  }
  var e = [], t = [], n = [], r, a, c, u;
  for (r = 0; r < 12; r++)
    a = qn([2e3, r]), c = Ti(this.monthsShort(a, "")), u = Ti(this.months(a, "")), e.push(c), t.push(u), n.push(u), n.push(c);
  e.sort(o), t.sort(o), n.sort(o), this._monthsRegex = new RegExp("^(" + n.join("|") + ")", "i"), this._monthsShortRegex = this._monthsRegex, this._monthsStrictRegex = new RegExp(
    "^(" + t.join("|") + ")",
    "i"
  ), this._monthsShortStrictRegex = new RegExp(
    "^(" + e.join("|") + ")",
    "i"
  );
}
function Gw(o, e, t, n, r, a, c) {
  var u;
  return o < 100 && o >= 0 ? (u = new Date(o + 400, e, t, n, r, a, c), isFinite(u.getFullYear()) && u.setFullYear(o)) : u = new Date(o, e, t, n, r, a, c), u;
}
function fa(o) {
  var e, t;
  return o < 100 && o >= 0 ? (t = Array.prototype.slice.call(arguments), t[0] = o + 400, e = new Date(Date.UTC.apply(null, t)), isFinite(e.getUTCFullYear()) && e.setUTCFullYear(o)) : e = new Date(Date.UTC.apply(null, arguments)), e;
}
function Va(o, e, t) {
  var n = 7 + e - t, r = (7 + fa(o, 0, n).getUTCDay() - e) % 7;
  return -r + n - 1;
}
function Ip(o, e, t, n, r) {
  var a = (7 + t - n) % 7, c = Va(o, n, r), u = 1 + 7 * (e - 1) + a + c, p, g;
  return u <= 0 ? (p = o - 1, g = sa(p) + u) : u > sa(o) ? (p = o + 1, g = u - sa(o)) : (p = o, g = u), {
    year: p,
    dayOfYear: g
  };
}
function ma(o, e, t) {
  var n = Va(o.year(), e, t), r = Math.floor((o.dayOfYear() - n - 1) / 7) + 1, a, c;
  return r < 1 ? (c = o.year() - 1, a = r + _i(c, e, t)) : r > _i(o.year(), e, t) ? (a = r - _i(o.year(), e, t), c = o.year() + 1) : (c = o.year(), a = r), {
    week: a,
    year: c
  };
}
function _i(o, e, t) {
  var n = Va(o, e, t), r = Va(o + 1, e, t);
  return (sa(o) - n + r) / 7;
}
He("w", ["ww", 2], "wo", "week");
He("W", ["WW", 2], "Wo", "isoWeek");
Le("w", It, Ms);
Le("ww", It, tn);
Le("W", It, Ms);
Le("WW", It, tn);
Ta(
  ["w", "ww", "W", "WW"],
  function(o, e, t, n) {
    e[n.substr(0, 1)] = tt(o);
  }
);
function Zw(o) {
  return ma(o, this._week.dow, this._week.doy).week;
}
var Kw = {
  dow: 0,
  // Sunday is the first day of the week.
  doy: 6
  // The week that contains Jan 6th is the first week of the year.
};
function Xw() {
  return this._week.dow;
}
function Jw() {
  return this._week.doy;
}
function Qw(o) {
  var e = this.localeData().week(this);
  return o == null ? e : this.add((o - e) * 7, "d");
}
function ek(o) {
  var e = ma(this, 1, 4).week;
  return o == null ? e : this.add((o - e) * 7, "d");
}
He("d", 0, "do", "day");
He("dd", 0, 0, function(o) {
  return this.localeData().weekdaysMin(this, o);
});
He("ddd", 0, 0, function(o) {
  return this.localeData().weekdaysShort(this, o);
});
He("dddd", 0, 0, function(o) {
  return this.localeData().weekdays(this, o);
});
He("e", 0, 0, "weekday");
He("E", 0, 0, "isoWeekday");
Le("d", It);
Le("e", It);
Le("E", It);
Le("dd", function(o, e) {
  return e.weekdaysMinRegex(o);
});
Le("ddd", function(o, e) {
  return e.weekdaysShortRegex(o);
});
Le("dddd", function(o, e) {
  return e.weekdaysRegex(o);
});
Ta(["dd", "ddd", "dddd"], function(o, e, t, n) {
  var r = t._locale.weekdaysParse(o, n, t._strict);
  r != null ? e.d = r : Ge(t).invalidWeekday = o;
});
Ta(["d", "e", "E"], function(o, e, t, n) {
  e[n] = tt(o);
});
function tk(o, e) {
  return typeof o != "string" ? o : isNaN(o) ? (o = e.weekdaysParse(o), typeof o == "number" ? o : null) : parseInt(o, 10);
}
function ok(o, e) {
  return typeof o == "string" ? e.weekdaysParse(o) % 7 || 7 : isNaN(o) ? null : o;
}
function od(o, e) {
  return o.slice(e, 7).concat(o.slice(0, e));
}
var nk = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), Np = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), ik = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), rk = Sa, sk = Sa, ak = Sa;
function lk(o, e) {
  var t = On(this._weekdays) ? this._weekdays : this._weekdays[o && o !== !0 && this._weekdays.isFormat.test(e) ? "format" : "standalone"];
  return o === !0 ? od(t, this._week.dow) : o ? t[o.day()] : t;
}
function ck(o) {
  return o === !0 ? od(this._weekdaysShort, this._week.dow) : o ? this._weekdaysShort[o.day()] : this._weekdaysShort;
}
function dk(o) {
  return o === !0 ? od(this._weekdaysMin, this._week.dow) : o ? this._weekdaysMin[o.day()] : this._weekdaysMin;
}
function hk(o, e, t) {
  var n, r, a, c = o.toLocaleLowerCase();
  if (!this._weekdaysParse)
    for (this._weekdaysParse = [], this._shortWeekdaysParse = [], this._minWeekdaysParse = [], n = 0; n < 7; ++n)
      a = qn([2e3, 1]).day(n), this._minWeekdaysParse[n] = this.weekdaysMin(
        a,
        ""
      ).toLocaleLowerCase(), this._shortWeekdaysParse[n] = this.weekdaysShort(
        a,
        ""
      ).toLocaleLowerCase(), this._weekdaysParse[n] = this.weekdays(a, "").toLocaleLowerCase();
  return t ? e === "dddd" ? (r = Kt.call(this._weekdaysParse, c), r !== -1 ? r : null) : e === "ddd" ? (r = Kt.call(this._shortWeekdaysParse, c), r !== -1 ? r : null) : (r = Kt.call(this._minWeekdaysParse, c), r !== -1 ? r : null) : e === "dddd" ? (r = Kt.call(this._weekdaysParse, c), r !== -1 || (r = Kt.call(this._shortWeekdaysParse, c), r !== -1) ? r : (r = Kt.call(this._minWeekdaysParse, c), r !== -1 ? r : null)) : e === "ddd" ? (r = Kt.call(this._shortWeekdaysParse, c), r !== -1 || (r = Kt.call(this._weekdaysParse, c), r !== -1) ? r : (r = Kt.call(this._minWeekdaysParse, c), r !== -1 ? r : null)) : (r = Kt.call(this._minWeekdaysParse, c), r !== -1 || (r = Kt.call(this._weekdaysParse, c), r !== -1) ? r : (r = Kt.call(this._shortWeekdaysParse, c), r !== -1 ? r : null));
}
function uk(o, e, t) {
  var n, r, a;
  if (this._weekdaysParseExact)
    return hk.call(this, o, e, t);
  for (this._weekdaysParse || (this._weekdaysParse = [], this._minWeekdaysParse = [], this._shortWeekdaysParse = [], this._fullWeekdaysParse = []), n = 0; n < 7; n++)
    if (r = qn([2e3, 1]).day(n), t && !this._fullWeekdaysParse[n] && (this._fullWeekdaysParse[n] = new RegExp(
      "^" + this.weekdays(r, "").replace(".", "\\.?") + "$",
      "i"
    ), this._shortWeekdaysParse[n] = new RegExp(
      "^" + this.weekdaysShort(r, "").replace(".", "\\.?") + "$",
      "i"
    ), this._minWeekdaysParse[n] = new RegExp(
      "^" + this.weekdaysMin(r, "").replace(".", "\\.?") + "$",
      "i"
    )), this._weekdaysParse[n] || (a = "^" + this.weekdays(r, "") + "|^" + this.weekdaysShort(r, "") + "|^" + this.weekdaysMin(r, ""), this._weekdaysParse[n] = new RegExp(a.replace(".", ""), "i")), t && e === "dddd" && this._fullWeekdaysParse[n].test(o) || t && e === "ddd" && this._shortWeekdaysParse[n].test(o) || t && e === "dd" && this._minWeekdaysParse[n].test(o) || !t && this._weekdaysParse[n].test(o))
      return n;
}
function pk(o) {
  if (!this.isValid())
    return o != null ? this : NaN;
  var e = pa(this, "Day");
  return o != null ? (o = tk(o, this.localeData()), this.add(o - e, "d")) : e;
}
function fk(o) {
  if (!this.isValid())
    return o != null ? this : NaN;
  var e = (this.day() + 7 - this.localeData()._week.dow) % 7;
  return o == null ? e : this.add(o - e, "d");
}
function mk(o) {
  if (!this.isValid())
    return o != null ? this : NaN;
  if (o != null) {
    var e = ok(o, this.localeData());
    return this.day(this.day() % 7 ? e : e - 7);
  } else
    return this.day() || 7;
}
function gk(o) {
  return this._weekdaysParseExact ? (ct(this, "_weekdaysRegex") || nd.call(this), o ? this._weekdaysStrictRegex : this._weekdaysRegex) : (ct(this, "_weekdaysRegex") || (this._weekdaysRegex = rk), this._weekdaysStrictRegex && o ? this._weekdaysStrictRegex : this._weekdaysRegex);
}
function bk(o) {
  return this._weekdaysParseExact ? (ct(this, "_weekdaysRegex") || nd.call(this), o ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (ct(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = sk), this._weekdaysShortStrictRegex && o ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex);
}
function vk(o) {
  return this._weekdaysParseExact ? (ct(this, "_weekdaysRegex") || nd.call(this), o ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (ct(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = ak), this._weekdaysMinStrictRegex && o ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex);
}
function nd() {
  function o(v, x) {
    return x.length - v.length;
  }
  var e = [], t = [], n = [], r = [], a, c, u, p, g;
  for (a = 0; a < 7; a++)
    c = qn([2e3, 1]).day(a), u = Ti(this.weekdaysMin(c, "")), p = Ti(this.weekdaysShort(c, "")), g = Ti(this.weekdays(c, "")), e.push(u), t.push(p), n.push(g), r.push(u), r.push(p), r.push(g);
  e.sort(o), t.sort(o), n.sort(o), r.sort(o), this._weekdaysRegex = new RegExp("^(" + r.join("|") + ")", "i"), this._weekdaysShortRegex = this._weekdaysRegex, this._weekdaysMinRegex = this._weekdaysRegex, this._weekdaysStrictRegex = new RegExp(
    "^(" + n.join("|") + ")",
    "i"
  ), this._weekdaysShortStrictRegex = new RegExp(
    "^(" + t.join("|") + ")",
    "i"
  ), this._weekdaysMinStrictRegex = new RegExp(
    "^(" + e.join("|") + ")",
    "i"
  );
}
function id() {
  return this.hours() % 12 || 12;
}
function yk() {
  return this.hours() || 24;
}
He("H", ["HH", 2], 0, "hour");
He("h", ["hh", 2], 0, id);
He("k", ["kk", 2], 0, yk);
He("hmm", 0, 0, function() {
  return "" + id.apply(this) + zn(this.minutes(), 2);
});
He("hmmss", 0, 0, function() {
  return "" + id.apply(this) + zn(this.minutes(), 2) + zn(this.seconds(), 2);
});
He("Hmm", 0, 0, function() {
  return "" + this.hours() + zn(this.minutes(), 2);
});
He("Hmmss", 0, 0, function() {
  return "" + this.hours() + zn(this.minutes(), 2) + zn(this.seconds(), 2);
});
function Pp(o, e) {
  He(o, 0, 0, function() {
    return this.localeData().meridiem(
      this.hours(),
      this.minutes(),
      e
    );
  });
}
Pp("a", !0);
Pp("A", !1);
function Hp(o, e) {
  return e._meridiemParse;
}
Le("a", Hp);
Le("A", Hp);
Le("H", It, ed);
Le("h", It, Ms);
Le("k", It, Ms);
Le("HH", It, tn);
Le("hh", It, tn);
Le("kk", It, tn);
Le("hmm", _p);
Le("hmmss", Ep);
Le("Hmm", _p);
Le("Hmmss", Ep);
kt(["H", "HH"], oo);
kt(["k", "kk"], function(o, e, t) {
  var n = tt(o);
  e[oo] = n === 24 ? 0 : n;
});
kt(["a", "A"], function(o, e, t) {
  t._isPm = t._locale.isPM(o), t._meridiem = o;
});
kt(["h", "hh"], function(o, e, t) {
  e[oo] = tt(o), Ge(t).bigHour = !0;
});
kt("hmm", function(o, e, t) {
  var n = o.length - 2;
  e[oo] = tt(o.substr(0, n)), e[_n] = tt(o.substr(n)), Ge(t).bigHour = !0;
});
kt("hmmss", function(o, e, t) {
  var n = o.length - 4, r = o.length - 2;
  e[oo] = tt(o.substr(0, n)), e[_n] = tt(o.substr(n, 2)), e[xi] = tt(o.substr(r)), Ge(t).bigHour = !0;
});
kt("Hmm", function(o, e, t) {
  var n = o.length - 2;
  e[oo] = tt(o.substr(0, n)), e[_n] = tt(o.substr(n));
});
kt("Hmmss", function(o, e, t) {
  var n = o.length - 4, r = o.length - 2;
  e[oo] = tt(o.substr(0, n)), e[_n] = tt(o.substr(n, 2)), e[xi] = tt(o.substr(r));
});
function wk(o) {
  return (o + "").toLowerCase().charAt(0) === "p";
}
var kk = /[ap]\.?m?\.?/i, xk = Ds("Hours", !0);
function Ck(o, e, t) {
  return o > 11 ? t ? "pm" : "PM" : t ? "am" : "AM";
}
var jp = {
  calendar: hw,
  longDateFormat: mw,
  invalidDate: bw,
  ordinal: yw,
  dayOfMonthOrdinalParse: ww,
  relativeTime: xw,
  months: Hw,
  monthsShort: Op,
  week: Kw,
  weekdays: nk,
  weekdaysMin: ik,
  weekdaysShort: Np,
  meridiemParse: kk
}, jt = {}, ea = {}, ga;
function Sk(o, e) {
  var t, n = Math.min(o.length, e.length);
  for (t = 0; t < n; t += 1)
    if (o[t] !== e[t])
      return t;
  return n;
}
function Sh(o) {
  return o && o.toLowerCase().replace("_", "-");
}
function Tk(o) {
  for (var e = 0, t, n, r, a; e < o.length; ) {
    for (a = Sh(o[e]).split("-"), t = a.length, n = Sh(o[e + 1]), n = n ? n.split("-") : null; t > 0; ) {
      if (r = yl(a.slice(0, t).join("-")), r)
        return r;
      if (n && n.length >= t && Sk(a, n) >= t - 1)
        break;
      t--;
    }
    e++;
  }
  return ga;
}
function _k(o) {
  return !!(o && o.match("^[^/\\\\]*$"));
}
function yl(o) {
  var e = null, t;
  if (jt[o] === void 0 && typeof module < "u" && module && module.exports && _k(o))
    try {
      e = ga._abbr, t = require, t("./locale/" + o), or(e);
    } catch {
      jt[o] = null;
    }
  return jt[o];
}
function or(o, e) {
  var t;
  return o && (jo(e) ? t = Li(o) : t = rd(o, e), t ? ga = t : typeof console < "u" && console.warn && console.warn(
    "Locale " + o + " not found. Did you forget to load it?"
  )), ga._abbr;
}
function rd(o, e) {
  if (e !== null) {
    var t, n = jp;
    if (e.abbr = o, jt[o] != null)
      xp(
        "defineLocaleOverride",
        "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
      ), n = jt[o]._config;
    else if (e.parentLocale != null)
      if (jt[e.parentLocale] != null)
        n = jt[e.parentLocale]._config;
      else if (t = yl(e.parentLocale), t != null)
        n = t._config;
      else
        return ea[e.parentLocale] || (ea[e.parentLocale] = []), ea[e.parentLocale].push({
          name: o,
          config: e
        }), null;
    return jt[o] = new Zc(sc(n, e)), ea[o] && ea[o].forEach(function(r) {
      rd(r.name, r.config);
    }), or(o), jt[o];
  } else
    return delete jt[o], null;
}
function Ek(o, e) {
  if (e != null) {
    var t, n, r = jp;
    jt[o] != null && jt[o].parentLocale != null ? jt[o].set(sc(jt[o]._config, e)) : (n = yl(o), n != null && (r = n._config), e = sc(r, e), n == null && (e.abbr = o), t = new Zc(e), t.parentLocale = jt[o], jt[o] = t), or(o);
  } else
    jt[o] != null && (jt[o].parentLocale != null ? (jt[o] = jt[o].parentLocale, o === or() && or(o)) : jt[o] != null && delete jt[o]);
  return jt[o];
}
function Li(o) {
  var e;
  if (o && o._locale && o._locale._abbr && (o = o._locale._abbr), !o)
    return ga;
  if (!On(o)) {
    if (e = yl(o), e)
      return e;
    o = [o];
  }
  return Tk(o);
}
function Mk() {
  return ac(jt);
}
function sd(o) {
  var e, t = o._a;
  return t && Ge(o).overflow === -2 && (e = t[ki] < 0 || t[ki] > 11 ? ki : t[Yn] < 1 || t[Yn] > td(t[wo], t[ki]) ? Yn : t[oo] < 0 || t[oo] > 24 || t[oo] === 24 && (t[_n] !== 0 || t[xi] !== 0 || t[Rr] !== 0) ? oo : t[_n] < 0 || t[_n] > 59 ? _n : t[xi] < 0 || t[xi] > 59 ? xi : t[Rr] < 0 || t[Rr] > 999 ? Rr : -1, Ge(o)._overflowDayOfYear && (e < wo || e > Yn) && (e = Yn), Ge(o)._overflowWeeks && e === -1 && (e = Aw), Ge(o)._overflowWeekday && e === -1 && (e = Bw), Ge(o).overflow = e), o;
}
var Dk = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, Ok = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, Lk = /Z|[+-]\d\d(?::?\d\d)?/, Da = [
  ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
  ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
  ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
  ["GGGG-[W]WW", /\d{4}-W\d\d/, !1],
  ["YYYY-DDD", /\d{4}-\d{3}/],
  ["YYYY-MM", /\d{4}-\d\d/, !1],
  ["YYYYYYMMDD", /[+-]\d{10}/],
  ["YYYYMMDD", /\d{8}/],
  ["GGGG[W]WWE", /\d{4}W\d{3}/],
  ["GGGG[W]WW", /\d{4}W\d{2}/, !1],
  ["YYYYDDD", /\d{7}/],
  ["YYYYMM", /\d{6}/, !1],
  ["YYYY", /\d{4}/, !1]
], jl = [
  ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
  ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
  ["HH:mm:ss", /\d\d:\d\d:\d\d/],
  ["HH:mm", /\d\d:\d\d/],
  ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
  ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
  ["HHmmss", /\d\d\d\d\d\d/],
  ["HHmm", /\d\d\d\d/],
  ["HH", /\d\d/]
], Ak = /^\/?Date\((-?\d+)/i, Bk = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/, Rk = {
  UT: 0,
  GMT: 0,
  EDT: -4 * 60,
  EST: -5 * 60,
  CDT: -5 * 60,
  CST: -6 * 60,
  MDT: -6 * 60,
  MST: -7 * 60,
  PDT: -7 * 60,
  PST: -8 * 60
};
function $p(o) {
  var e, t, n = o._i, r = Dk.exec(n) || Ok.exec(n), a, c, u, p, g = Da.length, v = jl.length;
  if (r) {
    for (Ge(o).iso = !0, e = 0, t = g; e < t; e++)
      if (Da[e][1].exec(r[1])) {
        c = Da[e][0], a = Da[e][2] !== !1;
        break;
      }
    if (c == null) {
      o._isValid = !1;
      return;
    }
    if (r[3]) {
      for (e = 0, t = v; e < t; e++)
        if (jl[e][1].exec(r[3])) {
          u = (r[2] || " ") + jl[e][0];
          break;
        }
      if (u == null) {
        o._isValid = !1;
        return;
      }
    }
    if (!a && u != null) {
      o._isValid = !1;
      return;
    }
    if (r[4])
      if (Lk.exec(r[4]))
        p = "Z";
      else {
        o._isValid = !1;
        return;
      }
    o._f = c + (u || "") + (p || ""), ld(o);
  } else
    o._isValid = !1;
}
function Ik(o, e, t, n, r, a) {
  var c = [
    Nk(o),
    Op.indexOf(e),
    parseInt(t, 10),
    parseInt(n, 10),
    parseInt(r, 10)
  ];
  return a && c.push(parseInt(a, 10)), c;
}
function Nk(o) {
  var e = parseInt(o, 10);
  return e <= 49 ? 2e3 + e : e <= 999 ? 1900 + e : e;
}
function Pk(o) {
  return o.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
}
function Hk(o, e, t) {
  if (o) {
    var n = Np.indexOf(o), r = new Date(
      e[0],
      e[1],
      e[2]
    ).getDay();
    if (n !== r)
      return Ge(t).weekdayMismatch = !0, t._isValid = !1, !1;
  }
  return !0;
}
function jk(o, e, t) {
  if (o)
    return Rk[o];
  if (e)
    return 0;
  var n = parseInt(t, 10), r = n % 100, a = (n - r) / 100;
  return a * 60 + r;
}
function Yp(o) {
  var e = Bk.exec(Pk(o._i)), t;
  if (e) {
    if (t = Ik(
      e[4],
      e[3],
      e[2],
      e[5],
      e[6],
      e[7]
    ), !Hk(e[1], t, o))
      return;
    o._a = t, o._tzm = jk(e[8], e[9], e[10]), o._d = fa.apply(null, o._a), o._d.setUTCMinutes(o._d.getUTCMinutes() - o._tzm), Ge(o).rfc2822 = !0;
  } else
    o._isValid = !1;
}
function $k(o) {
  var e = Ak.exec(o._i);
  if (e !== null) {
    o._d = /* @__PURE__ */ new Date(+e[1]);
    return;
  }
  if ($p(o), o._isValid === !1)
    delete o._isValid;
  else
    return;
  if (Yp(o), o._isValid === !1)
    delete o._isValid;
  else
    return;
  o._strict ? o._isValid = !1 : pe.createFromInputFallback(o);
}
pe.createFromInputFallback = un(
  "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",
  function(o) {
    o._d = /* @__PURE__ */ new Date(o._i + (o._useUTC ? " UTC" : ""));
  }
);
function ds(o, e, t) {
  return o ?? e ?? t;
}
function Yk(o) {
  var e = new Date(pe.now());
  return o._useUTC ? [
    e.getUTCFullYear(),
    e.getUTCMonth(),
    e.getUTCDate()
  ] : [e.getFullYear(), e.getMonth(), e.getDate()];
}
function ad(o) {
  var e, t, n = [], r, a, c;
  if (!o._d) {
    for (r = Yk(o), o._w && o._a[Yn] == null && o._a[ki] == null && Fk(o), o._dayOfYear != null && (c = ds(o._a[wo], r[wo]), (o._dayOfYear > sa(c) || o._dayOfYear === 0) && (Ge(o)._overflowDayOfYear = !0), t = fa(c, 0, o._dayOfYear), o._a[ki] = t.getUTCMonth(), o._a[Yn] = t.getUTCDate()), e = 0; e < 3 && o._a[e] == null; ++e)
      o._a[e] = n[e] = r[e];
    for (; e < 7; e++)
      o._a[e] = n[e] = o._a[e] == null ? e === 2 ? 1 : 0 : o._a[e];
    o._a[oo] === 24 && o._a[_n] === 0 && o._a[xi] === 0 && o._a[Rr] === 0 && (o._nextDay = !0, o._a[oo] = 0), o._d = (o._useUTC ? fa : Gw).apply(
      null,
      n
    ), a = o._useUTC ? o._d.getUTCDay() : o._d.getDay(), o._tzm != null && o._d.setUTCMinutes(o._d.getUTCMinutes() - o._tzm), o._nextDay && (o._a[oo] = 24), o._w && typeof o._w.d < "u" && o._w.d !== a && (Ge(o).weekdayMismatch = !0);
  }
}
function Fk(o) {
  var e, t, n, r, a, c, u, p, g;
  e = o._w, e.GG != null || e.W != null || e.E != null ? (a = 1, c = 4, t = ds(
    e.GG,
    o._a[wo],
    ma(Bt(), 1, 4).year
  ), n = ds(e.W, 1), r = ds(e.E, 1), (r < 1 || r > 7) && (p = !0)) : (a = o._locale._week.dow, c = o._locale._week.doy, g = ma(Bt(), a, c), t = ds(e.gg, o._a[wo], g.year), n = ds(e.w, g.week), e.d != null ? (r = e.d, (r < 0 || r > 6) && (p = !0)) : e.e != null ? (r = e.e + a, (e.e < 0 || e.e > 6) && (p = !0)) : r = a), n < 1 || n > _i(t, a, c) ? Ge(o)._overflowWeeks = !0 : p != null ? Ge(o)._overflowWeekday = !0 : (u = Ip(t, n, r, a, c), o._a[wo] = u.year, o._dayOfYear = u.dayOfYear);
}
pe.ISO_8601 = function() {
};
pe.RFC_2822 = function() {
};
function ld(o) {
  if (o._f === pe.ISO_8601) {
    $p(o);
    return;
  }
  if (o._f === pe.RFC_2822) {
    Yp(o);
    return;
  }
  o._a = [], Ge(o).empty = !0;
  var e = "" + o._i, t, n, r, a, c, u = e.length, p = 0, g, v;
  for (r = Cp(o._f, o._locale).match(Kc) || [], v = r.length, t = 0; t < v; t++)
    a = r[t], n = (e.match(Dw(a, o)) || [])[0], n && (c = e.substr(0, e.indexOf(n)), c.length > 0 && Ge(o).unusedInput.push(c), e = e.slice(
      e.indexOf(n) + n.length
    ), p += n.length), bs[a] ? (n ? Ge(o).empty = !1 : Ge(o).unusedTokens.push(a), Lw(a, n, o)) : o._strict && !n && Ge(o).unusedTokens.push(a);
  Ge(o).charsLeftOver = u - p, e.length > 0 && Ge(o).unusedInput.push(e), o._a[oo] <= 12 && Ge(o).bigHour === !0 && o._a[oo] > 0 && (Ge(o).bigHour = void 0), Ge(o).parsedDateParts = o._a.slice(0), Ge(o).meridiem = o._meridiem, o._a[oo] = zk(
    o._locale,
    o._a[oo],
    o._meridiem
  ), g = Ge(o).era, g !== null && (o._a[wo] = o._locale.erasConvertYear(g, o._a[wo])), ad(o), sd(o);
}
function zk(o, e, t) {
  var n;
  return t == null ? e : o.meridiemHour != null ? o.meridiemHour(e, t) : (o.isPM != null && (n = o.isPM(t), n && e < 12 && (e += 12), !n && e === 12 && (e = 0)), e);
}
function Wk(o) {
  var e, t, n, r, a, c, u = !1, p = o._f.length;
  if (p === 0) {
    Ge(o).invalidFormat = !0, o._d = /* @__PURE__ */ new Date(NaN);
    return;
  }
  for (r = 0; r < p; r++)
    a = 0, c = !1, e = Gc({}, o), o._useUTC != null && (e._useUTC = o._useUTC), e._f = o._f[r], ld(e), Vc(e) && (c = !0), a += Ge(e).charsLeftOver, a += Ge(e).unusedTokens.length * 10, Ge(e).score = a, u ? a < n && (n = a, t = e) : (n == null || a < n || c) && (n = a, t = e, c && (u = !0));
  Qi(o, t || e);
}
function Uk(o) {
  if (!o._d) {
    var e = Xc(o._i), t = e.day === void 0 ? e.date : e.day;
    o._a = wp(
      [e.year, e.month, t, e.hour, e.minute, e.second, e.millisecond],
      function(n) {
        return n && parseInt(n, 10);
      }
    ), ad(o);
  }
}
function qk(o) {
  var e = new Ca(sd(Fp(o)));
  return e._nextDay && (e.add(1, "d"), e._nextDay = void 0), e;
}
function Fp(o) {
  var e = o._i, t = o._f;
  return o._locale = o._locale || Li(o._l), e === null || t === void 0 && e === "" ? ul({ nullInput: !0 }) : (typeof e == "string" && (o._i = e = o._locale.preparse(e)), Ln(e) ? new Ca(sd(e)) : (xa(e) ? o._d = e : On(t) ? Wk(o) : t ? ld(o) : Vk(o), Vc(o) || (o._d = null), o));
}
function Vk(o) {
  var e = o._i;
  jo(e) ? o._d = new Date(pe.now()) : xa(e) ? o._d = new Date(e.valueOf()) : typeof e == "string" ? $k(o) : On(e) ? (o._a = wp(e.slice(0), function(t) {
    return parseInt(t, 10);
  }), ad(o)) : Pr(e) ? Uk(o) : Mi(e) ? o._d = new Date(e) : pe.createFromInputFallback(o);
}
function zp(o, e, t, n, r) {
  var a = {};
  return (e === !0 || e === !1) && (n = e, e = void 0), (t === !0 || t === !1) && (n = t, t = void 0), (Pr(o) && qc(o) || On(o) && o.length === 0) && (o = void 0), a._isAMomentObject = !0, a._useUTC = a._isUTC = r, a._l = t, a._i = o, a._f = e, a._strict = n, qk(a);
}
function Bt(o, e, t, n) {
  return zp(o, e, t, n, !1);
}
var Gk = un(
  "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",
  function() {
    var o = Bt.apply(null, arguments);
    return this.isValid() && o.isValid() ? o < this ? this : o : ul();
  }
), Zk = un(
  "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",
  function() {
    var o = Bt.apply(null, arguments);
    return this.isValid() && o.isValid() ? o > this ? this : o : ul();
  }
);
function Wp(o, e) {
  var t, n;
  if (e.length === 1 && On(e[0]) && (e = e[0]), !e.length)
    return Bt();
  for (t = e[0], n = 1; n < e.length; ++n)
    (!e[n].isValid() || e[n][o](t)) && (t = e[n]);
  return t;
}
function Kk() {
  var o = [].slice.call(arguments, 0);
  return Wp("isBefore", o);
}
function Xk() {
  var o = [].slice.call(arguments, 0);
  return Wp("isAfter", o);
}
var Jk = function() {
  return Date.now ? Date.now() : +/* @__PURE__ */ new Date();
}, ta = [
  "year",
  "quarter",
  "month",
  "week",
  "day",
  "hour",
  "minute",
  "second",
  "millisecond"
];
function Qk(o) {
  var e, t = !1, n, r = ta.length;
  for (e in o)
    if (ct(o, e) && !(Kt.call(ta, e) !== -1 && (o[e] == null || !isNaN(o[e]))))
      return !1;
  for (n = 0; n < r; ++n)
    if (o[ta[n]]) {
      if (t)
        return !1;
      parseFloat(o[ta[n]]) !== tt(o[ta[n]]) && (t = !0);
    }
  return !0;
}
function ex() {
  return this._isValid;
}
function tx() {
  return Rn(NaN);
}
function wl(o) {
  var e = Xc(o), t = e.year || 0, n = e.quarter || 0, r = e.month || 0, a = e.week || e.isoWeek || 0, c = e.day || 0, u = e.hour || 0, p = e.minute || 0, g = e.second || 0, v = e.millisecond || 0;
  this._isValid = Qk(e), this._milliseconds = +v + g * 1e3 + // 1000
  p * 6e4 + // 1000 * 60
  u * 1e3 * 60 * 60, this._days = +c + a * 7, this._months = +r + n * 3 + t * 12, this._data = {}, this._locale = Li(), this._bubble();
}
function Ha(o) {
  return o instanceof wl;
}
function cc(o) {
  return o < 0 ? Math.round(-1 * o) * -1 : Math.round(o);
}
function ox(o, e, t) {
  var n = Math.min(o.length, e.length), r = Math.abs(o.length - e.length), a = 0, c;
  for (c = 0; c < n; c++)
    (t && o[c] !== e[c] || !t && tt(o[c]) !== tt(e[c])) && a++;
  return a + r;
}
function Up(o, e) {
  He(o, 0, 0, function() {
    var t = this.utcOffset(), n = "+";
    return t < 0 && (t = -t, n = "-"), n + zn(~~(t / 60), 2) + e + zn(~~t % 60, 2);
  });
}
Up("Z", ":");
Up("ZZ", "");
Le("Z", bl);
Le("ZZ", bl);
kt(["Z", "ZZ"], function(o, e, t) {
  t._useUTC = !0, t._tzm = cd(bl, o);
});
var nx = /([\+\-]|\d\d)/gi;
function cd(o, e) {
  var t = (e || "").match(o), n, r, a;
  return t === null ? null : (n = t[t.length - 1] || [], r = (n + "").match(nx) || ["-", 0, 0], a = +(r[1] * 60) + tt(r[2]), a === 0 ? 0 : r[0] === "+" ? a : -a);
}
function dd(o, e) {
  var t, n;
  return e._isUTC ? (t = e.clone(), n = (Ln(o) || xa(o) ? o.valueOf() : Bt(o).valueOf()) - t.valueOf(), t._d.setTime(t._d.valueOf() + n), pe.updateOffset(t, !1), t) : Bt(o).local();
}
function dc(o) {
  return -Math.round(o._d.getTimezoneOffset());
}
pe.updateOffset = function() {
};
function ix(o, e, t) {
  var n = this._offset || 0, r;
  if (!this.isValid())
    return o != null ? this : NaN;
  if (o != null) {
    if (typeof o == "string") {
      if (o = cd(bl, o), o === null)
        return this;
    } else
      Math.abs(o) < 16 && !t && (o = o * 60);
    return !this._isUTC && e && (r = dc(this)), this._offset = o, this._isUTC = !0, r != null && this.add(r, "m"), n !== o && (!e || this._changeInProgress ? Gp(
      this,
      Rn(o - n, "m"),
      1,
      !1
    ) : this._changeInProgress || (this._changeInProgress = !0, pe.updateOffset(this, !0), this._changeInProgress = null)), this;
  } else
    return this._isUTC ? n : dc(this);
}
function rx(o, e) {
  return o != null ? (typeof o != "string" && (o = -o), this.utcOffset(o, e), this) : -this.utcOffset();
}
function sx(o) {
  return this.utcOffset(0, o);
}
function ax(o) {
  return this._isUTC && (this.utcOffset(0, o), this._isUTC = !1, o && this.subtract(dc(this), "m")), this;
}
function lx() {
  if (this._tzm != null)
    this.utcOffset(this._tzm, !1, !0);
  else if (typeof this._i == "string") {
    var o = cd(Ew, this._i);
    o != null ? this.utcOffset(o) : this.utcOffset(0, !0);
  }
  return this;
}
function cx(o) {
  return this.isValid() ? (o = o ? Bt(o).utcOffset() : 0, (this.utcOffset() - o) % 60 === 0) : !1;
}
function dx() {
  return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
}
function hx() {
  if (!jo(this._isDSTShifted))
    return this._isDSTShifted;
  var o = {}, e;
  return Gc(o, this), o = Fp(o), o._a ? (e = o._isUTC ? qn(o._a) : Bt(o._a), this._isDSTShifted = this.isValid() && ox(o._a, e.toArray()) > 0) : this._isDSTShifted = !1, this._isDSTShifted;
}
function ux() {
  return this.isValid() ? !this._isUTC : !1;
}
function px() {
  return this.isValid() ? this._isUTC : !1;
}
function qp() {
  return this.isValid() ? this._isUTC && this._offset === 0 : !1;
}
var fx = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/, mx = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
function Rn(o, e) {
  var t = o, n = null, r, a, c;
  return Ha(o) ? t = {
    ms: o._milliseconds,
    d: o._days,
    M: o._months
  } : Mi(o) || !isNaN(+o) ? (t = {}, e ? t[e] = +o : t.milliseconds = +o) : (n = fx.exec(o)) ? (r = n[1] === "-" ? -1 : 1, t = {
    y: 0,
    d: tt(n[Yn]) * r,
    h: tt(n[oo]) * r,
    m: tt(n[_n]) * r,
    s: tt(n[xi]) * r,
    ms: tt(cc(n[Rr] * 1e3)) * r
    // the millisecond decimal point is included in the match
  }) : (n = mx.exec(o)) ? (r = n[1] === "-" ? -1 : 1, t = {
    y: Lr(n[2], r),
    M: Lr(n[3], r),
    w: Lr(n[4], r),
    d: Lr(n[5], r),
    h: Lr(n[6], r),
    m: Lr(n[7], r),
    s: Lr(n[8], r)
  }) : t == null ? t = {} : typeof t == "object" && ("from" in t || "to" in t) && (c = gx(
    Bt(t.from),
    Bt(t.to)
  ), t = {}, t.ms = c.milliseconds, t.M = c.months), a = new wl(t), Ha(o) && ct(o, "_locale") && (a._locale = o._locale), Ha(o) && ct(o, "_isValid") && (a._isValid = o._isValid), a;
}
Rn.fn = wl.prototype;
Rn.invalid = tx;
function Lr(o, e) {
  var t = o && parseFloat(o.replace(",", "."));
  return (isNaN(t) ? 0 : t) * e;
}
function Th(o, e) {
  var t = {};
  return t.months = e.month() - o.month() + (e.year() - o.year()) * 12, o.clone().add(t.months, "M").isAfter(e) && --t.months, t.milliseconds = +e - +o.clone().add(t.months, "M"), t;
}
function gx(o, e) {
  var t;
  return o.isValid() && e.isValid() ? (e = dd(e, o), o.isBefore(e) ? t = Th(o, e) : (t = Th(e, o), t.milliseconds = -t.milliseconds, t.months = -t.months), t) : { milliseconds: 0, months: 0 };
}
function Vp(o, e) {
  return function(t, n) {
    var r, a;
    return n !== null && !isNaN(+n) && (xp(
      e,
      "moment()." + e + "(period, number) is deprecated. Please use moment()." + e + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."
    ), a = t, t = n, n = a), r = Rn(t, n), Gp(this, r, o), this;
  };
}
function Gp(o, e, t, n) {
  var r = e._milliseconds, a = cc(e._days), c = cc(e._months);
  o.isValid() && (n = n ?? !0, c && Ap(o, pa(o, "Month") + c * t), a && Dp(o, "Date", pa(o, "Date") + a * t), r && o._d.setTime(o._d.valueOf() + r * t), n && pe.updateOffset(o, a || c));
}
var bx = Vp(1, "add"), vx = Vp(-1, "subtract");
function Zp(o) {
  return typeof o == "string" || o instanceof String;
}
function yx(o) {
  return Ln(o) || xa(o) || Zp(o) || Mi(o) || kx(o) || wx(o) || o === null || o === void 0;
}
function wx(o) {
  var e = Pr(o) && !qc(o), t = !1, n = [
    "years",
    "year",
    "y",
    "months",
    "month",
    "M",
    "days",
    "day",
    "d",
    "dates",
    "date",
    "D",
    "hours",
    "hour",
    "h",
    "minutes",
    "minute",
    "m",
    "seconds",
    "second",
    "s",
    "milliseconds",
    "millisecond",
    "ms"
  ], r, a, c = n.length;
  for (r = 0; r < c; r += 1)
    a = n[r], t = t || ct(o, a);
  return e && t;
}
function kx(o) {
  var e = On(o), t = !1;
  return e && (t = o.filter(function(n) {
    return !Mi(n) && Zp(o);
  }).length === 0), e && t;
}
function xx(o) {
  var e = Pr(o) && !qc(o), t = !1, n = [
    "sameDay",
    "nextDay",
    "lastDay",
    "nextWeek",
    "lastWeek",
    "sameElse"
  ], r, a;
  for (r = 0; r < n.length; r += 1)
    a = n[r], t = t || ct(o, a);
  return e && t;
}
function Cx(o, e) {
  var t = o.diff(e, "days", !0);
  return t < -6 ? "sameElse" : t < -1 ? "lastWeek" : t < 0 ? "lastDay" : t < 1 ? "sameDay" : t < 2 ? "nextDay" : t < 7 ? "nextWeek" : "sameElse";
}
function Sx(o, e) {
  arguments.length === 1 && (arguments[0] ? yx(arguments[0]) ? (o = arguments[0], e = void 0) : xx(arguments[0]) && (e = arguments[0], o = void 0) : (o = void 0, e = void 0));
  var t = o || Bt(), n = dd(t, this).startOf("day"), r = pe.calendarFormat(this, n) || "sameElse", a = e && (Vn(e[r]) ? e[r].call(this, t) : e[r]);
  return this.format(
    a || this.localeData().calendar(r, this, Bt(t))
  );
}
function Tx() {
  return new Ca(this);
}
function _x(o, e) {
  var t = Ln(o) ? o : Bt(o);
  return this.isValid() && t.isValid() ? (e = pn(e) || "millisecond", e === "millisecond" ? this.valueOf() > t.valueOf() : t.valueOf() < this.clone().startOf(e).valueOf()) : !1;
}
function Ex(o, e) {
  var t = Ln(o) ? o : Bt(o);
  return this.isValid() && t.isValid() ? (e = pn(e) || "millisecond", e === "millisecond" ? this.valueOf() < t.valueOf() : this.clone().endOf(e).valueOf() < t.valueOf()) : !1;
}
function Mx(o, e, t, n) {
  var r = Ln(o) ? o : Bt(o), a = Ln(e) ? e : Bt(e);
  return this.isValid() && r.isValid() && a.isValid() ? (n = n || "()", (n[0] === "(" ? this.isAfter(r, t) : !this.isBefore(r, t)) && (n[1] === ")" ? this.isBefore(a, t) : !this.isAfter(a, t))) : !1;
}
function Dx(o, e) {
  var t = Ln(o) ? o : Bt(o), n;
  return this.isValid() && t.isValid() ? (e = pn(e) || "millisecond", e === "millisecond" ? this.valueOf() === t.valueOf() : (n = t.valueOf(), this.clone().startOf(e).valueOf() <= n && n <= this.clone().endOf(e).valueOf())) : !1;
}
function Ox(o, e) {
  return this.isSame(o, e) || this.isAfter(o, e);
}
function Lx(o, e) {
  return this.isSame(o, e) || this.isBefore(o, e);
}
function Ax(o, e, t) {
  var n, r, a;
  if (!this.isValid())
    return NaN;
  if (n = dd(o, this), !n.isValid())
    return NaN;
  switch (r = (n.utcOffset() - this.utcOffset()) * 6e4, e = pn(e), e) {
    case "year":
      a = ja(this, n) / 12;
      break;
    case "month":
      a = ja(this, n);
      break;
    case "quarter":
      a = ja(this, n) / 3;
      break;
    case "second":
      a = (this - n) / 1e3;
      break;
    case "minute":
      a = (this - n) / 6e4;
      break;
    case "hour":
      a = (this - n) / 36e5;
      break;
    case "day":
      a = (this - n - r) / 864e5;
      break;
    case "week":
      a = (this - n - r) / 6048e5;
      break;
    default:
      a = this - n;
  }
  return t ? a : ln(a);
}
function ja(o, e) {
  if (o.date() < e.date())
    return -ja(e, o);
  var t = (e.year() - o.year()) * 12 + (e.month() - o.month()), n = o.clone().add(t, "months"), r, a;
  return e - n < 0 ? (r = o.clone().add(t - 1, "months"), a = (e - n) / (n - r)) : (r = o.clone().add(t + 1, "months"), a = (e - n) / (r - n)), -(t + a) || 0;
}
pe.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
pe.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
function Bx() {
  return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
}
function Rx(o) {
  if (!this.isValid())
    return null;
  var e = o !== !0, t = e ? this.clone().utc() : this;
  return t.year() < 0 || t.year() > 9999 ? Pa(
    t,
    e ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"
  ) : Vn(Date.prototype.toISOString) ? e ? this.toDate().toISOString() : new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", Pa(t, "Z")) : Pa(
    t,
    e ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ"
  );
}
function Ix() {
  if (!this.isValid())
    return "moment.invalid(/* " + this._i + " */)";
  var o = "moment", e = "", t, n, r, a;
  return this.isLocal() || (o = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone", e = "Z"), t = "[" + o + '("]', n = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY", r = "-MM-DD[T]HH:mm:ss.SSS", a = e + '[")]', this.format(t + n + r + a);
}
function Nx(o) {
  o || (o = this.isUtc() ? pe.defaultFormatUtc : pe.defaultFormat);
  var e = Pa(this, o);
  return this.localeData().postformat(e);
}
function Px(o, e) {
  return this.isValid() && (Ln(o) && o.isValid() || Bt(o).isValid()) ? Rn({ to: this, from: o }).locale(this.locale()).humanize(!e) : this.localeData().invalidDate();
}
function Hx(o) {
  return this.from(Bt(), o);
}
function jx(o, e) {
  return this.isValid() && (Ln(o) && o.isValid() || Bt(o).isValid()) ? Rn({ from: this, to: o }).locale(this.locale()).humanize(!e) : this.localeData().invalidDate();
}
function $x(o) {
  return this.to(Bt(), o);
}
function Kp(o) {
  var e;
  return o === void 0 ? this._locale._abbr : (e = Li(o), e != null && (this._locale = e), this);
}
var Xp = un(
  "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
  function(o) {
    return o === void 0 ? this.localeData() : this.locale(o);
  }
);
function Jp() {
  return this._locale;
}
var Ga = 1e3, vs = 60 * Ga, Za = 60 * vs, Qp = (365 * 400 + 97) * 24 * Za;
function ys(o, e) {
  return (o % e + e) % e;
}
function ef(o, e, t) {
  return o < 100 && o >= 0 ? new Date(o + 400, e, t) - Qp : new Date(o, e, t).valueOf();
}
function tf(o, e, t) {
  return o < 100 && o >= 0 ? Date.UTC(o + 400, e, t) - Qp : Date.UTC(o, e, t);
}
function Yx(o) {
  var e, t;
  if (o = pn(o), o === void 0 || o === "millisecond" || !this.isValid())
    return this;
  switch (t = this._isUTC ? tf : ef, o) {
    case "year":
      e = t(this.year(), 0, 1);
      break;
    case "quarter":
      e = t(
        this.year(),
        this.month() - this.month() % 3,
        1
      );
      break;
    case "month":
      e = t(this.year(), this.month(), 1);
      break;
    case "week":
      e = t(
        this.year(),
        this.month(),
        this.date() - this.weekday()
      );
      break;
    case "isoWeek":
      e = t(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1)
      );
      break;
    case "day":
    case "date":
      e = t(this.year(), this.month(), this.date());
      break;
    case "hour":
      e = this._d.valueOf(), e -= ys(
        e + (this._isUTC ? 0 : this.utcOffset() * vs),
        Za
      );
      break;
    case "minute":
      e = this._d.valueOf(), e -= ys(e, vs);
      break;
    case "second":
      e = this._d.valueOf(), e -= ys(e, Ga);
      break;
  }
  return this._d.setTime(e), pe.updateOffset(this, !0), this;
}
function Fx(o) {
  var e, t;
  if (o = pn(o), o === void 0 || o === "millisecond" || !this.isValid())
    return this;
  switch (t = this._isUTC ? tf : ef, o) {
    case "year":
      e = t(this.year() + 1, 0, 1) - 1;
      break;
    case "quarter":
      e = t(
        this.year(),
        this.month() - this.month() % 3 + 3,
        1
      ) - 1;
      break;
    case "month":
      e = t(this.year(), this.month() + 1, 1) - 1;
      break;
    case "week":
      e = t(
        this.year(),
        this.month(),
        this.date() - this.weekday() + 7
      ) - 1;
      break;
    case "isoWeek":
      e = t(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1) + 7
      ) - 1;
      break;
    case "day":
    case "date":
      e = t(this.year(), this.month(), this.date() + 1) - 1;
      break;
    case "hour":
      e = this._d.valueOf(), e += Za - ys(
        e + (this._isUTC ? 0 : this.utcOffset() * vs),
        Za
      ) - 1;
      break;
    case "minute":
      e = this._d.valueOf(), e += vs - ys(e, vs) - 1;
      break;
    case "second":
      e = this._d.valueOf(), e += Ga - ys(e, Ga) - 1;
      break;
  }
  return this._d.setTime(e), pe.updateOffset(this, !0), this;
}
function zx() {
  return this._d.valueOf() - (this._offset || 0) * 6e4;
}
function Wx() {
  return Math.floor(this.valueOf() / 1e3);
}
function Ux() {
  return new Date(this.valueOf());
}
function qx() {
  var o = this;
  return [
    o.year(),
    o.month(),
    o.date(),
    o.hour(),
    o.minute(),
    o.second(),
    o.millisecond()
  ];
}
function Vx() {
  var o = this;
  return {
    years: o.year(),
    months: o.month(),
    date: o.date(),
    hours: o.hours(),
    minutes: o.minutes(),
    seconds: o.seconds(),
    milliseconds: o.milliseconds()
  };
}
function Gx() {
  return this.isValid() ? this.toISOString() : null;
}
function Zx() {
  return Vc(this);
}
function Kx() {
  return Qi({}, Ge(this));
}
function Xx() {
  return Ge(this).overflow;
}
function Jx() {
  return {
    input: this._i,
    format: this._f,
    locale: this._locale,
    isUTC: this._isUTC,
    strict: this._strict
  };
}
He("N", 0, 0, "eraAbbr");
He("NN", 0, 0, "eraAbbr");
He("NNN", 0, 0, "eraAbbr");
He("NNNN", 0, 0, "eraName");
He("NNNNN", 0, 0, "eraNarrow");
He("y", ["y", 1], "yo", "eraYear");
He("y", ["yy", 2], 0, "eraYear");
He("y", ["yyy", 3], 0, "eraYear");
He("y", ["yyyy", 4], 0, "eraYear");
Le("N", hd);
Le("NN", hd);
Le("NNN", hd);
Le("NNNN", c2);
Le("NNNNN", d2);
kt(
  ["N", "NN", "NNN", "NNNN", "NNNNN"],
  function(o, e, t, n) {
    var r = t._locale.erasParse(o, n, t._strict);
    r ? Ge(t).era = r : Ge(t).invalidEra = o;
  }
);
Le("y", Es);
Le("yy", Es);
Le("yyy", Es);
Le("yyyy", Es);
Le("yo", h2);
kt(["y", "yy", "yyy", "yyyy"], wo);
kt(["yo"], function(o, e, t, n) {
  var r;
  t._locale._eraYearOrdinalRegex && (r = o.match(t._locale._eraYearOrdinalRegex)), t._locale.eraYearOrdinalParse ? e[wo] = t._locale.eraYearOrdinalParse(o, r) : e[wo] = parseInt(o, 10);
});
function Qx(o, e) {
  var t, n, r, a = this._eras || Li("en")._eras;
  for (t = 0, n = a.length; t < n; ++t) {
    switch (typeof a[t].since) {
      case "string":
        r = pe(a[t].since).startOf("day"), a[t].since = r.valueOf();
        break;
    }
    switch (typeof a[t].until) {
      case "undefined":
        a[t].until = 1 / 0;
        break;
      case "string":
        r = pe(a[t].until).startOf("day").valueOf(), a[t].until = r.valueOf();
        break;
    }
  }
  return a;
}
function e2(o, e, t) {
  var n, r, a = this.eras(), c, u, p;
  for (o = o.toUpperCase(), n = 0, r = a.length; n < r; ++n)
    if (c = a[n].name.toUpperCase(), u = a[n].abbr.toUpperCase(), p = a[n].narrow.toUpperCase(), t)
      switch (e) {
        case "N":
        case "NN":
        case "NNN":
          if (u === o)
            return a[n];
          break;
        case "NNNN":
          if (c === o)
            return a[n];
          break;
        case "NNNNN":
          if (p === o)
            return a[n];
          break;
      }
    else if ([c, u, p].indexOf(o) >= 0)
      return a[n];
}
function t2(o, e) {
  var t = o.since <= o.until ? 1 : -1;
  return e === void 0 ? pe(o.since).year() : pe(o.since).year() + (e - o.offset) * t;
}
function o2() {
  var o, e, t, n = this.localeData().eras();
  for (o = 0, e = n.length; o < e; ++o)
    if (t = this.clone().startOf("day").valueOf(), n[o].since <= t && t <= n[o].until || n[o].until <= t && t <= n[o].since)
      return n[o].name;
  return "";
}
function n2() {
  var o, e, t, n = this.localeData().eras();
  for (o = 0, e = n.length; o < e; ++o)
    if (t = this.clone().startOf("day").valueOf(), n[o].since <= t && t <= n[o].until || n[o].until <= t && t <= n[o].since)
      return n[o].narrow;
  return "";
}
function i2() {
  var o, e, t, n = this.localeData().eras();
  for (o = 0, e = n.length; o < e; ++o)
    if (t = this.clone().startOf("day").valueOf(), n[o].since <= t && t <= n[o].until || n[o].until <= t && t <= n[o].since)
      return n[o].abbr;
  return "";
}
function r2() {
  var o, e, t, n, r = this.localeData().eras();
  for (o = 0, e = r.length; o < e; ++o)
    if (t = r[o].since <= r[o].until ? 1 : -1, n = this.clone().startOf("day").valueOf(), r[o].since <= n && n <= r[o].until || r[o].until <= n && n <= r[o].since)
      return (this.year() - pe(r[o].since).year()) * t + r[o].offset;
  return this.year();
}
function s2(o) {
  return ct(this, "_erasNameRegex") || ud.call(this), o ? this._erasNameRegex : this._erasRegex;
}
function a2(o) {
  return ct(this, "_erasAbbrRegex") || ud.call(this), o ? this._erasAbbrRegex : this._erasRegex;
}
function l2(o) {
  return ct(this, "_erasNarrowRegex") || ud.call(this), o ? this._erasNarrowRegex : this._erasRegex;
}
function hd(o, e) {
  return e.erasAbbrRegex(o);
}
function c2(o, e) {
  return e.erasNameRegex(o);
}
function d2(o, e) {
  return e.erasNarrowRegex(o);
}
function h2(o, e) {
  return e._eraYearOrdinalRegex || Es;
}
function ud() {
  var o = [], e = [], t = [], n = [], r, a, c, u, p, g = this.eras();
  for (r = 0, a = g.length; r < a; ++r)
    c = Ti(g[r].name), u = Ti(g[r].abbr), p = Ti(g[r].narrow), e.push(c), o.push(u), t.push(p), n.push(c), n.push(u), n.push(p);
  this._erasRegex = new RegExp("^(" + n.join("|") + ")", "i"), this._erasNameRegex = new RegExp("^(" + e.join("|") + ")", "i"), this._erasAbbrRegex = new RegExp("^(" + o.join("|") + ")", "i"), this._erasNarrowRegex = new RegExp(
    "^(" + t.join("|") + ")",
    "i"
  );
}
He(0, ["gg", 2], 0, function() {
  return this.weekYear() % 100;
});
He(0, ["GG", 2], 0, function() {
  return this.isoWeekYear() % 100;
});
function kl(o, e) {
  He(0, [o, o.length], 0, e);
}
kl("gggg", "weekYear");
kl("ggggg", "weekYear");
kl("GGGG", "isoWeekYear");
kl("GGGGG", "isoWeekYear");
Le("G", gl);
Le("g", gl);
Le("GG", It, tn);
Le("gg", It, tn);
Le("GGGG", Qc, Jc);
Le("gggg", Qc, Jc);
Le("GGGGG", ml, pl);
Le("ggggg", ml, pl);
Ta(
  ["gggg", "ggggg", "GGGG", "GGGGG"],
  function(o, e, t, n) {
    e[n.substr(0, 2)] = tt(o);
  }
);
Ta(["gg", "GG"], function(o, e, t, n) {
  e[n] = pe.parseTwoDigitYear(o);
});
function u2(o) {
  return of.call(
    this,
    o,
    this.week(),
    this.weekday() + this.localeData()._week.dow,
    this.localeData()._week.dow,
    this.localeData()._week.doy
  );
}
function p2(o) {
  return of.call(
    this,
    o,
    this.isoWeek(),
    this.isoWeekday(),
    1,
    4
  );
}
function f2() {
  return _i(this.year(), 1, 4);
}
function m2() {
  return _i(this.isoWeekYear(), 1, 4);
}
function g2() {
  var o = this.localeData()._week;
  return _i(this.year(), o.dow, o.doy);
}
function b2() {
  var o = this.localeData()._week;
  return _i(this.weekYear(), o.dow, o.doy);
}
function of(o, e, t, n, r) {
  var a;
  return o == null ? ma(this, n, r).year : (a = _i(o, n, r), e > a && (e = a), v2.call(this, o, e, t, n, r));
}
function v2(o, e, t, n, r) {
  var a = Ip(o, e, t, n, r), c = fa(a.year, 0, a.dayOfYear);
  return this.year(c.getUTCFullYear()), this.month(c.getUTCMonth()), this.date(c.getUTCDate()), this;
}
He("Q", 0, "Qo", "quarter");
Le("Q", Sp);
kt("Q", function(o, e) {
  e[ki] = (tt(o) - 1) * 3;
});
function y2(o) {
  return o == null ? Math.ceil((this.month() + 1) / 3) : this.month((o - 1) * 3 + this.month() % 3);
}
He("D", ["DD", 2], "Do", "date");
Le("D", It, Ms);
Le("DD", It, tn);
Le("Do", function(o, e) {
  return o ? e._dayOfMonthOrdinalParse || e._ordinalParse : e._dayOfMonthOrdinalParseLenient;
});
kt(["D", "DD"], Yn);
kt("Do", function(o, e) {
  e[Yn] = tt(o.match(It)[0]);
});
var nf = Ds("Date", !0);
He("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
Le("DDD", fl);
Le("DDDD", Tp);
kt(["DDD", "DDDD"], function(o, e, t) {
  t._dayOfYear = tt(o);
});
function w2(o) {
  var e = Math.round(
    (this.clone().startOf("day") - this.clone().startOf("year")) / 864e5
  ) + 1;
  return o == null ? e : this.add(o - e, "d");
}
He("m", ["mm", 2], 0, "minute");
Le("m", It, ed);
Le("mm", It, tn);
kt(["m", "mm"], _n);
var k2 = Ds("Minutes", !1);
He("s", ["ss", 2], 0, "second");
Le("s", It, ed);
Le("ss", It, tn);
kt(["s", "ss"], xi);
var x2 = Ds("Seconds", !1);
He("S", 0, 0, function() {
  return ~~(this.millisecond() / 100);
});
He(0, ["SS", 2], 0, function() {
  return ~~(this.millisecond() / 10);
});
He(0, ["SSS", 3], 0, "millisecond");
He(0, ["SSSS", 4], 0, function() {
  return this.millisecond() * 10;
});
He(0, ["SSSSS", 5], 0, function() {
  return this.millisecond() * 100;
});
He(0, ["SSSSSS", 6], 0, function() {
  return this.millisecond() * 1e3;
});
He(0, ["SSSSSSS", 7], 0, function() {
  return this.millisecond() * 1e4;
});
He(0, ["SSSSSSSS", 8], 0, function() {
  return this.millisecond() * 1e5;
});
He(0, ["SSSSSSSSS", 9], 0, function() {
  return this.millisecond() * 1e6;
});
Le("S", fl, Sp);
Le("SS", fl, tn);
Le("SSS", fl, Tp);
var er, rf;
for (er = "SSSS"; er.length <= 9; er += "S")
  Le(er, Es);
function C2(o, e) {
  e[Rr] = tt(("0." + o) * 1e3);
}
for (er = "S"; er.length <= 9; er += "S")
  kt(er, C2);
rf = Ds("Milliseconds", !1);
He("z", 0, 0, "zoneAbbr");
He("zz", 0, 0, "zoneName");
function S2() {
  return this._isUTC ? "UTC" : "";
}
function T2() {
  return this._isUTC ? "Coordinated Universal Time" : "";
}
var ye = Ca.prototype;
ye.add = bx;
ye.calendar = Sx;
ye.clone = Tx;
ye.diff = Ax;
ye.endOf = Fx;
ye.format = Nx;
ye.from = Px;
ye.fromNow = Hx;
ye.to = jx;
ye.toNow = $x;
ye.get = Iw;
ye.invalidAt = Xx;
ye.isAfter = _x;
ye.isBefore = Ex;
ye.isBetween = Mx;
ye.isSame = Dx;
ye.isSameOrAfter = Ox;
ye.isSameOrBefore = Lx;
ye.isValid = Zx;
ye.lang = Xp;
ye.locale = Kp;
ye.localeData = Jp;
ye.max = Zk;
ye.min = Gk;
ye.parsingFlags = Kx;
ye.set = Nw;
ye.startOf = Yx;
ye.subtract = vx;
ye.toArray = qx;
ye.toObject = Vx;
ye.toDate = Ux;
ye.toISOString = Rx;
ye.inspect = Ix;
typeof Symbol < "u" && Symbol.for != null && (ye[Symbol.for("nodejs.util.inspect.custom")] = function() {
  return "Moment<" + this.format() + ">";
});
ye.toJSON = Gx;
ye.toString = Bx;
ye.unix = Wx;
ye.valueOf = zx;
ye.creationData = Jx;
ye.eraName = o2;
ye.eraNarrow = n2;
ye.eraAbbr = i2;
ye.eraYear = r2;
ye.year = Mp;
ye.isLeapYear = Rw;
ye.weekYear = u2;
ye.isoWeekYear = p2;
ye.quarter = ye.quarters = y2;
ye.month = Bp;
ye.daysInMonth = Uw;
ye.week = ye.weeks = Qw;
ye.isoWeek = ye.isoWeeks = ek;
ye.weeksInYear = g2;
ye.weeksInWeekYear = b2;
ye.isoWeeksInYear = f2;
ye.isoWeeksInISOWeekYear = m2;
ye.date = nf;
ye.day = ye.days = pk;
ye.weekday = fk;
ye.isoWeekday = mk;
ye.dayOfYear = w2;
ye.hour = ye.hours = xk;
ye.minute = ye.minutes = k2;
ye.second = ye.seconds = x2;
ye.millisecond = ye.milliseconds = rf;
ye.utcOffset = ix;
ye.utc = sx;
ye.local = ax;
ye.parseZone = lx;
ye.hasAlignedHourOffset = cx;
ye.isDST = dx;
ye.isLocal = ux;
ye.isUtcOffset = px;
ye.isUtc = qp;
ye.isUTC = qp;
ye.zoneAbbr = S2;
ye.zoneName = T2;
ye.dates = un(
  "dates accessor is deprecated. Use date instead.",
  nf
);
ye.months = un(
  "months accessor is deprecated. Use month instead",
  Bp
);
ye.years = un(
  "years accessor is deprecated. Use year instead",
  Mp
);
ye.zone = un(
  "moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",
  rx
);
ye.isDSTShifted = un(
  "isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",
  hx
);
function _2(o) {
  return Bt(o * 1e3);
}
function E2() {
  return Bt.apply(null, arguments).parseZone();
}
function sf(o) {
  return o;
}
var ht = Zc.prototype;
ht.calendar = uw;
ht.longDateFormat = gw;
ht.invalidDate = vw;
ht.ordinal = kw;
ht.preparse = sf;
ht.postformat = sf;
ht.relativeTime = Cw;
ht.pastFuture = Sw;
ht.set = dw;
ht.eras = Qx;
ht.erasParse = e2;
ht.erasConvertYear = t2;
ht.erasAbbrRegex = a2;
ht.erasNameRegex = s2;
ht.erasNarrowRegex = l2;
ht.months = Yw;
ht.monthsShort = Fw;
ht.monthsParse = Ww;
ht.monthsRegex = Vw;
ht.monthsShortRegex = qw;
ht.week = Zw;
ht.firstDayOfYear = Jw;
ht.firstDayOfWeek = Xw;
ht.weekdays = lk;
ht.weekdaysMin = dk;
ht.weekdaysShort = ck;
ht.weekdaysParse = uk;
ht.weekdaysRegex = gk;
ht.weekdaysShortRegex = bk;
ht.weekdaysMinRegex = vk;
ht.isPM = wk;
ht.meridiem = Ck;
function Ka(o, e, t, n) {
  var r = Li(), a = qn().set(n, e);
  return r[t](a, o);
}
function af(o, e, t) {
  if (Mi(o) && (e = o, o = void 0), o = o || "", e != null)
    return Ka(o, e, t, "month");
  var n, r = [];
  for (n = 0; n < 12; n++)
    r[n] = Ka(o, n, t, "month");
  return r;
}
function pd(o, e, t, n) {
  typeof o == "boolean" ? (Mi(e) && (t = e, e = void 0), e = e || "") : (e = o, t = e, o = !1, Mi(e) && (t = e, e = void 0), e = e || "");
  var r = Li(), a = o ? r._week.dow : 0, c, u = [];
  if (t != null)
    return Ka(e, (t + a) % 7, n, "day");
  for (c = 0; c < 7; c++)
    u[c] = Ka(e, (c + a) % 7, n, "day");
  return u;
}
function M2(o, e) {
  return af(o, e, "months");
}
function D2(o, e) {
  return af(o, e, "monthsShort");
}
function O2(o, e, t) {
  return pd(o, e, t, "weekdays");
}
function L2(o, e, t) {
  return pd(o, e, t, "weekdaysShort");
}
function A2(o, e, t) {
  return pd(o, e, t, "weekdaysMin");
}
or("en", {
  eras: [
    {
      since: "0001-01-01",
      until: 1 / 0,
      offset: 1,
      name: "Anno Domini",
      narrow: "AD",
      abbr: "AD"
    },
    {
      since: "0000-12-31",
      until: -1 / 0,
      offset: 1,
      name: "Before Christ",
      narrow: "BC",
      abbr: "BC"
    }
  ],
  dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
  ordinal: function(o) {
    var e = o % 10, t = tt(o % 100 / 10) === 1 ? "th" : e === 1 ? "st" : e === 2 ? "nd" : e === 3 ? "rd" : "th";
    return o + t;
  }
});
pe.lang = un(
  "moment.lang is deprecated. Use moment.locale instead.",
  or
);
pe.langData = un(
  "moment.langData is deprecated. Use moment.localeData instead.",
  Li
);
var ui = Math.abs;
function B2() {
  var o = this._data;
  return this._milliseconds = ui(this._milliseconds), this._days = ui(this._days), this._months = ui(this._months), o.milliseconds = ui(o.milliseconds), o.seconds = ui(o.seconds), o.minutes = ui(o.minutes), o.hours = ui(o.hours), o.months = ui(o.months), o.years = ui(o.years), this;
}
function lf(o, e, t, n) {
  var r = Rn(e, t);
  return o._milliseconds += n * r._milliseconds, o._days += n * r._days, o._months += n * r._months, o._bubble();
}
function R2(o, e) {
  return lf(this, o, e, 1);
}
function I2(o, e) {
  return lf(this, o, e, -1);
}
function _h(o) {
  return o < 0 ? Math.floor(o) : Math.ceil(o);
}
function N2() {
  var o = this._milliseconds, e = this._days, t = this._months, n = this._data, r, a, c, u, p;
  return o >= 0 && e >= 0 && t >= 0 || o <= 0 && e <= 0 && t <= 0 || (o += _h(hc(t) + e) * 864e5, e = 0, t = 0), n.milliseconds = o % 1e3, r = ln(o / 1e3), n.seconds = r % 60, a = ln(r / 60), n.minutes = a % 60, c = ln(a / 60), n.hours = c % 24, e += ln(c / 24), p = ln(cf(e)), t += p, e -= _h(hc(p)), u = ln(t / 12), t %= 12, n.days = e, n.months = t, n.years = u, this;
}
function cf(o) {
  return o * 4800 / 146097;
}
function hc(o) {
  return o * 146097 / 4800;
}
function P2(o) {
  if (!this.isValid())
    return NaN;
  var e, t, n = this._milliseconds;
  if (o = pn(o), o === "month" || o === "quarter" || o === "year")
    switch (e = this._days + n / 864e5, t = this._months + cf(e), o) {
      case "month":
        return t;
      case "quarter":
        return t / 3;
      case "year":
        return t / 12;
    }
  else
    switch (e = this._days + Math.round(hc(this._months)), o) {
      case "week":
        return e / 7 + n / 6048e5;
      case "day":
        return e + n / 864e5;
      case "hour":
        return e * 24 + n / 36e5;
      case "minute":
        return e * 1440 + n / 6e4;
      case "second":
        return e * 86400 + n / 1e3;
      case "millisecond":
        return Math.floor(e * 864e5) + n;
      default:
        throw new Error("Unknown unit " + o);
    }
}
function Ai(o) {
  return function() {
    return this.as(o);
  };
}
var df = Ai("ms"), H2 = Ai("s"), j2 = Ai("m"), $2 = Ai("h"), Y2 = Ai("d"), F2 = Ai("w"), z2 = Ai("M"), W2 = Ai("Q"), U2 = Ai("y"), q2 = df;
function V2() {
  return Rn(this);
}
function G2(o) {
  return o = pn(o), this.isValid() ? this[o + "s"]() : NaN;
}
function $r(o) {
  return function() {
    return this.isValid() ? this._data[o] : NaN;
  };
}
var Z2 = $r("milliseconds"), K2 = $r("seconds"), X2 = $r("minutes"), J2 = $r("hours"), Q2 = $r("days"), eC = $r("months"), tC = $r("years");
function oC() {
  return ln(this.days() / 7);
}
var fi = Math.round, ps = {
  ss: 44,
  // a few seconds to seconds
  s: 45,
  // seconds to minute
  m: 45,
  // minutes to hour
  h: 22,
  // hours to day
  d: 26,
  // days to month/week
  w: null,
  // weeks to month
  M: 11
  // months to year
};
function nC(o, e, t, n, r) {
  return r.relativeTime(e || 1, !!t, o, n);
}
function iC(o, e, t, n) {
  var r = Rn(o).abs(), a = fi(r.as("s")), c = fi(r.as("m")), u = fi(r.as("h")), p = fi(r.as("d")), g = fi(r.as("M")), v = fi(r.as("w")), x = fi(r.as("y")), y = a <= t.ss && ["s", a] || a < t.s && ["ss", a] || c <= 1 && ["m"] || c < t.m && ["mm", c] || u <= 1 && ["h"] || u < t.h && ["hh", u] || p <= 1 && ["d"] || p < t.d && ["dd", p];
  return t.w != null && (y = y || v <= 1 && ["w"] || v < t.w && ["ww", v]), y = y || g <= 1 && ["M"] || g < t.M && ["MM", g] || x <= 1 && ["y"] || ["yy", x], y[2] = e, y[3] = +o > 0, y[4] = n, nC.apply(null, y);
}
function rC(o) {
  return o === void 0 ? fi : typeof o == "function" ? (fi = o, !0) : !1;
}
function sC(o, e) {
  return ps[o] === void 0 ? !1 : e === void 0 ? ps[o] : (ps[o] = e, o === "s" && (ps.ss = e - 1), !0);
}
function aC(o, e) {
  if (!this.isValid())
    return this.localeData().invalidDate();
  var t = !1, n = ps, r, a;
  return typeof o == "object" && (e = o, o = !1), typeof o == "boolean" && (t = o), typeof e == "object" && (n = Object.assign({}, ps, e), e.s != null && e.ss == null && (n.ss = e.s - 1)), r = this.localeData(), a = iC(this, !t, n, r), t && (a = r.pastFuture(+this, a)), r.postformat(a);
}
var $l = Math.abs;
function ns(o) {
  return (o > 0) - (o < 0) || +o;
}
function xl() {
  if (!this.isValid())
    return this.localeData().invalidDate();
  var o = $l(this._milliseconds) / 1e3, e = $l(this._days), t = $l(this._months), n, r, a, c, u = this.asSeconds(), p, g, v, x;
  return u ? (n = ln(o / 60), r = ln(n / 60), o %= 60, n %= 60, a = ln(t / 12), t %= 12, c = o ? o.toFixed(3).replace(/\.?0+$/, "") : "", p = u < 0 ? "-" : "", g = ns(this._months) !== ns(u) ? "-" : "", v = ns(this._days) !== ns(u) ? "-" : "", x = ns(this._milliseconds) !== ns(u) ? "-" : "", p + "P" + (a ? g + a + "Y" : "") + (t ? g + t + "M" : "") + (e ? v + e + "D" : "") + (r || n || o ? "T" : "") + (r ? x + r + "H" : "") + (n ? x + n + "M" : "") + (o ? x + c + "S" : "")) : "P0D";
}
var st = wl.prototype;
st.isValid = ex;
st.abs = B2;
st.add = R2;
st.subtract = I2;
st.as = P2;
st.asMilliseconds = df;
st.asSeconds = H2;
st.asMinutes = j2;
st.asHours = $2;
st.asDays = Y2;
st.asWeeks = F2;
st.asMonths = z2;
st.asQuarters = W2;
st.asYears = U2;
st.valueOf = q2;
st._bubble = N2;
st.clone = V2;
st.get = G2;
st.milliseconds = Z2;
st.seconds = K2;
st.minutes = X2;
st.hours = J2;
st.days = Q2;
st.weeks = oC;
st.months = eC;
st.years = tC;
st.humanize = aC;
st.toISOString = xl;
st.toString = xl;
st.toJSON = xl;
st.locale = Kp;
st.localeData = Jp;
st.toIsoString = un(
  "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
  xl
);
st.lang = Xp;
He("X", 0, 0, "unix");
He("x", 0, 0, "valueOf");
Le("x", gl);
Le("X", Mw);
kt("X", function(o, e, t) {
  t._d = new Date(parseFloat(o) * 1e3);
});
kt("x", function(o, e, t) {
  t._d = new Date(tt(o));
});
//! moment.js
pe.version = "2.30.1";
lw(Bt);
pe.fn = ye;
pe.min = Kk;
pe.max = Xk;
pe.now = Jk;
pe.utc = qn;
pe.unix = _2;
pe.months = M2;
pe.isDate = xa;
pe.locale = or;
pe.invalid = ul;
pe.duration = Rn;
pe.isMoment = Ln;
pe.weekdays = O2;
pe.parseZone = E2;
pe.localeData = Li;
pe.isDuration = Ha;
pe.monthsShort = D2;
pe.weekdaysMin = A2;
pe.defineLocale = rd;
pe.updateLocale = Ek;
pe.locales = Mk;
pe.weekdaysShort = L2;
pe.normalizeUnits = pn;
pe.relativeTimeRounding = rC;
pe.relativeTimeThreshold = sC;
pe.calendarFormat = Cx;
pe.prototype = ye;
pe.HTML5_FMT = {
  DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
  // <input type="datetime-local" />
  DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
  // <input type="datetime-local" step="1" />
  DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
  // <input type="datetime-local" step="0.001" />
  DATE: "YYYY-MM-DD",
  // <input type="date" />
  TIME: "HH:mm",
  // <input type="time" />
  TIME_SECONDS: "HH:mm:ss",
  // <input type="time" step="1" />
  TIME_MS: "HH:mm:ss.SSS",
  // <input type="time" step="0.001" />
  WEEK: "GGGG-[W]WW",
  // <input type="week" />
  MONTH: "YYYY-MM"
  // <input type="month" />
};
function Ot(o, e, t = {}) {
  const n = document.createElement(o);
  Array.isArray(e) ? n.classList.add(...e) : e && n.classList.add(e);
  for (const r in t)
    Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]);
  return n;
}
function Eh(o) {
  const e = o.getBoundingClientRect();
  return {
    y1: Math.floor(e.top + window.pageYOffset),
    x1: Math.floor(e.left + window.pageXOffset),
    x2: Math.floor(e.right + window.pageXOffset),
    y2: Math.floor(e.bottom + window.pageYOffset)
  };
}
function Yl(o, e) {
  const t = Eh(o), n = Eh(e);
  return {
    fromTopBorder: n.y1 - t.y1,
    fromLeftBorder: n.x1 - t.x1,
    fromRightBorder: t.x2 - n.x2,
    fromBottomBorder: t.y2 - n.y2
  };
}
function lC(o, e) {
  const t = o.getBoundingClientRect(), { width: n, height: r, x: a, y: c } = t, { clientX: u, clientY: p } = e;
  return {
    width: n,
    height: r,
    x: u - a,
    y: p - c
  };
}
function Mh(o, e) {
  return e.parentNode.insertBefore(o, e);
}
function Dh(o, e = !0) {
  const t = document.createRange(), n = window.getSelection();
  t.selectNodeContents(o), t.collapse(e), n.removeAllRanges(), n.addRange(t);
}
class Po {
  /**
   * @param {object} options - constructor options
   * @param {PopoverItem[]} options.items - constructor options
   */
  constructor({ items: e }) {
    this.items = e, this.wrapper = void 0, this.itemEls = [];
  }
  /**
   * Set of CSS classnames used in popover
   *
   * @returns {object}
   */
  static get CSS() {
    return {
      popover: "tc-popover",
      popoverOpened: "tc-popover--opened",
      item: "tc-popover__item",
      itemHidden: "tc-popover__item--hidden",
      itemConfirmState: "tc-popover__item--confirm",
      itemIcon: "tc-popover__item-icon",
      itemLabel: "tc-popover__item-label"
    };
  }
  /**
   * Returns the popover element
   *
   * @returns {Element}
   */
  render() {
    return this.wrapper = Ot("div", Po.CSS.popover), this.items.forEach((e, t) => {
      const n = Ot("div", Po.CSS.item), r = Ot("div", Po.CSS.itemIcon, {
        innerHTML: e.icon
      }), a = Ot("div", Po.CSS.itemLabel, {
        textContent: e.label
      });
      n.dataset.index = t, n.appendChild(r), n.appendChild(a), this.wrapper.appendChild(n), this.itemEls.push(n);
    }), this.wrapper.addEventListener("click", (e) => {
      this.popoverClicked(e);
    }), this.wrapper;
  }
  /**
   * Popover wrapper click listener
   * Used to delegate clicks in items
   *
   * @returns {void}
   */
  popoverClicked(e) {
    const t = e.target.closest(`.${Po.CSS.item}`);
    if (!t)
      return;
    const n = t.dataset.index, r = this.items[n];
    if (r.confirmationRequired && !this.hasConfirmationState(t)) {
      this.setConfirmationState(t);
      return;
    }
    r.onClick();
  }
  /**
   * Enable the confirmation state on passed item
   *
   * @returns {void}
   */
  setConfirmationState(e) {
    e.classList.add(Po.CSS.itemConfirmState);
  }
  /**
   * Disable the confirmation state on passed item
   *
   * @returns {void}
   */
  clearConfirmationState(e) {
    e.classList.remove(Po.CSS.itemConfirmState);
  }
  /**
   * Check if passed item has the confirmation state
   *
   * @returns {boolean}
   */
  hasConfirmationState(e) {
    return e.classList.contains(Po.CSS.itemConfirmState);
  }
  /**
   * Return an opening state
   *
   * @returns {boolean}
   */
  get opened() {
    return this.wrapper.classList.contains(Po.CSS.popoverOpened);
  }
  /**
   * Opens the popover
   *
   * @returns {void}
   */
  open() {
    this.items.forEach((e, t) => {
      typeof e.hideIf == "function" && this.itemEls[t].classList.toggle(Po.CSS.itemHidden, e.hideIf());
    }), this.wrapper.classList.add(Po.CSS.popoverOpened);
  }
  /**
   * Closes the popover
   *
   * @returns {void}
   */
  close() {
    this.wrapper.classList.remove(Po.CSS.popoverOpened), this.itemEls.forEach((e) => {
      this.clearConfirmationState(e);
    });
  }
}
const Oh = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 8L12 12M12 12L16 16M12 12L16 8M12 12L8 16"/></svg>', cC = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 9.16666L18.2167 12.5M18.2167 12.5L14.8833 15.8333M18.2167 12.5H10.05C9.16594 12.5 8.31809 12.1488 7.69297 11.5237C7.06785 10.8986 6.71666 10.0507 6.71666 9.16666"/></svg>', dC = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.9167 14.9167L11.5833 18.25M11.5833 18.25L8.25 14.9167M11.5833 18.25L11.5833 10.0833C11.5833 9.19928 11.9345 8.35143 12.5596 7.72631C13.1848 7.10119 14.0326 6.75 14.9167 6.75"/></svg>', hC = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 15.8333L18.2167 12.5M18.2167 12.5L14.8833 9.16667M18.2167 12.5L10.05 12.5C9.16595 12.5 8.31811 12.8512 7.69299 13.4763C7.06787 14.1014 6.71667 14.9493 6.71667 15.8333"/></svg>', uC = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.41 9.66H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 9.66H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.31 14.36H9.3"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 14.36H14.59"/></svg>', Lh = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 7V12M12 17V12M17 12H12M12 12H7"/></svg>', pC = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>';
class Ki {
  /**
   * Creates toolbox buttons and toolbox menus
   *
   * @param {object} api - Editor.js api
   * @param {PopoverItem[]} items - Editor.js api
   * @param {function} onOpen - callback fired when the Popover is opening
   * @param {function} onClose - callback fired when the Popover is closing
   * @param {string} [cssModifier] - the modifier for the Toolbox. Allows to add some specific styles.
   */
  constructor({ api: e, items: t, onOpen: n, onClose: r, cssModifier: a = "" }) {
    this.api = e, this.items = t, this.onOpen = n, this.onClose = r, this.cssModifier = a, this.popover = null, this.wrapper = this.createToolbox();
  }
  /**
   * Style classes
   */
  static get CSS() {
    return {
      toolbox: "tc-toolbox",
      toolboxShowed: "tc-toolbox--showed",
      toggler: "tc-toolbox__toggler"
    };
  }
  /**
   * Returns rendered Toolbox element
   */
  get element() {
    return this.wrapper;
  }
  /**
   * Creating a toolbox to open menu for a manipulating columns
   *
   * @returns {Element}
   */
  createToolbox() {
    const e = Ot("div", [
      Ki.CSS.toolbox,
      this.cssModifier ? `${Ki.CSS.toolbox}--${this.cssModifier}` : ""
    ]);
    e.dataset.mutationFree = "true";
    const t = this.createPopover(), n = this.createToggler();
    return e.appendChild(n), e.appendChild(t), e;
  }
  /**
   * Creates the Toggler
   *
   * @returns {Element}
   */
  createToggler() {
    const e = Ot("div", Ki.CSS.toggler, {
      innerHTML: uC
    });
    return e.addEventListener("click", () => {
      this.togglerClicked();
    }), e;
  }
  /**
   * Creates the Popover instance and render it
   *
   * @returns {Element}
   */
  createPopover() {
    return this.popover = new Po({
      items: this.items
    }), this.popover.render();
  }
  /**
   * Toggler click handler. Opens/Closes the popover
   *
   * @returns {void}
   */
  togglerClicked() {
    this.popover.opened ? (this.popover.close(), this.onClose()) : (this.popover.open(), this.onOpen());
  }
  /**
   * Shows the Toolbox
   *
   * @param {function} computePositionMethod - method that returns the position coordinate
   * @returns {void}
   */
  show(e) {
    const t = e();
    Object.entries(t).forEach(([n, r]) => {
      this.wrapper.style[n] = r;
    }), this.wrapper.classList.add(Ki.CSS.toolboxShowed);
  }
  /**
   * Hides the Toolbox
   *
   * @returns {void}
   */
  hide() {
    this.popover.close(), this.wrapper.classList.remove(Ki.CSS.toolboxShowed);
  }
}
function fC(o, e) {
  let t = 0;
  return function(...n) {
    const r = (/* @__PURE__ */ new Date()).getTime();
    if (!(r - t < o))
      return t = r, e(...n);
  };
}
class mC {
  constructor(e, t, n) {
    if (this.parentEl = "body", this.element = Re(e), this.startDate = pe().startOf("day"), this.endDate = pe().endOf("day"), this.minDate = !1, this.maxDate = !1, this.maxSpan = !1, this.autoApply = !1, this.singleDatePicker = !1, this.showDropdowns = !1, this.minYear = pe().subtract(100, "year").format("YYYY"), this.maxYear = pe().add(100, "year").format("YYYY"), this.showWeekNumbers = !1, this.showISOWeekNumbers = !1, this.showCustomRangeLabel = !0, this.timePicker = !1, this.timePicker24Hour = !1, this.timePickerIncrement = 1, this.timePickerSeconds = !1, this.linkedCalendars = !0, this.autoUpdateInput = !0, this.alwaysShowCalendars = !1, this.ranges = {}, this.opens = "right", this.element.hasClass("pull-right") && (this.opens = "left"), this.drops = "down", this.element.hasClass("dropup") && (this.drops = "up"), this.buttonClasses = "btn btn-sm", this.applyButtonClasses = "btn-primary", this.cancelButtonClasses = "btn-default", this.locale = {
      direction: "ltr",
      format: pe.localeData().firstDayOfWeek(),
      separator: " - ",
      applyLabel: "Apply",
      cancelLabel: "Cancel",
      weekLabel: "W",
      customRangeLabel: "Custom Range",
      daysOfWeek: pe.weekdaysMin(),
      monthNames: pe.monthsShort(),
      firstDay: pe.localeData().firstDayOfWeek()
    }, this.callback = function() {
    }, this.isShowing = !1, this.leftCalendar = {}, this.rightCalendar = {}, (typeof t != "object" || t === null) && (t = {}), t = Re.extend(this.element.data(), t), typeof t.template != "string" && !(t.template instanceof Re) && (t.template = '<div class="daterangepicker"><div class="ranges"></div><div class="drp-calendar left"><div class="calendar-table"></div><div class="calendar-time"></div></div><div class="drp-calendar right"><div class="calendar-table"></div><div class="calendar-time"></div></div><div class="drp-buttons"><span class="drp-selected"></span><button class="cancelBtn" type="button"></button><button class="applyBtn" disabled="disabled" type="button"></button> </div></div>'), this.parentEl = t.parentEl && Re(t.parentEl).length ? Re(t.parentEl) : Re(this.parentEl), this.container = Re(t.template).appendTo(this.parentEl), typeof t.locale == "object" && (typeof t.locale.direction == "string" && (this.locale.direction = t.locale.direction), typeof t.locale.format == "string" && (this.locale.format = t.locale.format), typeof t.locale.separator == "string" && (this.locale.separator = t.locale.separator), typeof t.locale.daysOfWeek == "object" && (this.locale.daysOfWeek = t.locale.daysOfWeek.slice()), typeof t.locale.monthNames == "object" && (this.locale.monthNames = t.locale.monthNames.slice()), typeof t.locale.firstDay == "number" && (this.locale.firstDay = t.locale.firstDay), typeof t.locale.applyLabel == "string" && (this.locale.applyLabel = t.locale.applyLabel), typeof t.locale.cancelLabel == "string" && (this.locale.cancelLabel = t.locale.cancelLabel), typeof t.locale.weekLabel == "string" && (this.locale.weekLabel = t.locale.weekLabel), typeof t.locale.customRangeLabel == "string")) {
      var r = document.createElement("textarea");
      r.innerHTML = t.locale.customRangeLabel;
      var a = r.value;
      this.locale.customRangeLabel = a;
    }
    if (this.container.addClass(this.locale.direction), typeof t.startDate == "string" && (this.startDate = pe(t.startDate, this.locale.format)), typeof t.endDate == "string" && (this.endDate = pe(t.endDate, this.locale.format)), typeof t.minDate == "string" && (this.minDate = pe(t.minDate, this.locale.format)), typeof t.maxDate == "string" && (this.maxDate = pe(t.maxDate, this.locale.format)), typeof t.startDate == "object" && (this.startDate = pe(t.startDate)), typeof t.endDate == "object" && (this.endDate = pe(t.endDate)), typeof t.minDate == "object" && (this.minDate = pe(t.minDate)), typeof t.maxDate == "object" && (this.maxDate = pe(t.maxDate)), this.minDate && this.startDate.isBefore(this.minDate) && (this.startDate = this.minDate.clone()), this.maxDate && this.endDate.isAfter(this.maxDate) && (this.endDate = this.maxDate.clone()), typeof t.applyButtonClasses == "string" && (this.applyButtonClasses = t.applyButtonClasses), typeof t.applyClass == "string" && (this.applyButtonClasses = t.applyClass), typeof t.cancelButtonClasses == "string" && (this.cancelButtonClasses = t.cancelButtonClasses), typeof t.cancelClass == "string" && (this.cancelButtonClasses = t.cancelClass), typeof t.maxSpan == "object" && (this.maxSpan = t.maxSpan), typeof t.dateLimit == "object" && (this.maxSpan = t.dateLimit), typeof t.opens == "string" && (this.opens = t.opens), typeof t.drops == "string" && (this.drops = t.drops), typeof t.showWeekNumbers == "boolean" && (this.showWeekNumbers = t.showWeekNumbers), typeof t.showISOWeekNumbers == "boolean" && (this.showISOWeekNumbers = t.showISOWeekNumbers), typeof t.buttonClasses == "string" && (this.buttonClasses = t.buttonClasses), typeof t.buttonClasses == "object" && (this.buttonClasses = t.buttonClasses.join(" ")), typeof t.showDropdowns == "boolean" && (this.showDropdowns = t.showDropdowns), typeof t.minYear == "number" && (this.minYear = t.minYear), typeof t.maxYear == "number" && (this.maxYear = t.maxYear), typeof t.showCustomRangeLabel == "boolean" && (this.showCustomRangeLabel = t.showCustomRangeLabel), typeof t.singleDatePicker == "boolean" && (this.singleDatePicker = t.singleDatePicker, this.singleDatePicker && (this.endDate = this.startDate.clone())), typeof t.timePicker == "boolean" && (this.timePicker = t.timePicker), typeof t.timePickerSeconds == "boolean" && (this.timePickerSeconds = t.timePickerSeconds), typeof t.timePickerIncrement == "number" && (this.timePickerIncrement = t.timePickerIncrement), typeof t.timePicker24Hour == "boolean" && (this.timePicker24Hour = t.timePicker24Hour), typeof t.autoApply == "boolean" && (this.autoApply = t.autoApply), typeof t.autoUpdateInput == "boolean" && (this.autoUpdateInput = t.autoUpdateInput), typeof t.linkedCalendars == "boolean" && (this.linkedCalendars = t.linkedCalendars), typeof t.isInvalidDate == "function" && (this.isInvalidDate = t.isInvalidDate), typeof t.isCustomDate == "function" && (this.isCustomDate = t.isCustomDate), typeof t.alwaysShowCalendars == "boolean" && (this.alwaysShowCalendars = t.alwaysShowCalendars), this.locale.firstDay != 0)
      for (var c = this.locale.firstDay; c > 0; )
        this.locale.daysOfWeek.push(this.locale.daysOfWeek.shift()), c--;
    var u, p, g;
    if (typeof t.startDate > "u" && typeof t.endDate > "u" && Re(this.element).is(":text")) {
      var v = Re(this.element).val(), x = v.split(this.locale.separator);
      u = p = null, x.length == 2 ? (u = pe(x[0], this.locale.format), p = pe(x[1], this.locale.format)) : this.singleDatePicker && v !== "" && (u = pe(v, this.locale.format), p = pe(v, this.locale.format)), u !== null && p !== null && (this.setStartDate(u), this.setEndDate(p));
    }
    if (typeof t.ranges == "object") {
      for (g in t.ranges) {
        typeof t.ranges[g][0] == "string" ? u = pe(t.ranges[g][0], this.locale.format) : u = pe(t.ranges[g][0]), typeof t.ranges[g][1] == "string" ? p = pe(t.ranges[g][1], this.locale.format) : p = pe(t.ranges[g][1]), this.minDate && u.isBefore(this.minDate) && (u = this.minDate.clone());
        var y = this.maxDate;
        if (this.maxSpan && y && u.clone().add(this.maxSpan).isAfter(y) && (y = u.clone().add(this.maxSpan)), y && p.isAfter(y) && (p = y.clone()), !(this.minDate && p.isBefore(this.minDate, this.timepicker ? "minute" : "day") || y && u.isAfter(y, this.timepicker ? "minute" : "day"))) {
          var r = document.createElement("textarea");
          r.innerHTML = g;
          var a = r.value;
          this.ranges[a] = [u, p];
        }
      }
      var T = "<ul>";
      for (g in this.ranges)
        T += '<li data-range-key="' + g + '">' + g + "</li>";
      this.showCustomRangeLabel && (T += '<li data-range-key="' + this.locale.customRangeLabel + '">' + this.locale.customRangeLabel + "</li>"), T += "</ul>", this.container.find(".ranges").prepend(T);
    }
    typeof n == "function" && (this.callback = n), this.timePicker || (this.startDate = this.startDate.startOf("day"), this.endDate = this.endDate.endOf("day"), this.container.find(".calendar-time").hide()), this.timePicker && this.autoApply && (this.autoApply = !1), this.autoApply && this.container.addClass("auto-apply"), typeof t.ranges == "object" && this.container.addClass("show-ranges"), this.singleDatePicker && (this.container.addClass("single"), this.container.find(".drp-calendar.left").addClass("single"), this.container.find(".drp-calendar.left").show(), this.container.find(".drp-calendar.right").hide(), !this.timePicker && this.autoApply && this.container.addClass("auto-apply")), (typeof t.ranges > "u" && !this.singleDatePicker || this.alwaysShowCalendars) && this.container.addClass("show-calendar"), this.container.addClass("opens" + this.opens), this.container.find(".applyBtn, .cancelBtn").addClass(this.buttonClasses), this.applyButtonClasses.length && this.container.find(".applyBtn").addClass(this.applyButtonClasses), this.cancelButtonClasses.length && this.container.find(".cancelBtn").addClass(this.cancelButtonClasses), this.container.find(".applyBtn").html(this.locale.applyLabel), this.container.find(".cancelBtn").html(this.locale.cancelLabel), this.container.find(".drp-calendar").on("click.daterangepicker", ".prev", Re.proxy(this.clickPrev, this)).on("click.daterangepicker", ".next", Re.proxy(this.clickNext, this)).on("mousedown.daterangepicker", "td.available", Re.proxy(this.clickDate, this)).on("mouseenter.daterangepicker", "td.available", Re.proxy(this.hoverDate, this)).on("change.daterangepicker", "select.yearselect", Re.proxy(this.monthOrYearChanged, this)).on("change.daterangepicker", "select.monthselect", Re.proxy(this.monthOrYearChanged, this)).on("change.daterangepicker", "select.hourselect,select.minuteselect,select.secondselect,select.ampmselect", Re.proxy(this.timeChanged, this)), this.container.find(".ranges").on("click.daterangepicker", "li", Re.proxy(this.clickRange, this)), this.container.find(".drp-buttons").on("click.daterangepicker", "button.applyBtn", Re.proxy(this.clickApply, this)).on("click.daterangepicker", "button.cancelBtn", Re.proxy(this.clickCancel, this)), this.element.is("input") || this.element.is("button") ? this.element.on({
      "click.daterangepicker": Re.proxy(this.show, this),
      "focus.daterangepicker": Re.proxy(this.show, this),
      "keyup.daterangepicker": Re.proxy(this.elementChanged, this),
      "keydown.daterangepicker": Re.proxy(this.keydown, this)
      //IE 11 compatibility
    }) : (this.element.on("click.daterangepicker", Re.proxy(this.toggle, this)), this.element.on("keydown.daterangepicker", Re.proxy(this.toggle, this))), this.updateElement();
  }
  setStartDate(e) {
    typeof e == "string" && (this.startDate = pe(e, this.locale.format)), typeof e == "object" && (this.startDate = pe(e)), this.timePicker || (this.startDate = this.startDate.startOf("day")), this.timePicker && this.timePickerIncrement && this.startDate.minute(Math.round(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement), this.minDate && this.startDate.isBefore(this.minDate) && (this.startDate = this.minDate.clone(), this.timePicker && this.timePickerIncrement && this.startDate.minute(Math.round(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement)), this.maxDate && this.startDate.isAfter(this.maxDate) && (this.startDate = this.maxDate.clone(), this.timePicker && this.timePickerIncrement && this.startDate.minute(Math.floor(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement)), this.isShowing || this.updateElement(), this.updateMonthsInView();
  }
  setEndDate(e) {
    typeof e == "string" && (this.endDate = pe(e, this.locale.format)), typeof e == "object" && (this.endDate = pe(e)), this.timePicker || (this.endDate = this.endDate.endOf("day")), this.timePicker && this.timePickerIncrement && this.endDate.minute(Math.round(this.endDate.minute() / this.timePickerIncrement) * this.timePickerIncrement), this.endDate.isBefore(this.startDate) && (this.endDate = this.startDate.clone()), this.maxDate && this.endDate.isAfter(this.maxDate) && (this.endDate = this.maxDate.clone()), this.maxSpan && this.startDate.clone().add(this.maxSpan).isBefore(this.endDate) && (this.endDate = this.startDate.clone().add(this.maxSpan)), this.previousRightTime = this.endDate.clone(), this.container.find(".drp-selected").html(this.startDate.format(this.locale.format) + this.locale.separator + this.endDate.format(this.locale.format)), this.isShowing || this.updateElement(), this.updateMonthsInView();
  }
  isInvalidDate() {
    return !1;
  }
  isCustomDate() {
    return !1;
  }
  updateView() {
    this.timePicker && (this.renderTimePicker("left"), this.renderTimePicker("right"), this.endDate ? this.container.find(".right .calendar-time select").prop("disabled", !1).removeClass("disabled") : this.container.find(".right .calendar-time select").prop("disabled", !0).addClass("disabled")), this.endDate && this.container.find(".drp-selected").html(this.startDate.format(this.locale.format) + this.locale.separator + this.endDate.format(this.locale.format)), this.updateMonthsInView(), this.updateCalendars(), this.updateFormInputs();
  }
  updateMonthsInView() {
    if (this.endDate) {
      if (!this.singleDatePicker && this.leftCalendar.month && this.rightCalendar.month && (this.startDate.format("YYYY-MM") == this.leftCalendar.month.format("YYYY-MM") || this.startDate.format("YYYY-MM") == this.rightCalendar.month.format("YYYY-MM")) && (this.endDate.format("YYYY-MM") == this.leftCalendar.month.format("YYYY-MM") || this.endDate.format("YYYY-MM") == this.rightCalendar.month.format("YYYY-MM")))
        return;
      this.leftCalendar.month = this.startDate.clone().date(2), !this.linkedCalendars && (this.endDate.month() != this.startDate.month() || this.endDate.year() != this.startDate.year()) ? this.rightCalendar.month = this.endDate.clone().date(2) : this.rightCalendar.month = this.startDate.clone().date(2).add(1, "month");
    } else
      this.leftCalendar.month.format("YYYY-MM") != this.startDate.format("YYYY-MM") && this.rightCalendar.month.format("YYYY-MM") != this.startDate.format("YYYY-MM") && (this.leftCalendar.month = this.startDate.clone().date(2), this.rightCalendar.month = this.startDate.clone().date(2).add(1, "month"));
    this.maxDate && this.linkedCalendars && !this.singleDatePicker && this.rightCalendar.month > this.maxDate && (this.rightCalendar.month = this.maxDate.clone().date(2), this.leftCalendar.month = this.maxDate.clone().date(2).subtract(1, "month"));
  }
  updateCalendars() {
    if (this.timePicker) {
      var e, t, n;
      if (this.endDate) {
        if (e = parseInt(this.container.find(".left .hourselect").val(), 10), t = parseInt(this.container.find(".left .minuteselect").val(), 10), isNaN(t) && (t = parseInt(this.container.find(".left .minuteselect option:last").val(), 10)), n = this.timePickerSeconds ? parseInt(this.container.find(".left .secondselect").val(), 10) : 0, !this.timePicker24Hour) {
          var r = this.container.find(".left .ampmselect").val();
          r === "PM" && e < 12 && (e += 12), r === "AM" && e === 12 && (e = 0);
        }
      } else if (e = parseInt(this.container.find(".right .hourselect").val(), 10), t = parseInt(this.container.find(".right .minuteselect").val(), 10), isNaN(t) && (t = parseInt(this.container.find(".right .minuteselect option:last").val(), 10)), n = this.timePickerSeconds ? parseInt(this.container.find(".right .secondselect").val(), 10) : 0, !this.timePicker24Hour) {
        var r = this.container.find(".right .ampmselect").val();
        r === "PM" && e < 12 && (e += 12), r === "AM" && e === 12 && (e = 0);
      }
      this.leftCalendar.month.hour(e).minute(t).second(n), this.rightCalendar.month.hour(e).minute(t).second(n);
    }
    this.renderCalendar("left"), this.renderCalendar("right"), this.container.find(".ranges li").removeClass("active"), this.endDate != null && this.calculateChosenLabel();
  }
  renderCalendar(e) {
    var k = e == "left" ? this.leftCalendar : this.rightCalendar, t = k.month.month(), n = k.month.year(), r = k.month.hour(), a = k.month.minute(), c = k.month.second(), u = pe([n, t]).daysInMonth(), p = pe([n, t, 1]), g = pe([n, t, u]), v = pe(p).subtract(1, "month").month(), x = pe(p).subtract(1, "month").year(), y = pe([x, v]).daysInMonth(), T = p.day(), k = [];
    k.firstDay = p, k.lastDay = g;
    for (var M = 0; M < 6; M++)
      k[M] = [];
    var O = y - T + this.locale.firstDay + 1;
    O > y && (O -= 7), T == this.locale.firstDay && (O = y - 6);
    for (var Y = pe([x, v, O, 12, a, c]), I, F, M = 0, I = 0, F = 0; M < 42; M++, I++, Y = pe(Y).add(24, "hour"))
      M > 0 && I % 7 === 0 && (I = 0, F++), k[F][I] = Y.clone().hour(r).minute(a).second(c), Y.hour(12), this.minDate && k[F][I].format("YYYY-MM-DD") == this.minDate.format("YYYY-MM-DD") && k[F][I].isBefore(this.minDate) && e == "left" && (k[F][I] = this.minDate.clone()), this.maxDate && k[F][I].format("YYYY-MM-DD") == this.maxDate.format("YYYY-MM-DD") && k[F][I].isAfter(this.maxDate) && e == "right" && (k[F][I] = this.maxDate.clone());
    e == "left" ? this.leftCalendar.calendar = k : this.rightCalendar.calendar = k;
    var Q = e == "left" ? this.minDate : this.startDate, U = this.maxDate;
    e == "left" ? this.startDate : this.endDate, this.locale.direction == "ltr";
    var z = '<table class="table-condensed">';
    z += "<thead>", z += "<tr>", (this.showWeekNumbers || this.showISOWeekNumbers) && (z += "<th></th>"), (!Q || Q.isBefore(k.firstDay)) && (!this.linkedCalendars || e == "left") ? z += '<th class="prev available"><span></span></th>' : z += "<th></th>";
    var d = this.locale.monthNames[k[1][1].month()] + k[1][1].format(" YYYY");
    if (this.showDropdowns) {
      for (var j = k[1][1].month(), R = k[1][1].year(), V = U && U.year() || this.maxYear, K = Q && Q.year() || this.minYear, J = R == K, B = R == V, se = '<select class="monthselect">', Z = 0; Z < 12; Z++)
        (!J || Q && Z >= Q.month()) && (!B || U && Z <= U.month()) ? se += "<option value='" + Z + "'" + (Z === j ? " selected='selected'" : "") + ">" + this.locale.monthNames[Z] + "</option>" : se += "<option value='" + Z + "'" + (Z === j ? " selected='selected'" : "") + " disabled='disabled'>" + this.locale.monthNames[Z] + "</option>";
      se += "</select>";
      for (var ne = '<select class="yearselect">', le = K; le <= V; le++)
        ne += '<option value="' + le + '"' + (le === R ? ' selected="selected"' : "") + ">" + le + "</option>";
      ne += "</select>", d = se + ne;
    }
    if (z += '<th colspan="5" class="month">' + d + "</th>", (!U || U.isAfter(k.lastDay)) && (!this.linkedCalendars || e == "right" || this.singleDatePicker) ? z += '<th class="next available"><span></span></th>' : z += "<th></th>", z += "</tr>", z += "<tr>", (this.showWeekNumbers || this.showISOWeekNumbers) && (z += '<th class="week">' + this.locale.weekLabel + "</th>"), Re.each(this.locale.daysOfWeek, function(Ke, io) {
      z += "<th>" + io + "</th>";
    }), z += "</tr>", z += "</thead>", z += "<tbody>", this.endDate == null && this.maxSpan) {
      var oe = this.startDate.clone().add(this.maxSpan).endOf("day");
      (!U || oe.isBefore(U)) && (U = oe);
    }
    for (var F = 0; F < 6; F++) {
      z += "<tr>", this.showWeekNumbers ? z += '<td class="week">' + k[F][0].week() + "</td>" : this.showISOWeekNumbers && (z += '<td class="week">' + k[F][0].isoWeek() + "</td>");
      for (var I = 0; I < 7; I++) {
        var fe = [];
        k[F][I].isSame(/* @__PURE__ */ new Date(), "day") && fe.push("today"), k[F][I].isoWeekday() > 5 && fe.push("weekend"), k[F][I].month() != k[1][1].month() && fe.push("off", "ends"), this.minDate && k[F][I].isBefore(this.minDate, "day") && fe.push("off", "disabled"), U && k[F][I].isAfter(U, "day") && fe.push("off", "disabled"), this.isInvalidDate(k[F][I]) && fe.push("off", "disabled"), k[F][I].format("YYYY-MM-DD") == this.startDate.format("YYYY-MM-DD") && fe.push("active", "start-date"), this.endDate != null && k[F][I].format("YYYY-MM-DD") == this.endDate.format("YYYY-MM-DD") && fe.push("active", "end-date"), this.endDate != null && k[F][I] > this.startDate && k[F][I] < this.endDate && fe.push("in-range");
        var Me = this.isCustomDate(k[F][I]);
        Me !== !1 && (typeof Me == "string" ? fe.push(Me) : Array.prototype.push.apply(fe, Me));
        for (var je = "", Be = !1, M = 0; M < fe.length; M++)
          je += fe[M] + " ", fe[M] == "disabled" && (Be = !0);
        Be || (je += "available"), z += '<td class="' + je.replace(/^\s+|\s+$/g, "") + '" data-title="r' + F + "c" + I + '">' + k[F][I].date() + "</td>";
      }
      z += "</tr>";
    }
    z += "</tbody>", z += "</table>", this.container.find(".drp-calendar." + e + " .calendar-table").html(z);
  }
  renderTimePicker(e) {
    if (!(e == "right" && !this.endDate)) {
      var t, n, r, a = this.maxDate;
      if (this.maxSpan && (!this.maxDate || this.startDate.clone().add(this.maxSpan).isBefore(this.maxDate)) && (a = this.startDate.clone().add(this.maxSpan)), e == "left")
        n = this.startDate.clone(), r = this.minDate;
      else if (e == "right") {
        n = this.endDate.clone(), r = this.startDate;
        var c = this.container.find(".drp-calendar.right .calendar-time");
        if (c.html() != "" && (n.hour(isNaN(n.hour()) ? c.find(".hourselect option:selected").val() : n.hour()), n.minute(isNaN(n.minute()) ? c.find(".minuteselect option:selected").val() : n.minute()), n.second(isNaN(n.second()) ? c.find(".secondselect option:selected").val() : n.second()), !this.timePicker24Hour)) {
          var u = c.find(".ampmselect option:selected").val();
          u === "PM" && n.hour() < 12 && n.hour(n.hour() + 12), u === "AM" && n.hour() === 12 && n.hour(0);
        }
        n.isBefore(this.startDate) && (n = this.startDate.clone()), a && n.isAfter(a) && (n = a.clone());
      }
      t = '<select class="hourselect">';
      for (var p = this.timePicker24Hour ? 0 : 1, g = this.timePicker24Hour ? 23 : 12, v = p; v <= g; v++) {
        var x = v;
        this.timePicker24Hour || (x = n.hour() >= 12 ? v == 12 ? 12 : v + 12 : v == 12 ? 0 : v);
        var y = n.clone().hour(x), T = !1;
        r && y.minute(59).isBefore(r) && (T = !0), a && y.minute(0).isAfter(a) && (T = !0), x == n.hour() && !T ? t += '<option value="' + v + '" selected="selected">' + v + "</option>" : T ? t += '<option value="' + v + '" disabled="disabled" class="disabled">' + v + "</option>" : t += '<option value="' + v + '">' + v + "</option>";
      }
      t += "</select> ", t += ': <select class="minuteselect">';
      for (var v = 0; v < 60; v += this.timePickerIncrement) {
        var k = v < 10 ? "0" + v : v, y = n.clone().minute(v), T = !1;
        r && y.second(59).isBefore(r) && (T = !0), a && y.second(0).isAfter(a) && (T = !0), n.minute() == v && !T ? t += '<option value="' + v + '" selected="selected">' + k + "</option>" : T ? t += '<option value="' + v + '" disabled="disabled" class="disabled">' + k + "</option>" : t += '<option value="' + v + '">' + k + "</option>";
      }
      if (t += "</select> ", this.timePickerSeconds) {
        t += ': <select class="secondselect">';
        for (var v = 0; v < 60; v++) {
          var k = v < 10 ? "0" + v : v, y = n.clone().second(v), T = !1;
          r && y.isBefore(r) && (T = !0), a && y.isAfter(a) && (T = !0), n.second() == v && !T ? t += '<option value="' + v + '" selected="selected">' + k + "</option>" : T ? t += '<option value="' + v + '" disabled="disabled" class="disabled">' + k + "</option>" : t += '<option value="' + v + '">' + k + "</option>";
        }
        t += "</select> ";
      }
      if (!this.timePicker24Hour) {
        t += '<select class="ampmselect">';
        var M = "", O = "";
        r && n.clone().hour(12).minute(0).second(0).isBefore(r) && (M = ' disabled="disabled" class="disabled"'), a && n.clone().hour(0).minute(0).second(0).isAfter(a) && (O = ' disabled="disabled" class="disabled"'), n.hour() >= 12 ? t += '<option value="AM"' + M + '>AM</option><option value="PM" selected="selected"' + O + ">PM</option>" : t += '<option value="AM" selected="selected"' + M + '>AM</option><option value="PM"' + O + ">PM</option>", t += "</select>";
      }
      this.container.find(".drp-calendar." + e + " .calendar-time").html(t);
    }
  }
  updateFormInputs() {
    this.singleDatePicker || this.endDate && (this.startDate.isBefore(this.endDate) || this.startDate.isSame(this.endDate)) ? this.container.find("button.applyBtn").prop("disabled", !1) : this.container.find("button.applyBtn").prop("disabled", !0);
  }
  move() {
    var e = { top: 0, left: 0 }, t, n = this.drops, r = Re(window).width();
    switch (this.parentEl.is("body") || (e = {
      top: this.parentEl.offset().top - this.parentEl.scrollTop(),
      left: this.parentEl.offset().left - this.parentEl.scrollLeft()
    }, r = this.parentEl[0].clientWidth + this.parentEl.offset().left), n) {
      case "auto":
        t = this.element.offset().top + this.element.outerHeight() - e.top, t + this.container.outerHeight() >= this.parentEl[0].scrollHeight && (t = this.element.offset().top - this.container.outerHeight() - e.top, n = "up");
        break;
      case "up":
        t = this.element.offset().top - this.container.outerHeight() - e.top;
        break;
      default:
        t = this.element.offset().top + this.element.outerHeight() - e.top;
        break;
    }
    this.container.css({
      top: 0,
      left: 0,
      right: "auto"
    });
    var a = this.container.outerWidth();
    if (this.container.toggleClass("drop-up", n == "up"), this.opens == "left") {
      var c = r - this.element.offset().left - this.element.outerWidth();
      a + c > Re(window).width() ? this.container.css({
        top: t,
        right: "auto",
        left: 9
      }) : this.container.css({
        top: t,
        right: c,
        left: "auto"
      });
    } else if (this.opens == "center") {
      var u = this.element.offset().left - e.left + this.element.outerWidth() / 2 - a / 2;
      u < 0 ? this.container.css({
        top: t,
        right: "auto",
        left: 9
      }) : u + a > Re(window).width() ? this.container.css({
        top: t,
        left: "auto",
        right: 0
      }) : this.container.css({
        top: t,
        left: u,
        right: "auto"
      });
    } else {
      var u = this.element.offset().left - e.left;
      u + a > Re(window).width() ? this.container.css({
        top: t,
        left: "auto",
        right: 0
      }) : this.container.css({
        top: t,
        left: u,
        right: "auto"
      });
    }
  }
  show(e) {
    this.isShowing || (this._outsideClickProxy = Re.proxy(function(t) {
      this.outsideClick(t);
    }, this), Re(document).on("mousedown.daterangepicker", this._outsideClickProxy).on("touchend.daterangepicker", this._outsideClickProxy).on("click.daterangepicker", "[data-toggle=dropdown]", this._outsideClickProxy).on("focusin.daterangepicker", this._outsideClickProxy), Re(window).on("resize.daterangepicker", Re.proxy(function(t) {
      this.move(t);
    }, this)), this.oldStartDate = this.startDate.clone(), this.oldEndDate = this.endDate.clone(), this.previousRightTime = this.endDate.clone(), this.updateView(), this.container.show(), this.move(), this.element.trigger("show.daterangepicker", this), this.isShowing = !0);
  }
  hide(e) {
    this.isShowing && (this.endDate || (this.startDate = this.oldStartDate.clone(), this.endDate = this.oldEndDate.clone()), (!this.startDate.isSame(this.oldStartDate) || !this.endDate.isSame(this.oldEndDate)) && this.callback(this.startDate.clone(), this.endDate.clone(), this.chosenLabel), this.updateElement(), Re(document).off(".daterangepicker"), Re(window).off(".daterangepicker"), this.container.hide(), this.element.trigger("hide.daterangepicker", this), this.isShowing = !1);
  }
  toggle(e) {
    this.isShowing ? this.hide() : this.show();
  }
  outsideClick(e) {
    var t = Re(e.target);
    e.type == "focusin" || t.closest(this.element).length || t.closest(this.container).length || t.closest(".calendar-table").length || (this.hide(), this.element.trigger("outsideClick.daterangepicker", this));
  }
  showCalendars() {
    this.container.addClass("show-calendar"), this.move(), this.element.trigger("showCalendar.daterangepicker", this);
  }
  hideCalendars() {
    this.container.removeClass("show-calendar"), this.element.trigger("hideCalendar.daterangepicker", this);
  }
  clickRange(e) {
    var t = e.target.getAttribute("data-range-key");
    if (this.chosenLabel = t, t == this.locale.customRangeLabel)
      this.showCalendars();
    else {
      var n = this.ranges[t];
      this.startDate = n[0], this.endDate = n[1], this.timePicker || (this.startDate.startOf("day"), this.endDate.endOf("day")), this.alwaysShowCalendars || this.hideCalendars(), this.clickApply();
    }
  }
  clickPrev(e) {
    var t = Re(e.target).parents(".drp-calendar");
    t.hasClass("left") ? (this.leftCalendar.month.subtract(1, "month"), this.linkedCalendars && this.rightCalendar.month.subtract(1, "month")) : this.rightCalendar.month.subtract(1, "month"), this.updateCalendars();
  }
  clickNext(e) {
    var t = Re(e.target).parents(".drp-calendar");
    t.hasClass("left") ? this.leftCalendar.month.add(1, "month") : (this.rightCalendar.month.add(1, "month"), this.linkedCalendars && this.leftCalendar.month.add(1, "month")), this.updateCalendars();
  }
  hoverDate(e) {
    if (Re(e.target).hasClass("available")) {
      var t = Re(e.target).attr("data-title"), n = t.substr(1, 1), r = t.substr(3, 1), a = Re(e.target).parents(".drp-calendar"), c = a.hasClass("left") ? this.leftCalendar.calendar[n][r] : this.rightCalendar.calendar[n][r], u = this.leftCalendar, p = this.rightCalendar, g = this.startDate;
      this.endDate || this.container.find(".drp-calendar tbody td").each(function(v, x) {
        if (!Re(x).hasClass("week")) {
          var y = Re(x).attr("data-title"), T = y.substr(1, 1), k = y.substr(3, 1), M = Re(x).parents(".drp-calendar"), O = M.hasClass("left") ? u.calendar[T][k] : p.calendar[T][k];
          O.isAfter(g) && O.isBefore(c) || O.isSame(c, "day") ? Re(x).addClass("in-range") : Re(x).removeClass("in-range");
        }
      });
    }
  }
  clickDate(e) {
    if (Re(e.target).hasClass("available")) {
      var t = Re(e.target).attr("data-title"), n = t.substr(1, 1), r = t.substr(3, 1), a = Re(e.target).parents(".drp-calendar"), c = a.hasClass("left") ? this.leftCalendar.calendar[n][r] : this.rightCalendar.calendar[n][r];
      if (this.endDate || c.isBefore(this.startDate, "day")) {
        if (this.timePicker) {
          var u = parseInt(this.container.find(".left .hourselect").val(), 10);
          if (!this.timePicker24Hour) {
            var p = this.container.find(".left .ampmselect").val();
            p === "PM" && u < 12 && (u += 12), p === "AM" && u === 12 && (u = 0);
          }
          var g = parseInt(this.container.find(".left .minuteselect").val(), 10);
          isNaN(g) && (g = parseInt(this.container.find(".left .minuteselect option:last").val(), 10));
          var v = this.timePickerSeconds ? parseInt(this.container.find(".left .secondselect").val(), 10) : 0;
          c = c.clone().hour(u).minute(g).second(v);
        }
        this.endDate = null, this.setStartDate(c.clone());
      } else if (!this.endDate && c.isBefore(this.startDate))
        this.setEndDate(this.startDate.clone());
      else {
        if (this.timePicker) {
          var u = parseInt(this.container.find(".right .hourselect").val(), 10);
          if (!this.timePicker24Hour) {
            var p = this.container.find(".right .ampmselect").val();
            p === "PM" && u < 12 && (u += 12), p === "AM" && u === 12 && (u = 0);
          }
          var g = parseInt(this.container.find(".right .minuteselect").val(), 10);
          isNaN(g) && (g = parseInt(this.container.find(".right .minuteselect option:last").val(), 10));
          var v = this.timePickerSeconds ? parseInt(this.container.find(".right .secondselect").val(), 10) : 0;
          c = c.clone().hour(u).minute(g).second(v);
        }
        this.setEndDate(c.clone()), this.autoApply && (this.calculateChosenLabel(), this.clickApply());
      }
      this.singleDatePicker && (this.setEndDate(this.startDate), !this.timePicker && this.autoApply && this.clickApply()), this.updateView(), e.stopPropagation();
    }
  }
  calculateChosenLabel() {
    var e = !0, t = 0;
    for (var n in this.ranges) {
      if (this.timePicker) {
        var r = this.timePickerSeconds ? "YYYY-MM-DD HH:mm:ss" : "YYYY-MM-DD HH:mm";
        if (this.startDate.format(r) == this.ranges[n][0].format(r) && this.endDate.format(r) == this.ranges[n][1].format(r)) {
          e = !1, this.chosenLabel = this.container.find(".ranges li:eq(" + t + ")").addClass("active").attr("data-range-key");
          break;
        }
      } else if (this.startDate.format("YYYY-MM-DD") == this.ranges[n][0].format("YYYY-MM-DD") && this.endDate.format("YYYY-MM-DD") == this.ranges[n][1].format("YYYY-MM-DD")) {
        e = !1, this.chosenLabel = this.container.find(".ranges li:eq(" + t + ")").addClass("active").attr("data-range-key");
        break;
      }
      t++;
    }
    e && (this.showCustomRangeLabel ? this.chosenLabel = this.container.find(".ranges li:last").addClass("active").attr("data-range-key") : this.chosenLabel = null, this.showCalendars());
  }
  clickApply(e) {
    this.hide(), this.element.trigger("apply.daterangepicker", this);
  }
  clickCancel(e) {
    this.startDate = this.oldStartDate, this.endDate = this.oldEndDate, this.hide(), this.element.trigger("cancel.daterangepicker", this);
  }
  monthOrYearChanged(e) {
    var t = Re(e.target).closest(".drp-calendar").hasClass("left"), n = t ? "left" : "right", r = this.container.find(".drp-calendar." + n), a = parseInt(r.find(".monthselect").val(), 10), c = r.find(".yearselect").val();
    t || (c < this.startDate.year() || c == this.startDate.year() && a < this.startDate.month()) && (a = this.startDate.month(), c = this.startDate.year()), this.minDate && (c < this.minDate.year() || c == this.minDate.year() && a < this.minDate.month()) && (a = this.minDate.month(), c = this.minDate.year()), this.maxDate && (c > this.maxDate.year() || c == this.maxDate.year() && a > this.maxDate.month()) && (a = this.maxDate.month(), c = this.maxDate.year()), t ? (this.leftCalendar.month.month(a).year(c), this.linkedCalendars && (this.rightCalendar.month = this.leftCalendar.month.clone().add(1, "month"))) : (this.rightCalendar.month.month(a).year(c), this.linkedCalendars && (this.leftCalendar.month = this.rightCalendar.month.clone().subtract(1, "month"))), this.updateCalendars();
  }
  timeChanged(e) {
    var t = Re(e.target).closest(".drp-calendar"), n = t.hasClass("left"), r = parseInt(t.find(".hourselect").val(), 10), a = parseInt(t.find(".minuteselect").val(), 10);
    isNaN(a) && (a = parseInt(t.find(".minuteselect option:last").val(), 10));
    var c = this.timePickerSeconds ? parseInt(t.find(".secondselect").val(), 10) : 0;
    if (!this.timePicker24Hour) {
      var u = t.find(".ampmselect").val();
      u === "PM" && r < 12 && (r += 12), u === "AM" && r === 12 && (r = 0);
    }
    if (n) {
      var p = this.startDate.clone();
      p.hour(r), p.minute(a), p.second(c), this.setStartDate(p), this.singleDatePicker ? this.endDate = this.startDate.clone() : this.endDate && this.endDate.format("YYYY-MM-DD") == p.format("YYYY-MM-DD") && this.endDate.isBefore(p) && this.setEndDate(p.clone());
    } else if (this.endDate) {
      var g = this.endDate.clone();
      g.hour(r), g.minute(a), g.second(c), this.setEndDate(g);
    }
    this.updateCalendars(), this.updateFormInputs(), this.renderTimePicker("left"), this.renderTimePicker("right");
  }
  elementChanged() {
    if (this.element.is("input") && this.element.val().length) {
      var e = this.element.val().split(this.locale.separator), t = null, n = null;
      e.length === 2 && (t = pe(e[0], this.locale.format), n = pe(e[1], this.locale.format)), (this.singleDatePicker || t === null || n === null) && (t = pe(this.element.val(), this.locale.format), n = t), !(!t.isValid() || !n.isValid()) && (this.setStartDate(t), this.setEndDate(n), this.updateView());
    }
  }
  keydown(e) {
    (e.keyCode === 9 || e.keyCode === 13) && this.hide(), e.keyCode === 27 && (e.preventDefault(), e.stopPropagation(), this.hide());
  }
  updateElement() {
    if (this.element.is("input") && this.autoUpdateInput) {
      var e = this.startDate.format(this.locale.format);
      this.singleDatePicker || (e += this.locale.separator + this.endDate.format(this.locale.format)), e !== this.element.val() && this.element.val(e).trigger("change");
    }
  }
  remove() {
    this.container.remove(), this.element.off(".daterangepicker"), this.element.removeData();
  }
}
Re.fn.daterangepicker = function(o, e) {
  var t = Re.extend(!0, {}, Re.fn.daterangepicker.defaultOptions, o);
  return this.each(function() {
    var n = Re(this);
    n.data("daterangepicker") && n.data("daterangepicker").remove(), n.data("daterangepicker", new mC(n, t, e));
  }), this;
};
const Ze = {
  wrapper: "tc-wrap",
  wrapperReadOnly: "tc-wrap--readonly",
  table: "tc-table",
  row: "tc-row",
  withHeadings: "tc-table--heading",
  rowSelected: "tc-row--selected",
  cell: "tc-cell",
  cellSelected: "tc-cell--selected",
  addRow: "tc-add-row",
  addColumn: "tc-add-column",
  formInput: "ap-form-input"
};
class gC {
  /**
   * Creates
   *
   * @constructor
   * @param {boolean} readOnly - read-only mode flag
   * @param {object} api - Editor.js API
   * @param {TableData} data - Editor.js API
   * @param {TableConfig} config - Editor.js API
   */
  constructor(e, t, n, r, a) {
    var c;
    if (this.readOnly = e, this.api = t, this.block = a, this.config = r, this.isJapan = ((c = this.config) == null ? void 0 : c.locale) == "jp", n.content.length > 1) {
      const u = r.data.data.length;
      n.content.map((p, g) => p.splice(u));
    }
    n.heading = r.data.data.map((u) => this.isJapan ? u.heading_jp : u.heading), this.data = n, this.wrapper = null, this.table = null, this.interval = null, this.customDatePicker = null, this.toolboxRow = this.createRowToolbox(), this.toolBoxDue = null, this.createTableWrapper(), this.hoveredRow = 0, this.hoveredColumn = 0, this.selectedRow = 0, this.selectedColumn = 0, this.tunes = {
      withHeadings: !1
    }, this.resize(), this.fill(), setTimeout(() => {
      this.checkInput();
    }, 0), this.focusedCell = {
      row: 0,
      column: 0
    }, this.documentClicked = (u) => {
      const p = u.target.closest(`.${Ze.table}`) !== null, g = u.target.closest(`.${Ze.wrapper}`) === null;
      (p || g) && this.hideToolboxes();
      const v = u.target.closest(`.${Ze.addRow}`), x = u.target.closest(`.${Ze.addColumn}`);
      v && v.parentNode === this.wrapper ? (this.addRow(void 0, !0), this.hideToolboxes()) : x && x.parentNode === this.wrapper && this.hideToolboxes();
    }, this.readOnly || this.bindEvents();
  }
  checkInput() {
    this.table.querySelectorAll(`.${Ze.row}`).forEach((e, t) => {
      var n;
      t != 0 && ((n = e == null ? void 0 : e.firstChild) == null ? void 0 : n.childElementCount) == 0 && this.createColumnInput(t);
    });
  }
  createColumnInput(e) {
    var t, n, r, a;
    this.isJapan = ((t = this.config) == null ? void 0 : t.locale) == "jp";
    for (let c = 0; c < this.config.data.data.length; c++) {
      const u = this.config.data.data[c], p = this.getCell(e + 1, c + 1);
      if (!p)
        return;
      const g = ((a = (r = (n = this.data) == null ? void 0 : n.content) == null ? void 0 : r[e - 1]) == null ? void 0 : a[c]) || "";
      if (u.type === "search") {
        const v = Ot("input", Ze.formInput, {
          value: g,
          disabled: this.readOnly
        });
        this.api.listeners.on(v, "keyup", (x) => {
          const y = x.target.value.trim().replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
          clearTimeout(this.interval), this.interval = setTimeout(() => {
            this.fetchData(y, v);
          }, 500);
        }), p.appendChild(v);
      } else if (u.type === "date") {
        const v = Ot("input", Ze.formInput, {
          value: g,
          disabled: this.readOnly
        });
        Re(v).daterangepicker({
          autohide: !0,
          singleDatePicker: !0,
          // autoUpdateInput: false,
          autoApply: !0,
          locale: {
            format: "DD-MM-YYYY"
          }
        }), Re(v).on("apply.daterangepicker", (x, y) => {
          v.value = y.startDate.format("DD-MM-YYYY"), this.block.dispatchChange();
        }), p.appendChild(v);
      } else if (u.type === "select") {
        const v = Ot("select", Ze.formInput, {
          value: g,
          disabled: this.readOnly
        });
        u.options.map((x) => {
          console.log("DATA ", !!g, g == "", x == null ? void 0 : x.default);
          const y = Ot("option", "", {
            label: this.isJapan ? x.label_jp : x.label,
            value: x.label,
            selected: g ? g == x.label : !!x.default
          });
          v.appendChild(y);
        }), this.api.listeners.on(v, "change", (x) => {
          this.block.dispatchChange();
        }), p.appendChild(v);
      } else if (u.type === "optionDate") {
        const v = Ot("select", Ze.formInput, {
          value: g,
          disabled: this.readOnly
        });
        let x = !1;
        u.options.map((y) => {
          y.value == g && (x = !0);
          const T = Ot("option", "", {
            label: this.isJapan ? y.label_jp : y.label,
            value: y.value,
            selected: g == y.value
          });
          v.appendChild(T);
        }), x || v.prepend(Ot("option", "", {
          label: g,
          value: g,
          selected: !0
        })), this.api.listeners.on(v, "change", (y) => {
          var T, k;
          if (y.target.value == "other") {
            const M = y.target.parentElement, O = Ot("input", Ze.formInput, {
              placeholder: this.api.i18n.t("Select date")
            });
            Re(O).daterangepicker({
              autohide: !0,
              singleDatePicker: !0,
              autoUpdateInput: !1,
              autoApply: !0,
              locale: {
                format: "DD-MM-YYYY"
              }
            }), Re(O).on("apply.daterangepicker", (Y, I) => {
              O.value = I.startDate.format("DD-MM-YYYY"), this.block.dispatchChange();
            }), (k = (T = M.children) == null ? void 0 : T[0]) == null || k.remove(), M.appendChild(O), Re(O).data("daterangepicker").show();
          }
          this.block.dispatchChange();
        }), p.appendChild(v);
      } else if (u.type === "text") {
        const v = Ot("input", Ze.formInput, {
          value: g,
          disabled: this.readOnly
        });
        p.appendChild(v);
      } else if (u.type === "number") {
        const v = Ot("input", Ze.formInput, {
          disabled: this.readOnly,
          type: "number"
        });
        v.value = g || (u == null ? void 0 : u.default), p.appendChild(v);
      } else if (u.type === "checkbox") {
        const v = Ot("input", Ze.formInput, {
          checked: g,
          type: "checkbox",
          disabled: this.readOnly
        });
        this.api.listeners.on(v, "change", () => {
          this.block.dispatchChange();
        }), p.appendChild(v);
      }
    }
  }
  async fetchData(e = "", t) {
    const n = new Headers();
    n.append("Content-Type", "application/json");
    const r = JSON.stringify({
      search: e
    }), a = {
      method: "POST",
      headers: n,
      body: r
    }, c = await fetch(this.config.apiUrl, a).then((p) => p.json()).catch((p) => console.log("error", p)), u = [{
      label: this.api.i18n.t("Delete row"),
      icon: Oh,
      hideIf: () => this.numberOfRows === 1,
      confirmationRequired: !0,
      onClick: () => {
        this.deleteRow(this.focusedCell.row), this.hideToolboxes();
      }
    }];
    this.focusedCell.row - 1, c.data.map((p) => {
      u.push({
        label: p.medicine,
        icon: dC,
        confirmationRequired: !1,
        onClick: (g) => {
          p.medicine && (t.value = p.medicine), this.hideToolboxes(), this.block.dispatchChange();
        }
      });
    }), this.renderToolBox(u);
  }
  /**
   * Returns the rendered table wrapper
   *
   * @returns {Element}
   */
  getWrapper() {
    return this.wrapper;
  }
  /**
   * Hangs the necessary handlers to events
   */
  bindEvents() {
    this.wrapper.addEventListener("click", this.documentClicked), this.table.addEventListener("mousemove", fC(150, (e) => this.onMouseMoveInTable(e)), { passive: !0 }), this.table.onkeypress = (e) => this.onKeyPressListener(e), this.table.addEventListener("keydown", (e) => this.onKeyDownListener(e)), this.table.addEventListener("keyup", (e) => this.onKeyUpListener(e)), this.table.addEventListener("focusin", (e) => this.focusInTableListener(e));
  }
  /**
  * Configures and creates the toolbox for manipulating with rows
  *
  * @returns {Toolbox}
  */
  createRowToolbox() {
    return new Ki({
      api: this.api,
      cssModifier: "row",
      items: [
        {
          label: this.api.i18n.t("Add row above"),
          icon: hC,
          onClick: () => {
            this.selectedRow != 1 && (this.addRow(this.selectedRow, !0), this.hideToolboxes());
          }
        },
        {
          label: this.api.i18n.t("Add row below"),
          icon: cC,
          onClick: () => {
            this.addRow(this.selectedRow + 1, !0), this.hideToolboxes();
          }
        },
        {
          label: this.api.i18n.t("Delete row"),
          icon: Oh,
          hideIf: () => this.numberOfRows === 1,
          confirmationRequired: !0,
          onClick: () => {
            this.deleteRow(this.selectedRow), this.hideToolboxes();
          }
        }
      ],
      onOpen: () => {
        this.selectRow(this.hoveredRow), this.hideColumnToolbox();
      },
      onClose: () => {
        this.unselectRow();
      }
    });
  }
  createCustomToolbox(e = []) {
    return new Ki({
      table: this,
      api: this.api,
      cssModifier: "row",
      items: e,
      onOpen: () => {
        this.selectRow(this.hoveredRow), this.hideColumnToolbox();
      },
      onClose: () => {
        this.unselectRow();
      }
    });
  }
  renderToolBox(e = []) {
    this.toolBoxDue && this.toolBoxDue.element.remove(), this.toolBoxDue = this.createCustomToolbox(e), this.wrapper.appendChild(this.toolBoxDue.element), this.toolBoxDue.togglerClicked(), this.toolBoxDue.show(() => this.getUpdateLocation());
  }
  getUpdateLocation() {
    const e = this.hoveredRow, t = this.hoveredColumn, n = this.getRow(e), { fromTopBorder: r } = Yl(this.table, n), { height: a } = n.getBoundingClientRect();
    return {
      top: `${Math.ceil(r + a / 0.8)}px`,
      left: `calc((100% - var(--cell-size)) / (${this.numberOfColumns} * 2) * ( (${t} - 1) * 2))`
    };
  }
  /**
   * When you press enter it moves the cursor down to the next row
   * or creates it if the click occurred on the last one
   */
  moveCursorToNextRow() {
    this.focusedCell.row !== this.numberOfRows ? (this.focusedCell.row += 1, this.focusCell(this.focusedCell)) : (this.addRow(), this.focusedCell.row += 1, this.focusCell(this.focusedCell), this.updateToolboxesPosition(0, 0));
  }
  /**
   * Get table cell by row and col index
   *
   * @param {number} row - cell row coordinate
   * @param {number} column - cell column coordinate
   * @returns {HTMLElement}
   */
  getCell(e, t) {
    return this.table.querySelectorAll(`.${Ze.row}:nth-child(${e}) .${Ze.cell}`)[t - 1];
  }
  /**
   * Get table row by index
   *
   * @param {number} row - row coordinate
   * @returns {HTMLElement}
   */
  getRow(e) {
    return this.table.querySelector(`.${Ze.row}:nth-child(${e})`);
  }
  /**
   * The parent of the cell which is the row
   *
   * @param {HTMLElement} cell - cell element
   * @returns {HTMLElement}
   */
  getRowByCell(e) {
    return e.parentElement;
  }
  /**
   * Ger row's first cell
   *
   * @param {Element} row - row to find its first cell
   * @returns {Element}
   */
  getRowFirstCell(e) {
    return e.querySelector(`.${Ze.cell}:first-child`);
  }
  /**
   * Set the sell's content by row and column numbers
   *
   * @param {number} row - cell row coordinate
   * @param {number} column - cell column coordinate
   * @param {string} content - cell HTML content
   */
  setCellContent(e, t, n) {
    const r = this.getCell(e, t);
    "innerHTML" in r && (r.innerHTML = n);
  }
  /**
   * Add column in table on index place
   * Add cells in each row
   *
   * @param {number} columnIndex - number in the array of columns, where new column to insert, -1 if insert at the end
   * @param {boolean} [setFocus] - pass true to focus the first cell
   */
  addColumn(e = -1, t = !1) {
    let n = this.numberOfColumns;
    for (let r = 1; r <= this.numberOfRows; r++) {
      let a;
      const c = this.createCell();
      if (e > 0 && e <= n ? (a = this.getCell(r, e), Mh(c, a)) : a = this.getRow(r).appendChild(c), r === 1) {
        const u = this.getCell(r, e > 0 ? e : n + 1);
        u && t && Dh(u);
      }
    }
    this.addHeadingAttrToFirstRow();
  }
  /**
   * Add row in table on index place
   *
   * @param {number} index - number in the array of rows, where new column to insert, -1 if insert at the end
   * @param {boolean} [setFocus] - pass true to focus the inserted row
   * @returns {HTMLElement} row
   */
  addRow(e = -1, t = !1) {
    let n, r = Ot("div", Ze.row);
    this.tunes.withHeadings && this.removeHeadingAttrFromFirstRow();
    let a = this.numberOfColumns;
    if (e > 0 && e <= this.numberOfRows) {
      let u = this.getRow(e);
      n = Mh(r, u);
    } else
      n = this.table.appendChild(r);
    this.fillRow(n, a), this.tunes.withHeadings && this.addHeadingAttrToFirstRow();
    const c = this.getRowFirstCell(n);
    return c && t && Dh(c), this.checkInput(), n;
  }
  /**
   * Delete a column by index
   *
   * @param {number} index
   */
  deleteColumn(e) {
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.getCell(t, e);
      if (!n)
        return;
      n.remove();
    }
  }
  /**
   * Delete a row by index
   *
   * @param {number} index
   */
  deleteRow(e) {
    this.getRow(e).remove(), this.addHeadingAttrToFirstRow();
  }
  /**
   * Create a wrapper containing a table, toolboxes
   * and buttons for adding rows and columns
   *
   * @returns {HTMLElement} wrapper - where all buttons for a table and the table itself will be
   */
  createTableWrapper() {
    if (this.wrapper ? this.table.remove() : this.wrapper = Ot("div", Ze.wrapper), this.table = Ot("div", Ze.table), this.wrapper.classList.add(Ze.wrapperReadOnly), this.wrapper.appendChild(this.toolboxRow.element), this.wrapper.appendChild(this.table), !this.readOnly) {
      const e = Ot("div", Ze.addColumn, {
        innerHTML: Lh
      }), t = Ot("div", Ze.addRow, {
        innerHTML: Lh
      });
      this.wrapper.appendChild(e), this.wrapper.appendChild(t);
    }
  }
  /**
   * Returns the size of the table based on initial data or config "size" property
   *
   * @return {{rows: number, cols: number}} - number of cols and rows
   */
  computeInitialSize() {
    const e = this.data && this.data.content, t = Array.isArray(e), n = t ? e.length : !1, r = t ? e.length : void 0, a = n ? e[0].length : void 0, c = Number.parseInt(this.config && this.config.rows), u = Number.parseInt(this.config && this.config.cols), p = !isNaN(c) && c > 0 ? c : void 0, g = !isNaN(u) && u > 0 ? u : void 0;
    return {
      rows: r || p || 2,
      cols: a || g || 2
    };
  }
  /**
   * Resize table to match config size or transmitted data size
   *
   * @return {{rows: number, cols: number}} - number of cols and rows
   */
  resize() {
    const e = (this.data.content.length || 1) + 1, t = this.data.heading.length;
    for (let n = 0; n < e; n++)
      this.addRow();
    for (let n = 0; n < t; n++)
      this.addColumn();
  }
  /**
   * Fills the table with data passed to the constructor
   *
   * @returns {void}
   */
  fill() {
    const e = this.data;
    if (e && e.heading)
      for (let t = 0; t < e.heading.length; t++)
        this.setCellContent(1, t + 1, e.heading[t]);
  }
  /**
   * Fills a row with cells
   *
   * @param {HTMLElement} row - row to fill
   * @param {number} numberOfColumns - how many cells should be in a row
   */
  fillRow(e, t) {
    for (let n = 1; n <= t; n++) {
      const r = this.createCell();
      e.appendChild(r);
    }
  }
  /**
   * Creating a cell element
   *
   * @return {Element}
   */
  createCell() {
    return Ot("div", Ze.cell, {
      contentEditable: !1
    });
  }
  /**
   * Get number of rows in the table
   */
  get numberOfRows() {
    return this.table.childElementCount;
  }
  /**
   * Get number of columns in the table
   */
  get numberOfColumns() {
    return this.numberOfRows ? this.table.querySelectorAll(`.${Ze.row}:first-child .${Ze.cell}`).length : 0;
  }
  /**
   * Is the column toolbox menu displayed or not
   *
   * @returns {boolean}
   */
  get isColumnMenuShowing() {
    return this.selectedColumn !== 0;
  }
  /**
   * Is the row toolbox menu displayed or not
   *
   * @returns {boolean}
   */
  get isRowMenuShowing() {
    return this.selectedRow !== 0;
  }
  /**
   * Recalculate position of toolbox icons
   *
   * @param {Event} event - mouse move event
   */
  onMouseMoveInTable(e) {
    const { row: t, column: n } = this.getHoveredCell(e);
    this.hoveredColumn = n, this.hoveredRow = t, this.updateToolboxesPosition();
  }
  /**
   * Prevents default Enter behaviors
   * Adds Shift+Enter processing
   *
   * @param {KeyboardEvent} event - keypress event
   */
  onKeyPressListener(e) {
    return e.key === "Enter" && e.shiftKey ? !0 : e.key !== "Enter";
  }
  /**
   * Prevents tab keydown event from bubbling
   * so that it only works inside the table
   *
   * @param {KeyboardEvent} event - keydown event
   */
  onKeyDownListener(e) {
    e.key === "Tab" && e.stopPropagation();
  }
  /**
   * Prevents tab keyup event from bubbling
   * so that it only works inside the table
   *
   * @param {KeyboardEvent} event - keydown event
   */
  onKeyUpListener(e) {
    if (e.key === "Tab") {
      e.stopPropagation();
      return;
    }
    if (e.key === "Enter") {
      e.stopPropagation();
      return;
    }
  }
  /**
   * Set the coordinates of the cell that the focus has moved to
   *
   * @param {FocusEvent} event - focusin event
   */
  focusInTableListener(e) {
    const t = e.target, n = this.getRowByCell(t);
    this.focusedCell = {
      row: Array.from(this.table.querySelectorAll(`.${Ze.row}`)).indexOf(n) + 1,
      column: Array.from(n.querySelectorAll(`.${Ze.cell}`)).indexOf(t) + 1
    };
  }
  /**
   * Unselect row/column
   * Close toolbox menu
   * Hide toolboxes
   *
   * @returns {void}
   */
  hideToolboxes() {
    this.hideRowToolbox(), this.updateToolboxesPosition();
  }
  /**
   * Unselect row, close toolbox
   *
   * @returns {void}
   */
  hideRowToolbox() {
    var e;
    this.unselectRow(), this.toolboxRow.hide(), (e = this.toolBoxDue) == null || e.hide();
  }
  /**
   * Unselect column, close toolbox
   *
   * @returns {void}
   */
  hideColumnToolbox() {
    this.unselectColumn();
  }
  /**
   * Set the cursor focus to the focused cell
   *
   * @returns {void}
   */
  focusCell() {
    var e;
    (e = this.focusedCellElem) == null || e.focus();
  }
  /**
   * Get current focused element
   *
   * @returns {HTMLElement} - focused cell
   */
  get focusedCellElem() {
    const { row: e, column: t } = this.focusedCell;
    return this.getCell(e, t);
  }
  /**
   * Update toolboxes position
   *
   * @param {number} row - hovered row
   * @param {number} column - hovered column
   */
  updateToolboxesPosition(e = this.hoveredRow, t = this.hoveredColumn) {
    this.isRowMenuShowing || e > 0 && e <= this.numberOfRows && this.toolboxRow.show(() => {
      const n = this.getRow(e), { fromTopBorder: r } = Yl(this.table, n), { height: a } = n.getBoundingClientRect();
      return {
        top: `${Math.ceil(r + a / 2)}px`
      };
    });
  }
  /**
   * Makes the first row headings
   *
   * @param {boolean} withHeadings - use headings row or not
   */
  setHeadingsSetting(e) {
    this.tunes.withHeadings = e, e ? (this.table.classList.add(Ze.withHeadings), this.addHeadingAttrToFirstRow()) : (this.table.classList.remove(Ze.withHeadings), this.removeHeadingAttrFromFirstRow());
  }
  /**
   * Adds an attribute for displaying the placeholder in the cell
   */
  addHeadingAttrToFirstRow() {
    for (let e = 1; e <= this.numberOfColumns; e++) {
      let t = this.getCell(1, e);
      t && t.setAttribute("heading", this.api.i18n.t("Heading"));
    }
  }
  /**
   * Removes an attribute for displaying the placeholder in the cell
   */
  removeHeadingAttrFromFirstRow() {
    for (let e = 1; e <= this.numberOfColumns; e++) {
      let t = this.getCell(1, e);
      t && t.removeAttribute("heading");
    }
  }
  /**
   * Add effect of a selected row
   *
   * @param {number} index
   */
  selectRow(e) {
    const t = this.getRow(e);
    t && (this.selectedRow = e, t.classList.add(Ze.rowSelected));
  }
  /**
   * Remove effect of a selected row
   */
  unselectRow() {
    if (this.selectedRow <= 0)
      return;
    const e = this.table.querySelector(`.${Ze.rowSelected}`);
    e && e.classList.remove(Ze.rowSelected), this.selectedRow = 0;
  }
  /**
   * Add effect of a selected column
   *
   * @param {number} index
   */
  selectColumn(e) {
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.getCell(t, e);
      n && n.classList.add(Ze.cellSelected);
    }
    this.selectedColumn = e;
  }
  /**
   * Remove effect of a selected column
   */
  unselectColumn() {
    if (this.selectedColumn <= 0)
      return;
    let e = this.table.querySelectorAll(`.${Ze.cellSelected}`);
    Array.from(e).forEach((t) => {
      t.classList.remove(Ze.cellSelected);
    }), this.selectedColumn = 0;
  }
  /**
   * Calculates the row and column that the cursor is currently hovering over
   * The search was optimized from O(n) to O (log n) via bin search to reduce the number of calculations
   *
   * @param {Event} event - mousemove event
   * @returns hovered cell coordinates as an integer row and column
   */
  getHoveredCell(e) {
    let t = this.hoveredRow, n = this.hoveredColumn;
    const { width: r, height: a, x: c, y: u } = lC(this.table, e);
    return c >= 0 && (n = this.binSearch(
      this.numberOfColumns,
      (p) => this.getCell(1, p),
      ({ fromLeftBorder: p }) => c < p,
      ({ fromRightBorder: p }) => c > r - p
    )), u >= 0 && (t = this.binSearch(
      this.numberOfRows,
      (p) => this.getCell(p, 1),
      ({ fromTopBorder: p }) => u < p,
      ({ fromBottomBorder: p }) => u > a - p
    )), {
      row: t || this.hoveredRow,
      column: n || this.hoveredColumn
    };
  }
  /**
   * Looks for the index of the cell the mouse is hovering over.
   * Cells can be represented as ordered intervals with left and
   * right (upper and lower for rows) borders inside the table, if the mouse enters it, then this is our index
   *
   * @param {number} numberOfCells - upper bound of binary search
   * @param {function} getCell - function to take the currently viewed cell
   * @param {function} beforeTheLeftBorder - determines the cursor position, to the left of the cell or not
   * @param {function} afterTheRightBorder - determines the cursor position, to the right of the cell or not
   * @returns {number}
   */
  binSearch(e, t, n, r) {
    let a = 0, c = e + 1, u = 0, p;
    for (; a < c - 1 && u < 10; ) {
      p = Math.ceil((a + c) / 2);
      const g = t(p), v = Yl(this.table, g);
      if (n(v))
        c = p;
      else if (r(v))
        a = p;
      else
        break;
      u++;
    }
    return p;
  }
  /**
   * Collects data from cells into a two-dimensional array
   *
   * @returns {string[][]}
   */
  getData() {
    const e = [];
    for (let t = 1; t <= this.numberOfRows; t++) {
      const n = this.table.querySelector(`.${Ze.row}:nth-child(${t})`), r = Array.from(n.querySelectorAll(`.${Ze.formInput}`));
      t != 1 && e.push(r.map((a) => {
        if (["text", "select-one", "number"].includes(a == null ? void 0 : a.type))
          return a == null ? void 0 : a.value;
        if ((a == null ? void 0 : a.type) === "checkbox")
          return a == null ? void 0 : a.checked;
      }));
    }
    return e;
  }
  /**
   * Remove listeners on the document
   */
  destroy() {
    document.removeEventListener("click", this.documentClicked);
  }
}
const bC = {
  antiParasitic: {
    title: "Anti Parasitic",
    title_jp: "混合ワクチン",
    data: [
      {
        heading: "Prevention Medicine",
        heading_jp: "予防接種医学",
        type: "search",
        key: "vaccinationMedicine"
      },
      {
        heading: "Prevention Type",
        heading_jp: "投与日",
        type: "select",
        options: [
          {
            label: "All-in-one",
            label_jp: "予防接種医学",
            value: "all-in-one",
            default: !0
          },
          {
            label: "Heartworm",
            label_jp: "予防接種医学",
            value: "heartworm"
          },
          {
            label: "Flea & Tick",
            label_jp: "予防接種医学",
            value: "flea-and-tick"
          }
        ],
        key: "administrationDate"
      },
      {
        heading: "Quantity",
        heading_jp: "期日",
        type: "number",
        default: 1,
        key: "quantity"
      },
      {
        heading: "Prescription Date",
        heading_jp: "整理番号",
        key: "prescriptionDate",
        type: "date"
      },
      {
        heading: "Due date",
        heading_jp: "アレルギー反応",
        key: "dueDate",
        type: "optionDate",
        options: [
          {
            label: "1 Month",
            label_jp: "整理番号",
            value: "1-month"
          },
          {
            label: "2 Month",
            label_jp: "整理番号",
            value: "2-month"
          },
          {
            label: "3 Month",
            label_jp: "整理番号",
            value: "3-month"
          },
          {
            label: "4 Month",
            label_jp: "整理番号",
            value: "4-month"
          },
          {
            label: "5 Month",
            label_jp: "整理番号",
            value: "5-month"
          },
          {
            label: "6 Month",
            label_jp: "整理番号",
            value: "6-month"
          },
          {
            label: "7 Month",
            label_jp: "整理番号",
            value: "7-month"
          },
          {
            label: "8 Month",
            label_jp: "整理番号",
            value: "8-month"
          },
          {
            label: "9 Month",
            label_jp: "整理番号",
            value: "9-month"
          },
          {
            label: "10 Month",
            label_jp: "整理番号",
            value: "10-month"
          },
          {
            label: "11 Month",
            label_jp: "整理番号",
            value: "11-month"
          },
          {
            label: "12 Month",
            label_jp: "整理番号",
            value: "12-month"
          },
          {
            label: "Custom",
            label_jp: "整理番号",
            value: "other"
          }
        ]
      },
      {
        heading: "Remarks",
        heading_jp: "備考",
        type: "text",
        key: "remarks"
      }
    ]
  }
}, Fl = {
  default: "antiParasitic",
  data: bC
};
class vC {
  /**
   * Notify core that read-only mode is supported
   *
   * @returns {boolean}
   */
  static get isReadOnlySupported() {
    return !0;
  }
  /**
   * Allow to press Enter inside the CodeTool textarea
   *
   * @returns {boolean}
   * @public
   */
  static get enableLineBreaks() {
    return !0;
  }
  /**
   * Render plugin`s main Element and fill it with saved data
   *
   * @param {TableData} data — previously saved data
   * @param {TableConfig} config - user config for Tool
   * @param {object} api - Editor.js API
   * @param {boolean} readOnly - read-only mode flag
   */
  constructor({ data: e, config: t, api: n, readOnly: r, block: a }) {
    if (this.api = n, this.block = a, this.title = n.i18n.t("Anti Parasitic"), this.readOnly = r, this.config = t, !t.apiUrl)
      throw new Error("Please provide API url for Anti Parasitic Search");
    this.data = {
      current: e && e.current ? e.current : Fl.default,
      content: e && e.content ? e.content : []
    }, this.table = null;
  }
  /**
   * Get Tool toolbox settings
   * icon - Tool icon's SVG
   * title - title to show in toolbox
   *
   * @returns {{icon: string, title: string}}
   */
  static get toolbox() {
    return {
      icon: pC,
      title: this.title
    };
  }
  /**
   * Return Tool's view
   *
   * @returns {HTMLDivElement}
   */
  render() {
    var e;
    this.config.data = Fl.data[this.data.current], this.container ? (this.table.getWrapper().remove(), this.container.innerHTML = "") : this.container = Ot("div", this.api.styles.block), this.table = new gC(this.readOnly, this.api, this.data, this.config, this.block);
    const t = Ot("h5", "tc-header");
    return t.innerHTML = ((e = this.config) == null ? void 0 : e.locale) == "jp" ? this.config.data.title_jp : this.config.data.title, this.container.appendChild(t), this.container.appendChild(this.table.getWrapper()), this.table.setHeadingsSetting(!0), this.container;
  }
  /**
   * Returns plugin settings
   *
   * @returns {Array}
   */
  renderSettings() {
    return [];
  }
  /**
   * Extract table data from the view
   *
   * @returns {TableData} - saved data
   */
  save() {
    var e;
    const t = this.table.getData();
    return {
      current: ((e = this.data) == null ? void 0 : e.current) || Fl.default,
      content: t
    };
  }
  /**
   * Plugin destroyer
   *
   * @returns {void}
   */
  destroy() {
    this.table.destroy();
  }
  /**
   * A helper to get config value.
   * 
   * @param {string} configName - the key to get from the config. 
   * @param {any} defaultValue - default value if config doesn't have passed key
   * @param {object} savedData - previously saved data. If passed, the key will be got from there, otherwise from the config
   * @returns {any} - config value.
   */
  getConfig(e, t = void 0, n = void 0) {
    const r = this.data || n;
    return r ? r[e] ? r[e] : t : this.config && this.config[e] ? this.config[e] : t;
  }
  /**  
   * Table onPaste configuration
   *
   * @public
   */
  static get pasteConfig() {
    return { tags: ["TABLE", "TR", "TH", "TD"] };
  }
  /**
   * On paste callback that is fired from Editor
   *
   * @param {PasteEvent} event - event with pasted data
   */
  onPaste(e) {
    const t = e.detail.data, n = t.querySelector(":scope > thead, tr:first-of-type th"), r = Array.from(t.querySelectorAll("tr")).map((a) => Array.from(a.querySelectorAll("th, td")).map((c) => c.innerHTML));
    this.data = {
      withHeadings: n !== null,
      content: r
    }, this.table.wrapper && this.table.wrapper.replaceWith(this.render());
  }
}
class lS {
  constructor(e = {}) {
    this.config = e, this.editor = null, this.config.locale = (e == null ? void 0 : e.locale) || "en";
  }
  mergeObjectsByKey(e, t, n) {
    if (!e || !t || !e[n] || !t[n])
      return e;
    const r = { ...e };
    for (const a in t[n])
      t[n].hasOwnProperty(a) && (r[n][a] = t[n][a]);
    return r;
  }
  init() {
    var n, r, a, c, u, p, g, v, x, y, T, k, M, O, Y;
    let e = {
      header: {
        class: _d,
        inlineToolbar: !0
      },
      alert: Id,
      paragraph: Vg,
      delimiter: nh
      // table: {
      //     class: Table
      // }
    }, t = {
      autofocus: !1,
      holder: this.config.holder || "editorjs",
      placeholder: "いらっしゃいませ。ここから始める...",
      tools: {
        header: {
          class: _d,
          config: {
            placeholder: "Enter a header"
          },
          inlineToolbar: !0
        },
        table: {
          class: Hg,
          inlineToolbar: !0,
          tunes: ["alignmentTool"]
        },
        alert: Id,
        checklist: {
          class: eb,
          inlineToolbar: !0
        },
        nestedList: {
          class: Kg,
          inlineToolbar: !0,
          config: {
            defaultStyle: "unordered"
          }
        },
        Color: {
          class: Td,
          config: {
            colorCollections: ["#EC7878", "#9C27B0", "#673AB7", "#3F51B5", "#0070FF", "#03A9F4", "#00BCD4", "#4CAF50", "#8BC34A", "#CDDC39", "#FFF"],
            defaultColor: "#FF1300",
            type: "text",
            customPicker: !0
            // add a button to allow selecting any colour  
          }
        },
        Marker: {
          class: Td,
          config: {
            defaultColor: "#FFBF00",
            type: "marker",
            icon: '<svg fill="#000000" height="200px" width="200px" version="1.1" id="Icons" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 32 32" xml:space="preserve"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <path d="M17.6,6L6.9,16.7c-0.2,0.2-0.3,0.4-0.3,0.6L6,23.9c0,0.3,0.1,0.6,0.3,0.8C6.5,24.9,6.7,25,7,25c0,0,0.1,0,0.1,0l6.6-0.6 c0.2,0,0.5-0.1,0.6-0.3L25,13.4L17.6,6z"></path> <path d="M26.4,12l1.4-1.4c1.2-1.2,1.1-3.1-0.1-4.3l-3-3c-0.6-0.6-1.3-0.9-2.2-0.9c-0.8,0-1.6,0.3-2.2,0.9L19,4.6L26.4,12z"></path> </g> <g> <path d="M28,29H4c-0.6,0-1-0.4-1-1s0.4-1,1-1h24c0.6,0,1,0.4,1,1S28.6,29,28,29z"></path> </g> </g></svg>'
          }
        },
        underline: { class: rg },
        textVariant: { class: ug },
        strikethrough: { class: cg },
        list: {
          class: Cg,
          config: {
            toolbar: ["Header"]
          },
          // tunes: ['alignmentTool'],
          inlineToolbar: !0
        },
        paragraph: {
          class: Tg,
          inlineToolbar: !0
          // tunes: ['alignmentTool'],
        },
        alignmentTool: {
          class: fg,
          config: {
            default: "left",
            blocks: {
              header: "left",
              list: "left"
            }
          },
          inlineToolbar: !0
        },
        tooltip: {
          class: ag,
          config: {
            location: "left",
            highlightColor: "#FFEFD5",
            underline: !0,
            backgroundColor: "#154360",
            textColor: "#FDFEFE"
          },
          inlineToolbar: !0
        },
        columns: {
          class: Ug,
          config: {
            EditorJsLibrary: Sd,
            // Pass the library instance to the columns instance.
            tools: e
            // IMPORTANT! ref the column_tools
          }
        },
        medicine: {
          class: cb,
          inlineToolbar: !0
        },
        delimiter: {
          class: nh
        },
        vitals: {
          class: vb,
          inlineToolbar: !0,
          config: {
            locale: (n = this.config) == null ? void 0 : n.locale
          }
        },
        peros: {
          class: Fb,
          // inlineToolbar: true,
          config: {
            locale: (r = this.config) == null ? void 0 : r.locale
          }
        },
        testReport: {
          class: Db,
          config: {
            locale: (a = this.config) == null ? void 0 : a.locale,
            apiUrl: ((u = (c = this.config) == null ? void 0 : c.api) == null ? void 0 : u.test) || "http://localhost:8000/api/medicine"
          }
        },
        vaccination: {
          class: iw,
          inlineToolbar: !0,
          config: {
            locale: (p = this.config) == null ? void 0 : p.locale,
            apiUrl: ((v = (g = this.config) == null ? void 0 : g.api) == null ? void 0 : v.vaccination) || "http://localhost:8000/api/medicine"
          }
        },
        antiParasitic: {
          class: vC,
          inlineToolbar: !0,
          config: {
            locale: (x = this.config) == null ? void 0 : x.locale,
            apiUrl: ((T = (y = this.config) == null ? void 0 : y.api) == null ? void 0 : T.medicine) || "http://localhost:8000/api/medicine"
          }
        }
      },
      data: {},
      /**
       * onReady callback
       */
      onReady: () => {
        new Fg({ editor: this.editor }), new $g(this.editor);
      },
      /**
       * onChange callback
       */
      onChange: (I, F) => {
        var Q, U;
        (Q = this.config) != null && Q.onChange && ((U = this.config) == null || U.onChange(I, F));
      },
      // tunes: ['textVariant', 'alignmentTool'],
      /**
       * Internationalzation config
       */
      i18n: {
        /**
         * @type {I18nDictionary}
         */
        messages: {
          /**
           * Other below: translation of different UI components of the editor.js core
           */
          ui: {
            blockTunes: {
              toggler: {
                "Click to tune": "クリックしてチューニング",
                "or drag to move": "またはドラッグして移動します"
              }
            },
            inlineToolbar: {
              converter: {
                "Convert to": "に変換"
              }
            },
            toolbar: {
              toolbox: {
                Add: "追加"
              }
            }
          },
          /**
           * Section for translation Tool Names: both block and inline tools
           */
          toolNames: {
            Text: "文章",
            Heading: "見出し",
            List: "リスト",
            Warning: "警告",
            Checklist: "チェックリスト",
            Delimiter: "デリミタ",
            Table: "テーブル",
            Link: "リンク",
            Marker: "マーカー",
            Bold: "大胆な",
            Italic: "イタリック",
            Alert: "アラート",
            Peros: "身体検査所見",
            Vaccination: "予防接種",
            Vitals: "バイタル"
          },
          /**
           * Section for passing translations to the external tools classes
           */
          tools: {
            /**
             * Each subsection is the i18n dictionary that will be passed to the corresponded plugin
             * The name of a plugin should be equal the name you specify in the 'tool' section for that plugin
             */
            warning: {
              // <-- 'Warning' tool will accept this dictionary section
              Title: "タイトル",
              Message: "メッセージ"
            },
            /**
             * Link is the internal Inline Tool
             */
            link: {
              "Add a link": "リンクを追加する"
            },
            /**
             * The "stub" is an internal block tool, used to fit blocks that does not have the corresponded plugin
             */
            stub: {
              "The block can not be displayed correctly.": "ブロックが正しく表示されません。"
            },
            vitals: {
              "Body Weight": "体重",
              Temprature: "温度",
              "Heart Rate": "心拍数",
              Respiratory: "呼吸器系",
              Vitals: "バイタル",
              Value: "価値",
              Unit: "ユニット"
            },
            peros: {
              "PE/ROS": "観察",
              Observation: "観察",
              Result: "結果",
              Remarks: "備考"
            },
            vaccination: {
              Vaccination: "予防接種"
            }
          },
          /**
           * Section allows to translate Block Tunes
           */
          blockTunes: {
            /**
             * Each subsection is the i18n dictionary that will be passed to the corresponded Block Tune plugin
             * The name of a plugin should be equal the name you specify in the 'tunes' section for that plugin
             *
             * Also, there are few internal block tunes: "delete", "moveUp" and "moveDown"
             */
            delete: {
              Delete: "消去"
            },
            moveUp: {
              "Move up": "上に移動"
            },
            moveDown: {
              "Move down": "下に移動"
            }
          }
        }
      }
    };
    t = this.mergeObjectsByKey(t, this.config, "tools"), t = this.mergeObjectsByKey(t, this.config, "data"), t = this.mergeObjectsByKey(t, this.config, "i18n"), (k = this.config) != null && k.locale && ((M = this.config) == null ? void 0 : M.locale) !== "jp" && delete t.i18n, t = this.mergeObjectsByKey(t, this.config, "onReady"), t = this.mergeObjectsByKey(t, this.config, "onChange"), t = this.mergeObjectsByKey(t, this.config, "tunes"), t = { ...t, holder: ((O = this.config) == null ? void 0 : O.holder) || t.holder, placeholder: ((Y = this.config) == null ? void 0 : Y.placeholder) || t.placeholder }, this.editor = new Sd(t);
  }
  getInstance() {
    return this.editor;
  }
  destroy() {
    this.editor && this.editor.destroy();
  }
}
export {
  lS as default
};
